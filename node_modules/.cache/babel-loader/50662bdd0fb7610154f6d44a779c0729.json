{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/store/linode.js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/store/linode.js","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["sortBy","addParam","addParams","ENDPOINT","state","cache","mutations","setCache","_ref","credentialId","key","value","getters","fromCache","_ref2","_state$cache$credenti","actions","regionOptions","_ref3","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","commit","dispatch","regions","out","wrap","_callee$","_context","prev","next","command","sent","data","filter","region","status","map","label","id","abrupt","stop","instanceOptions","_ref5","_ref6","_callee2","rootGetters","types","available","_callee2$","_context2","type","class","memoryGb","memory","disk","vcpus","imageOptions","_ref7","_ref8","_callee3","images","_callee3$","_context3","image","cachedCommand","_ref9","_ref10","_callee4","_callee4$","_context4","request","_ref11","_ref12","_callee5","_res$links","token","opt","url","headers","res","_callee5$","_context5","replace","concat","per_page","params","Accept","redirectUnauthorized","root","links","pages"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/store/linode.js"],"sourcesContent":["import { sortBy } from '@shell/utils/sort';\nimport { addParam, addParams } from '@shell/utils/url';\n\nconst ENDPOINT = 'api.linode.com/v4';\n\nexport const state = () => {\n  return { cache: {} };\n};\n\nexport const mutations = {\n  setCache(state, { credentialId, key, value }) {\n    let cache = state.cache[credentialId];\n\n    if ( !cache ) {\n      cache = {};\n      state.cache[credentialId] = cache;\n    }\n\n    cache[key] = value;\n  },\n};\n\nexport const getters = {\n  fromCache: (state) => ({ credentialId, key }) => {\n    return state.cache[credentialId]?.[key];\n  },\n};\n\nexport const actions = {\n  async regionOptions({ state, commit, dispatch }, { credentialId }) {\n    const regions = await dispatch('cachedCommand', { credentialId, command: 'regions' });\n\n    const out = regions.data.filter((region) => {\n      return region.status === 'ok';\n    }).map((region) => {\n      return {\n        label: region.id,\n        value: region.id,\n      };\n    });\n\n    return sortBy(out, 'label');\n  },\n\n  async instanceOptions({ dispatch, rootGetters }, { credentialId }) {\n    const types = await dispatch('cachedCommand', { credentialId, command: 'linode/types' });\n\n    const available = types.data.map((type) => {\n      const out = {\n        class:    type.class,\n        label:    type.label,\n        memoryGb: type.memory,\n        disk:     type.disk / 1024,\n        vcpus:    type.vcpus,\n        value:    type.id\n      };\n\n      out.label = rootGetters['i18n/t']('cluster.machineConfig.linode.typeLabel', out);\n\n      return out;\n    });\n\n    return sortBy(available, ['class', 'memoryGb', 'vcpus', 'disk']);\n  },\n\n  async imageOptions({ dispatch }, { credentialId }) {\n    const images = await dispatch('cachedCommand', { credentialId, command: 'images' });\n\n    const out = images.data.filter((image) => {\n      return image.status === 'available';\n    }).map((image) => {\n      return {\n        label: image.label,\n        value: image.id\n      };\n    });\n\n    return sortBy(out, 'label');\n  },\n\n  async cachedCommand({\n    state, getters, commit, dispatch\n  }, { credentialId, command }) {\n    let out = getters['fromCache']({ credentialId, key: command });\n\n    if ( !out ) {\n      out = await dispatch('request', { credentialId, command });\n      commit('setCache', {\n        credentialId, key: command, value: out\n      });\n    }\n\n    return out;\n  },\n\n  async request({ dispatch }, {\n    token, credentialId, command, opt, out\n  }) {\n    opt = opt || {};\n\n    let url = '/meta/proxy/';\n\n    if ( opt.url ) {\n      url += opt.url.replace(/^https?:\\/\\//, '');\n    } else {\n      url += `${ ENDPOINT }/${ command }`;\n      url = addParam(url, 'per_page', opt.per_page || 1000);\n      url = addParams(url, opt.params || {});\n    }\n\n    const headers = { Accept: 'application/json' };\n\n    if ( credentialId ) {\n      headers['X-API-CattleAuth-Header'] = `Bearer credID=${ credentialId } passwordField=token`;\n    } else if ( token ) {\n      headers['X-API-Auth-Header'] = `Bearer ${ token }`;\n    }\n\n    const res = await dispatch('management/request', {\n      url,\n      headers,\n      redirectUnauthorized: false,\n    }, { root: true });\n\n    if ( out ) {\n      out[command] = out[command].concat(res[command]);\n    } else {\n      out = res;\n    }\n\n    // De-pagination\n    if ( res?.links?.pages?.next ) {\n      opt.url = res.links.pages.next;\n\n      return dispatch('request', {\n        token, credentialId, command, opt, out\n      });\n    }\n\n    return out;\n  }\n};\n"],"mappings":"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","ignoreList":[]}]}