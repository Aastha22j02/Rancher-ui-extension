{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/logging.banzaicloud.io.flow.js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/logging.banzaicloud.io.flow.js","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["LOGGING","set","uniq","SteveModel","matchRuleIsPopulated","rule","_rule$hosts","_rule$container_names","_rule$namespaces","labels","Object","keys","length","hosts","container_names","namespaces","LogFlow","_SteveModel","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","applyDefaults","spec","match","filters","localOutputRefs","globalOutputRefs","get","_this$spec","out","_iterator","_createForOfIteratorHelper","_step","s","n","done","select","exclude","err","e","f","$rootGetters","OUTPUT","CLUSTER_OUTPUT","_this$spec2","allOutputs","filter","output","includes","name","displays","outputs","map","o","nameDisplay","sort","join","_this$spec3","allClusterOutputs","clusterOutputs","combinedOutputs","concat","_toConsumableArray","duplicatedProviders","flatMap","providersDisplay","path","validators","default"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/logging.banzaicloud.io.flow.js"],"sourcesContent":["import { LOGGING } from '@shell/config/types';\nimport { set } from '@shell/utils/object';\nimport uniq from 'lodash/uniq';\nimport SteveModel from '@shell/plugins/steve/steve-class';\n\nexport function matchRuleIsPopulated(rule) {\n  if ( !rule ) {\n    return false;\n  }\n\n  if ( rule.labels && Object.keys(rule.labels).length ) {\n    return true;\n  }\n\n  if ( rule.hosts?.length ) {\n    return true;\n  }\n\n  if ( rule.container_names?.length ) {\n    return true;\n  }\n\n  if ( rule.namespaces?.length ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport default class LogFlow extends SteveModel {\n  applyDefaults() {\n    set(this, 'spec', this.spec || {});\n    set(this.spec, 'match', this.spec.match || []);\n    set(this.spec, 'filters', this.spec.filters || []);\n    set(this.spec, 'localOutputRefs', this.spec.localOutputRefs || []);\n    set(this.spec, 'globalOutputRefs', this.spec.globalOutputRefs || []);\n  }\n\n  get canCustomEdit() {\n    if ( !this.spec?.match?.length ) {\n      return true;\n    }\n\n    let out = true;\n\n    for ( const match of this.spec.match ) {\n      if ( matchRuleIsPopulated(match.select) && matchRuleIsPopulated(match.exclude) ) {\n        out = false;\n        break;\n      }\n    }\n\n    return out;\n  }\n\n  get allOutputs() {\n    return this.$rootGetters['cluster/all'](LOGGING.OUTPUT) || [];\n  }\n\n  get allClusterOutputs() {\n    return this.$rootGetters['cluster/all'](LOGGING.CLUSTER_OUTPUT) || [];\n  }\n\n  get outputs() {\n    const localOutputRefs = this.spec?.localOutputRefs || [];\n\n    return this.allOutputs.filter((output) => localOutputRefs.includes(output.name));\n  }\n\n  get outputsSortable() {\n    const displays = this.outputs.map((o) => o.nameDisplay);\n\n    displays.sort();\n\n    return displays.join('');\n  }\n\n  get clusterOutputs() {\n    const globalOutputRefs = this.spec?.globalOutputRefs || [];\n\n    if (this.allClusterOutputs) {\n      return this.allClusterOutputs.filter((output) => globalOutputRefs.includes(output.name));\n    } else {\n      // Handle the case where the user doesn't have permission\n      // to see ClusterOutputs\n      return [];\n    }\n  }\n\n  get clusterOutputsSortable() {\n    const displays = this.clusterOutputs.map((o) => o.nameDisplay);\n\n    displays.sort();\n\n    return displays.join('');\n  }\n\n  get providersDisplay() {\n    const combinedOutputs = [...this.outputs, ...this.clusterOutputs];\n    const duplicatedProviders = combinedOutputs\n      .flatMap((output) => output.providersDisplay);\n\n    return uniq(duplicatedProviders) || [];\n  }\n\n  get customValidationRules() {\n    return [\n      {\n        path:       'spec',\n        validators: ['flowOutput:verifyLocal'],\n      },\n    ];\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}