{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/middleware/authenticated.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/middleware/authenticated.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["DEFAULT_WORKSPACE","applyProducts","ClusterNotFoundError","RedirectToError","get","AFTER_LOGIN_ROUTE","WORKSPACE","BACK_TO","NAME","FLEET_NAME","validateResource","setProduct","getClusterFromRoute","getProductFromRoute","getPackageFromRoute","beforeEachSetup","_x","_ref2","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","route","store","redirect","from","$plugin","next","backTo","localCheckResource","clusterId","pkg","product","oldPkg","oldProduct","oldPkgPlugin","always","newPkgPlugin","isSingleProduct","_isSingleProduct$afte","value","wrap","_callee$","_context","prev","getters","abrupt","window","localStorage","getItem","removeItem","location","href","dispatch","app","router","beforeEach","to","afterEach","setTimeout","_popStateDetected","Object","values","getPlugins","find","p","name","onLeave","oldIsExt","fullPath","Promise","all","onEnter","commit","concat","id","newPkg","targetRoute","afterLoginRoute","_objectSpread","params","cluster","key","t0","url","error","locationError","Error","stop"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/middleware/authenticated.js"],"sourcesContent":["import { DEFAULT_WORKSPACE } from '@shell/config/types';\nimport { applyProducts } from '@shell/store/type-map';\nimport { ClusterNotFoundError, RedirectToError } from '@shell/utils/error';\nimport { get } from '@shell/utils/object';\nimport { AFTER_LOGIN_ROUTE, WORKSPACE } from '@shell/store/prefs';\nimport { BACK_TO } from '@shell/config/local-storage';\nimport { NAME as FLEET_NAME } from '@shell/config/product/fleet.js';\nimport { validateResource, setProduct } from '@shell/utils/auth';\nimport { getClusterFromRoute, getProductFromRoute, getPackageFromRoute } from '@shell/utils/router';\n\nlet beforeEachSetup = false;\n\nexport default async function({\n  route, store, redirect, from, $plugin, next\n}) {\n  if ( store.getters['auth/enabled'] !== false && !store.getters['auth/loggedIn'] ) {\n    return;\n  }\n\n  const backTo = window.localStorage.getItem(BACK_TO);\n\n  if (backTo) {\n    window.localStorage.removeItem(BACK_TO);\n\n    window.location.href = backTo;\n  }\n\n  // GC should be notified of route change before any find/get request is made that might be used for that page\n  store.dispatch('gcRouteChanged', route);\n\n  // Load stuff\n  let localCheckResource = false;\n\n  await applyProducts(store, $plugin);\n\n  // Setup a beforeEach hook once to keep track of the current product\n  if ( !beforeEachSetup ) {\n    beforeEachSetup = true;\n    // This only needs to happen when beforeEach hook hasn't run (the initial load)\n    localCheckResource = true;\n\n    store.app.router.beforeEach((to, from, next) => {\n      // NOTE - This beforeEach runs AFTER this middleware. So anything in this middleware that requires it must set it manually\n      setProduct(store, to);\n\n      next();\n    });\n\n    // Call it for the initial pageload\n    setProduct(store, route);\n\n    store.app.router.afterEach((to, from) => {\n      // Clear state used to record if back button was used for navigation\n      setTimeout(() => {\n        window._popStateDetected = false;\n      }, 1);\n    });\n  }\n\n  try {\n    let clusterId = get(route, 'params.cluster');\n\n    // Route can provide cluster ID via metadata\n    if (!clusterId && route) {\n      clusterId = getClusterFromRoute(route);\n    }\n\n    const pkg = getPackageFromRoute(route);\n    const product = getProductFromRoute(route);\n\n    const oldPkg = getPackageFromRoute(from);\n    const oldProduct = getProductFromRoute(from);\n\n    // Leave an old pkg where we weren't before?\n    const oldPkgPlugin = oldPkg ? Object.values($plugin.getPlugins()).find((p) => p.name === oldPkg) : null;\n\n    if (oldPkg && oldPkg !== pkg ) {\n      // Execute anything optional the plugin wants to. For example resetting it's store to remove data\n      await oldPkgPlugin.onLeave(store, {\n        clusterId,\n        product,\n        oldProduct,\n        oldIsExt: !!oldPkg\n      });\n    }\n\n    // Sometimes this needs to happen before or alongside other things... but is always needed\n    const always = [\n      store.dispatch('loadManagement')\n    ];\n\n    // Entering a new package where we weren't before?\n    const newPkgPlugin = pkg ? Object.values($plugin.getPlugins()).find((p) => p.name === pkg) : null;\n\n    // Note - We can't block on oldPkg !== newPkg because on a fresh load the `from` route equals the `to` route\n    if (pkg && (oldPkg !== pkg || from.fullPath === route.fullPath)) {\n      // Execute mandatory store actions\n      await Promise.all(always);\n\n      // Execute anything optional the plugin wants to\n      await newPkgPlugin.onEnter(store, {\n        clusterId,\n        product,\n        oldProduct,\n        oldIsExt: !!oldPkg\n      });\n    }\n\n    // Ensure that the activeNamespaceCache is updated given the change of context either from or to a place where it uses workspaces\n    // When fleet moves to it's own package this should be moved to pkg onEnter/onLeave\n    if ((oldProduct === FLEET_NAME || product === FLEET_NAME) && oldProduct !== product) {\n      // See note above for store.app.router.beforeEach, need to setProduct manually, for the moment do this in a targeted way\n      setProduct(store, route);\n\n      store.commit('updateWorkspace', {\n        value:   store.getters['prefs/get'](WORKSPACE) || DEFAULT_WORKSPACE,\n        getters: store.getters\n      });\n    }\n\n    // Always run loadCluster, it handles 'unload' as well\n    // Run them in parallel\n    await Promise.all([\n      ...always,\n      store.dispatch('loadCluster', {\n        id:          clusterId,\n        oldPkg:      oldPkgPlugin,\n        newPkg:      newPkgPlugin,\n        product,\n        oldProduct,\n        targetRoute: route\n      })\n    ]);\n\n    if (localCheckResource) {\n      validateResource(store, route, redirect);\n    }\n\n    if (!clusterId) {\n      clusterId = store.getters['defaultClusterId']; // This needs the cluster list, so no parallel\n      const isSingleProduct = store.getters['isSingleProduct'];\n\n      if (isSingleProduct?.afterLoginRoute) {\n        const value = {\n          name:   'c-cluster-product',\n          ...isSingleProduct.afterLoginRoute,\n          params: {\n            cluster: clusterId,\n            ...isSingleProduct.afterLoginRoute?.params\n          },\n        };\n\n        await store.dispatch('prefs/set', {\n          key: AFTER_LOGIN_ROUTE,\n          value,\n        });\n      }\n    }\n  } catch (e) {\n    if ( e.name === ClusterNotFoundError.name ) {\n      return redirect(302, '/home');\n    } if ( e.name === RedirectToError.name ) {\n      return redirect(302, e.url);\n    } else {\n      // Sets error 500 if lost connection to API\n      store.commit('setError', { error: e, locationError: new Error(store.getters['i18n/t']('nav.failWhale.authMiddleware')) });\n\n      return redirect(302, '/fail-whale');\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}