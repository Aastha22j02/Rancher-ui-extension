{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/initialize/client.js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/initialize/client.js","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90eXBlb2YgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKZnVuY3Rpb24gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIociwgZSkgeyB2YXIgdCA9ICJ1bmRlZmluZWQiICE9IHR5cGVvZiBTeW1ib2wgJiYgcltTeW1ib2wuaXRlcmF0b3JdIHx8IHJbIkBAaXRlcmF0b3IiXTsgaWYgKCF0KSB7IGlmIChBcnJheS5pc0FycmF5KHIpIHx8ICh0ID0gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KHIpKSB8fCBlICYmIHIgJiYgIm51bWJlciIgPT0gdHlwZW9mIHIubGVuZ3RoKSB7IHQgJiYgKHIgPSB0KTsgdmFyIF9uID0gMCwgRiA9IGZ1bmN0aW9uIEYoKSB7fTsgcmV0dXJuIHsgczogRiwgbjogZnVuY3Rpb24gbigpIHsgcmV0dXJuIF9uID49IHIubGVuZ3RoID8geyBkb25lOiAhMCB9IDogeyBkb25lOiAhMSwgdmFsdWU6IHJbX24rK10gfTsgfSwgZTogZnVuY3Rpb24gZShyKSB7IHRocm93IHI7IH0sIGY6IEYgfTsgfSB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gaXRlcmF0ZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7IH0gdmFyIG8sIGEgPSAhMCwgdSA9ICExOyByZXR1cm4geyBzOiBmdW5jdGlvbiBzKCkgeyB0ID0gdC5jYWxsKHIpOyB9LCBuOiBmdW5jdGlvbiBuKCkgeyB2YXIgciA9IHQubmV4dCgpOyByZXR1cm4gYSA9IHIuZG9uZSwgcjsgfSwgZTogZnVuY3Rpb24gZShyKSB7IHUgPSAhMCwgbyA9IHI7IH0sIGY6IGZ1bmN0aW9uIGYoKSB7IHRyeSB7IGEgfHwgbnVsbCA9PSB0LnJldHVybiB8fCB0LnJldHVybigpOyB9IGZpbmFsbHkgeyBpZiAodSkgdGhyb3cgbzsgfSB9IH07IH0KZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KHIsIGEpIHsgaWYgKHIpIHsgaWYgKCJzdHJpbmciID09IHR5cGVvZiByKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkociwgYSk7IHZhciB0ID0ge30udG9TdHJpbmcuY2FsbChyKS5zbGljZSg4LCAtMSk7IHJldHVybiAiT2JqZWN0IiA9PT0gdCAmJiByLmNvbnN0cnVjdG9yICYmICh0ID0gci5jb25zdHJ1Y3Rvci5uYW1lKSwgIk1hcCIgPT09IHQgfHwgIlNldCIgPT09IHQgPyBBcnJheS5mcm9tKHIpIDogIkFyZ3VtZW50cyIgPT09IHQgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QodCkgPyBfYXJyYXlMaWtlVG9BcnJheShyLCBhKSA6IHZvaWQgMDsgfSB9CmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KHIsIGEpIHsgKG51bGwgPT0gYSB8fCBhID4gci5sZW5ndGgpICYmIChhID0gci5sZW5ndGgpOyBmb3IgKHZhciBlID0gMCwgbiA9IEFycmF5KGEpOyBlIDwgYTsgZSsrKSBuW2VdID0gcltlXTsgcmV0dXJuIG47IH0KaW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL2hvbWUvdWJ1bnR1L3N1c2Vjb24tMjAyNC1leHQtZGVtby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuYXNzaWduLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucHJvbWlzZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKLy8gVGFrZW4gZnJvbSBAbnV4dC92dWUtYXBwL3RlbXBsYXRlL2NsaWVudC5qcwoKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgZmV0Y2ggZnJvbSAndW5mZXRjaCc7CmltcG9ydCBtaWRkbGV3YXJlIGZyb20gJy4uL2NvbmZpZy9taWRkbGV3YXJlLmpzJzsKaW1wb3J0IHsgYXBwbHlBc3luY0RhdGEsIHByb21pc2lmeSwgbWlkZGxld2FyZVNlcmllcywgc2FuaXRpemVDb21wb25lbnQsIHJlc29sdmVSb3V0ZUNvbXBvbmVudHMsIGdldE1hdGNoZWRDb21wb25lbnRzLCBnZXRNYXRjaGVkQ29tcG9uZW50c0luc3RhbmNlcywgZmxhdE1hcENvbXBvbmVudHMsIHNldENvbnRleHQsIGNvbXBpbGUsIGdldFF1ZXJ5RGlmZiwgZ2xvYmFsSGFuZGxlRXJyb3IsIGlzU2FtZVBhdGgsIHVybEpvaW4gfSBmcm9tICcuLi91dGlscy9udXh0LmpzJzsKaW1wb3J0IHsgY3JlYXRlQXBwIH0gZnJvbSAnLi9pbmRleC5qcyc7CmltcG9ydCBmZXRjaE1peGluIGZyb20gJy4uL21peGlucy9mZXRjaC5jbGllbnQnOwppbXBvcnQgTnV4dExpbmsgZnJvbSAnLi4vY29tcG9uZW50cy9udXh0L251eHQtbGluay5jbGllbnQuanMnOyAvLyBzaG91bGQgYmUgaW5jbHVkZWQgYWZ0ZXIgLi9pbmRleC5qcwoKLy8gTWltaWMgb2xkIEBudXh0L3Z1ZS1hcHAvdGVtcGxhdGUvY2xpZW50LmpzCnZhciBpc0RldiA9IHByb2Nlc3MuZW52LmRldjsKdmFyIGRlYnVnID0gaXNEZXY7CgovLyBGZXRjaCBtaXhpbgppZiAoIVZ1ZS5fX251eHRfX2ZldGNoX19taXhpbl9fKSB7CiAgVnVlLm1peGluKGZldGNoTWl4aW4pOwogIFZ1ZS5fX251eHRfX2ZldGNoX19taXhpbl9fID0gdHJ1ZTsKfQoKLy8gQ29tcG9uZW50OiA8TnV4dExpbms+ClZ1ZS5jb21wb25lbnQoTnV4dExpbmsubmFtZSwgTnV4dExpbmspOwpWdWUuY29tcG9uZW50KCdOTGluaycsIE51eHRMaW5rKTsKaWYgKCFnbG9iYWwuZmV0Y2gpIHsKICBnbG9iYWwuZmV0Y2ggPSBmZXRjaDsKfQoKLy8gR2xvYmFsIHNoYXJlZCByZWZlcmVuY2VzCnZhciBfbGFzdFBhdGhzID0gW107CnZhciBhcHA7CnZhciByb3V0ZXI7CgovLyBUcnkgdG8gcmVoeWRyYXRlIFNTUiBkYXRhIGZyb20gd2luZG93CnZhciBOVVhUID0gd2luZG93Ll9fTlVYVF9fIHx8IHt9Owp2YXIgJGNvbmZpZyA9IG51eHQucHVibGljUnVudGltZUNvbmZpZyB8fCB7fTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZgoKaWYgKCRjb25maWcuX2FwcCkgewogIF9fd2VicGFja19wdWJsaWNfcGF0aF9fID0gdXJsSm9pbigkY29uZmlnLl9hcHAuY2RuVVJMLCAkY29uZmlnLl9hcHAuYXNzZXRzUGF0aCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgY2FtZWxjYXNlLCBuby11bmRlZgp9Ck9iamVjdC5hc3NpZ24oVnVlLmNvbmZpZywgewogIHNpbGVudDogZmFsc2UsCiAgcGVyZm9ybWFuY2U6IHRydWUKfSk7CmlmIChkZWJ1ZykgewogIHZhciBsb2dzID0gTlVYVC5sb2dzIHx8IFtdOwogIGlmIChsb2dzLmxlbmd0aCA+IDApIHsKICAgIHZhciBzc3JMb2dTdHlsZSA9ICdiYWNrZ3JvdW5kOiAjMkU0OTVFO2JvcmRlci1yYWRpdXM6IDAuNWVtO2NvbG9yOiB3aGl0ZTtmb250LXdlaWdodDogYm9sZDtwYWRkaW5nOiAycHggMC41ZW07JzsKICAgIGNvbnNvbGUuZ3JvdXAgJiYgY29uc29sZS5ncm91cCgnJWNOdXh0IFNTUicsIHNzckxvZ1N0eWxlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlCiAgICBsb2dzLmZvckVhY2goZnVuY3Rpb24gKGxvZ09iaikgewogICAgICByZXR1cm4gKGNvbnNvbGVbbG9nT2JqLnR5cGVdIHx8IGNvbnNvbGUubG9nKS5hcHBseSh2b2lkIDAsIF90b0NvbnN1bWFibGVBcnJheShsb2dPYmouYXJncykpOwogICAgfSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZQogICAgZGVsZXRlIE5VWFQubG9nczsKICAgIGNvbnNvbGUuZ3JvdXBFbmQgJiYgY29uc29sZS5ncm91cEVuZCgpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGUKICB9CgogIC8vIFNldHVwIGdsb2JhbCBWdWUgZXJyb3IgaGFuZGxlcgogIGlmICghVnVlLmNvbmZpZy4kbnV4dCkgewogICAgdmFyIGRlZmF1bHRFcnJvckhhbmRsZXIgPSBWdWUuY29uZmlnLmVycm9ySGFuZGxlcjsKICAgIFZ1ZS5jb25maWcuZXJyb3JIYW5kbGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGVyciwgdm0sIGluZm8pIHsKICAgICAgICB2YXIgaGFuZGxlZCwKICAgICAgICAgIF9sZW4sCiAgICAgICAgICByZXN0LAogICAgICAgICAgX2tleSwKICAgICAgICAgIG51eHRBcHAsCiAgICAgICAgICBjdXJyZW50QXBwLAogICAgICAgICAgX2FyZ3MgPSBhcmd1bWVudHM7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIC8vIENhbGwgb3RoZXIgaGFuZGxlciBpZiBleGlzdAogICAgICAgICAgICAgIGhhbmRsZWQgPSBudWxsOwogICAgICAgICAgICAgIGlmICh0eXBlb2YgZGVmYXVsdEVycm9ySGFuZGxlciA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgICAgICAgZm9yIChfbGVuID0gX2FyZ3MubGVuZ3RoLCByZXN0ID0gbmV3IEFycmF5KF9sZW4gPiAzID8gX2xlbiAtIDMgOiAwKSwgX2tleSA9IDM7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgICAgICAgICAgICAgcmVzdFtfa2V5IC0gM10gPSBfYXJnc1tfa2V5XTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGhhbmRsZWQgPSBkZWZhdWx0RXJyb3JIYW5kbGVyLmFwcGx5KHZvaWQgMCwgW2Vyciwgdm0sIGluZm9dLmNvbmNhdChyZXN0KSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGlmICghKGhhbmRsZWQgPT09IHRydWUpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBoYW5kbGVkKTsKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGlmICh2bSAmJiB2bS4kcm9vdCkgewogICAgICAgICAgICAgICAgbnV4dEFwcCA9IE9iamVjdC5rZXlzKFZ1ZS5jb25maWcuJG51eHQpLmZpbmQoZnVuY3Rpb24gKG51eHRJbnN0YW5jZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gdm0uJHJvb3RbbnV4dEluc3RhbmNlXTsKICAgICAgICAgICAgICAgIH0pOyAvLyBTaG93IE51eHQgRXJyb3IgUGFnZQogICAgICAgICAgICAgICAgaWYgKG51eHRBcHAgJiYgdm0uJHJvb3RbbnV4dEFwcF0uZXJyb3IgJiYgaW5mbyAhPT0gJ3JlbmRlciBmdW5jdGlvbicpIHsKICAgICAgICAgICAgICAgICAgY3VycmVudEFwcCA9IHZtLiRyb290W251eHRBcHBdOwogICAgICAgICAgICAgICAgICBjdXJyZW50QXBwLmVycm9yKGVycik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGlmICghKHR5cGVvZiBkZWZhdWx0RXJyb3JIYW5kbGVyID09PSAnZnVuY3Rpb24nKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgaGFuZGxlZCk7CiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAvLyBMb2cgdG8gY29uc29sZQogICAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZQogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVyci5tZXNzYWdlIHx8IGVycik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyLCBfeDMpIHsKICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9OwogICAgfSgpOwogICAgVnVlLmNvbmZpZy4kbnV4dCA9IHt9OwogIH0KICBWdWUuY29uZmlnLiRudXh0LiRudXh0ID0gdHJ1ZTsKfQp2YXIgZXJyb3JIYW5kbGVyID0gVnVlLmNvbmZpZy5lcnJvckhhbmRsZXIgfHwgY29uc29sZS5lcnJvcjsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlCgovLyBDcmVhdGUgYW5kIG1vdW50IEFwcApjcmVhdGVBcHAobnV4dC5wdWJsaWNSdW50aW1lQ29uZmlnKS50aGVuKG1vdW50QXBwKS5jYXRjaChlcnJvckhhbmRsZXIpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmCmZ1bmN0aW9uIGxvYWRBc3luY0NvbXBvbmVudHMoX3g0LCBfeDUsIF94NikgewogIHJldHVybiBfbG9hZEFzeW5jQ29tcG9uZW50cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9IC8vIEdldCBtYXRjaGVkIGNvbXBvbmVudHMKZnVuY3Rpb24gX2xvYWRBc3luY0NvbXBvbmVudHMoKSB7CiAgX2xvYWRBc3luY0NvbXBvbmVudHMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCh0bywgZnJvbSwgbmV4dCkgewogICAgdmFyIF90aGlzNCA9IHRoaXM7CiAgICB2YXIgQ29tcG9uZW50cywgc3RhcnRMb2FkZXIsIGVyciwgc3RhdHVzQ29kZSwgbWVzc2FnZTsKICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgLy8gQ2hlY2sgaWYgcm91dGUgY2hhbmdlZCAodGhpcy5fcm91dGVDaGFuZ2VkKSwgb25seSBpZiB0aGUgcGFnZSBpcyBub3QgYW4gZXJyb3IgKGZvciB2YWxpZGF0ZSgpKQogICAgICAgICAgdGhpcy5fcm91dGVDaGFuZ2VkID0gQm9vbGVhbihhcHAubnV4dC5lcnIpIHx8IGZyb20ubmFtZSAhPT0gdG8ubmFtZTsKICAgICAgICAgIHRoaXMuX3BhcmFtQ2hhbmdlZCA9ICF0aGlzLl9yb3V0ZUNoYW5nZWQgJiYgZnJvbS5wYXRoICE9PSB0by5wYXRoOwogICAgICAgICAgdGhpcy5fcXVlcnlDaGFuZ2VkID0gIXRoaXMuX3BhcmFtQ2hhbmdlZCAmJiBmcm9tLmZ1bGxQYXRoICE9PSB0by5mdWxsUGF0aDsKICAgICAgICAgIHRoaXMuX2RpZmZRdWVyeSA9IHRoaXMuX3F1ZXJ5Q2hhbmdlZCA/IGdldFF1ZXJ5RGlmZih0by5xdWVyeSwgZnJvbS5xdWVyeSkgOiBbXTsKICAgICAgICAgIGlmICgodGhpcy5fcm91dGVDaGFuZ2VkIHx8IHRoaXMuX3BhcmFtQ2hhbmdlZCkgJiYgdGhpcy4kbG9hZGluZy5zdGFydCAmJiAhdGhpcy4kbG9hZGluZy5tYW51YWwpIHsKICAgICAgICAgICAgdGhpcy4kbG9hZGluZy5zdGFydCgpOwogICAgICAgICAgfQogICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSA1OwogICAgICAgICAgaWYgKCF0aGlzLl9xdWVyeUNoYW5nZWQpIHsKICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxMjsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDk7CiAgICAgICAgICByZXR1cm4gcmVzb2x2ZVJvdXRlQ29tcG9uZW50cyh0bywgZnVuY3Rpb24gKENvbXBvbmVudCwgaW5zdGFuY2UpIHsKICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICBDb21wb25lbnQ6IENvbXBvbmVudCwKICAgICAgICAgICAgICBpbnN0YW5jZTogaW5zdGFuY2UKICAgICAgICAgICAgfTsKICAgICAgICAgIH0pOwogICAgICAgIGNhc2UgOToKICAgICAgICAgIENvbXBvbmVudHMgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgIC8vIEFkZCBhIG1hcmtlciBvbiBlYWNoIGNvbXBvbmVudCB0aGF0IGl0IG5lZWRzIHRvIHJlZnJlc2ggb3Igbm90CiAgICAgICAgICBzdGFydExvYWRlciA9IENvbXBvbmVudHMuc29tZShmdW5jdGlvbiAoX3JlZjQpIHsKICAgICAgICAgICAgdmFyIENvbXBvbmVudCA9IF9yZWY0LkNvbXBvbmVudCwKICAgICAgICAgICAgICBpbnN0YW5jZSA9IF9yZWY0Lmluc3RhbmNlOwogICAgICAgICAgICB2YXIgd2F0Y2hRdWVyeSA9IENvbXBvbmVudC5vcHRpb25zLndhdGNoUXVlcnk7CiAgICAgICAgICAgIGlmICh3YXRjaFF1ZXJ5ID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkod2F0Y2hRdWVyeSkpIHsKICAgICAgICAgICAgICByZXR1cm4gd2F0Y2hRdWVyeS5zb21lKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczQuX2RpZmZRdWVyeVtrZXldOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICh0eXBlb2Ygd2F0Y2hRdWVyeSA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgICAgIHJldHVybiB3YXRjaFF1ZXJ5LmFwcGx5KGluc3RhbmNlLCBbdG8ucXVlcnksIGZyb20ucXVlcnldKTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICB9KTsKICAgICAgICAgIGlmIChzdGFydExvYWRlciAmJiB0aGlzLiRsb2FkaW5nLnN0YXJ0ICYmICF0aGlzLiRsb2FkaW5nLm1hbnVhbCkgewogICAgICAgICAgICB0aGlzLiRsb2FkaW5nLnN0YXJ0KCk7CiAgICAgICAgICB9CiAgICAgICAgY2FzZSAxMjoKICAgICAgICAgIC8vIENhbGwgbmV4dCgpCiAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDI2OwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAxNToKICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gMTU7CiAgICAgICAgICBfY29udGV4dDQudDAgPSBfY29udGV4dDRbImNhdGNoIl0oNSk7CiAgICAgICAgICBlcnIgPSBfY29udGV4dDQudDAgfHwge307CiAgICAgICAgICBzdGF0dXNDb2RlID0gZXJyLnN0YXR1c0NvZGUgfHwgZXJyLnN0YXR1cyB8fCBlcnIucmVzcG9uc2UgJiYgZXJyLnJlc3BvbnNlLnN0YXR1cyB8fCA1MDA7CiAgICAgICAgICBtZXNzYWdlID0gZXJyLm1lc3NhZ2UgfHwgJyc7IC8vIEhhbmRsZSBjaHVuayBsb2FkaW5nIGVycm9ycwogICAgICAgICAgLy8gVGhpcyBtYXkgYmUgZHVlIHRvIGEgbmV3IGRlcGxveW1lbnQgb3IgYSBuZXR3b3JrIHByb2JsZW0KICAgICAgICAgIGlmICghL15Mb2FkaW5nKCBDU1MpPyBjaHVuayAoXGQpKyBmYWlsZWRcLi8udGVzdChtZXNzYWdlKSkgewogICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDIzOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQodHJ1ZSAvKiBza2lwIGNhY2hlICovKTsKICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iKTsKICAgICAgICBjYXNlIDIzOgogICAgICAgICAgdGhpcy5lcnJvcih7CiAgICAgICAgICAgIHN0YXR1c0NvZGU6IHN0YXR1c0NvZGUsCiAgICAgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UKICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy4kbnV4dC4kZW1pdCgncm91dGVDaGFuZ2VkJywgdG8sIGZyb20sIGVycik7CiAgICAgICAgICBuZXh0KCk7CiAgICAgICAgY2FzZSAyNjoKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgIH0KICAgIH0sIF9jYWxsZWU0LCB0aGlzLCBbWzUsIDE1XV0pOwogIH0pKTsKICByZXR1cm4gX2xvYWRBc3luY0NvbXBvbmVudHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQpmdW5jdGlvbiByZXNvbHZlQ29tcG9uZW50cyhyb3V0ZSkgewogIHJldHVybiBmbGF0TWFwQ29tcG9uZW50cyhyb3V0ZSwgLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKENvbXBvbmVudCwgXywgbWF0Y2gsIGtleSwgaW5kZXgpIHsKICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBpZiAoISh0eXBlb2YgQ29tcG9uZW50ID09PSAnZnVuY3Rpb24nICYmICFDb21wb25lbnQub3B0aW9ucykpIHsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gQ29tcG9uZW50KCk7CiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIENvbXBvbmVudCA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAvLyBTYW5pdGl6ZSBpdCBhbmQgc2F2ZSBpdAogICAgICAgICAgICBDb21wb25lbnQuX0N0b3IgPSBzYW5pdGl6ZUNvbXBvbmVudChDb21wb25lbnQpOwogICAgICAgICAgICBtYXRjaC5jb21wb25lbnRzW2tleV0gPSBDb21wb25lbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBDb21wb25lbnQpOwogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSk7CiAgICByZXR1cm4gZnVuY3Rpb24gKF94NywgX3g4LCBfeDksIF94MTAsIF94MTEpIHsKICAgICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9OwogIH0oKSk7Cn0KZnVuY3Rpb24gY2FsbE1pZGRsZXdhcmUoQ29tcG9uZW50cywgY29udGV4dCkgewogIHZhciBfdGhpcyA9IHRoaXM7CiAgdmFyIG1pZGQgPSBbJ2kxOG4nXTsKICB2YXIgdW5rbm93bk1pZGRsZXdhcmUgPSBmYWxzZTsKICBDb21wb25lbnRzLmZvckVhY2goZnVuY3Rpb24gKENvbXBvbmVudCkgewogICAgaWYgKENvbXBvbmVudC5vcHRpb25zLm1pZGRsZXdhcmUpIHsKICAgICAgbWlkZCA9IG1pZGQuY29uY2F0KENvbXBvbmVudC5vcHRpb25zLm1pZGRsZXdhcmUpOwogICAgfQogIH0pOwogIG1pZGQgPSBtaWRkLm1hcChmdW5jdGlvbiAobmFtZSkgewogICAgaWYgKHR5cGVvZiBuYW1lID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIHJldHVybiBuYW1lOwogICAgfQogICAgaWYgKHR5cGVvZiBtaWRkbGV3YXJlW25hbWVdICE9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVua25vd25NaWRkbGV3YXJlID0gdHJ1ZTsKICAgICAgX3RoaXMuZXJyb3IoewogICAgICAgIHN0YXR1c0NvZGU6IDUwMCwKICAgICAgICBtZXNzYWdlOiAiVW5rbm93biBtaWRkbGV3YXJlICIuY29uY2F0KG5hbWUpCiAgICAgIH0pOwogICAgfQogICAgcmV0dXJuIG1pZGRsZXdhcmVbbmFtZV07CiAgfSk7CiAgaWYgKHVua25vd25NaWRkbGV3YXJlKSB7CiAgICByZXR1cm47CiAgfQogIHJldHVybiBtaWRkbGV3YXJlU2VyaWVzKG1pZGQsIGNvbnRleHQpOwp9CmZ1bmN0aW9uIHJlbmRlcihfeDEyLCBfeDEzLCBfeDE0KSB7CiAgcmV0dXJuIF9yZW5kZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfSAvLyBGaXggY29tcG9uZW50cyBmb3JtYXQgaW4gbWF0Y2hlZCwgaXQncyBkdWUgdG8gY29kZS1zcGxpdHRpbmcgb2YgdnVlLXJvdXRlcgpmdW5jdGlvbiBfcmVuZGVyKCkgewogIF9yZW5kZXIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSh0bywgZnJvbSwgbmV4dCkgewogICAgdmFyIF90aGlzNSA9IHRoaXM7CiAgICB2YXIgZnJvbU1hdGNoZXMsIG5leHRDYWxsZWQsIF9uZXh0LCBtYXRjaGVzLCBDb21wb25lbnRzLCBpc1ZhbGlkLCBfaXRlcmF0b3IsIF9zdGVwLCBDb21wb25lbnQsIGluc3RhbmNlcywgZXJyb3I7CiAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIGlmICghKHRoaXMuX3JvdXRlQ2hhbmdlZCA9PT0gZmFsc2UgJiYgdGhpcy5fcGFyYW1DaGFuZ2VkID09PSBmYWxzZSAmJiB0aGlzLl9xdWVyeUNoYW5nZWQgPT09IGZhbHNlKSkgewogICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDI7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIG5leHQoKSk7CiAgICAgICAgY2FzZSAyOgogICAgICAgICAgaWYgKHRvID09PSBmcm9tKSB7CiAgICAgICAgICAgIF9sYXN0UGF0aHMgPSBbXTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGZyb21NYXRjaGVzID0gW107CiAgICAgICAgICAgIF9sYXN0UGF0aHMgPSBnZXRNYXRjaGVkQ29tcG9uZW50cyhmcm9tLCBmcm9tTWF0Y2hlcykubWFwKGZ1bmN0aW9uIChDb21wb25lbnQsIGkpIHsKICAgICAgICAgICAgICByZXR1cm4gY29tcGlsZShmcm9tLm1hdGNoZWRbZnJvbU1hdGNoZXNbaV1dLnBhdGgpKGZyb20ucGFyYW1zKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CgogICAgICAgICAgLy8gbmV4dENhbGxlZCBpcyB0cnVlIHdoZW4gcmVkaXJlY3RlZAogICAgICAgICAgbmV4dENhbGxlZCA9IGZhbHNlOwogICAgICAgICAgX25leHQgPSBmdW5jdGlvbiBfbmV4dChwYXRoKSB7CiAgICAgICAgICAgIGlmIChmcm9tLnBhdGggPT09IHBhdGgucGF0aCAmJiBfdGhpczUuJGxvYWRpbmcuZmluaXNoKSB7CiAgICAgICAgICAgICAgX3RoaXM1LiRsb2FkaW5nLmZpbmlzaCgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChmcm9tLnBhdGggIT09IHBhdGgucGF0aCAmJiBfdGhpczUuJGxvYWRpbmcucGF1c2UpIHsKICAgICAgICAgICAgICBfdGhpczUuJGxvYWRpbmcucGF1c2UoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAobmV4dENhbGxlZCkgewogICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICBuZXh0Q2FsbGVkID0gdHJ1ZTsKICAgICAgICAgICAgbmV4dChwYXRoKTsKICAgICAgICAgIH07IC8vIFVwZGF0ZSBjb250ZXh0CiAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDc7CiAgICAgICAgICByZXR1cm4gc2V0Q29udGV4dChhcHAsIHsKICAgICAgICAgICAgcm91dGU6IHRvLAogICAgICAgICAgICBmcm9tOiBmcm9tLAogICAgICAgICAgICBuZXh0OiBfbmV4dC5iaW5kKHRoaXMpCiAgICAgICAgICB9KTsKICAgICAgICBjYXNlIDc6CiAgICAgICAgICB0aGlzLl9kYXRlTGFzdEVycm9yID0gYXBwLm51eHQuZGF0ZUVycjsKICAgICAgICAgIHRoaXMuX2hhZEVycm9yID0gQm9vbGVhbihhcHAubnV4dC5lcnIpOwoKICAgICAgICAgIC8vIEdldCByb3V0ZSdzIG1hdGNoZWQgY29tcG9uZW50cwogICAgICAgICAgbWF0Y2hlcyA9IFtdOwogICAgICAgICAgQ29tcG9uZW50cyA9IGdldE1hdGNoZWRDb21wb25lbnRzKHRvLCBtYXRjaGVzKTsgLy8gSWYgbm8gQ29tcG9uZW50cyBtYXRjaGVkLCBnZW5lcmF0ZSA0MDQKICAgICAgICAgIGlmIChDb21wb25lbnRzLmxlbmd0aCkgewogICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDE4OwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMTQ7CiAgICAgICAgICByZXR1cm4gY2FsbE1pZGRsZXdhcmUuY2FsbCh0aGlzLCBbewogICAgICAgICAgICBvcHRpb25zOiB7CiAgICAgICAgICAgICAgbWlkZGxld2FyZTogWydhdXRoZW50aWNhdGVkJ10KICAgICAgICAgICAgfQogICAgICAgICAgfV0sIGFwcC5jb250ZXh0KTsKICAgICAgICBjYXNlIDE0OgogICAgICAgICAgaWYgKCFuZXh0Q2FsbGVkKSB7CiAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMTY7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIpOwogICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAvLyBTaG93IGVycm9yIHBhZ2UKICAgICAgICAgIHRoaXMuZXJyb3IoewogICAgICAgICAgICBzdGF0dXNDb2RlOiA0MDQsCiAgICAgICAgICAgIG1lc3NhZ2U6ICdUaGlzIHBhZ2UgY291bGQgbm90IGJlIGZvdW5kJwogICAgICAgICAgfSk7CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgbmV4dCgpKTsKICAgICAgICBjYXNlIDE4OgogICAgICAgICAgLy8gVXBkYXRlIC5fZGF0YSBhbmQgb3RoZXIgcHJvcGVydGllcyBpZiBob3QgcmVsb2FkZWQKICAgICAgICAgIENvbXBvbmVudHMuZm9yRWFjaChmdW5jdGlvbiAoQ29tcG9uZW50KSB7CiAgICAgICAgICAgIGlmIChDb21wb25lbnQuX0N0b3IgJiYgQ29tcG9uZW50Ll9DdG9yLm9wdGlvbnMpIHsKICAgICAgICAgICAgICBDb21wb25lbnQub3B0aW9ucy5hc3luY0RhdGEgPSBDb21wb25lbnQuX0N0b3Iub3B0aW9ucy5hc3luY0RhdGE7CiAgICAgICAgICAgICAgQ29tcG9uZW50Lm9wdGlvbnMuZmV0Y2ggPSBDb21wb25lbnQuX0N0b3Iub3B0aW9ucy5mZXRjaDsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgICBfY29udGV4dDUucHJldiA9IDE5OwogICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAyMjsKICAgICAgICAgIHJldHVybiBjYWxsTWlkZGxld2FyZS5jYWxsKHRoaXMsIENvbXBvbmVudHMsIGFwcC5jb250ZXh0KTsKICAgICAgICBjYXNlIDIyOgogICAgICAgICAgaWYgKCFuZXh0Q2FsbGVkKSB7CiAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMjQ7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIpOwogICAgICAgIGNhc2UgMjQ6CiAgICAgICAgICBpZiAoIWFwcC5jb250ZXh0Ll9lcnJvcmVkKSB7CiAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMjY7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIG5leHQoKSk7CiAgICAgICAgY2FzZSAyNjoKICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMjg7CiAgICAgICAgICByZXR1cm4gY2FsbE1pZGRsZXdhcmUuY2FsbCh0aGlzLCBDb21wb25lbnRzLCBhcHAuY29udGV4dCk7CiAgICAgICAgY2FzZSAyODoKICAgICAgICAgIGlmICghbmV4dENhbGxlZCkgewogICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDMwOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJyZXR1cm4iKTsKICAgICAgICBjYXNlIDMwOgogICAgICAgICAgaWYgKCFhcHAuY29udGV4dC5fZXJyb3JlZCkgewogICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDMyOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJyZXR1cm4iLCBuZXh0KCkpOwogICAgICAgIGNhc2UgMzI6CiAgICAgICAgICAvLyBDYWxsIC52YWxpZGF0ZSgpCiAgICAgICAgICBpc1ZhbGlkID0gdHJ1ZTsKICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gMzM7CiAgICAgICAgICBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihDb21wb25lbnRzKTsKICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gMzU7CiAgICAgICAgICBfaXRlcmF0b3IucygpOwogICAgICAgIGNhc2UgMzc6CiAgICAgICAgICBpZiAoKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZSkgewogICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDQ4OwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICAgIENvbXBvbmVudCA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgaWYgKCEodHlwZW9mIENvbXBvbmVudC5vcHRpb25zLnZhbGlkYXRlICE9PSAnZnVuY3Rpb24nKSkgewogICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDQxOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJjb250aW51ZSIsIDQ2KTsKICAgICAgICBjYXNlIDQxOgogICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSA0MzsKICAgICAgICAgIHJldHVybiBDb21wb25lbnQub3B0aW9ucy52YWxpZGF0ZShhcHAuY29udGV4dCk7CiAgICAgICAgY2FzZSA0MzoKICAgICAgICAgIGlzVmFsaWQgPSBfY29udGV4dDUuc2VudDsKICAgICAgICAgIGlmIChpc1ZhbGlkKSB7CiAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gNDY7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoImJyZWFrIiwgNDgpOwogICAgICAgIGNhc2UgNDY6CiAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDM3OwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSA0ODoKICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gNTM7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIDUwOgogICAgICAgICAgX2NvbnRleHQ1LnByZXYgPSA1MDsKICAgICAgICAgIF9jb250ZXh0NS50MCA9IF9jb250ZXh0NVsiY2F0Y2giXSgzNSk7CiAgICAgICAgICBfaXRlcmF0b3IuZShfY29udGV4dDUudDApOwogICAgICAgIGNhc2UgNTM6CiAgICAgICAgICBfY29udGV4dDUucHJldiA9IDUzOwogICAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgICAgIHJldHVybiBfY29udGV4dDUuZmluaXNoKDUzKTsKICAgICAgICBjYXNlIDU2OgogICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSA2MjsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgNTg6CiAgICAgICAgICBfY29udGV4dDUucHJldiA9IDU4OwogICAgICAgICAgX2NvbnRleHQ1LnQxID0gX2NvbnRleHQ1WyJjYXRjaCJdKDMzKTsKICAgICAgICAgIC8vIC4uLklmIC52YWxpZGF0ZSgpIHRocmV3IGFuIGVycm9yCiAgICAgICAgICB0aGlzLmVycm9yKHsKICAgICAgICAgICAgc3RhdHVzQ29kZTogX2NvbnRleHQ1LnQxLnN0YXR1c0NvZGUgfHwgJzUwMCcsCiAgICAgICAgICAgIG1lc3NhZ2U6IF9jb250ZXh0NS50MS5tZXNzYWdlCiAgICAgICAgICB9KTsKICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJyZXR1cm4iLCBuZXh0KCkpOwogICAgICAgIGNhc2UgNjI6CiAgICAgICAgICBpZiAoaXNWYWxpZCkgewogICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDY1OwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICAgIHRoaXMuZXJyb3IoewogICAgICAgICAgICBzdGF0dXNDb2RlOiA0MDQsCiAgICAgICAgICAgIG1lc3NhZ2U6ICdUaGlzIHBhZ2UgY291bGQgbm90IGJlIGZvdW5kJwogICAgICAgICAgfSk7CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgbmV4dCgpKTsKICAgICAgICBjYXNlIDY1OgogICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSA2NzsKICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChDb21wb25lbnRzLm1hcChmdW5jdGlvbiAoQ29tcG9uZW50LCBpKSB7CiAgICAgICAgICAgIC8vIENoZWNrIGlmIG9ubHkgY2hpbGRyZW4gcm91dGUgY2hhbmdlZAogICAgICAgICAgICBDb21wb25lbnQuX3BhdGggPSBjb21waWxlKHRvLm1hdGNoZWRbbWF0Y2hlc1tpXV0ucGF0aCkodG8ucGFyYW1zKTsKICAgICAgICAgICAgQ29tcG9uZW50Ll9kYXRhUmVmcmVzaCA9IGZhbHNlOwogICAgICAgICAgICB2YXIgY2hpbGRQYXRoQ2hhbmdlZCA9IENvbXBvbmVudC5fcGF0aCAhPT0gX2xhc3RQYXRoc1tpXTsKCiAgICAgICAgICAgIC8vIFJlZnJlc2ggY29tcG9uZW50IChjYWxsIGFzeW5jRGF0YSAmIGZldGNoKSB3aGVuOgogICAgICAgICAgICAvLyBSb3V0ZSBwYXRoIGNoYW5nZWQgcGFydCBpbmNsdWRlcyBjdXJyZW50IGNvbXBvbmVudAogICAgICAgICAgICAvLyBPciByb3V0ZSBwYXJhbSBjaGFuZ2VkIHBhcnQgaW5jbHVkZXMgY3VycmVudCBjb21wb25lbnQgYW5kIHdhdGNoUGFyYW0gaXMgbm90IGBmYWxzZWAKICAgICAgICAgICAgLy8gT3Igcm91dGUgcXVlcnkgaXMgY2hhbmdlZCBhbmQgd2F0Y2hRdWVyeSByZXR1cm5zIGB0cnVlYAogICAgICAgICAgICBpZiAoX3RoaXM1Ll9yb3V0ZUNoYW5nZWQgJiYgY2hpbGRQYXRoQ2hhbmdlZCkgewogICAgICAgICAgICAgIENvbXBvbmVudC5fZGF0YVJlZnJlc2ggPSB0cnVlOwogICAgICAgICAgICB9IGVsc2UgaWYgKF90aGlzNS5fcGFyYW1DaGFuZ2VkICYmIGNoaWxkUGF0aENoYW5nZWQpIHsKICAgICAgICAgICAgICB2YXIgd2F0Y2hQYXJhbSA9IENvbXBvbmVudC5vcHRpb25zLndhdGNoUGFyYW07CiAgICAgICAgICAgICAgQ29tcG9uZW50Ll9kYXRhUmVmcmVzaCA9IHdhdGNoUGFyYW0gIT09IGZhbHNlOwogICAgICAgICAgICB9IGVsc2UgaWYgKF90aGlzNS5fcXVlcnlDaGFuZ2VkKSB7CiAgICAgICAgICAgICAgdmFyIHdhdGNoUXVlcnkgPSBDb21wb25lbnQub3B0aW9ucy53YXRjaFF1ZXJ5OwogICAgICAgICAgICAgIGlmICh3YXRjaFF1ZXJ5ID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICBDb21wb25lbnQuX2RhdGFSZWZyZXNoID0gdHJ1ZTsKICAgICAgICAgICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkod2F0Y2hRdWVyeSkpIHsKICAgICAgICAgICAgICAgIENvbXBvbmVudC5fZGF0YVJlZnJlc2ggPSB3YXRjaFF1ZXJ5LnNvbWUoZnVuY3Rpb24gKGtleSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXM1Ll9kaWZmUXVlcnlba2V5XTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHdhdGNoUXVlcnkgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICAgICAgICAgIGlmICghaW5zdGFuY2VzKSB7CiAgICAgICAgICAgICAgICAgIGluc3RhbmNlcyA9IGdldE1hdGNoZWRDb21wb25lbnRzSW5zdGFuY2VzKHRvKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIENvbXBvbmVudC5fZGF0YVJlZnJlc2ggPSB3YXRjaFF1ZXJ5LmFwcGx5KGluc3RhbmNlc1tpXSwgW3RvLnF1ZXJ5LCBmcm9tLnF1ZXJ5XSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICghX3RoaXM1Ll9oYWRFcnJvciAmJiBfdGhpczUuX2lzTW91bnRlZCAmJiAhQ29tcG9uZW50Ll9kYXRhUmVmcmVzaCkgewogICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICB2YXIgcHJvbWlzZXMgPSBbXTsKICAgICAgICAgICAgdmFyIGhhc0FzeW5jRGF0YSA9IENvbXBvbmVudC5vcHRpb25zLmFzeW5jRGF0YSAmJiB0eXBlb2YgQ29tcG9uZW50Lm9wdGlvbnMuYXN5bmNEYXRhID09PSAnZnVuY3Rpb24nOwogICAgICAgICAgICB2YXIgaGFzRmV0Y2ggPSBCb29sZWFuKENvbXBvbmVudC5vcHRpb25zLmZldGNoKSAmJiBDb21wb25lbnQub3B0aW9ucy5mZXRjaC5sZW5ndGg7CiAgICAgICAgICAgIHZhciBsb2FkaW5nSW5jcmVhc2UgPSBoYXNBc3luY0RhdGEgJiYgaGFzRmV0Y2ggPyAzMCA6IDQ1OwoKICAgICAgICAgICAgLy8gQ2FsbCBhc3luY0RhdGEoY29udGV4dCkKICAgICAgICAgICAgaWYgKGhhc0FzeW5jRGF0YSkgewogICAgICAgICAgICAgIHZhciBwcm9taXNlID0gcHJvbWlzaWZ5KENvbXBvbmVudC5vcHRpb25zLmFzeW5jRGF0YSwgYXBwLmNvbnRleHQpOwogICAgICAgICAgICAgIHByb21pc2UudGhlbihmdW5jdGlvbiAoYXN5bmNEYXRhUmVzdWx0KSB7CiAgICAgICAgICAgICAgICBhcHBseUFzeW5jRGF0YShDb21wb25lbnQsIGFzeW5jRGF0YVJlc3VsdCk7CiAgICAgICAgICAgICAgICBpZiAoX3RoaXM1LiRsb2FkaW5nLmluY3JlYXNlKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzNS4kbG9hZGluZy5pbmNyZWFzZShsb2FkaW5nSW5jcmVhc2UpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIHByb21pc2VzLnB1c2gocHJvbWlzZSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIENoZWNrIGRpc2FibGVkIHBhZ2UgbG9hZGluZwogICAgICAgICAgICBfdGhpczUuJGxvYWRpbmcubWFudWFsID0gQ29tcG9uZW50Lm9wdGlvbnMubG9hZGluZyA9PT0gZmFsc2U7CgogICAgICAgICAgICAvLyBDYWxsIGZldGNoKGNvbnRleHQpCiAgICAgICAgICAgIGlmIChoYXNGZXRjaCkgewogICAgICAgICAgICAgIHZhciBwID0gQ29tcG9uZW50Lm9wdGlvbnMuZmV0Y2goYXBwLmNvbnRleHQpOwogICAgICAgICAgICAgIGlmICghcCB8fCAhKHAgaW5zdGFuY2VvZiBQcm9taXNlKSAmJiB0eXBlb2YgcC50aGVuICE9PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICAgICAgICBwID0gUHJvbWlzZS5yZXNvbHZlKHApOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBwLnRoZW4oZnVuY3Rpb24gKGZldGNoUmVzdWx0KSB7CiAgICAgICAgICAgICAgICBpZiAoX3RoaXM1LiRsb2FkaW5nLmluY3JlYXNlKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzNS4kbG9hZGluZy5pbmNyZWFzZShsb2FkaW5nSW5jcmVhc2UpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIHByb21pc2VzLnB1c2gocCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTsKICAgICAgICAgIH0pKTsKICAgICAgICBjYXNlIDY3OgogICAgICAgICAgLy8gSWYgbm90IHJlZGlyZWN0ZWQKICAgICAgICAgIGlmICghbmV4dENhbGxlZCkgewogICAgICAgICAgICBpZiAodGhpcy4kbG9hZGluZy5maW5pc2ggJiYgIXRoaXMuJGxvYWRpbmcubWFudWFsKSB7CiAgICAgICAgICAgICAgdGhpcy4kbG9hZGluZy5maW5pc2goKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICB9CiAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDgwOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSA3MDoKICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gNzA7CiAgICAgICAgICBfY29udGV4dDUudDIgPSBfY29udGV4dDVbImNhdGNoIl0oMTkpOwogICAgICAgICAgZXJyb3IgPSBfY29udGV4dDUudDIgfHwge307CiAgICAgICAgICBpZiAoIShlcnJvci5tZXNzYWdlID09PSAnRVJSX1JFRElSRUNUJykpIHsKICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSA3NTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgdGhpcy4kbnV4dC4kZW1pdCgncm91dGVDaGFuZ2VkJywgdG8sIGZyb20sIGVycm9yKSk7CiAgICAgICAgY2FzZSA3NToKICAgICAgICAgIF9sYXN0UGF0aHMgPSBbXTsKICAgICAgICAgIGdsb2JhbEhhbmRsZUVycm9yKGVycm9yKTsKICAgICAgICAgIHRoaXMuZXJyb3IoZXJyb3IpOwogICAgICAgICAgdGhpcy4kbnV4dC4kZW1pdCgncm91dGVDaGFuZ2VkJywgdG8sIGZyb20sIGVycm9yKTsKICAgICAgICAgIG5leHQoKTsKICAgICAgICBjYXNlIDgwOgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgfQogICAgfSwgX2NhbGxlZTUsIHRoaXMsIFtbMTksIDcwXSwgWzMzLCA1OF0sIFszNSwgNTAsIDUzLCA1Nl1dKTsKICB9KSk7CiAgcmV0dXJuIF9yZW5kZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQpmdW5jdGlvbiBub3JtYWxpemVDb21wb25lbnRzKHRvLCBfX18pIHsKICBmbGF0TWFwQ29tcG9uZW50cyh0bywgZnVuY3Rpb24gKENvbXBvbmVudCwgXywgbWF0Y2gsIGtleSkgewogICAgaWYgKF90eXBlb2YoQ29tcG9uZW50KSA9PT0gJ29iamVjdCcgJiYgIUNvbXBvbmVudC5vcHRpb25zKSB7CiAgICAgIC8vIFVwZGF0ZWQgdmlhIHZ1ZS1yb3V0ZXIgcmVzb2x2ZUFzeW5jQ29tcG9uZW50cygpCiAgICAgIENvbXBvbmVudCA9IFZ1ZS5leHRlbmQoQ29tcG9uZW50KTsKICAgICAgQ29tcG9uZW50Ll9DdG9yID0gQ29tcG9uZW50OwogICAgICBtYXRjaC5jb21wb25lbnRzW2tleV0gPSBDb21wb25lbnQ7CiAgICB9CiAgICByZXR1cm4gQ29tcG9uZW50OwogIH0pOwp9CmZ1bmN0aW9uIGNoZWNrRm9yRXJyb3JzKGFwcCkgewogIC8vIEhpZGUgZXJyb3IgY29tcG9uZW50IGlmIG5vIGVycm9yCiAgaWYgKGFwcC5faGFkRXJyb3IgJiYgYXBwLl9kYXRlTGFzdEVycm9yID09PSBhcHAuJG9wdGlvbnMubnV4dC5kYXRlRXJyKSB7CiAgICBhcHAuZXJyb3IoKTsKICB9Cn0KCi8vIFdoZW4gbmF2aWdhdGluZyBvbiBhIGRpZmZlcmVudCByb3V0ZSBidXQgdGhlIHNhbWUgY29tcG9uZW50IGlzIHVzZWQsIFZ1ZS5qcwovLyBXaWxsIG5vdCB1cGRhdGUgdGhlIGluc3RhbmNlIGRhdGEsIHNvIHdlIGhhdmUgdG8gdXBkYXRlICRkYXRhIG91cnNlbHZlcwpmdW5jdGlvbiBmaXhQcmVwYXRjaCh0bywgX19fKSB7CiAgdmFyIF90aGlzMiA9IHRoaXM7CiAgaWYgKHRoaXMuX3JvdXRlQ2hhbmdlZCA9PT0gZmFsc2UgJiYgdGhpcy5fcGFyYW1DaGFuZ2VkID09PSBmYWxzZSAmJiB0aGlzLl9xdWVyeUNoYW5nZWQgPT09IGZhbHNlKSB7CiAgICByZXR1cm47CiAgfQogIHZhciBpbnN0YW5jZXMgPSBnZXRNYXRjaGVkQ29tcG9uZW50c0luc3RhbmNlcyh0byk7CiAgdmFyIENvbXBvbmVudHMgPSBnZXRNYXRjaGVkQ29tcG9uZW50cyh0byk7CiAgdmFyIHRyaWdnZXJTY3JvbGwgPSBmYWxzZTsKICBWdWUubmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgaW5zdGFuY2VzLmZvckVhY2goZnVuY3Rpb24gKGluc3RhbmNlLCBpKSB7CiAgICAgIGlmICghaW5zdGFuY2UgfHwgaW5zdGFuY2UuX2lzRGVzdHJveWVkKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGlmIChpbnN0YW5jZS5jb25zdHJ1Y3Rvci5fZGF0YVJlZnJlc2ggJiYgQ29tcG9uZW50c1tpXSA9PT0gaW5zdGFuY2UuY29uc3RydWN0b3IgJiYgaW5zdGFuY2UuJHZub2RlLmRhdGEua2VlcEFsaXZlICE9PSB0cnVlICYmIHR5cGVvZiBpbnN0YW5jZS5jb25zdHJ1Y3Rvci5vcHRpb25zLmRhdGEgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICB2YXIgbmV3RGF0YSA9IGluc3RhbmNlLmNvbnN0cnVjdG9yLm9wdGlvbnMuZGF0YS5jYWxsKGluc3RhbmNlKTsKICAgICAgICBmb3IgKHZhciBrZXkgaW4gbmV3RGF0YSkgewogICAgICAgICAgVnVlLnNldChpbnN0YW5jZS4kZGF0YSwga2V5LCBuZXdEYXRhW2tleV0pOwogICAgICAgIH0KICAgICAgICB0cmlnZ2VyU2Nyb2xsID0gdHJ1ZTsKICAgICAgfQogICAgfSk7CiAgICBpZiAodHJpZ2dlclNjcm9sbCkgewogICAgICAvLyBFbnN1cmUgdG8gdHJpZ2dlciBzY3JvbGwgZXZlbnQgYWZ0ZXIgY2FsbGluZyBzY3JvbGxCZWhhdmlvcgogICAgICB3aW5kb3cuJG51eHQuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICB3aW5kb3cuJG51eHQuJGVtaXQoJ3RyaWdnZXJTY3JvbGwnKTsKICAgICAgfSk7CiAgICB9CiAgICBjaGVja0ZvckVycm9ycyhfdGhpczIpOwoKICAgIC8vIEhvdCByZWxvYWRpbmcKICAgIGlmIChpc0RldikgewogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gaG90UmVsb2FkQVBJKF90aGlzMik7CiAgICAgIH0sIDEwMCk7CiAgICB9CiAgfSk7Cn0KZnVuY3Rpb24gbnV4dFJlYWR5KF9hcHApIHsKICB3aW5kb3cub25OdXh0UmVhZHlDYnMuZm9yRWFjaChmdW5jdGlvbiAoY2IpIHsKICAgIGlmICh0eXBlb2YgY2IgPT09ICdmdW5jdGlvbicpIHsKICAgICAgY2IoX2FwcCk7CiAgICB9CiAgfSk7CiAgLy8gU3BlY2lhbCBKU0RPTQogIGlmICh0eXBlb2Ygd2luZG93Ll9vbk51eHRMb2FkZWQgPT09ICdmdW5jdGlvbicpIHsKICAgIHdpbmRvdy5fb25OdXh0TG9hZGVkKF9hcHApOwogIH0KICAvLyBBZGQgcm91dGVyIGhvb2tzCiAgcm91dGVyLmFmdGVyRWFjaChmdW5jdGlvbiAodG8sIGZyb20pIHsKICAgIC8vIFdhaXQgZm9yIGZpeFByZXBhdGNoICsgJGRhdGEgdXBkYXRlcwogICAgVnVlLm5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIF9hcHAuJG51eHQuJGVtaXQoJ3JvdXRlQ2hhbmdlZCcsIHRvLCBmcm9tKTsKICAgIH0pOwogIH0pOwp9CnZhciBub29wRGF0YSA9IGZ1bmN0aW9uIG5vb3BEYXRhKCkgewogIHJldHVybiB7fTsKfTsKdmFyIG5vb3BGZXRjaCA9IGZ1bmN0aW9uIG5vb3BGZXRjaCgpIHt9OwoKLy8gU3BlY2lhbCBob3QgcmVsb2FkIHdpdGggYXN5bmNEYXRhKGNvbnRleHQpCmZ1bmN0aW9uIGdldE51eHRDaGlsZENvbXBvbmVudHMoJHBhcmVudCkgewogIHZhciAkY29tcG9uZW50cyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogW107CiAgJHBhcmVudC4kY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoJGNoaWxkKSB7CiAgICBpZiAoJGNoaWxkLiR2bm9kZSAmJiAkY2hpbGQuJHZub2RlLmRhdGEubnV4dENoaWxkICYmICEkY29tcG9uZW50cy5maW5kKGZ1bmN0aW9uIChjKSB7CiAgICAgIHJldHVybiBjLiRvcHRpb25zLl9fZmlsZSA9PT0gJGNoaWxkLiRvcHRpb25zLl9fZmlsZTsKICAgIH0pKSB7CiAgICAgICRjb21wb25lbnRzLnB1c2goJGNoaWxkKTsKICAgIH0KICAgIGlmICgkY2hpbGQuJGNoaWxkcmVuICYmICRjaGlsZC4kY2hpbGRyZW4ubGVuZ3RoKSB7CiAgICAgIGdldE51eHRDaGlsZENvbXBvbmVudHMoJGNoaWxkLCAkY29tcG9uZW50cyk7CiAgICB9CiAgfSk7CiAgcmV0dXJuICRjb21wb25lbnRzOwp9CmZ1bmN0aW9uIGhvdFJlbG9hZEFQSShfYXBwKSB7CiAgaWYgKCFtb2R1bGUuaG90KSB7CiAgICByZXR1cm47CiAgfQogIHZhciAkY29tcG9uZW50cyA9IGdldE51eHRDaGlsZENvbXBvbmVudHMoX2FwcC4kbnV4dCwgW10pOwogICRjb21wb25lbnRzLmZvckVhY2goYWRkSG90UmVsb2FkLmJpbmQoX2FwcCkpOwp9CmZ1bmN0aW9uIGFkZEhvdFJlbG9hZCgkY29tcG9uZW50LCBkZXB0aCkgewogIHZhciBfdGhpczMgPSB0aGlzOwogIGlmICgkY29tcG9uZW50LiR2bm9kZS5kYXRhLl9oYXNIb3RSZWxvYWQpIHsKICAgIHJldHVybjsKICB9CiAgJGNvbXBvbmVudC4kdm5vZGUuZGF0YS5faGFzSG90UmVsb2FkID0gdHJ1ZTsKICB2YXIgX2ZvcmNlVXBkYXRlID0gJGNvbXBvbmVudC4kZm9yY2VVcGRhdGUuYmluZCgkY29tcG9uZW50LiRwYXJlbnQpOwogICRjb21wb25lbnQuJHZub2RlLmNvbnRleHQuJGZvcmNlVXBkYXRlID0gLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgdmFyIENvbXBvbmVudHMsIENvbXBvbmVudCwgcHJvbWlzZXMsIG5leHQsIGNvbnRleHQ7CiAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIENvbXBvbmVudHMgPSBnZXRNYXRjaGVkQ29tcG9uZW50cyhyb3V0ZXIuY3VycmVudFJvdXRlKTsKICAgICAgICAgIENvbXBvbmVudCA9IENvbXBvbmVudHNbZGVwdGhdOwogICAgICAgICAgaWYgKENvbXBvbmVudCkgewogICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDQ7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIF9mb3JjZVVwZGF0ZSgpKTsKICAgICAgICBjYXNlIDQ6CiAgICAgICAgICBpZiAoX3R5cGVvZihDb21wb25lbnQpID09PSAnb2JqZWN0JyAmJiAhQ29tcG9uZW50Lm9wdGlvbnMpIHsKICAgICAgICAgICAgLy8gVXBkYXRlZCB2aWEgdnVlLXJvdXRlciByZXNvbHZlQXN5bmNDb21wb25lbnRzKCkKICAgICAgICAgICAgQ29tcG9uZW50ID0gVnVlLmV4dGVuZChDb21wb25lbnQpOwogICAgICAgICAgICBDb21wb25lbnQuX0N0b3IgPSBDb21wb25lbnQ7CiAgICAgICAgICB9CiAgICAgICAgICBfdGhpczMuZXJyb3IoKTsKICAgICAgICAgIHByb21pc2VzID0gW107CiAgICAgICAgICBuZXh0ID0gZnVuY3Rpb24gbmV4dChwYXRoKSB7CiAgICAgICAgICAgIHRoaXMuJGxvYWRpbmcuZmluaXNoICYmIHRoaXMuJGxvYWRpbmcuZmluaXNoKCk7CiAgICAgICAgICAgIHJvdXRlci5wdXNoKHBhdGgpOwogICAgICAgICAgfTsKICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTA7CiAgICAgICAgICByZXR1cm4gc2V0Q29udGV4dChhcHAsIHsKICAgICAgICAgICAgcm91dGU6IHJvdXRlci5jdXJyZW50Um91dGUsCiAgICAgICAgICAgIGlzSE1SOiB0cnVlLAogICAgICAgICAgICBuZXh0OiBuZXh0LmJpbmQoX3RoaXMzKQogICAgICAgICAgfSk7CiAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNvbnRleHQgPSBhcHAuY29udGV4dDsKICAgICAgICAgIGlmIChfdGhpczMuJGxvYWRpbmcuc3RhcnQgJiYgIV90aGlzMy4kbG9hZGluZy5tYW51YWwpIHsKICAgICAgICAgICAgX3RoaXMzLiRsb2FkaW5nLnN0YXJ0KCk7CiAgICAgICAgICB9CiAgICAgICAgICBjYWxsTWlkZGxld2FyZS5jYWxsKF90aGlzMywgQ29tcG9uZW50cywgY29udGV4dCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiBjYWxsTWlkZGxld2FyZS5jYWxsKF90aGlzMywgQ29tcG9uZW50cywgY29udGV4dCk7CiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgLy8gQ2FsbCBhc3luY0RhdGEoY29udGV4dCkKICAgICAgICAgICAgdmFyIHBBc3luY0RhdGEgPSBwcm9taXNpZnkoQ29tcG9uZW50Lm9wdGlvbnMuYXN5bmNEYXRhIHx8IG5vb3BEYXRhLCBjb250ZXh0KTsKICAgICAgICAgICAgcEFzeW5jRGF0YS50aGVuKGZ1bmN0aW9uIChhc3luY0RhdGFSZXN1bHQpIHsKICAgICAgICAgICAgICBhcHBseUFzeW5jRGF0YShDb21wb25lbnQsIGFzeW5jRGF0YVJlc3VsdCk7CiAgICAgICAgICAgICAgX3RoaXMzLiRsb2FkaW5nLmluY3JlYXNlICYmIF90aGlzMy4kbG9hZGluZy5pbmNyZWFzZSgzMCk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBwcm9taXNlcy5wdXNoKHBBc3luY0RhdGEpOwoKICAgICAgICAgICAgLy8gQ2FsbCBmZXRjaCgpCiAgICAgICAgICAgIENvbXBvbmVudC5vcHRpb25zLmZldGNoID0gQ29tcG9uZW50Lm9wdGlvbnMuZmV0Y2ggfHwgbm9vcEZldGNoOwogICAgICAgICAgICB2YXIgcEZldGNoID0gQ29tcG9uZW50Lm9wdGlvbnMuZmV0Y2gubGVuZ3RoICYmIENvbXBvbmVudC5vcHRpb25zLmZldGNoKGNvbnRleHQpOwogICAgICAgICAgICBpZiAoIXBGZXRjaCB8fCAhKHBGZXRjaCBpbnN0YW5jZW9mIFByb21pc2UpICYmIHR5cGVvZiBwRmV0Y2gudGhlbiAhPT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgICAgIHBGZXRjaCA9IFByb21pc2UucmVzb2x2ZShwRmV0Y2gpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHBGZXRjaC50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLiRsb2FkaW5nLmluY3JlYXNlICYmIF90aGlzMy4kbG9hZGluZy5pbmNyZWFzZSgzMCk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBwcm9taXNlcy5wdXNoKHBGZXRjaCk7CiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7CiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXMzLiRsb2FkaW5nLmZpbmlzaCAmJiBfdGhpczMuJGxvYWRpbmcuZmluaXNoKCk7CiAgICAgICAgICAgIF9mb3JjZVVwZGF0ZSgpOwogICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICByZXR1cm4gaG90UmVsb2FkQVBJKF90aGlzMyk7CiAgICAgICAgICAgIH0sIDEwMCk7CiAgICAgICAgICB9KTsKICAgICAgICBjYXNlIDEzOgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgfQogICAgfSwgX2NhbGxlZTMpOwogIH0pKTsKfQpmdW5jdGlvbiBtb3VudEFwcChfeDE1KSB7CiAgcmV0dXJuIF9tb3VudEFwcC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CmZ1bmN0aW9uIF9tb3VudEFwcCgpIHsKICBfbW91bnRBcHAgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNihfX2FwcCkgewogICAgdmFyIF9hcHAsIG1vdW50LCBDb21wb25lbnRzLCBjbGllbnRGaXJzdE1vdW50OwogICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNiQoX2NvbnRleHQ2KSB7CiAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Ni5wcmV2ID0gX2NvbnRleHQ2Lm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICAvLyBTZXQgZ2xvYmFsIHZhcmlhYmxlcwogICAgICAgICAgYXBwID0gX19hcHAuYXBwOwogICAgICAgICAgcm91dGVyID0gX19hcHAucm91dGVyOwoKICAgICAgICAgIC8vIENyZWF0ZSBWdWUgaW5zdGFuY2UKICAgICAgICAgIF9hcHAgPSBuZXcgVnVlKGFwcCk7IC8vIE1vdW50cyBWdWUgYXBwIHRvIERPTSBlbGVtZW50CiAgICAgICAgICBtb3VudCA9IGZ1bmN0aW9uIG1vdW50KCkgewogICAgICAgICAgICBfYXBwLiRtb3VudCgnI2FwcCcpOwoKICAgICAgICAgICAgLy8gQWRkIGFmdGVyRWFjaCByb3V0ZXIgaG9va3MKICAgICAgICAgICAgcm91dGVyLmFmdGVyRWFjaChub3JtYWxpemVDb21wb25lbnRzKTsKICAgICAgICAgICAgcm91dGVyLmFmdGVyRWFjaChmaXhQcmVwYXRjaC5iaW5kKF9hcHApKTsKCiAgICAgICAgICAgIC8vIExpc3RlbiBmb3IgZmlyc3QgVnVlIHVwZGF0ZQogICAgICAgICAgICBWdWUubmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgIC8vIENhbGwgd2luZG93Lnt7Z2xvYmFscy5yZWFkeUNhbGxiYWNrfX0gY2FsbGJhY2tzCiAgICAgICAgICAgICAgbnV4dFJlYWR5KF9hcHApOwogICAgICAgICAgICAgIGlmIChpc0RldikgewogICAgICAgICAgICAgICAgLy8gRW5hYmxlIGhvdCByZWxvYWRpbmcKICAgICAgICAgICAgICAgIGhvdFJlbG9hZEFQSShfYXBwKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfTsgLy8gUmVzb2x2ZSByb3V0ZSBjb21wb25lbnRzCiAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDY7CiAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwocmVzb2x2ZUNvbXBvbmVudHMoYXBwLmNvbnRleHQucm91dGUpKTsKICAgICAgICBjYXNlIDY6CiAgICAgICAgICBDb21wb25lbnRzID0gX2NvbnRleHQ2LnNlbnQ7CiAgICAgICAgICBpZiAoQ29tcG9uZW50cy5sZW5ndGgpIHsKICAgICAgICAgICAgX2xhc3RQYXRocyA9IHJvdXRlci5jdXJyZW50Um91dGUubWF0Y2hlZC5tYXAoZnVuY3Rpb24gKHJvdXRlKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGNvbXBpbGUocm91dGUucGF0aCkocm91dGVyLmN1cnJlbnRSb3V0ZS5wYXJhbXMpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KCiAgICAgICAgICAvLyBJbml0aWFsaXplIGVycm9yIGhhbmRsZXIKICAgICAgICAgIF9hcHAuJGxvYWRpbmcgPSB7fTsgLy8gVG8gYXZvaWQgZXJyb3Igd2hpbGUgX2FwcC4kbnV4dCBkb2VzIG5vdCBleGlzdAogICAgICAgICAgaWYgKE5VWFQuZXJyb3IpIHsKICAgICAgICAgICAgX2FwcC5lcnJvcihOVVhULmVycm9yKTsKICAgICAgICAgIH0KCiAgICAgICAgICAvLyBBZGQgYmVmb3JlRWFjaCByb3V0ZXIgaG9va3MKICAgICAgICAgIHJvdXRlci5iZWZvcmVFYWNoKGxvYWRBc3luY0NvbXBvbmVudHMuYmluZChfYXBwKSk7CiAgICAgICAgICByb3V0ZXIuYmVmb3JlRWFjaChyZW5kZXIuYmluZChfYXBwKSk7CgogICAgICAgICAgLy8gRml4IGluIHN0YXRpYzogcmVtb3ZlIHRyYWlsaW5nIHNsYXNoIHRvIGZvcmNlIGh5ZHJhdGlvbgogICAgICAgICAgLy8gRnVsbCBzdGF0aWMsIGlmIHNlcnZlci1yZW5kZXJlZDogaHlkcmF0ZSwgdG8gYWxsb3cgY3VzdG9tIHJlZGlyZWN0IHRvIGdlbmVyYXRlZCBwYWdlCgogICAgICAgICAgLy8gRml4IGluIHN0YXRpYzogcmVtb3ZlIHRyYWlsaW5nIHNsYXNoIHRvIGZvcmNlIGh5ZHJhdGlvbgogICAgICAgICAgaWYgKCEoTlVYVC5zZXJ2ZXJSZW5kZXJlZCAmJiBpc1NhbWVQYXRoKE5VWFQucm91dGVQYXRoLCBfYXBwLmNvbnRleHQucm91dGUucGF0aCkpKSB7CiAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gMTQ7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5hYnJ1cHQoInJldHVybiIsIG1vdW50KCkpOwogICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAvLyBGaXJzdCByZW5kZXIgb24gY2xpZW50LXNpZGUKICAgICAgICAgIGNsaWVudEZpcnN0TW91bnQgPSBmdW5jdGlvbiBjbGllbnRGaXJzdE1vdW50KCkgewogICAgICAgICAgICBub3JtYWxpemVDb21wb25lbnRzKHJvdXRlci5jdXJyZW50Um91dGUsIHJvdXRlci5jdXJyZW50Um91dGUpOwogICAgICAgICAgICBjaGVja0ZvckVycm9ycyhfYXBwKTsKICAgICAgICAgICAgLy8gRG9uJ3QgY2FsbCBmaXhQcmVwYXRjaC5jYWxsKF9hcHAsIHJvdXRlci5jdXJyZW50Um91dGUsIHJvdXRlci5jdXJyZW50Um91dGUpIHNpbmNlIGl0J3MgZmlyc3QgcmVuZGVyCiAgICAgICAgICAgIG1vdW50KCk7CiAgICAgICAgICB9OyAvLyBmaXg6IGZvcmNlIG5leHQgdGljayB0byBhdm9pZCBoYXZpbmcgc2FtZSB0aW1lc3RhbXAgd2hlbiBhbiBlcnJvciBoYXBwZW4gb24gc3BhIGZhbGxiYWNrCiAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDE3OwogICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgICAgIHJldHVybiBzZXRUaW1lb3V0KHJlc29sdmUsIDApOwogICAgICAgICAgfSk7CiAgICAgICAgY2FzZSAxNzoKICAgICAgICAgIHJlbmRlci5jYWxsKF9hcHAsIHJvdXRlci5jdXJyZW50Um91dGUsIHJvdXRlci5jdXJyZW50Um91dGUsIGZ1bmN0aW9uIChwYXRoKSB7CiAgICAgICAgICAgIC8vIElmIG5vdCByZWRpcmVjdGVkCiAgICAgICAgICAgIGlmICghcGF0aCkgewogICAgICAgICAgICAgIGNsaWVudEZpcnN0TW91bnQoKTsKICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIEFkZCBhIG9uZS10aW1lIGFmdGVyRWFjaCBob29rIHRvCiAgICAgICAgICAgIC8vIG1vdW50IHRoZSBhcHAgd2FpdCBmb3IgcmVkaXJlY3QgYW5kIHJvdXRlIGdldHMgcmVzb2x2ZWQKICAgICAgICAgICAgdmFyIHVucmVnaXN0ZXJIb29rID0gcm91dGVyLmFmdGVyRWFjaChmdW5jdGlvbiAodG8sIGZyb20pIHsKICAgICAgICAgICAgICB1bnJlZ2lzdGVySG9vaygpOwogICAgICAgICAgICAgIGNsaWVudEZpcnN0TW91bnQoKTsKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAvLyBQdXNoIHRoZSBwYXRoIGFuZCBsZXQgcm91dGUgdG8gYmUgcmVzb2x2ZWQKICAgICAgICAgICAgcm91dGVyLnB1c2gocGF0aCwgdW5kZWZpbmVkLCBmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICAgICAgaWYgKGVycikgewogICAgICAgICAgICAgICAgZXJyb3JIYW5kbGVyKGVycik7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pOwogICAgICAgIGNhc2UgMTg6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dDYuc3RvcCgpOwogICAgICB9CiAgICB9LCBfY2FsbGVlNik7CiAgfSkpOwogIHJldHVybiBfbW91bnRBcHAuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQ=="},{"version":3,"names":["Vue","fetch","middleware","applyAsyncData","promisify","middlewareSeries","sanitizeComponent","resolveRouteComponents","getMatchedComponents","getMatchedComponentsInstances","flatMapComponents","setContext","compile","getQueryDiff","globalHandleError","isSamePath","urlJoin","createApp","fetchMixin","NuxtLink","isDev","process","env","dev","debug","__nuxt__fetch__mixin__","mixin","component","name","global","_lastPaths","app","router","NUXT","window","__NUXT__","$config","nuxt","publicRuntimeConfig","_app","__webpack_public_path__","cdnURL","assetsPath","Object","assign","config","silent","performance","logs","length","ssrLogStyle","console","group","forEach","logObj","type","log","apply","_toConsumableArray","args","groupEnd","$nuxt","defaultErrorHandler","errorHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","err","vm","info","handled","_len","rest","_key","nuxtApp","currentApp","_args","arguments","wrap","_callee$","_context","prev","next","Array","concat","abrupt","$root","keys","find","nuxtInstance","error","NODE_ENV","message","stop","_x","_x2","_x3","then","mountApp","catch","loadAsyncComponents","_x4","_x5","_x6","_loadAsyncComponents","_callee4","to","from","_this4","Components","startLoader","statusCode","_callee4$","_context4","_routeChanged","Boolean","_paramChanged","path","_queryChanged","fullPath","_diffQuery","query","$loading","start","manual","Component","instance","sent","some","_ref4","watchQuery","options","isArray","key","t0","status","response","test","location","reload","$emit","resolveComponents","route","_ref2","_callee2","_","match","index","_callee2$","_context2","_Ctor","components","_x7","_x8","_x9","_x10","_x11","callMiddleware","context","_this","midd","unknownMiddleware","map","render","_x12","_x13","_x14","_render","_callee5","_this5","fromMatches","nextCalled","_next","matches","isValid","_iterator","_step","instances","_callee5$","_context5","i","matched","params","finish","pause","bind","_dateLastError","dateErr","_hadError","call","asyncData","_errored","_createForOfIteratorHelper","s","n","done","value","validate","e","f","t1","Promise","all","_path","_dataRefresh","childPathChanged","watchParam","_isMounted","promises","hasAsyncData","hasFetch","loadingIncrease","promise","asyncDataResult","increase","push","loading","p","resolve","fetchResult","t2","normalizeComponents","___","_typeof","extend","checkForErrors","$options","fixPrepatch","_this2","triggerScroll","nextTick","_isDestroyed","constructor","$vnode","data","keepAlive","newData","set","$data","$nextTick","setTimeout","hotReloadAPI","nuxtReady","onNuxtReadyCbs","cb","_onNuxtLoaded","afterEach","noopData","noopFetch","getNuxtChildComponents","$parent","$components","undefined","$children","$child","nuxtChild","c","__file","module","hot","addHotReload","$component","depth","_this3","_hasHotReload","_forceUpdate","$forceUpdate","_callee3","_callee3$","_context3","currentRoute","isHMR","pAsyncData","pFetch","_x15","_mountApp","_callee6","__app","mount","clientFirstMount","_callee6$","_context6","$mount","beforeEach","serverRendered","routePath","unregisterHook"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/initialize/client.js"],"sourcesContent":["// Taken from @nuxt/vue-app/template/client.js\n\nimport Vue from 'vue';\nimport fetch from 'unfetch';\nimport middleware from '../config/middleware.js';\nimport {\n  applyAsyncData,\n  promisify,\n  middlewareSeries,\n  sanitizeComponent,\n  resolveRouteComponents,\n  getMatchedComponents,\n  getMatchedComponentsInstances,\n  flatMapComponents,\n  setContext,\n  compile,\n  getQueryDiff,\n  globalHandleError,\n  isSamePath,\n  urlJoin\n} from '../utils/nuxt.js';\nimport { createApp } from './index.js';\nimport fetchMixin from '../mixins/fetch.client';\nimport NuxtLink from '../components/nuxt/nuxt-link.client.js'; // should be included after ./index.js\n\n// Mimic old @nuxt/vue-app/template/client.js\nconst isDev = process.env.dev;\nconst debug = isDev;\n\n// Fetch mixin\nif (!Vue.__nuxt__fetch__mixin__) {\n  Vue.mixin(fetchMixin);\n  Vue.__nuxt__fetch__mixin__ = true;\n}\n\n// Component: <NuxtLink>\nVue.component(NuxtLink.name, NuxtLink);\nVue.component('NLink', NuxtLink);\n\nif (!global.fetch) {\n  global.fetch = fetch;\n}\n\n// Global shared references\nlet _lastPaths = [];\nlet app;\nlet router;\n\n// Try to rehydrate SSR data from window\nconst NUXT = window.__NUXT__ || {};\n\nconst $config = nuxt.publicRuntimeConfig || {}; // eslint-disable-line no-undef\n\nif ($config._app) {\n  __webpack_public_path__ = urlJoin($config._app.cdnURL, $config._app.assetsPath); // eslint-disable-line camelcase, no-undef\n}\n\nObject.assign(Vue.config, { silent: false, performance: true });\n\nif (debug) {\n  const logs = NUXT.logs || [];\n\n  if (logs.length > 0) {\n    const ssrLogStyle = 'background: #2E495E;border-radius: 0.5em;color: white;font-weight: bold;padding: 2px 0.5em;';\n\n    console.group && console.group('%cNuxt SSR', ssrLogStyle); // eslint-disable-line no-console\n    logs.forEach((logObj) => (console[logObj.type] || console.log)(...logObj.args)); // eslint-disable-line no-console\n    delete NUXT.logs;\n    console.groupEnd && console.groupEnd(); // eslint-disable-line no-console\n  }\n\n  // Setup global Vue error handler\n  if (!Vue.config.$nuxt) {\n    const defaultErrorHandler = Vue.config.errorHandler;\n\n    Vue.config.errorHandler = async(err, vm, info, ...rest) => {\n    // Call other handler if exist\n      let handled = null;\n\n      if (typeof defaultErrorHandler === 'function') {\n        handled = defaultErrorHandler(err, vm, info, ...rest);\n      }\n      if (handled === true) {\n        return handled;\n      }\n\n      if (vm && vm.$root) {\n        const nuxtApp = Object.keys(Vue.config.$nuxt)\n          .find((nuxtInstance) => vm.$root[nuxtInstance]);\n\n        // Show Nuxt Error Page\n        if (nuxtApp && vm.$root[nuxtApp].error && info !== 'render function') {\n          const currentApp = vm.$root[nuxtApp];\n\n          currentApp.error(err);\n        }\n      }\n\n      if (typeof defaultErrorHandler === 'function') {\n        return handled;\n      }\n\n      // Log to console\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(err); // eslint-disable-line no-console\n      } else {\n        console.error(err.message || err); // eslint-disable-line no-console\n      }\n    };\n    Vue.config.$nuxt = {};\n  }\n  Vue.config.$nuxt.$nuxt = true;\n}\n\nconst errorHandler = Vue.config.errorHandler || console.error; // eslint-disable-line no-console\n\n// Create and mount App\ncreateApp(nuxt.publicRuntimeConfig).then(mountApp).catch(errorHandler); // eslint-disable-line no-undef\n\nasync function loadAsyncComponents(to, from, next) {\n  // Check if route changed (this._routeChanged), only if the page is not an error (for validate())\n  this._routeChanged = Boolean(app.nuxt.err) || from.name !== to.name;\n  this._paramChanged = !this._routeChanged && from.path !== to.path;\n  this._queryChanged = !this._paramChanged && from.fullPath !== to.fullPath;\n  this._diffQuery = (this._queryChanged ? getQueryDiff(to.query, from.query) : []);\n\n  if ((this._routeChanged || this._paramChanged) && this.$loading.start && !this.$loading.manual) {\n    this.$loading.start();\n  }\n\n  try {\n    if (this._queryChanged) {\n      const Components = await resolveRouteComponents(\n        to,\n        (Component, instance) => ({ Component, instance })\n      );\n      // Add a marker on each component that it needs to refresh or not\n      const startLoader = Components.some(({ Component, instance }) => {\n        const watchQuery = Component.options.watchQuery;\n\n        if (watchQuery === true) {\n          return true;\n        }\n        if (Array.isArray(watchQuery)) {\n          return watchQuery.some((key) => this._diffQuery[key]);\n        }\n        if (typeof watchQuery === 'function') {\n          return watchQuery.apply(instance, [to.query, from.query]);\n        }\n\n        return false;\n      });\n\n      if (startLoader && this.$loading.start && !this.$loading.manual) {\n        this.$loading.start();\n      }\n    }\n    // Call next()\n    next();\n  } catch (error) {\n    const err = error || {};\n    const statusCode = err.statusCode || err.status || (err.response && err.response.status) || 500;\n    const message = err.message || '';\n\n    // Handle chunk loading errors\n    // This may be due to a new deployment or a network problem\n    if (/^Loading( CSS)? chunk (\\d)+ failed\\./.test(message)) {\n      window.location.reload(true /* skip cache */);\n\n      return; // prevent error page blinking for user\n    }\n\n    this.error({ statusCode, message });\n    this.$nuxt.$emit('routeChanged', to, from, err);\n    next();\n  }\n}\n\n// Get matched components\nfunction resolveComponents(route) {\n  return flatMapComponents(route, async(Component, _, match, key, index) => {\n    // If component is not resolved yet, resolve it\n    if (typeof Component === 'function' && !Component.options) {\n      Component = await Component();\n    }\n\n    // Sanitize it and save it\n    Component._Ctor = sanitizeComponent(Component);\n\n    match.components[key] = Component;\n\n    return Component;\n  });\n}\n\nfunction callMiddleware(Components, context) {\n  let midd = ['i18n'];\n  let unknownMiddleware = false;\n\n  Components.forEach((Component) => {\n    if (Component.options.middleware) {\n      midd = midd.concat(Component.options.middleware);\n    }\n  });\n\n  midd = midd.map((name) => {\n    if (typeof name === 'function') {\n      return name;\n    }\n    if (typeof middleware[name] !== 'function') {\n      unknownMiddleware = true;\n      this.error({ statusCode: 500, message: `Unknown middleware ${ name }` });\n    }\n\n    return middleware[name];\n  });\n\n  if (unknownMiddleware) {\n    return;\n  }\n\n  return middlewareSeries(midd, context);\n}\n\nasync function render(to, from, next) {\n  if (this._routeChanged === false && this._paramChanged === false && this._queryChanged === false) {\n    return next();\n  }\n\n  if (to === from) {\n    _lastPaths = [];\n  } else {\n    const fromMatches = [];\n\n    _lastPaths = getMatchedComponents(from, fromMatches).map((Component, i) => {\n      return compile(from.matched[fromMatches[i]].path)(from.params);\n    });\n  }\n\n  // nextCalled is true when redirected\n  let nextCalled = false;\n  const _next = (path) => {\n    if (from.path === path.path && this.$loading.finish) {\n      this.$loading.finish();\n    }\n\n    if (from.path !== path.path && this.$loading.pause) {\n      this.$loading.pause();\n    }\n\n    if (nextCalled) {\n      return;\n    }\n\n    nextCalled = true;\n    next(path);\n  };\n\n  // Update context\n  await setContext(app, {\n    route: to,\n    from,\n    next:  _next.bind(this)\n  });\n  this._dateLastError = app.nuxt.dateErr;\n  this._hadError = Boolean(app.nuxt.err);\n\n  // Get route's matched components\n  const matches = [];\n  const Components = getMatchedComponents(to, matches);\n\n  // If no Components matched, generate 404\n  if (!Components.length) {\n    // Call the authenticated middleware. This used to attempt to load the error layout but because it was missing it would:\n    // 1. load the default layout instead\n    // 2. then call the authenticated middleware\n    // 3. Authenticated middleware would then load plugins and check to see if there was a valid route and navigate to that if it existed\n    // 4. This would allow harvester cluster pages to load on page reload\n    // We should really make authenticated middleware do less...\n    await callMiddleware.call(this, [{ options: { middleware: ['authenticated'] } }], app.context);\n\n    if (nextCalled) {\n      return;\n    }\n\n    // Show error page\n    this.error({ statusCode: 404, message: 'This page could not be found' });\n\n    return next();\n  }\n\n  // Update ._data and other properties if hot reloaded\n  Components.forEach((Component) => {\n    if (Component._Ctor && Component._Ctor.options) {\n      Component.options.asyncData = Component._Ctor.options.asyncData;\n      Component.options.fetch = Component._Ctor.options.fetch;\n    }\n  });\n\n  try {\n    // Call middleware\n    await callMiddleware.call(this, Components, app.context);\n    if (nextCalled) {\n      return;\n    }\n    if (app.context._errored) {\n      return next();\n    }\n\n    // Call middleware for layout\n    await callMiddleware.call(this, Components, app.context);\n    if (nextCalled) {\n      return;\n    }\n    if (app.context._errored) {\n      return next();\n    }\n\n    // Call .validate()\n    let isValid = true;\n\n    try {\n      for (const Component of Components) {\n        if (typeof Component.options.validate !== 'function') {\n          continue;\n        }\n\n        isValid = await Component.options.validate(app.context);\n\n        if (!isValid) {\n          break;\n        }\n      }\n    } catch (validationError) {\n      // ...If .validate() threw an error\n      this.error({\n        statusCode: validationError.statusCode || '500',\n        message:    validationError.message\n      });\n\n      return next();\n    }\n\n    // ...If .validate() returned false\n    if (!isValid) {\n      this.error({ statusCode: 404, message: 'This page could not be found' });\n\n      return next();\n    }\n\n    let instances;\n\n    // Call asyncData & fetch hooks on components matched by the route.\n    await Promise.all(Components.map((Component, i) => {\n      // Check if only children route changed\n      Component._path = compile(to.matched[matches[i]].path)(to.params);\n      Component._dataRefresh = false;\n      const childPathChanged = Component._path !== _lastPaths[i];\n\n      // Refresh component (call asyncData & fetch) when:\n      // Route path changed part includes current component\n      // Or route param changed part includes current component and watchParam is not `false`\n      // Or route query is changed and watchQuery returns `true`\n      if (this._routeChanged && childPathChanged) {\n        Component._dataRefresh = true;\n      } else if (this._paramChanged && childPathChanged) {\n        const watchParam = Component.options.watchParam;\n\n        Component._dataRefresh = watchParam !== false;\n      } else if (this._queryChanged) {\n        const watchQuery = Component.options.watchQuery;\n\n        if (watchQuery === true) {\n          Component._dataRefresh = true;\n        } else if (Array.isArray(watchQuery)) {\n          Component._dataRefresh = watchQuery.some((key) => this._diffQuery[key]);\n        } else if (typeof watchQuery === 'function') {\n          if (!instances) {\n            instances = getMatchedComponentsInstances(to);\n          }\n          Component._dataRefresh = watchQuery.apply(instances[i], [to.query, from.query]);\n        }\n      }\n      if (!this._hadError && this._isMounted && !Component._dataRefresh) {\n        return;\n      }\n\n      const promises = [];\n\n      const hasAsyncData = (\n        Component.options.asyncData &&\n        typeof Component.options.asyncData === 'function'\n      );\n\n      const hasFetch = Boolean(Component.options.fetch) && Component.options.fetch.length;\n\n      const loadingIncrease = (hasAsyncData && hasFetch) ? 30 : 45;\n\n      // Call asyncData(context)\n      if (hasAsyncData) {\n        const promise = promisify(Component.options.asyncData, app.context);\n\n        promise.then((asyncDataResult) => {\n          applyAsyncData(Component, asyncDataResult);\n\n          if (this.$loading.increase) {\n            this.$loading.increase(loadingIncrease);\n          }\n        });\n        promises.push(promise);\n      }\n\n      // Check disabled page loading\n      this.$loading.manual = Component.options.loading === false;\n\n      // Call fetch(context)\n      if (hasFetch) {\n        let p = Component.options.fetch(app.context);\n\n        if (!p || (!(p instanceof Promise) && (typeof p.then !== 'function'))) {\n          p = Promise.resolve(p);\n        }\n        p.then((fetchResult) => {\n          if (this.$loading.increase) {\n            this.$loading.increase(loadingIncrease);\n          }\n        });\n        promises.push(p);\n      }\n\n      return Promise.all(promises);\n    }));\n\n    // If not redirected\n    if (!nextCalled) {\n      if (this.$loading.finish && !this.$loading.manual) {\n        this.$loading.finish();\n      }\n\n      next();\n    }\n  } catch (err) {\n    const error = err || {};\n\n    if (error.message === 'ERR_REDIRECT') {\n      return this.$nuxt.$emit('routeChanged', to, from, error);\n    }\n    _lastPaths = [];\n\n    globalHandleError(error);\n\n    this.error(error);\n    this.$nuxt.$emit('routeChanged', to, from, error);\n    next();\n  }\n}\n\n// Fix components format in matched, it's due to code-splitting of vue-router\nfunction normalizeComponents(to, ___) {\n  flatMapComponents(to, (Component, _, match, key) => {\n    if (typeof Component === 'object' && !Component.options) {\n      // Updated via vue-router resolveAsyncComponents()\n      Component = Vue.extend(Component);\n      Component._Ctor = Component;\n      match.components[key] = Component;\n    }\n\n    return Component;\n  });\n}\n\nfunction checkForErrors(app) {\n  // Hide error component if no error\n  if (app._hadError && app._dateLastError === app.$options.nuxt.dateErr) {\n    app.error();\n  }\n}\n\n// When navigating on a different route but the same component is used, Vue.js\n// Will not update the instance data, so we have to update $data ourselves\nfunction fixPrepatch(to, ___) {\n  if (this._routeChanged === false && this._paramChanged === false && this._queryChanged === false) {\n    return;\n  }\n\n  const instances = getMatchedComponentsInstances(to);\n  const Components = getMatchedComponents(to);\n\n  let triggerScroll = false;\n\n  Vue.nextTick(() => {\n    instances.forEach((instance, i) => {\n      if (!instance || instance._isDestroyed) {\n        return;\n      }\n\n      if (\n        instance.constructor._dataRefresh &&\n        Components[i] === instance.constructor &&\n        instance.$vnode.data.keepAlive !== true &&\n        typeof instance.constructor.options.data === 'function'\n      ) {\n        const newData = instance.constructor.options.data.call(instance);\n\n        for (const key in newData) {\n          Vue.set(instance.$data, key, newData[key]);\n        }\n\n        triggerScroll = true;\n      }\n    });\n\n    if (triggerScroll) {\n      // Ensure to trigger scroll event after calling scrollBehavior\n      window.$nuxt.$nextTick(() => {\n        window.$nuxt.$emit('triggerScroll');\n      });\n    }\n\n    checkForErrors(this);\n\n    // Hot reloading\n    if (isDev) {\n      setTimeout(() => hotReloadAPI(this), 100);\n    }\n  });\n}\n\nfunction nuxtReady(_app) {\n  window.onNuxtReadyCbs.forEach((cb) => {\n    if (typeof cb === 'function') {\n      cb(_app);\n    }\n  });\n  // Special JSDOM\n  if (typeof window._onNuxtLoaded === 'function') {\n    window._onNuxtLoaded(_app);\n  }\n  // Add router hooks\n  router.afterEach((to, from) => {\n    // Wait for fixPrepatch + $data updates\n    Vue.nextTick(() => _app.$nuxt.$emit('routeChanged', to, from));\n  });\n}\n\nconst noopData = () => {\n  return {};\n};\nconst noopFetch = () => {};\n\n// Special hot reload with asyncData(context)\nfunction getNuxtChildComponents($parent, $components = []) {\n  $parent.$children.forEach(($child) => {\n    if ($child.$vnode && $child.$vnode.data.nuxtChild && !$components.find((c) => (c.$options.__file === $child.$options.__file))) {\n      $components.push($child);\n    }\n    if ($child.$children && $child.$children.length) {\n      getNuxtChildComponents($child, $components);\n    }\n  });\n\n  return $components;\n}\n\nfunction hotReloadAPI(_app) {\n  if (!module.hot) {\n    return;\n  }\n\n  const $components = getNuxtChildComponents(_app.$nuxt, []);\n\n  $components.forEach(addHotReload.bind(_app));\n}\n\nfunction addHotReload($component, depth) {\n  if ($component.$vnode.data._hasHotReload) {\n    return;\n  }\n  $component.$vnode.data._hasHotReload = true;\n\n  const _forceUpdate = $component.$forceUpdate.bind($component.$parent);\n\n  $component.$vnode.context.$forceUpdate = async() => {\n    const Components = getMatchedComponents(router.currentRoute);\n    let Component = Components[depth];\n\n    if (!Component) {\n      return _forceUpdate();\n    }\n    if (typeof Component === 'object' && !Component.options) {\n      // Updated via vue-router resolveAsyncComponents()\n      Component = Vue.extend(Component);\n      Component._Ctor = Component;\n    }\n    this.error();\n    const promises = [];\n    const next = function(path) {\n      this.$loading.finish && this.$loading.finish();\n      router.push(path);\n    };\n\n    await setContext(app, {\n      route: router.currentRoute,\n      isHMR: true,\n      next:  next.bind(this)\n    });\n    const context = app.context;\n\n    if (this.$loading.start && !this.$loading.manual) {\n      this.$loading.start();\n    }\n\n    callMiddleware.call(this, Components, context)\n      .then(() => {\n        return callMiddleware.call(this, Components, context);\n      })\n\n      .then(() => {\n      // Call asyncData(context)\n        const pAsyncData = promisify(Component.options.asyncData || noopData, context);\n\n        pAsyncData.then((asyncDataResult) => {\n          applyAsyncData(Component, asyncDataResult);\n          this.$loading.increase && this.$loading.increase(30);\n        });\n        promises.push(pAsyncData);\n\n        // Call fetch()\n        Component.options.fetch = Component.options.fetch || noopFetch;\n        let pFetch = Component.options.fetch.length && Component.options.fetch(context);\n\n        if (!pFetch || (!(pFetch instanceof Promise) && (typeof pFetch.then !== 'function'))) {\n          pFetch = Promise.resolve(pFetch);\n        }\n        pFetch.then(() => this.$loading.increase && this.$loading.increase(30));\n        promises.push(pFetch);\n\n        return Promise.all(promises);\n      })\n      .then(() => {\n        this.$loading.finish && this.$loading.finish();\n        _forceUpdate();\n        setTimeout(() => hotReloadAPI(this), 100);\n      });\n  };\n}\n\nasync function mountApp(__app) {\n  // Set global variables\n  app = __app.app;\n  router = __app.router;\n\n  // Create Vue instance\n  const _app = new Vue(app);\n\n  // Mounts Vue app to DOM element\n  const mount = () => {\n    _app.$mount('#app');\n\n    // Add afterEach router hooks\n    router.afterEach(normalizeComponents);\n\n    router.afterEach(fixPrepatch.bind(_app));\n\n    // Listen for first Vue update\n    Vue.nextTick(() => {\n      // Call window.{{globals.readyCallback}} callbacks\n      nuxtReady(_app);\n\n      if (isDev) {\n        // Enable hot reloading\n        hotReloadAPI(_app);\n      }\n    });\n  };\n\n  // Resolve route components\n  const Components = await Promise.all(resolveComponents(app.context.route));\n\n  if (Components.length) {\n    _lastPaths = router.currentRoute.matched.map((route) => compile(route.path)(router.currentRoute.params));\n  }\n\n  // Initialize error handler\n  _app.$loading = {}; // To avoid error while _app.$nuxt does not exist\n  if (NUXT.error) {\n    _app.error(NUXT.error);\n  }\n\n  // Add beforeEach router hooks\n  router.beforeEach(loadAsyncComponents.bind(_app));\n  router.beforeEach(render.bind(_app));\n\n  // Fix in static: remove trailing slash to force hydration\n  // Full static, if server-rendered: hydrate, to allow custom redirect to generated page\n\n  // Fix in static: remove trailing slash to force hydration\n  if (NUXT.serverRendered && isSamePath(NUXT.routePath, _app.context.route.path)) {\n    return mount();\n  }\n\n  // First render on client-side\n  const clientFirstMount = () => {\n    normalizeComponents(router.currentRoute, router.currentRoute);\n    checkForErrors(_app);\n    // Don't call fixPrepatch.call(_app, router.currentRoute, router.currentRoute) since it's first render\n    mount();\n  };\n\n  // fix: force next tick to avoid having same timestamp when an error happen on spa fallback\n  await new Promise((resolve) => setTimeout(resolve, 0));\n  render.call(_app, router.currentRoute, router.currentRoute, (path) => {\n    // If not redirected\n    if (!path) {\n      clientFirstMount();\n\n      return;\n    }\n\n    // Add a one-time afterEach hook to\n    // mount the app wait for redirect and route gets resolved\n    const unregisterHook = router.afterEach((to, from) => {\n      unregisterHook();\n      clientFirstMount();\n    });\n\n    // Push the path and let route to be resolved\n    router.push(path, undefined, (err) => {\n      if (err) {\n        errorHandler(err);\n      }\n    });\n  });\n}\n"],"mappings":"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","ignoreList":[]}]}