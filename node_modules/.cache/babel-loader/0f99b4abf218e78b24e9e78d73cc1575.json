{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/resources.cattle.io.restore.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/resources.cattle.io.restore.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["CruResource","createEditView","LabeledInput","UnitInput","Checkbox","LabeledSelect","Loading","RadioGroup","S3","mapGetters","SECRET","BACKUP_RESTORE","CATALOG","allHash","get","_CREATE","formatEncryptionSecretNames","components","mixins","props","value","type","Object","default","_default","mode","String","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","hash","wrap","_callee$","_context","prev","next","$store","dispatch","secrets","backups","BACKUP","apps","APP","sent","allSecrets","allBackups","stop","data","_this$value","spec","$set","prune","deleteTimeoutSeconds","metadata","name","generateName","s3","storageSource","storageLocation","targetBackup","computed","_objectSpread","isClone","liveValue","id","availableBackups","filter","backup","state","chartNamespace","BRORelease","release","namespace","encryptionSecretNames","isEncrypted","backupFilename","match","radioOptions","options","labels","t","length","unshift","validationPassed","hasBackupFile","hasEncryption","encryptionConfigSecretName","targetBackupFilename","watch","neu","old","updateTargetBackup","methods","_neu$status","_neu$spec","out","status","filename","includes"],"sources":["node_modules/@rancher/shell/edit/resources.cattle.io.restore.vue"],"sourcesContent":["<script>\nimport CruResource from '@shell/components/CruResource';\nimport createEditView from '@shell/mixins/create-edit-view';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport Loading from '@shell/components/Loading';\nimport { RadioGroup } from '@components/Form/Radio';\nimport S3 from '@shell/chart/rancher-backup/S3';\nimport { mapGetters } from 'vuex';\nimport { SECRET, BACKUP_RESTORE, CATALOG } from '@shell/config/types';\nimport { allHash } from '@shell/utils/promise';\nimport { get } from '@shell/utils/object';\nimport { _CREATE } from '@shell/config/query-params';\nimport { formatEncryptionSecretNames } from '@shell/utils/formatter';\n\nexport default {\n\n  components: {\n    CruResource,\n    UnitInput,\n    LabeledInput,\n    Checkbox,\n    S3,\n    LabeledSelect,\n    Loading,\n    RadioGroup,\n  },\n\n  mixins: [createEditView],\n\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    mode: {\n      type:    String,\n      default: 'create'\n    }\n  },\n\n  async fetch() {\n    await this.$store.dispatch('catalog/load');\n\n    const hash = await allHash({\n      secrets: this.$store.dispatch('cluster/findAll', { type: SECRET }),\n      backups: this.$store.dispatch('cluster/findAll', { type: BACKUP_RESTORE.BACKUP }),\n      apps:    this.$store.dispatch('cluster/findAll', { type: CATALOG.APP })\n    });\n\n    this.allSecrets = hash.secrets;\n    this.allBackups = hash.backups;\n    this.apps = hash.apps;\n  },\n\n  data() {\n    if (!this.value.spec) {\n      this.$set(this.value, 'spec', { prune: true, deleteTimeoutSeconds: 10 });\n    }\n\n    if (!this.value.metadata.name) {\n      this.value.metadata.generateName = 'restore-';\n    }\n\n    let s3 = {};\n    let storageSource = 'useDefault';\n\n    if (this.value?.spec?.storageLocation?.s3) {\n      storageSource = 'configureS3';\n      s3 = this.value.spec.storageLocation.s3;\n    }\n\n    return {\n      allSecrets: [], allBackups: [], s3, targetBackup: null, storageSource, apps: []\n    };\n  },\n\n  computed: {\n    isClone() {\n      return this.mode === _CREATE && !!this.liveValue.id;\n    },\n\n    availableBackups() {\n      return this.allBackups.filter((backup) => backup.state !== 'error');\n    },\n\n    chartNamespace() {\n      const BRORelease = this.apps.filter((release) => get(release, 'spec.name') === 'rancher-backup')[0];\n\n      return BRORelease ? BRORelease.spec.namespace : '';\n    },\n\n    encryptionSecretNames() {\n      return formatEncryptionSecretNames(this.allSecrets, this.chartNamespace);\n    },\n\n    isEncrypted() {\n      return !!((this.value.spec.backupFilename || '').match(/.*\\.enc$/));\n    },\n\n    radioOptions() {\n      const options = ['useDefault', 'configureS3'];\n      const labels = [this.t('backupRestoreOperator.restoreFrom.default'), this.t('backupRestoreOperator.restoreFrom.s3')];\n\n      if (this.availableBackups.length || this.storageSource === 'useBackup') {\n        options.unshift('useBackup');\n        labels.unshift( this.t('backupRestoreOperator.restoreFrom.existing'));\n      }\n\n      return { options, labels };\n    },\n\n    validationPassed() {\n      const hasBackupFile = (!!this.value.spec.backupFilename && !!this.value.spec.backupFilename.length);\n      const hasEncryption = !!this.value.spec.encryptionConfigSecretName;\n\n      if (!hasBackupFile) {\n        return false;\n      }\n\n      return !this.isEncrypted || hasEncryption;\n    },\n\n    targetBackupFilename() {\n      return get(this.targetBackup, 'status.filename');\n    },\n\n    ...mapGetters({ t: 'i18n/t' })\n  },\n\n  watch: {\n    storageSource(neu, old) {\n      if (neu === 'useDefault') {\n        delete this.value.spec.storageLocation;\n        delete this.value.spec.backupFilename;\n      } else if (!this.value.spec.storageLocation && neu === 'configureS3') {\n        this.$set(this.value.spec, 'storageLocation', { s3: {} });\n        this.s3 = this.value.spec.storageLocation.s3;\n      }\n      if (neu === 'useBackup') {\n        delete this.value.spec.storageLocation;\n\n        if (this.availableBackups.length === 1) {\n          this.updateTargetBackup(this.availableBackups[0]);\n        }\n      } else {\n        delete this.value.spec.backupFilename;\n        this.value.spec.storageLocation = { s3: this.s3 };\n      }\n    },\n\n    availableBackups(neu, old) {\n      if ((neu.length && !old.length) && !this.isClone && this.mode !== 'view') {\n        this.storageSource = 'useBackup';\n      }\n    },\n\n    targetBackupFilename(neu) {\n      this.value.spec.backupFilename = neu;\n    }\n  },\n\n  methods: {\n    updateTargetBackup(neu) {\n      const out = { backupFilename: neu?.status?.filename };\n\n      if (neu?.spec?.storageLocation?.s3) {\n        out.storageLocation = neu.spec.storageLocation;\n      } else {\n        delete this.value.spec.storageLocation;\n      }\n      if (neu.spec.encryptionConfigSecretName && this.encryptionSecretNames.includes(neu.spec.encryptionConfigSecretName)) {\n        out.encryptionConfigSecretName = neu.spec.encryptionConfigSecretName;\n      }\n      this.$set(this.value, 'spec', { ...this.value.spec, ...out });\n\n      this.targetBackup = neu;\n    }\n  }\n\n};\n</script>\n\n<template>\n  <div>\n    <Loading v-if=\"$fetchState.pending\" />\n\n    <CruResource\n      :validation-passed=\"validationPassed\"\n      :done-route=\"doneRoute\"\n      :resource=\"value\"\n      :mode=\"mode\"\n      @finish=\"save\"\n    >\n      <template>\n        <div>\n          <div class=\"row mb-10\">\n            <div class=\"col span-12\">\n              <RadioGroup\n                v-model=\"storageSource\"\n                name=\"storageSource\"\n                :label=\"t('backupRestoreOperator.s3.titles.backupLocation')\"\n                :options=\"radioOptions.options\"\n                :labels=\"radioOptions.labels\"\n                :mode=\"mode\"\n              />\n            </div>\n          </div>\n          <template v-if=\"storageSource === 'configureS3'\">\n            <S3\n              v-model=\"s3\"\n              :mode=\"mode\"\n              :secrets=\"allSecrets\"\n            />\n          </template>\n          <div\n            v-else-if=\"storageSource==='useBackup'\"\n            class=\"row mb-10\"\n          >\n            <div class=\"col span-6\">\n              <LabeledSelect\n                :disabled=\"!availableBackups.length\"\n                :value=\"targetBackup\"\n                :options=\"availableBackups\"\n                :mode=\"mode\"\n                option-label=\"metadata.name\"\n                :label=\"t('backupRestoreOperator.targetBackup')\"\n                @input=\"updateTargetBackup\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"spacer\" />\n\n        <div>\n          <div\n            :style=\"{'align-items':'center'}\"\n            class=\"row mb-10\"\n          >\n            <div class=\"col span-6\">\n              <LabeledInput\n                v-model=\"value.spec.backupFilename\"\n                :spellcheck=\"false\"\n                required\n                :mode=\"mode\"\n                :label=\"t('backupRestoreOperator.backupFilename')\"\n              />\n            </div>\n            <div class=\"col span-6\">\n              <LabeledSelect\n                v-if=\"isEncrypted\"\n                v-model=\"value.spec.encryptionConfigSecretName\"\n                :status=\"mode === 'view' ? null : 'warning'\"\n                :tooltip=\"mode === 'view' ? null : t('backupRestoreOperator.encryptionConfigName.restoretip')\"\n                :hover-tooltip=\"true\"\n                :mode=\"mode\"\n                :options=\"encryptionSecretNames\"\n                :label=\"t('backupRestoreOperator.encryptionConfigName.label')\"\n              />\n            </div>\n          </div>\n          <div\n            :style=\"{'align-items':'center'}\"\n            class=\"row\"\n          >\n            <div class=\"col span-6\">\n              <Checkbox\n                v-model=\"value.spec.prune\"\n                class=\"mb-5\"\n                :label=\"t('backupRestoreOperator.prune.label')\"\n                :mode=\"mode\"\n              >\n                <template #label>\n                  <span\n                    v-clean-tooltip=\"t('backupRestoreOperator.prune.tip')\"\n                    class=\"text-label\"\n                  >\n                    {{ t('backupRestoreOperator.prune.label') }} <i class=\"icon icon-info\" />\n                  </span>\n                </template>\n              </Checkbox>\n              <UnitInput\n                v-if=\"value.spec.prune\"\n                v-model=\"value.spec.deleteTimeoutSeconds\"\n                :suffix=\"t('suffix.seconds', {count: value.spec.deleteTimeoutSeconds})\"\n                :mode=\"mode\"\n                :label=\"t('backupRestoreOperator.deleteTimeout.label')\"\n              >\n                <template #label>\n                  <label\n                    v-clean-tooltip=\"t('backupRestoreOperator.deleteTimeout.tip')\"\n                    class=\"has-tooltip\"\n                  >\n                    {{ t('backupRestoreOperator.deleteTimeout.label') }} <i class=\"icon icon-info\" />\n                  </label>\n                </template>\n              </UnitInput>\n            </div>\n          </div>\n        </div>\n      </template>\n    </CruResource>\n  </div>\n</template>\n"],"mappings":"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","ignoreList":[]}]}