{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/form/KeyValue.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/form/KeyValue.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["debounce","typeOf","removeAt","removeObject","base64Encode","base64Decode","binarySize","downloadFile","TextAreaAutoGrow","get","Select","FileSelector","_EDIT","_VIEW","asciiLike","CodeMirror","isEqual","name","components","props","value","type","Array","Object","default","defaultValue","binaryValueKeys","mode","String","asMap","Boolean","initialEmptyRow","title","titleProtip","protip","keyName","keyLabel","keyEditable","keyOptions","keyTaggable","keyOptionUnique","keyPlaceholder","protectedKeys","toggleFilter","separatorLabel","valueName","valueLabel","valuePlaceholder","valueCanBeEmpty","displayValuesAsBinary","valueMarkdownMultiline","valueMultiline","valueTrim","handleBase64","valueConcealed","supported","Function","v","preserveKeys","extraColumns","defaultAddData","addLabel","addIcon","addAllowed","readIcon","readAllowed","readAccept","readMultiple","removeLabel","removeIcon","removeAllowed","fileModifier","parserSeparators","loading","parseLinesFromFile","parseValueFromFile","disabled","data","rows","getRows","codeMirrorFocus","lastUpdated","computed","_protip","t","_keyLabel","_keyPlaceholder","_valueLabel","_valuePlaceholder","_addLabel","isView","containerStyle","gap","canRemove","size","length","concat","usedKeyOptions","_this","map","row","filteredKeyOptions","_this2","filter","option","includes","filteredRows","_this3","isProtected","key","created","queueUpdate","update","watch","deep","handler","neu","old","valuePropChanged","methods","_this4","input","keys","forEach","decodedValue","asciiValue","push","binary","canEncode","_iterator","_createForOfIteratorHelper","_step","_loop","_this4$preserveKeys","entry","_defineProperty","k","s","n","done","err","e","f","add","_this5","arguments","undefined","obj","_objectSpread","$nextTick","$refs","lastKey","focus","$emit","remove","idx","removeEmptyRows","cleaned","$set","onFileSelected","file","_this6","_this$fileModifier","lines","split","line","_line$split","_line$split2","_slicedToArray","download","ev","_this7","out","_iterator2","_step2","trim","JSON","parse","stringify","_iterator3","_step3","onPaste","index","event","_this8","_this$rows","text","clipboardData","getData","splits","splitter","find","sep","preventDefault","keyValues","splice","apply","_toConsumableArray","calculateOptions","valueOption","o","binaryTextSize","val","handledValue","onInputMarkdownMultiline","i","onFocusMarkdownMultiline","onValueFileSelected","isValueFieldEmpty"],"sources":["node_modules/@rancher/shell/components/form/KeyValue.vue"],"sourcesContent":["<script>\nimport debounce from 'lodash/debounce';\nimport { typeOf } from '@shell/utils/sort';\nimport { removeAt, removeObject } from '@shell/utils/array';\nimport { base64Encode, base64Decode, binarySize } from '@shell/utils/crypto';\nimport { downloadFile } from '@shell/utils/download';\nimport { TextAreaAutoGrow } from '@components/Form/TextArea';\nimport { get } from '@shell/utils/object';\nimport Select from '@shell/components/form/Select';\nimport FileSelector from '@shell/components/form/FileSelector';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport { asciiLike } from '@shell/utils/string';\nimport CodeMirror from '@shell/components/CodeMirror';\nimport isEqual from 'lodash/isEqual';\n\nexport default {\n  name: 'KeyValue',\n\n  components: {\n    CodeMirror,\n    Select,\n    TextAreaAutoGrow,\n    FileSelector\n  },\n  props: {\n    value: {\n      type:    [Array, Object],\n      default: null,\n    },\n    defaultValue: {\n      type:    [Array, Object],\n      default: null,\n    },\n    // If the user supplies this array, then it indicates which keys should be shown as binary\n    binaryValueKeys: {\n      type:    [Array, Object],\n      default: null\n    },\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n    asMap: {\n      type:    Boolean,\n      default: true,\n    },\n    initialEmptyRow: {\n      type:    Boolean,\n      default: false,\n    },\n    title: {\n      type:    String,\n      default: ''\n    },\n\n    titleProtip: {\n      type:    String,\n      default: ''\n    },\n\n    protip: {\n      type:    [String, Boolean],\n      default: '',\n    },\n    // For asMap=false, the name of the field that goes into the row objects\n    keyName: {\n      type:    String,\n      default: 'key',\n    },\n    keyLabel: {\n      type:    String,\n      default: '',\n    },\n    keyEditable: {\n      type:    Boolean,\n      default: true,\n    },\n    // Offer a set of suggestions for the keys as a Select instead of Input\n    keyOptions: {\n      type:    Array,\n      default: null,\n    },\n    // If false and keyOptions are provided, the key MUST be one of the keyOptions.\n    keyTaggable: {\n      type:    Boolean,\n      default: true,\n    },\n    keyOptionUnique: {\n      type:    Boolean,\n      default: false,\n    },\n    keyPlaceholder: {\n      type:    String,\n      default: '',\n    },\n    /**\n     * List of keys which needs to be disabled and hidden based on toggler\n     */\n    protectedKeys: {\n      type:    Array,\n      default: () => [],\n    },\n    /**\n     * Conditionally display protected keys, if any\n     */\n    toggleFilter: {\n      type:    Boolean,\n      default: false,\n    },\n    separatorLabel: {\n      type:    String,\n      default: '',\n    },\n    // For asMap=false, the name of the field that goes into the row objects\n    valueName: {\n      type:    String,\n      default: 'value',\n    },\n    valueLabel: {\n      type:    String,\n      default: '',\n    },\n    valuePlaceholder: {\n      type:    String,\n      default: '',\n    },\n    valueCanBeEmpty: {\n      type:    Boolean,\n      default: false,\n    },\n    displayValuesAsBinary: {\n      type:    Boolean,\n      default: false,\n    },\n    valueMarkdownMultiline: {\n      type:    Boolean,\n      default: false,\n    },\n    valueMultiline: {\n      type:    Boolean,\n      default: true,\n    },\n    valueTrim: {\n      type:    Boolean,\n      default: true,\n    },\n    handleBase64: {\n      type:    Boolean,\n      default: false,\n    },\n    valueConcealed: {\n      type:    Boolean,\n      default: false,\n    },\n    // On initial reading of the existing value, this function is called\n    // and can return false to say that a value is not supported for editing.\n    // This is mainly useful for resources like envVars that have a valueFrom\n    // you want to preserve but not support editing\n    supported: {\n      type:    Function,\n      default: (v) => true,\n    },\n    // For asMap=false, preserve (copy) these keys from the original value into the emitted value.\n    // Also useful for valueFrom as above.\n    preserveKeys: {\n      type:    Array,\n      default: null,\n    },\n    extraColumns: {\n      type:    Array,\n      default: () => [],\n    },\n    defaultAddData: {\n      type:    Object,\n      default: () => {},\n    },\n    addLabel: {\n      type:    String,\n      default: '',\n    },\n    addIcon: {\n      type:    String,\n      default: 'icon-plus',\n    },\n    addAllowed: {\n      type:    Boolean,\n      default: true,\n    },\n    readIcon: {\n      type:    String,\n      default: 'icon-upload',\n    },\n    readAllowed: {\n      type:    Boolean,\n      default: true,\n    },\n    readAccept: {\n      type:    String,\n      default: '*',\n    },\n    readMultiple: {\n      type:    Boolean,\n      default: false,\n    },\n    removeLabel: {\n      type:    String,\n      default: '',\n    },\n    removeIcon: {\n      type:    String,\n      default: 'icon-minus',\n    },\n    removeAllowed: {\n      type:    Boolean,\n      default: true,\n    },\n    fileModifier: {\n      type:    Function,\n      default: (name, value) => ({ name, value })\n    },\n    parserSeparators: {\n      type:    Array,\n      default: () => [':', '='],\n    },\n    loading: {\n      default: false,\n      type:    Boolean\n    },\n    parseLinesFromFile: {\n      default: false,\n      type:    Boolean\n    },\n    parseValueFromFile: {\n      default: false,\n      type:    Boolean\n    },\n    disabled: {\n      default: false,\n      type:    Boolean\n    },\n  },\n  data() {\n    const rows = this.getRows(this.value);\n\n    return {\n      rows,\n      codeMirrorFocus: {},\n      lastUpdated:     null\n    };\n  },\n  computed: {\n    _protip() {\n      return this.protip || this.t('keyValue.protip', null, true);\n    },\n    _keyLabel() {\n      return this.keyLabel || this.t('generic.key');\n    },\n    _keyPlaceholder() {\n      return this.keyPlaceholder || this.t('keyValue.keyPlaceholder');\n    },\n    _valueLabel() {\n      return this.valueLabel || this.t('generic.value');\n    },\n    _valuePlaceholder() {\n      return this.valuePlaceholder || this.t('keyValue.valuePlaceholder');\n    },\n    _addLabel() {\n      return this.addLabel || this.t('generic.add');\n    },\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n    containerStyle() {\n      const gap = this.canRemove ? ' 50px' : '';\n      const size = 2 + this.extraColumns.length;\n\n      return `grid-template-columns: repeat(${ size }, 1fr)${ gap };`;\n    },\n    usedKeyOptions() {\n      return this.rows.map((row) => row[this.keyName]);\n    },\n    filteredKeyOptions() {\n      if (this.keyOptionUnique) {\n        return this.keyOptions\n          .filter((option) => !this.usedKeyOptions.includes(option.value));\n      }\n\n      return this.keyOptions;\n    },\n    /**\n     * Prevent removal if expressly not allowed and not in view mode\n     */\n    canRemove() {\n      return !this.isView && this.removeAllowed;\n    },\n    /**\n     * Filter rows based on toggler, keeping to still emit all the values\n     */\n    filteredRows() {\n      return this.rows.filter((row) => !(this.isProtected(row.key) && !this.toggleFilter));\n    }\n  },\n  created() {\n    this.queueUpdate = debounce(this.update, 500);\n  },\n  watch: {\n    /**\n     * KV works with v-model=value\n     * value is transformed into this.rows (base64 decode, mark supported etc)\n     * on input, this.update constructs a new value from this.rows and emits\n     * if the parent component changes value, KV needs to re-compute this.rows\n     * If the value changes because the user has edited it using KV, then KV should NOT re-compute rows\n     * the value watcher will compare the last value KV emitted with the new value KV detects and re-compute rows if they don't match\n     */\n    value: {\n      deep: true,\n      handler(neu, old) {\n        this.valuePropChanged(neu, old);\n      }\n    }\n  },\n  methods: {\n    valuePropChanged(neu) {\n      if (!isEqual(neu, this.lastUpdated)) {\n        this.rows = this.getRows(neu);\n      }\n    },\n\n    isProtected(key) {\n      return this.protectedKeys && this.protectedKeys.includes(key);\n    },\n\n    getRows(value) {\n      const rows = [];\n\n      if ( this.asMap ) {\n        const input = value || {};\n\n        Object.keys(input).forEach((key) => {\n          let value = input[key];\n          const decodedValue = base64Decode(input[key]);\n          const asciiValue = asciiLike(decodedValue);\n\n          if ( this.handleBase64 && asciiValue) {\n            value = base64Decode(value);\n          }\n\n          rows.push({\n            key,\n            value,\n            binary:    this.displayValuesAsBinary || (this.handleBase64 && !asciiValue),\n            canEncode: this.handleBase64 && asciiValue,\n            supported: true,\n          });\n        });\n      } else {\n        const input = value || [];\n\n        for ( const row of input ) {\n          let value = row[this.valueName] || '';\n\n          const decodedValue = base64Decode(row[this.valueName]);\n          const asciiValue = asciiLike(decodedValue);\n\n          if ( this.handleBase64 && asciiValue) {\n            value = base64Decode(value);\n          }\n          const entry = {\n            [this.keyName]:   row[this.keyName] || '',\n            [this.valueName]: value,\n            binary:           this.displayValuesAsBinary || (this.handleBase64 && !asciiValue),\n            canEncode:        this.handleBase64 && asciiValue,\n            supported:        this.supported(row),\n          };\n\n          this.preserveKeys?.map((k) => {\n            if ( typeof row[k] !== 'undefined' ) {\n              entry[k] = row[k];\n            }\n          });\n          rows.push(entry);\n        }\n      }\n      if ( rows && !rows.length && this.initialEmptyRow ) {\n        rows.push({\n          [this.keyName]:   '',\n          [this.valueName]: '',\n          binary:           false,\n          canEncode:        this.handleBase64,\n          supported:        true\n        });\n      }\n\n      return rows;\n    },\n\n    add(key = '', value = '') {\n      const obj = {\n        ...this.defaultAddData,\n        [this.keyName]:   key,\n        [this.valueName]: value,\n      };\n\n      obj.binary = false;\n      obj.canEncode = this.handleBase64;\n      obj.supported = true;\n      this.rows.push(obj);\n      this.queueUpdate();\n      this.$nextTick(() => {\n        if (this.$refs.key) {\n          const keys = this.$refs.key;\n\n          const lastKey = keys[keys.length - 1];\n\n          lastKey.focus();\n        } else {\n          this.$emit('focusKey');\n        }\n      });\n    },\n    remove(idx) {\n      removeAt(this.rows, idx);\n      this.queueUpdate();\n    },\n    removeEmptyRows() {\n      const cleaned = this.rows.filter((row) => {\n        return (row.value.length || row.key.length);\n      });\n\n      this.$set(this, 'rows', cleaned);\n    },\n    onFileSelected(file) {\n      const { name, value } = this.fileModifier(file.name, file.value);\n\n      if (!this.parseLinesFromFile) {\n        this.add(name, value, this.displayValuesAsBinary);\n      } else {\n        const lines = value.split('\\n');\n\n        lines.forEach((line) => {\n          // Ignore empty lines\n          if (line.length) {\n            const [key, value] = line.split('=');\n\n            this.add(key, value);\n          }\n        });\n\n        if (lines.length > 0) {\n          this.removeEmptyRows();\n        }\n      }\n    },\n    download(idx, ev) {\n      const row = this.rows[idx];\n      const name = row[this.keyName];\n      const value = row[this.valueName];\n\n      downloadFile(name, value, 'application/octet-stream');\n    },\n    update() {\n      let out;\n\n      if ( this.asMap ) {\n        out = {};\n        const keyName = this.keyName;\n        const valueName = this.valueName;\n\n        for ( const row of this.rows ) {\n          let value = (row[valueName] || '');\n          const key = (row[keyName] || '').trim();\n\n          if (value && typeOf(value) === 'object') {\n            out[key] = JSON.parse(JSON.stringify(value));\n          } else {\n            value = value || '';\n            if (this.valueTrim && asciiLike(value)) {\n              value = value.trim();\n            }\n            if (row.canEncode) {\n              value = base64Encode(value);\n            }\n            if ( key && (value || this.valueCanBeEmpty) ) {\n              out[key] = value;\n            }\n          }\n        }\n      } else {\n        const preserveKeys = this.preserveKeys || [];\n\n        removeObject(preserveKeys, this.keyName);\n        removeObject(preserveKeys, this.valueName);\n        out = this.rows.map((row) => {\n          let value = row[this.valueName];\n\n          if (row.canEncode) {\n            value = base64Encode(value);\n          }\n          const entry = {\n            [this.keyName]:   row[this.keyName],\n            [this.valueName]: value,\n          };\n\n          for ( const k of preserveKeys ) {\n            if ( typeof row[k] !== 'undefined' ) {\n              entry[k] = row[k];\n            }\n          }\n\n          return entry;\n        });\n      }\n      this.lastUpdated = out;\n\n      this.$emit('input', out);\n    },\n    onPaste(index, event) {\n      const text = event.clipboardData.getData('text/plain');\n      const lines = text.split('\\n');\n      const splits = lines.map((line) => {\n        const splitter = this.parserSeparators.find((sep) => line.includes(sep));\n\n        return splitter ? line.split(splitter) : '';\n      }).filter((split) => split && split.length > 0);\n\n      if (splits.length === 0 || (splits.length === 1 && splits[0].length < 2)) {\n        return;\n      }\n      event.preventDefault();\n      const keyValues = splits.map((split) => ({\n        [this.keyName]:   (split[0] || '').trim(),\n        [this.valueName]: (split[1] || '').trim(),\n        supported:        true,\n        canEncode:        this.handleBase64,\n        binary:           this.displayValuesAsBinary\n      }));\n\n      this.rows.splice(index, 1, ...keyValues);\n      this.queueUpdate();\n    },\n    calculateOptions(value) {\n      const valueOption = this.keyOptions.find((o) => o.value === value);\n\n      if (valueOption) {\n        return [valueOption, ...this.filteredKeyOptions];\n      }\n\n      return this.filteredKeyOptions;\n    },\n    binaryTextSize(val) {\n      const handledValue = this.handleBase64 ? base64Decode(val) : val;\n      const n = val.length ? binarySize(handledValue) : 0;\n\n      return this.t('detailText.binary', { n }, true);\n    },\n    get,\n    /**\n     * Update 'rows' variable with the user's input and prevents to update queue before the row model is updated\n     */\n    onInputMarkdownMultiline(idx, value) {\n      this.rows = this.rows.map((row, i) => i === idx ? { ...row, value } : row);\n      this.queueUpdate();\n    },\n    /**\n     * Set focus on CodeMirror fields\n     */\n    onFocusMarkdownMultiline(idx, value) {\n      this.$set(this.codeMirrorFocus, idx, value);\n    },\n    onValueFileSelected(idx, file) {\n      const { name, value } = file;\n\n      if (!this.rows[idx][this.keyName]) {\n        this.rows[idx][this.keyName] = name;\n      }\n      this.rows[idx][this.valueName] = value;\n    },\n    isValueFieldEmpty(value) {\n      return !value || value.trim().length === 0;\n    }\n  }\n};\n</script>\n<template>\n  <div class=\"key-value\">\n    <div\n      v-if=\"title || $slots.title\"\n      class=\"clearfix\"\n    >\n      <slot name=\"title\">\n        <h3>\n          {{ title }}\n          <i\n            v-if=\"titleProtip\"\n            v-clean-tooltip=\"titleProtip\"\n            class=\"icon icon-info\"\n          />\n        </h3>\n      </slot>\n    </div>\n    <div\n      class=\"kv-container\"\n      :style=\"containerStyle\"\n    >\n      <template v-if=\"rows.length || isView\">\n        <label class=\"text-label\">\n          {{ _keyLabel }}\n          <i\n            v-if=\"_protip && !isView && addAllowed\"\n            v-clean-tooltip=\"_protip\"\n            class=\"icon icon-info\"\n          />\n        </label>\n        <label class=\"text-label\">\n          {{ _valueLabel }}\n        </label>\n        <label\n          v-for=\"c in extraColumns\"\n          :key=\"c\"\n        >\n          <slot :name=\"'label:'+c\">{{ c }}</slot>\n        </label>\n        <slot\n          v-if=\"canRemove\"\n          name=\"remove\"\n        >\n          <span />\n        </slot>\n      </template>\n      <template v-if=\"!rows.length && isView\">\n        <div class=\"kv-item key text-muted\">\n          &mdash;\n        </div>\n        <div class=\"kv-item key text-muted\">\n          &mdash;\n        </div>\n      </template>\n      <template\n        v-for=\"(row,i) in filteredRows\"\n        v-else\n      >\n        <!-- Key -->\n        <div\n          :key=\"i+'key'\"\n          class=\"kv-item key\"\n        >\n          <slot\n            name=\"key\"\n            :row=\"row\"\n            :mode=\"mode\"\n            :keyName=\"keyName\"\n            :valueName=\"valueName\"\n            :queueUpdate=\"queueUpdate\"\n            :disabled=\"disabled\"\n          >\n            <Select\n              v-if=\"keyOptions\"\n              ref=\"key\"\n              v-model=\"row[keyName]\"\n              :searchable=\"true\"\n              :disabled=\"disabled || isProtected(row.key)\"\n              :clearable=\"false\"\n              :taggable=\"keyTaggable\"\n              :options=\"calculateOptions(row[keyName])\"\n              :data-testid=\"`select-kv-item-key-${i}`\"\n              @input=\"queueUpdate\"\n            />\n            <input\n              v-else\n              ref=\"key\"\n              v-model=\"row[keyName]\"\n              :disabled=\"isView || disabled || !keyEditable || isProtected(row.key)\"\n              :placeholder=\"_keyPlaceholder\"\n              :data-testid=\"`input-kv-item-key-${i}`\"\n              @input=\"queueUpdate\"\n              @paste=\"onPaste(i, $event)\"\n            >\n          </slot>\n        </div>\n\n        <!-- Value -->\n        <div\n          :key=\"i+'value'\"\n          :data-testid=\"`kv-item-value-${i}`\"\n          class=\"kv-item value\"\n        >\n          <slot\n            name=\"value\"\n            :row=\"row\"\n            :mode=\"mode\"\n            :keyName=\"keyName\"\n            :valueName=\"valueName\"\n            :queueUpdate=\"queueUpdate\"\n          >\n            <div v-if=\"!row.supported\">\n              {{ t('detailText.unsupported', null, true) }}\n            </div>\n            <div v-else-if=\"row.binary\">\n              {{ binaryTextSize(row.value) }}\n            </div>\n            <div\n              v-else\n              class=\"value-container\"\n              :class=\"{ 'upload-button': parseValueFromFile }\"\n            >\n              <CodeMirror\n                v-if=\"valueMarkdownMultiline\"\n                ref=\"cm\"\n                data-testid=\"code-mirror-multiline-field\"\n                :class=\"{['focus']: codeMirrorFocus[i]}\"\n                :value=\"row[valueName]\"\n                :as-text-area=\"true\"\n                :mode=\"mode\"\n                @onInput=\"onInputMarkdownMultiline(i, $event)\"\n                @onFocus=\"onFocusMarkdownMultiline(i, $event)\"\n              />\n              <TextAreaAutoGrow\n                v-else-if=\"valueMultiline\"\n                v-model=\"row[valueName]\"\n                data-testid=\"value-multiline\"\n                :class=\"{'conceal': valueConcealed}\"\n                :disabled=\"disabled || isProtected(row.key)\"\n                :mode=\"mode\"\n                :placeholder=\"_valuePlaceholder\"\n                :min-height=\"40\"\n                :spellcheck=\"false\"\n                @input=\"queueUpdate\"\n              />\n              <input\n                v-else\n                v-model=\"row[valueName]\"\n                :disabled=\"isView || disabled || isProtected(row.key)\"\n                :type=\"valueConcealed ? 'password' : 'text'\"\n                :placeholder=\"_valuePlaceholder\"\n                autocorrect=\"off\"\n                autocapitalize=\"off\"\n                spellcheck=\"false\"\n                :data-testid=\"`input-kv-item-value-${i}`\"\n                @input=\"queueUpdate\"\n              >\n              <FileSelector\n                v-if=\"parseValueFromFile && readAllowed && !isView && isValueFieldEmpty(row[valueName])\"\n                class=\"btn btn-sm role-secondary file-selector\"\n                :label=\"t('generic.upload')\"\n                :include-file-name=\"true\"\n                @selected=\"onValueFileSelected(i, $event)\"\n              />\n            </div>\n          </slot>\n        </div>\n        <div\n          v-for=\"c in extraColumns\"\n          :key=\"i + c\"\n          class=\"kv-item extra\"\n        >\n          <slot\n            :name=\"'col:' + c\"\n            :row=\"row\"\n            :queue-update=\"queueUpdate\"\n            :i=\"i\"\n          />\n        </div>\n        <div\n          v-if=\"canRemove\"\n          :key=\"i\"\n          class=\"kv-item remove\"\n          :data-testid=\"`remove-column-${i}`\"\n        >\n          <slot\n            name=\"removeButton\"\n            :remove=\"remove\"\n            :row=\"row\"\n            :i=\"i\"\n          >\n            <button\n              type=\"button\"\n              :disabled=\"isView || isProtected(row.key) || disabled\"\n              class=\"btn role-link\"\n              @click=\"remove(i)\"\n            >\n              {{ removeLabel || t('generic.remove') }}\n            </button>\n          </slot>\n        </div>\n      </template>\n    </div>\n    <div\n      v-if=\"(addAllowed || readAllowed) && !isView\"\n      class=\"footer mt-20\"\n    >\n      <slot\n        name=\"add\"\n        :add=\"add\"\n      >\n        <button\n          v-if=\"addAllowed\"\n          type=\"button\"\n          class=\"btn role-tertiary add\"\n          data-testid=\"add_link_button\"\n          :disabled=\"loading || disabled || (keyOptions && filteredKeyOptions.length === 0)\"\n          @click=\"add()\"\n        >\n          <i\n            v-if=\"loading\"\n            class=\"mr-5 icon icon-spinner icon-spin icon-lg\"\n          /> {{ _addLabel }}\n        </button>\n        <FileSelector\n          v-if=\"readAllowed\"\n          :disabled=\"isView\"\n          class=\"role-tertiary\"\n          :label=\"t('generic.readFromFile')\"\n          :include-file-name=\"true\"\n          @selected=\"onFileSelected\"\n        />\n      </slot>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.key-value {\n  width: 100%;\n  .file-selector.role-link {\n    text-transform: initial;\n    padding: 0;\n  }\n  .kv-container {\n    display: grid;\n    align-items: center;\n    column-gap: 20px;\n    label {\n      margin-bottom: 0;\n    }\n    & .kv-item {\n      width: 100%;\n      margin: 10px 0px 10px 0px;\n      &.key, &.extra {\n        align-self: flex-start;\n      }\n      &.value .value-container {\n        &.upload-button {\n          position: relative;\n          display: flex;\n          justify-content: right;\n          align-items: center;\n        }\n        .file-selector {\n          position: absolute;\n          margin-right: 5px;\n        }\n      }\n      &.value textarea {\n        padding: 10px 10px 10px 10px;\n      }\n\n      .text-monospace:not(.conceal) {\n        font-family: monospace, monospace;\n      }\n    }\n  }\n  .remove {\n    text-align: center;\n    BUTTON {\n      padding: 0px;\n    }\n  }\n  .title {\n    margin-bottom: 10px;\n    .read-from-file {\n      float: right;\n    }\n  }\n  input {\n    height: 40px;\n    line-height: 1;\n  }\n  .footer {\n    .protip {\n      float: right;\n      padding: 5px 0;\n    }\n  }\n  .download {\n    text-align: right;\n  }\n  .copy-value {\n    padding: 0px 0px 0px 10px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}