{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--17-0!/home/ubuntu/suseconf/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/models/__tests__/management.cattle.io.node.ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/models/__tests__/management.cattle.io.node.ts","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["MgmtNode","describe","foo","bar","t","jest","fn","ctx","rootGetters","resetMocks","clearAllMocks","it","mgmtNode","status","expect","addresses","toStrictEqual","internalNodeStatus","type","address","internalAddress","internalIp","rkeNode","externalIp","toHaveBeenCalledTimes","toHaveBeenCalledWith","mgmtClusterId","nodeId","specs","worker","etcd","controlPlane","etcdAndControlPlane","all","workerNode","id","isWorker","isControlPlane","isEtcd","etcdNode","controlPlaneNode","etcdAndControlPlaneNode","allNode","baseCtx","rancher_byId","actions","scaledown","each","spec","nodes","data","expected","_objectSpread","getters","canScaleDown"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/models/__tests__/management.cattle.io.node.ts"],"sourcesContent":["import MgmtNode from '@shell/models/management.cattle.io.node';\n\ndescribe('class MgmtNode', () => {\n  const foo = 'foo';\n  const bar = 'bar';\n  const t = jest.fn(() => bar);\n  const ctx = { rootGetters: { 'i18n/t': t } };\n\n  const resetMocks = () => {\n    // Clear all mock function calls:\n    jest.clearAllMocks();\n  };\n\n  it('should not return addresses if they are not present in the resource status, the internalNodeStatus, or the rkeNode key in status', () => {\n    const mgmtNode = new MgmtNode({ status: {} });\n\n    expect(mgmtNode.addresses).toStrictEqual([]);\n    resetMocks();\n  });\n\n  describe('should return addresses', () => {\n    const addresses = [foo];\n\n    it('if they are present directly on the resource status', () => {\n      const mgmtNode = new MgmtNode({ status: { addresses } });\n\n      expect(mgmtNode.addresses).toStrictEqual(addresses);\n    });\n    it('if they are not present directly on the resource status but are on \"status.internalNodeStatus\"', () => {\n      const mgmtNode = new MgmtNode({ status: { internalNodeStatus: { addresses } } });\n\n      expect(mgmtNode.addresses).toStrictEqual(addresses);\n    });\n  });\n\n  describe('should return an internalIp', () => {\n    const addresses = [{ type: 'InternalIP', address: foo }];\n    const internalAddress = foo;\n\n    it('if addresses includes an object with an appropriate type and address', () => {\n      const mgmtNode = new MgmtNode({ status: { addresses } });\n\n      expect(mgmtNode.internalIp).toStrictEqual(foo);\n    });\n    it('if internalNodeStatus.addresses includes an object with an appropriate type and address', () => {\n      const mgmtNode = new MgmtNode({ status: { internalNodeStatus: { addresses } } });\n\n      expect(mgmtNode.internalIp).toStrictEqual(foo);\n    });\n    it('if addresses and internalNodeStatus.addresses do not provide an internal ip and the status includes an rkeNode key with an appropriate type and address', () => {\n      const mgmtNode = new MgmtNode({ status: { rkeNode: { internalAddress } } });\n\n      expect(mgmtNode.internalIp).toStrictEqual(internalAddress);\n    });\n  });\n\n  describe('should return an externalIp', () => {\n    const addresses = [{ type: 'ExternalIP', address: foo }];\n    const address = foo;\n\n    it('if addresses includes an object with an appropriate type and address', () => {\n      const mgmtNode = new MgmtNode({ status: { addresses } });\n\n      expect(mgmtNode.externalIp).toStrictEqual(foo);\n    });\n    it('if internalNodeStatus.addresses includes an object with an appropriate type and address', () => {\n      const mgmtNode = new MgmtNode({ status: { internalNodeStatus: { addresses } } });\n\n      expect(mgmtNode.externalIp).toStrictEqual(foo);\n    });\n    it('if addresses and internalNodeStatus.addresses do not provide an external ip and the status includes an rkeNode key with an appropriate type and address', () => {\n      const mgmtNode = new MgmtNode({ status: { rkeNode: { address } } });\n\n      expect(mgmtNode.externalIp).toStrictEqual(address);\n    });\n  });\n\n  describe('should return an appropriate message', () => {\n    it('if there is no internalIp to display', () => {\n      const mgmtNode = new MgmtNode({ status: {} }, ctx);\n\n      expect(mgmtNode.internalIp).toStrictEqual(bar);\n      expect(t).toHaveBeenCalledTimes(1);\n      expect(t).toHaveBeenCalledWith('generic.none');\n      resetMocks();\n    });\n    it('if there is no externalIp to display', () => {\n      const mgmtNode = new MgmtNode({ status: {} }, ctx);\n\n      expect(mgmtNode.externalIp).toStrictEqual(bar);\n      expect(t).toHaveBeenCalledTimes(1);\n      expect(t).toHaveBeenCalledWith('generic.none');\n      resetMocks();\n    });\n  });\n\n  describe('canScaleDown', () => {\n    const mgmtClusterId = 'test';\n    const nodeId = 'test/id';\n    const specs = {\n      worker: {\n        worker: true, etcd: false, controlPlane: false\n      },\n      etcd: {\n        worker: false, etcd: true, controlPlane: false\n      },\n      controlPlane: {\n        worker: false, etcd: false, controlPlane: true\n      },\n      etcdAndControlPlane: {\n        worker: false, etcd: true, controlPlane: true\n      },\n      all: {\n        worker: true, etcd: true, controlPlane: true\n      }\n    };\n\n    const workerNode = {\n      id:             '01',\n      isWorker:       true,\n      isControlPlane: false,\n      isEtcd:         false\n    };\n    const etcdNode = {\n      id:             '02',\n      isWorker:       false,\n      isControlPlane: false,\n      isEtcd:         true\n    };\n    const controlPlaneNode = {\n      id:             '03',\n      isWorker:       false,\n      isControlPlane: true,\n      isEtcd:         false\n    };\n    const etcdAndControlPlaneNode = {\n      id:             '03',\n      isWorker:       false,\n      isControlPlane: true,\n      isEtcd:         true\n    };\n    const allNode = {\n      id:             '04',\n      isWorker:       true,\n      isControlPlane: true,\n      isEtcd:         true\n    };\n\n    const baseCtx = {\n      rootGetters: {\n        'rancher/byId': () => ({ actions: { scaledown: 'scaledown' } }),\n        'i18n/t':       t\n      }\n    };\n\n    it.each([\n      [{ spec: specs.worker, nodes: [workerNode] }, true],\n      [{ spec: specs.etcd, nodes: [etcdNode, etcdNode, controlPlaneNode] }, true],\n      [{ spec: specs.etcdAndControlPlane, nodes: [etcdAndControlPlaneNode, etcdAndControlPlaneNode] }, true],\n      [{ spec: specs.etcdAndControlPlane, nodes: [etcdAndControlPlaneNode] }, false],\n      [{ spec: specs.all, nodes: [allNode] }, false],\n      [{ spec: specs.all, nodes: [allNode, allNode] }, true],\n    ])('should return canScaleDown properly', (data, expected) => {\n      const { spec, nodes } = data;\n      const mgmtNode = new MgmtNode({\n        spec,\n        id: nodeId\n      }, {\n        ...baseCtx,\n        getters: {\n          all: () => [{\n            mgmtClusterId,\n            nodes\n          }]\n        }\n      });\n\n      expect(mgmtNode.canScaleDown).toStrictEqual(expected);\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}]}