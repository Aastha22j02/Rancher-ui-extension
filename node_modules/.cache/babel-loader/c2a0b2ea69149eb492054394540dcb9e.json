{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/index.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICIvaG9tZS91YnVudHUvc3VzZWNvbmYvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgdGhyb3R0bGUgZnJvbSAnbG9kYXNoL3Rocm90dGxlJzsKaW1wb3J0IENyZWF0ZUVkaXRWaWV3IGZyb20gJ0BzaGVsbC9taXhpbnMvY3JlYXRlLWVkaXQtdmlldyc7CmltcG9ydCBOYW1lTnNEZXNjcmlwdGlvbiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL05hbWVOc0Rlc2NyaXB0aW9uJzsKaW1wb3J0IFRhYiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9UYWJiZWQvVGFiJzsKaW1wb3J0IFRhYmJlZCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9UYWJiZWQnOwppbXBvcnQgQ3J1UmVzb3VyY2UgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvQ3J1UmVzb3VyY2UnOwppbXBvcnQgeyBCYW5uZXIgfSBmcm9tICdAY29tcG9uZW50cy9CYW5uZXInOwppbXBvcnQgTGFiZWxzIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vTGFiZWxzJzsKaW1wb3J0IHsgTkFNRVNQQUNFLCBQT0QgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IHsgY29udmVydCwgbWF0Y2hpbmcsIHNpbXBsaWZ5IH0gZnJvbSAnQHNoZWxsL3V0aWxzL3NlbGVjdG9yJzsKaW1wb3J0IHsgQ2hlY2tib3ggfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0NoZWNrYm94JzsKaW1wb3J0IHsgYWRkT2JqZWN0LCByZW1vdmVPYmplY3QgfSBmcm9tICdAc2hlbGwvdXRpbHMvYXJyYXknOwppbXBvcnQgTWF0Y2hFeHByZXNzaW9ucyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL01hdGNoRXhwcmVzc2lvbnMnOwppbXBvcnQgUG9saWN5UnVsZXMgZnJvbSAnQHNoZWxsL2VkaXQvbmV0d29ya2luZy5rOHMuaW8ubmV0d29ya3BvbGljeS9Qb2xpY3lSdWxlcyc7CmltcG9ydCBSZXNvdXJjZVRhYmxlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1Jlc291cmNlVGFibGUnOwppbXBvcnQgeyBhbGxIYXNoIH0gZnJvbSAnQHNoZWxsL3V0aWxzL3Byb21pc2UnOwp2YXIgUE9MSUNZX1RZUEVTID0gewogIElOR1JFU1M6ICdJbmdyZXNzJywKICBFR1JFU1M6ICdFZ3Jlc3MnCn07CmV4cG9ydCBkZWZhdWx0IHsKICAvLyBQcm9wcyBhcmUgZm91bmQgaW4gQ3JlYXRlRWRpdFZpZXcKICAvLyBwcm9wczoge30sCgogIGNvbXBvbmVudHM6IHsKICAgIEJhbm5lcjogQmFubmVyLAogICAgQ2hlY2tib3g6IENoZWNrYm94LAogICAgQ3J1UmVzb3VyY2U6IENydVJlc291cmNlLAogICAgTGFiZWxzOiBMYWJlbHMsCiAgICBNYXRjaEV4cHJlc3Npb25zOiBNYXRjaEV4cHJlc3Npb25zLAogICAgTmFtZU5zRGVzY3JpcHRpb246IE5hbWVOc0Rlc2NyaXB0aW9uLAogICAgUG9saWN5UnVsZXM6IFBvbGljeVJ1bGVzLAogICAgUmVzb3VyY2VUYWJsZTogUmVzb3VyY2VUYWJsZSwKICAgIFRhYjogVGFiLAogICAgVGFiYmVkOiBUYWJiZWQKICB9LAogIG1peGluczogW0NyZWF0ZUVkaXRWaWV3XSwKICBmZXRjaDogZnVuY3Rpb24gZmV0Y2goKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGhhc2g7CiAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIGFsbEhhc2goewogICAgICAgICAgICAgIGFsbFBvZHM6IF90aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9maW5kQWxsJywgewogICAgICAgICAgICAgICAgdHlwZTogUE9ECiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgYWxsTmFtZXNwYWNlczogX3RoaXMuJHN0b3JlLmRpc3BhdGNoKCdjbHVzdGVyL2ZpbmRBbGwnLCB7CiAgICAgICAgICAgICAgICB0eXBlOiBOQU1FU1BBQ0UKICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KTsKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgaGFzaCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF90aGlzLmFsbFBvZHMgPSBoYXNoLmFsbFBvZHM7CiAgICAgICAgICAgIF90aGlzLmFsbE5hbWVzcGFjZXMgPSBoYXNoLmFsbE5hbWVzcGFjZXM7CiAgICAgICAgICAgIF90aGlzLnVwZGF0ZU1hdGNoaW5nUG9kcygpOwogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgaWYgKCF0aGlzLnZhbHVlLnNwZWMpIHsKICAgICAgdGhpcy4kc2V0KHRoaXMudmFsdWUsICdzcGVjJywgewogICAgICAgIHBvbGljeVR5cGVzOiBbXSwKICAgICAgICBwb2RTZWxlY3RvcjogewogICAgICAgICAgbWF0Y2hFeHByZXNzaW9uczogW10sCiAgICAgICAgICBtYXRjaExhYmVsczoge30KICAgICAgICB9CiAgICAgIH0pOwogICAgfQogICAgdmFyIG1hdGNoaW5nUG9kcyA9IHsKICAgICAgbWF0Y2hlZDogMCwKICAgICAgbWF0Y2hlczogW10sCiAgICAgIG5vbmU6IHRydWUsCiAgICAgIHNhbXBsZTogbnVsbCwKICAgICAgdG90YWw6IDAKICAgIH07CiAgICByZXR1cm4gewogICAgICBQT0Q6IFBPRCwKICAgICAgbWF0Y2hpbmdQb2RzOiBtYXRjaGluZ1BvZHMsCiAgICAgIGFsbFBvZHM6IFtdLAogICAgICBhbGxOYW1lc3BhY2VzOiBbXSwKICAgICAgcG9kVGFibGVIZWFkZXJzOiB0aGlzLiRzdG9yZS5nZXR0ZXJzWyd0eXBlLW1hcC9oZWFkZXJzRm9yJ10odGhpcy4kc3RvcmUuZ2V0dGVyc1snY2x1c3Rlci9zY2hlbWFGb3InXShQT0QpKQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwb2RTY2hlbWE6IGZ1bmN0aW9uIHBvZFNjaGVtYSgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ2NsdXN0ZXIvc2NoZW1hRm9yJ10oUE9EKTsKICAgIH0sCiAgICBoYXNJbmdyZXNzUG9saWNpZXM6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWUuc3BlYy5wb2xpY3lUeXBlcy5pbmNsdWRlcyhQT0xJQ1lfVFlQRVMuSU5HUkVTUyk7CiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gc2V0KGhhc0luZ3Jlc3NQb2xpY2llcykgewogICAgICAgIHZhciBwb2xpY3lUeXBlcyA9IHRoaXMudmFsdWUuc3BlYy5wb2xpY3lUeXBlczsKICAgICAgICBpZiAoaGFzSW5ncmVzc1BvbGljaWVzKSB7CiAgICAgICAgICBhZGRPYmplY3QocG9saWN5VHlwZXMsIFBPTElDWV9UWVBFUy5JTkdSRVNTKTsKICAgICAgICAgIGlmICghdGhpcy52YWx1ZS5zcGVjLmluZ3Jlc3MpIHsKICAgICAgICAgICAgdGhpcy4kc2V0KHRoaXMudmFsdWUuc3BlYywgJ2luZ3Jlc3MnLCBbXSk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBvbGljeVR5cGVzID0gcmVtb3ZlT2JqZWN0KHBvbGljeVR5cGVzLCBQT0xJQ1lfVFlQRVMuSU5HUkVTUyk7CiAgICAgICAgICB0aGlzLiRkZWxldGUodGhpcy52YWx1ZS5zcGVjLCAnaW5ncmVzcycpOwogICAgICAgIH0KICAgICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZS5zcGVjLCAncG9saWN5VHlwZXMnLCBwb2xpY3lUeXBlcyk7CiAgICAgIH0KICAgIH0sCiAgICBoYXNFZ3Jlc3NQb2xpY2llczogewogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gdGhpcy52YWx1ZS5zcGVjLnBvbGljeVR5cGVzLmluY2x1ZGVzKFBPTElDWV9UWVBFUy5FR1JFU1MpOwogICAgICB9LAogICAgICBzZXQ6IGZ1bmN0aW9uIHNldChoYXNFZ3Jlc3NQb2xpY2llcykgewogICAgICAgIHZhciBwb2xpY3lUeXBlcyA9IHRoaXMudmFsdWUuc3BlYy5wb2xpY3lUeXBlczsKICAgICAgICBpZiAoaGFzRWdyZXNzUG9saWNpZXMpIHsKICAgICAgICAgIGFkZE9iamVjdChwb2xpY3lUeXBlcywgUE9MSUNZX1RZUEVTLkVHUkVTUyk7CiAgICAgICAgICBpZiAoIXRoaXMudmFsdWUuc3BlYy5lZ3Jlc3MpIHsKICAgICAgICAgICAgdGhpcy4kc2V0KHRoaXMudmFsdWUuc3BlYywgJ2VncmVzcycsIFtdKTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcG9saWN5VHlwZXMgPSByZW1vdmVPYmplY3QocG9saWN5VHlwZXMsIFBPTElDWV9UWVBFUy5FR1JFU1MpOwogICAgICAgICAgdGhpcy4kZGVsZXRlKHRoaXMudmFsdWUuc3BlYywgJ2VncmVzcycpOwogICAgICAgIH0KICAgICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZS5zcGVjLCAncG9saWN5VHlwZXMnLCBwb2xpY3lUeXBlcyk7CiAgICAgIH0KICAgIH0sCiAgICBwb2RTZWxlY3RvckV4cHJlc3Npb25zOiB7CiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIHJldHVybiBjb252ZXJ0KHRoaXMudmFsdWUuc3BlYy5wb2RTZWxlY3Rvci5tYXRjaExhYmVscyB8fCB7fSwgdGhpcy52YWx1ZS5zcGVjLnBvZFNlbGVjdG9yLm1hdGNoRXhwcmVzc2lvbnMgfHwgW10pOwogICAgICB9LAogICAgICBzZXQ6IGZ1bmN0aW9uIHNldChwb2RTZWxlY3RvckV4cHJlc3Npb25zKSB7CiAgICAgICAgdGhpcy4kc2V0KHRoaXMudmFsdWUuc3BlYywgJ3BvZFNlbGVjdG9yJywgc2ltcGxpZnkocG9kU2VsZWN0b3JFeHByZXNzaW9ucykpOwogICAgICB9CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgJ3ZhbHVlLm1ldGFkYXRhLm5hbWVzcGFjZSc6ICd1cGRhdGVNYXRjaGluZ1BvZHMnLAogICAgJ3ZhbHVlLnNwZWMucG9kU2VsZWN0b3InOiAndXBkYXRlTWF0Y2hpbmdQb2RzJwogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlTWF0Y2hpbmdQb2RzOiB0aHJvdHRsZShmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzLAogICAgICAgIF9tYXRjaCQ7CiAgICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vcmFuY2hlci9kYXNoYm9hcmQvaXNzdWVzLzEwNDE3LCBhbGwgcG9kcyBiYWQsIG5lZWQgdG8gcmVwbGFjZSBsb2NhbCBzZWxlY3RvciBzb21laG93CiAgICAgIHZhciBhbGxJbk5hbWVzcGFjZSA9IHRoaXMuYWxsUG9kcy5maWx0ZXIoZnVuY3Rpb24gKHBvZCkgewogICAgICAgIHJldHVybiBwb2QubWV0YWRhdGEubmFtZXNwYWNlID09PSBfdGhpczIudmFsdWUubWV0YWRhdGEubmFtZXNwYWNlOwogICAgICB9KTsKICAgICAgdmFyIG1hdGNoID0gbWF0Y2hpbmcoYWxsSW5OYW1lc3BhY2UsIHRoaXMucG9kU2VsZWN0b3JFeHByZXNzaW9ucyk7CiAgICAgIHZhciBtYXRjaGVkID0gbWF0Y2gubGVuZ3RoIHx8IDA7CiAgICAgIHZhciBzYW1wbGUgPSAoX21hdGNoJCA9IG1hdGNoWzBdKSA9PT0gbnVsbCB8fCBfbWF0Y2gkID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbWF0Y2gkLm5hbWVEaXNwbGF5OwogICAgICB0aGlzLm1hdGNoaW5nUG9kcyA9IHsKICAgICAgICBtYXRjaGVkOiBtYXRjaGVkLAogICAgICAgIG1hdGNoZXM6IG1hdGNoLAogICAgICAgIG5vbmU6IG1hdGNoZWQgPT09IDAsCiAgICAgICAgc2FtcGxlOiBzYW1wbGUsCiAgICAgICAgdG90YWw6IGFsbEluTmFtZXNwYWNlLmxlbmd0aAogICAgICB9OwogICAgfSwgMjUwLCB7CiAgICAgIGxlYWRpbmc6IHRydWUKICAgIH0pCiAgfQp9Ow=="},{"version":3,"names":["throttle","CreateEditView","NameNsDescription","Tab","Tabbed","CruResource","Banner","Labels","NAMESPACE","POD","convert","matching","simplify","Checkbox","addObject","removeObject","MatchExpressions","PolicyRules","ResourceTable","allHash","POLICY_TYPES","INGRESS","EGRESS","components","mixins","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","hash","wrap","_callee$","_context","prev","next","allPods","$store","dispatch","type","allNamespaces","sent","updateMatchingPods","stop","data","value","spec","$set","policyTypes","podSelector","matchExpressions","matchLabels","matchingPods","matched","matches","none","sample","total","podTableHeaders","getters","computed","podSchema","hasIngressPolicies","get","includes","set","ingress","$delete","hasEgressPolicies","egress","podSelectorExpressions","watch","methods","_this2","_match$","allInNamespace","filter","pod","metadata","namespace","match","length","nameDisplay","leading"],"sources":["node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/index.vue"],"sourcesContent":["<script>\nimport throttle from 'lodash/throttle';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport Tabbed from '@shell/components/Tabbed';\nimport CruResource from '@shell/components/CruResource';\nimport { Banner } from '@components/Banner';\nimport Labels from '@shell/components/form/Labels';\nimport { NAMESPACE, POD } from '@shell/config/types';\nimport { convert, matching, simplify } from '@shell/utils/selector';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { addObject, removeObject } from '@shell/utils/array';\nimport MatchExpressions from '@shell/components/form/MatchExpressions';\nimport PolicyRules from '@shell/edit/networking.k8s.io.networkpolicy/PolicyRules';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport { allHash } from '@shell/utils/promise';\n\nconst POLICY_TYPES = {\n  INGRESS: 'Ingress',\n  EGRESS:  'Egress',\n};\n\nexport default {\n  // Props are found in CreateEditView\n  // props: {},\n\n  components: {\n    Banner,\n    Checkbox,\n    CruResource,\n    Labels,\n    MatchExpressions,\n    NameNsDescription,\n    PolicyRules,\n    ResourceTable,\n    Tab,\n    Tabbed,\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    const hash = await allHash({\n      allPods:       this.$store.dispatch('cluster/findAll', { type: POD }),\n      allNamespaces: this.$store.dispatch('cluster/findAll', { type: NAMESPACE }),\n    });\n\n    this.allPods = hash.allPods;\n    this.allNamespaces = hash.allNamespaces;\n\n    this.updateMatchingPods();\n  },\n\n  data() {\n    if ( !this.value.spec ) {\n      this.$set(this.value, 'spec', {\n        policyTypes: [],\n        podSelector: {\n          matchExpressions: [],\n          matchLabels:      {},\n        }\n      });\n    }\n\n    const matchingPods = {\n      matched: 0,\n      matches: [],\n      none:    true,\n      sample:  null,\n      total:   0,\n    };\n\n    return {\n      POD,\n      matchingPods,\n      allPods:         [],\n      allNamespaces:   [],\n      podTableHeaders: this.$store.getters['type-map/headersFor'](\n        this.$store.getters['cluster/schemaFor'](POD)\n      ),\n    };\n  },\n\n  computed: {\n    podSchema() {\n      return this.$store.getters['cluster/schemaFor'](POD);\n    },\n    hasIngressPolicies: {\n      get() {\n        return this.value.spec.policyTypes.includes(POLICY_TYPES.INGRESS);\n      },\n      set(hasIngressPolicies) {\n        let policyTypes = this.value.spec.policyTypes;\n\n        if (hasIngressPolicies) {\n          addObject(policyTypes, POLICY_TYPES.INGRESS);\n          if (!this.value.spec.ingress) {\n            this.$set(this.value.spec, 'ingress', []);\n          }\n        } else {\n          policyTypes = removeObject(policyTypes, POLICY_TYPES.INGRESS);\n          this.$delete(this.value.spec, 'ingress');\n        }\n\n        this.$set(this.value.spec, 'policyTypes', policyTypes);\n      }\n    },\n    hasEgressPolicies: {\n      get() {\n        return this.value.spec.policyTypes.includes(POLICY_TYPES.EGRESS);\n      },\n      set(hasEgressPolicies) {\n        let policyTypes = this.value.spec.policyTypes;\n\n        if (hasEgressPolicies) {\n          addObject(policyTypes, POLICY_TYPES.EGRESS);\n          if (!this.value.spec.egress) {\n            this.$set(this.value.spec, 'egress', []);\n          }\n        } else {\n          policyTypes = removeObject(policyTypes, POLICY_TYPES.EGRESS);\n          this.$delete(this.value.spec, 'egress');\n        }\n\n        this.$set(this.value.spec, 'policyTypes', policyTypes);\n      }\n    },\n    podSelectorExpressions: {\n      get() {\n        return convert(\n          this.value.spec.podSelector.matchLabels || {},\n          this.value.spec.podSelector.matchExpressions || []\n        );\n      },\n      set(podSelectorExpressions) {\n        this.$set(this.value.spec, 'podSelector', simplify(podSelectorExpressions));\n      }\n    },\n  },\n\n  watch: {\n    'value.metadata.namespace': 'updateMatchingPods',\n    'value.spec.podSelector':   'updateMatchingPods',\n  },\n\n  methods: {\n    updateMatchingPods: throttle(function() {\n      // See https://github.com/rancher/dashboard/issues/10417, all pods bad, need to replace local selector somehow\n      const allInNamespace = this.allPods.filter((pod) => pod.metadata.namespace === this.value.metadata.namespace);\n      const match = matching(allInNamespace, this.podSelectorExpressions);\n      const matched = match.length || 0;\n      const sample = match[0]?.nameDisplay;\n\n      this.matchingPods = {\n        matched,\n        matches: match,\n        none:    matched === 0,\n        sample,\n        total:   allInNamespace.length,\n      };\n    }, 250, { leading: true }),\n  },\n};\n</script>\n\n<template>\n  <CruResource\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"true\"\n    :errors=\"errors\"\n    @error=\"(e) => (errors = e)\"\n    @finish=\"save\"\n    @cancel=\"done\"\n  >\n    <NameNsDescription\n      v-if=\"!isView\"\n      :value=\"value\"\n      :mode=\"mode\"\n    />\n\n    <div class=\"row mb-40\">\n      <div class=\"col span-12\">\n        <Tabbed :side-tabs=\"true\">\n          <Tab\n            name=\"ingress\"\n            label-key=\"networkpolicy.ingress.label\"\n            :show-header=\"false\"\n            :weight=\"3\"\n          >\n            <h2 class=\"\">\n              {{ t('networkpolicy.ingress.label') }}\n            </h2>\n            <Checkbox\n              v-model=\"hasIngressPolicies\"\n              class=\"mt-20 mb-10\"\n              :mode=\"mode\"\n              :label=\"t('networkpolicy.ingress.enable')\"\n              data-testid=\"network-policy-ingress-enable-checkbox\"\n            />\n            <PolicyRules\n              v-if=\"hasIngressPolicies\"\n              v-model=\"value\"\n              type=\"ingress\"\n              :mode=\"mode\"\n              :all-namespaces=\"allNamespaces\"\n              :all-pods=\"allPods\"\n            />\n          </Tab>\n          <Tab\n            name=\"egress\"\n            label-key=\"networkpolicy.egress.label\"\n            :show-header=\"false\"\n            :weight=\"2\"\n          >\n            <h2>\n              {{ t('networkpolicy.egress.label') }}\n            </h2>\n            <Checkbox\n              v-model=\"hasEgressPolicies\"\n              class=\"mt-20 mb-10\"\n              :mode=\"mode\"\n              :label=\"t('networkpolicy.egress.enable')\"\n            />\n            <PolicyRules\n              v-if=\"hasEgressPolicies\"\n              v-model=\"value\"\n              type=\"egress\"\n              :mode=\"mode\"\n              :all-namespaces=\"allNamespaces\"\n              :all-pods=\"allPods\"\n            />\n          </Tab>\n          <Tab\n            name=\"selectors\"\n            label-key=\"networkpolicy.selectors.label\"\n            :show-header=\"false\"\n            :weight=\"1\"\n          >\n            <h2>\n              {{ t('networkpolicy.selectors.label') }}\n              <i\n                v-clean-tooltip=\"t('networkpolicy.selectors.hint')\"\n                class=\"icon icon-info\"\n              />\n            </h2>\n            <div class=\"row\">\n              <div class=\"col span-12\">\n                <MatchExpressions\n                  v-model=\"podSelectorExpressions\"\n                  :mode=\"mode\"\n                  :show-remove=\"false\"\n                  :type=\"POD\"\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col span-12\">\n                <Banner color=\"success\">\n                  <span v-clean-html=\"t('networkpolicy.selectors.matchingPods.matchesSome', matchingPods)\" />\n                </Banner>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col span-12\">\n                <ResourceTable\n                  :rows=\"matchingPods.matches\"\n                  :headers=\"podTableHeaders\"\n                  key-field=\"id\"\n                  :table-actions=\"false\"\n                  :schema=\"podSchema\"\n                  :groupable=\"false\"\n                  :search=\"false\"\n                />\n              </div>\n            </div>\n          </Tab>\n          <Tab\n            name=\"labels-and-annotations\"\n            :label=\"t('networkpolicy.labelsAnnotations.label', {}, true)\"\n            :weight=\"-1\"\n          >\n            <Labels\n              :default-container-class=\"'labels-and-annotations-container'\"\n              :value=\"value\"\n              :mode=\"mode\"\n              :display-side-by-side=\"false\"\n            />\n          </Tab>\n        </Tabbed>\n      </div>\n    </div>\n  </CruResource>\n</template>\n"],"mappings":";;;;;;;AACA,OAAAA,QAAA;AACA,OAAAC,cAAA;AACA,OAAAC,iBAAA;AACA,OAAAC,GAAA;AACA,OAAAC,MAAA;AACA,OAAAC,WAAA;AACA,SAAAC,MAAA;AACA,OAAAC,MAAA;AACA,SAAAC,SAAA,EAAAC,GAAA;AACA,SAAAC,OAAA,EAAAC,QAAA,EAAAC,QAAA;AACA,SAAAC,QAAA;AACA,SAAAC,SAAA,EAAAC,YAAA;AACA,OAAAC,gBAAA;AACA,OAAAC,WAAA;AACA,OAAAC,aAAA;AACA,SAAAC,OAAA;AAEA,IAAAC,YAAA;EACAC,OAAA;EACAC,MAAA;AACA;AAEA;EACA;EACA;;EAEAC,UAAA;IACAjB,MAAA,EAAAA,MAAA;IACAO,QAAA,EAAAA,QAAA;IACAR,WAAA,EAAAA,WAAA;IACAE,MAAA,EAAAA,MAAA;IACAS,gBAAA,EAAAA,gBAAA;IACAd,iBAAA,EAAAA,iBAAA;IACAe,WAAA,EAAAA,WAAA;IACAC,aAAA,EAAAA,aAAA;IACAf,GAAA,EAAAA,GAAA;IACAC,MAAA,EAAAA;EACA;EAEAoB,MAAA,GAAAvB,cAAA;EAEAwB,KAAA,WAAAA,MAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAAC,QAAA;MAAA,IAAAC,IAAA;MAAA,OAAAH,mBAAA,CAAAI,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OACAjB,OAAA;cACAkB,OAAA,EAAAX,KAAA,CAAAY,MAAA,CAAAC,QAAA;gBAAAC,IAAA,EAAA/B;cAAA;cACAgC,aAAA,EAAAf,KAAA,CAAAY,MAAA,CAAAC,QAAA;gBAAAC,IAAA,EAAAhC;cAAA;YACA;UAAA;YAHAuB,IAAA,GAAAG,QAAA,CAAAQ,IAAA;YAKAhB,KAAA,CAAAW,OAAA,GAAAN,IAAA,CAAAM,OAAA;YACAX,KAAA,CAAAe,aAAA,GAAAV,IAAA,CAAAU,aAAA;YAEAf,KAAA,CAAAiB,kBAAA;UAAA;UAAA;YAAA,OAAAT,QAAA,CAAAU,IAAA;QAAA;MAAA,GAAAd,OAAA;IAAA;EACA;EAEAe,IAAA,WAAAA,KAAA;IACA,UAAAC,KAAA,CAAAC,IAAA;MACA,KAAAC,IAAA,MAAAF,KAAA;QACAG,WAAA;QACAC,WAAA;UACAC,gBAAA;UACAC,WAAA;QACA;MACA;IACA;IAEA,IAAAC,YAAA;MACAC,OAAA;MACAC,OAAA;MACAC,IAAA;MACAC,MAAA;MACAC,KAAA;IACA;IAEA;MACAjD,GAAA,EAAAA,GAAA;MACA4C,YAAA,EAAAA,YAAA;MACAhB,OAAA;MACAI,aAAA;MACAkB,eAAA,OAAArB,MAAA,CAAAsB,OAAA,wBACA,KAAAtB,MAAA,CAAAsB,OAAA,sBAAAnD,GAAA,CACA;IACA;EACA;EAEAoD,QAAA;IACAC,SAAA,WAAAA,UAAA;MACA,YAAAxB,MAAA,CAAAsB,OAAA,sBAAAnD,GAAA;IACA;IACAsD,kBAAA;MACAC,GAAA,WAAAA,IAAA;QACA,YAAAlB,KAAA,CAAAC,IAAA,CAAAE,WAAA,CAAAgB,QAAA,CAAA7C,YAAA,CAAAC,OAAA;MACA;MACA6C,GAAA,WAAAA,IAAAH,kBAAA;QACA,IAAAd,WAAA,QAAAH,KAAA,CAAAC,IAAA,CAAAE,WAAA;QAEA,IAAAc,kBAAA;UACAjD,SAAA,CAAAmC,WAAA,EAAA7B,YAAA,CAAAC,OAAA;UACA,UAAAyB,KAAA,CAAAC,IAAA,CAAAoB,OAAA;YACA,KAAAnB,IAAA,MAAAF,KAAA,CAAAC,IAAA;UACA;QACA;UACAE,WAAA,GAAAlC,YAAA,CAAAkC,WAAA,EAAA7B,YAAA,CAAAC,OAAA;UACA,KAAA+C,OAAA,MAAAtB,KAAA,CAAAC,IAAA;QACA;QAEA,KAAAC,IAAA,MAAAF,KAAA,CAAAC,IAAA,iBAAAE,WAAA;MACA;IACA;IACAoB,iBAAA;MACAL,GAAA,WAAAA,IAAA;QACA,YAAAlB,KAAA,CAAAC,IAAA,CAAAE,WAAA,CAAAgB,QAAA,CAAA7C,YAAA,CAAAE,MAAA;MACA;MACA4C,GAAA,WAAAA,IAAAG,iBAAA;QACA,IAAApB,WAAA,QAAAH,KAAA,CAAAC,IAAA,CAAAE,WAAA;QAEA,IAAAoB,iBAAA;UACAvD,SAAA,CAAAmC,WAAA,EAAA7B,YAAA,CAAAE,MAAA;UACA,UAAAwB,KAAA,CAAAC,IAAA,CAAAuB,MAAA;YACA,KAAAtB,IAAA,MAAAF,KAAA,CAAAC,IAAA;UACA;QACA;UACAE,WAAA,GAAAlC,YAAA,CAAAkC,WAAA,EAAA7B,YAAA,CAAAE,MAAA;UACA,KAAA8C,OAAA,MAAAtB,KAAA,CAAAC,IAAA;QACA;QAEA,KAAAC,IAAA,MAAAF,KAAA,CAAAC,IAAA,iBAAAE,WAAA;MACA;IACA;IACAsB,sBAAA;MACAP,GAAA,WAAAA,IAAA;QACA,OAAAtD,OAAA,CACA,KAAAoC,KAAA,CAAAC,IAAA,CAAAG,WAAA,CAAAE,WAAA,QACA,KAAAN,KAAA,CAAAC,IAAA,CAAAG,WAAA,CAAAC,gBAAA,MACA;MACA;MACAe,GAAA,WAAAA,IAAAK,sBAAA;QACA,KAAAvB,IAAA,MAAAF,KAAA,CAAAC,IAAA,iBAAAnC,QAAA,CAAA2D,sBAAA;MACA;IACA;EACA;EAEAC,KAAA;IACA;IACA;EACA;EAEAC,OAAA;IACA9B,kBAAA,EAAA3C,QAAA;MAAA,IAAA0E,MAAA;QAAAC,OAAA;MACA;MACA,IAAAC,cAAA,QAAAvC,OAAA,CAAAwC,MAAA,WAAAC,GAAA;QAAA,OAAAA,GAAA,CAAAC,QAAA,CAAAC,SAAA,KAAAN,MAAA,CAAA5B,KAAA,CAAAiC,QAAA,CAAAC,SAAA;MAAA;MACA,IAAAC,KAAA,GAAAtE,QAAA,CAAAiE,cAAA,OAAAL,sBAAA;MACA,IAAAjB,OAAA,GAAA2B,KAAA,CAAAC,MAAA;MACA,IAAAzB,MAAA,IAAAkB,OAAA,GAAAM,KAAA,iBAAAN,OAAA,uBAAAA,OAAA,CAAAQ,WAAA;MAEA,KAAA9B,YAAA;QACAC,OAAA,EAAAA,OAAA;QACAC,OAAA,EAAA0B,KAAA;QACAzB,IAAA,EAAAF,OAAA;QACAG,MAAA,EAAAA,MAAA;QACAC,KAAA,EAAAkB,cAAA,CAAAM;MACA;IACA;MAAAE,OAAA;IAAA;EACA;AACA","ignoreList":[]}]}