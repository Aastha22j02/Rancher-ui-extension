{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/utils/socket.js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/utils/socket.js","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["EventTarget","isSafari","addParam","sockId","warningShown","wasConnected","INSECURE","SECURE","STATE_DISCONNECTED","addEventListener","STATE_CONNECTING","STATE_CONNECTED","STATE_CLOSING","STATE_RECONNECTING","EVENT_CONNECTING","EVENT_CONNECTED","EVENT_DISCONNECTED","EVENT_MESSAGE","EVENT_FRAME_TIMEOUT","EVENT_CONNECT_ERROR","EVENT_DISCONNECT_ERROR","NO_WATCH","NO_SCHEMA","REVISION_TOO_OLD","Socket","_EventTarget","url","_this","autoReconnect","arguments","length","undefined","frameTimeout","protocol","maxTries","idAsTimestamp","_classCallCheck","_callSuper","metadata","hasBeenOpen","hasReconnected","tries","socket","state","framesReceived","frameTimer","reconnectTimer","disconnectCallBacks","disconnectedAt","closingId","autoReconnectUrl","setUrl","_inherits","_createClass","key","value","match","self","location","origin","replace","startsWith","substr","connect","console","error","Object","assign","id","Date","getTime","_baseLog","WebSocket","onmessage","_onmessage","bind","onopen","_opened","onerror","_error","onclose","_closed","dispatchEvent","CustomEvent","send","data","disconnect","callBack","_this2","push","promise","Promise","resolve","reject","onError","e","removeEventListener","_close","reconnect","_log","getMetadata","getId","isConnected","setAutoReconnect","setAutoReconnectUrl","close","toString","now","atTime","afterMilliseconds","detail","_resetWatchdog","clearTimeout","event","_this3","timeout","setTimeout","concat","_this$socket","_this4","code","reason","wasClean","clean","callBacks","fn","pop","apply","includes","delay","Math","max","min","then","catch","summary","props","_this$socket2","_objectSpread","message","values","entries","unshift","forEach","_ref","index","_ref2","_slicedToArray","log","join","default"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/utils/socket.js"],"sourcesContent":["import { EventTarget } from 'event-target-shim';\nimport { isSafari } from '@shell/utils/platform';\nimport { addParam } from '@shell/utils/url';\n\nlet sockId = 1;\nlet warningShown = false;\nlet wasConnected = false;\n\nconst INSECURE = 'ws://';\nconst SECURE = 'wss://';\n\nconst STATE_DISCONNECTED = 'disconnected';\n\nexport const addEventListener = EventTarget.addEventListener;\nexport const STATE_CONNECTING = 'connecting';\nexport const STATE_CONNECTED = 'connected';\nconst STATE_CLOSING = 'closing';\nconst STATE_RECONNECTING = 'reconnecting';\n\nexport const EVENT_CONNECTING = STATE_CONNECTING;\nexport const EVENT_CONNECTED = STATE_CONNECTED;\nexport const EVENT_DISCONNECTED = STATE_DISCONNECTED;\nexport const EVENT_MESSAGE = 'message';\nexport const EVENT_FRAME_TIMEOUT = 'frame_timeout';\nexport const EVENT_CONNECT_ERROR = 'connect_error';\nexport const EVENT_DISCONNECT_ERROR = 'disconnect_error';\n\nexport const NO_WATCH = 'NO_WATCH';\nexport const NO_SCHEMA = 'NO_SCHEMA';\nexport const REVISION_TOO_OLD = 'TOO_OLD';\n\nexport default class Socket extends EventTarget {\n  url;\n  autoReconnect = true;\n  frameTimeout = 35000;\n  metadata = {};\n  hasBeenOpen = false;\n  hasReconnected = false;\n  protocol = null;\n  maxTries = null;\n  tries = 0;\n  idAsTimestamp = false;\n\n  // \"Private\"\n  socket = null;\n  state = STATE_DISCONNECTED;\n  framesReceived = 0;\n  frameTimer;\n  reconnectTimer;\n  disconnectCallBacks = [];\n  disconnectedAt = 0;\n  closingId = 0;\n  autoReconnectUrl = null;\n\n  constructor(url, autoReconnect = true, frameTimeout = null, protocol = null, maxTries = null, idAsTimestamp = false) {\n    super();\n\n    this.setUrl(url);\n    this.autoReconnect = autoReconnect;\n    this.protocol = protocol;\n    // maxTries = null === never stop trying to reconnect\n    // allow maxTries to be defined on individual sockets bc not all will clearly warn the user that we've stopped trying\n    this.maxTries = maxTries;\n    this.idAsTimestamp = idAsTimestamp;\n\n    if ( frameTimeout !== null ) {\n      this.frameTimeout = frameTimeout;\n    }\n  }\n\n  setUrl(url) {\n    if ( !url.match(/wss?:\\/\\//) ) {\n      url = self.location.origin.replace(/^http/, 'ws') + url;\n    }\n\n    if ( self.location.protocol === 'https:' && url.startsWith(INSECURE) ) {\n      url = SECURE + url.substr(INSECURE.length);\n    }\n\n    this.url = url;\n  }\n\n  connect(metadata = {}) {\n    if ( this.socket ) {\n      console.error('Socket refusing to connect while another socket exists'); // eslint-disable-line no-console\n\n      return;\n    }\n\n    if (this.state !== STATE_RECONNECTING) {\n      this.state = STATE_CONNECTING;\n    }\n\n    Object.assign(this.metadata, metadata);\n\n    const id = this.idAsTimestamp ? new Date().getTime() : sockId++;\n    const url = addParam(this.url, 'sockId', id);\n\n    this._baseLog('connecting', { id, url: url.replace(/\\?.*/, '') });\n\n    let socket;\n\n    this.tries++;\n\n    if ( this.protocol ) {\n      socket = new WebSocket(url, this.protocol);\n    } else {\n      socket = new WebSocket(url);\n    }\n\n    socket.sockId = id;\n    socket.metadata = this.metadata;\n    socket.onmessage = this._onmessage.bind(this);\n    socket.onopen = this._opened.bind(this);\n    socket.onerror = this._error.bind(this);\n    socket.onclose = this._closed.bind(this);\n\n    this.socket = socket;\n    this.state = STATE_CONNECTING;\n\n    this.dispatchEvent(new CustomEvent(EVENT_CONNECTING));\n  }\n\n  send(data) {\n    if ( this.socket && this.state === STATE_CONNECTED ) {\n      this.socket.send(data);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  disconnect(callBack) {\n    if ( callBack ) {\n      this.disconnectCallBacks.push(callBack);\n    }\n\n    const self = this;\n    const promise = new Promise((resolve, reject) => {\n      if ( this.state === STATE_DISCONNECTED ) {\n        resolve();\n      }\n\n      function onError(e) {\n        reject(e);\n        self.removeEventListener(EVENT_CONNECT_ERROR, onError);\n      }\n\n      this.addEventListener(EVENT_CONNECT_ERROR, onError);\n\n      this.disconnectCallBacks.push(() => {\n        this.removeEventListener(EVENT_CONNECT_ERROR, onError);\n        resolve();\n      });\n    });\n\n    this.autoReconnect = false;\n    this._close();\n\n    return promise;\n  }\n\n  reconnect(metadata = {}) {\n    Object.assign(this.metadata, metadata);\n\n    if ( this.state === STATE_CONNECTING ) {\n      this._log('Ignoring reconnect for socket in connecting');\n\n      return;\n    }\n\n    if ( this.socket ) {\n      this._close();\n    } else {\n      this.connect(metadata);\n    }\n  }\n\n  getMetadata() {\n    if ( this.socket ) {\n      return this.socket.metadata;\n    } else {\n      return {};\n    }\n  }\n\n  getId() {\n    if ( this.socket ) {\n      return this.socket.sockId;\n    } else {\n      return 0;\n    }\n  }\n\n  isConnected() {\n    return this.state === STATE_CONNECTED;\n  }\n\n  setAutoReconnect(autoReconnect) {\n    this.autoReconnect = autoReconnect;\n  }\n\n  /**\n   * Supply an async fn that will provide a new url to reconnect to\n   */\n  setAutoReconnectUrl(autoReconnectUrl) {\n    this.autoReconnectUrl = autoReconnectUrl;\n  }\n\n  // \"Private\"\n  _close() {\n    const socket = this.socket;\n\n    if ( !socket ) {\n      return;\n    }\n\n    try {\n      this._log('closing');\n      this.closingId = socket.sockId;\n      socket.onopen = null;\n      socket.onerror = null;\n      socket.onmessage = null;\n      socket.close();\n    } catch (e) {\n      this._log('exception', { e: e.toString() });\n      // Continue anyway...\n    }\n\n    this.state = STATE_CLOSING;\n  }\n\n  _opened() {\n    this._log('opened');\n    const now = (new Date()).getTime();\n\n    const atTime = this.disconnectedAt;\n    let afterMilliseconds = 0;\n\n    if ( atTime ) {\n      afterMilliseconds = now - atTime;\n    }\n\n    if ( this.hasBeenOpen ) {\n      this.hasReconnected = true;\n    }\n\n    this.hasBeenOpen = true;\n    this.state = STATE_CONNECTED;\n    this.framesReceived = 0;\n    this.disconnectedAt = 0;\n\n    this.dispatchEvent(new CustomEvent(EVENT_CONNECTED, { detail: { tries: this.tries, afterMilliseconds } }));\n    this.tries = 0;\n    this._resetWatchdog();\n    clearTimeout(this.reconnectTimer);\n  }\n\n  _onmessage(event) {\n    this._resetWatchdog();\n    this.tries = 0;\n    this.framesReceived++;\n\n    this.dispatchEvent(new CustomEvent(EVENT_MESSAGE, { detail: event }));\n  }\n\n  _resetWatchdog() {\n    clearTimeout(this.frameTimer);\n\n    const timeout = this.frameTimeout;\n\n    if ( timeout && this.state === STATE_CONNECTED) {\n      this.frameTimer = setTimeout(() => {\n        this._log(`watchdog expired after${ timeout }. Closing`);\n        this._close();\n        this.dispatchEvent(new CustomEvent(EVENT_FRAME_TIMEOUT));\n      }, timeout);\n    }\n  }\n\n  _error() {\n    this.closingId = (this.socket ? this.socket.sockId : 0);\n    this._log('error');\n  }\n\n  _closed(event) {\n    const { code, reason, wasClean } = event;\n\n    this._baseLog('closed', {\n      id: this.closingId || this.socket?.sockId || 'unknown', code, reason, clean: wasClean\n    });\n\n    this.closingId = 0;\n    this.socket = null;\n    clearTimeout(this.reconnectTimer);\n    clearTimeout(this.frameTimer);\n\n    const callBacks = this.disconnectCallBacks;\n\n    while ( callBacks.length ) {\n      const fn = callBacks.pop();\n\n      if ( fn ) {\n        fn.apply(this);\n      }\n    }\n\n    if ( [STATE_CONNECTED, STATE_CLOSING].includes(this.state) ) {\n      wasConnected = true;\n    }\n\n    if ( !this.disconnectedAt ) {\n      this.disconnectedAt = (new Date()).getTime();\n    }\n\n    if ( !warningShown && !wasConnected ) {\n      this.autoReconnect = false;\n      this.state = STATE_DISCONNECTED;\n\n      const e = new CustomEvent(EVENT_CONNECT_ERROR, { detail: { isSafari } });\n\n      this.dispatchEvent(e);\n      warningShown = true;\n    } else if ( this.autoReconnect ) {\n      this.state = STATE_RECONNECTING;\n\n      if (this.maxTries && this.tries > 1 && this.tries <= this.maxTries) {\n        // dispatch an event which will trigger a growl from steve-plugin sockets warning users that we've lost connection and are attempting to reconnect\n        const e = new CustomEvent(EVENT_CONNECT_ERROR);\n\n        this.dispatchEvent(e);\n      }\n\n      if (this.maxTries && this.tries > this.maxTries) {\n        this._log('closed. Will not reconnect (hit max attempts)');\n        this.state = STATE_DISCONNECTED;\n        // dispatch an event which will trigger a growl from steve-plugin sockets warning users that we've given up trying to reconnect\n        this.dispatchEvent(new CustomEvent(EVENT_DISCONNECT_ERROR));\n      } else {\n        const reconnect = () => {\n          this._log('closed. Attempting to reconnect');\n          const delay = Math.max(1000, Math.min(1000 * this.tries, 30000));\n\n          this.reconnectTimer = setTimeout(() => {\n            this.connect();\n          }, delay);\n        };\n\n        if (this.autoReconnectUrl) {\n          this.autoReconnectUrl()\n            .then((url) => {\n              this.setUrl(url);\n\n              reconnect();\n            })\n            .catch((e) => {\n              console.error('Failed to fetch socket auto reconnect url', e); // eslint-disable-line no-console\n            });\n        } else {\n          reconnect();\n        }\n      }\n    } else {\n      this.state = STATE_DISCONNECTED;\n    }\n\n    if ( this.state === STATE_DISCONNECTED ) {\n      this.dispatchEvent(new CustomEvent(EVENT_DISCONNECTED));\n    } else if ( this.state === STATE_RECONNECTING ) {\n      this.dispatchEvent(new CustomEvent(EVENT_CONNECTING));\n    }\n  }\n\n  /**\n   * `console.log` the provided summary statement, with default information to identify the socket and the provided props\n   */\n  _log(summary, props) {\n    this._baseLog(summary, {\n      state: this.state, id: this.socket?.sockId || 0, ...props\n    });\n  }\n\n  /**\n   * `console.log` the provided summary statement and props\n   *\n   * This does not contain information to identify the socket and can be used in scenarios where it's not known or default\n   */\n  _baseLog(summary, props) {\n    const message = [summary];\n    const values = Object.entries(props || {});\n\n    message.unshift('Socket ');\n\n    if (values.length) {\n      message.push(' (');\n      values.forEach(([key, value], index) => {\n        if (index !== 0) {\n          message.push(`, `);\n        }\n        message.push(`${ key }=${ value }`);\n      });\n      message.push(')');\n    }\n\n    console.log(message.join('')); // eslint-disable-line no-console\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}