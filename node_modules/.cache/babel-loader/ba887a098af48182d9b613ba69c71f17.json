{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/detail/namespace.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/detail/namespace.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["CreateEditView","ResourcesSummary","ResourceTabs","COUNT","WORKLOAD_TYPES","WORKLOAD_SCHEMA","getStatesByType","MoveModal","Tab","ResourceTable","SortableTable","Loading","flatten","compact","filter","findKey","values","components","mixins","props","mode","default","type","String","value","required","Object","data","headers","name","label","t","sort","formatter","allWorkloads","Array","resourceTypes","summaryStates","workloadSchema","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","getAllWorkloads","sent","stop","computed","inStore","$store","getters","namespacedResourceCounts","_this2","allClusterResourceCounts","concat","counts","keys","reduce","namespaced","typeCounts","namespaces","id","inNamespace","push","byState","reduceStates","states","count","totalCount","schema","schemaFor","accumulatedStateCounts","totals","state","statesByType","sum","workloadRows","params","$route","rows","row","ownedByWorkload","namespacedRows","_ref","namespace","metadata","methods","total","_this3","out","success","forEach","genericStateKey","stateNames","includes","unknown","_this4","Promise","all","Boolean","map","dispatch","typeListLocation","_schema$links","links","collection","location","_objectSpread","resource","shortId"],"sources":["node_modules/@rancher/shell/detail/namespace.vue"],"sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport ResourcesSummary from '@shell/components/fleet/ResourcesSummary';\nimport ResourceTabs from '@shell/components/form/ResourceTabs';\nimport { COUNT, WORKLOAD_TYPES } from '@shell/config/types';\nimport { WORKLOAD_SCHEMA } from '@shell/config/schema';\nimport { getStatesByType } from '@shell/plugins/dashboard-store/resource-class';\nimport MoveModal from '@shell/components/MoveModal';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport SortableTable from '@shell/components/SortableTable';\nimport Loading from '@shell/components/Loading';\nimport {\n  flatten, compact, filter, findKey, values\n} from 'lodash';\n\nexport default {\n  components: {\n    ResourcesSummary,\n    ResourceTable,\n    ResourceTabs,\n    Loading,\n    MoveModal,\n    Tab,\n    SortableTable\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    mode: {\n      default: 'create',\n      type:    String,\n    },\n    value: {\n      required: true,\n      type:     Object,\n    },\n  },\n\n  data() {\n    const headers = [\n      {\n        name:  'type',\n        label: this.t('tableHeaders.simpleType'),\n        value: 'type'\n      },\n      {\n        name:      'error',\n        label:     this.t('namespace.resourceStates.error'),\n        value:     'byState.error',\n        sort:      'byState.error:desc',\n        formatter: 'Number'\n      },\n      {\n        name:      'warning',\n        label:     this.t('namespace.resourceStates.warning'),\n        value:     'byState.warning',\n        sort:      'byState.warning:desc',\n        formatter: 'Number'\n      },\n      {\n        name:      'transitioning',\n        label:     this.t('namespace.resourceStates.info'),\n        value:     'byState.info',\n        sort:      'byState.info:desc',\n        formatter: 'Number'\n      },\n      {\n        name:  'active',\n        label: this.t('namespace.resourceStates.success'),\n        sort:  'byState.success:desc',\n        value: 'byState.success',\n      },\n      {\n        name:      'unknown',\n        label:     this.t('namespace.resourceStates.unknown'),\n        sort:      'byState.unknown:desc',\n        value:     'byState.unknown',\n        formatter: 'Number'\n      },\n      {\n        name:  'total',\n        label: this.t('namespace.total'),\n        sort:  'totalCount:desc',\n        value: 'totalCount',\n      },\n    ];\n\n    return {\n      allWorkloads: {\n        default: () => ([]),\n        type:    Array,\n      },\n      resourceTypes:  [],\n      summaryStates:  ['success', 'info', 'warning', 'error', 'unknown'],\n      headers,\n      workloadSchema: WORKLOAD_SCHEMA\n    };\n  },\n\n  async fetch() {\n    this.allWorkloads = await this.getAllWorkloads();\n  },\n\n  computed: {\n    inStore() {\n      return this.$store.getters['currentProduct'].inStore;\n    },\n\n    namespacedResourceCounts() {\n      const allClusterResourceCounts = this.$store.getters[`${ this.inStore }/all`](COUNT)[0].counts;\n\n      return Object.keys(allClusterResourceCounts).reduce((namespaced, type) => {\n        const typeCounts = allClusterResourceCounts[type];\n\n        if (!typeCounts.namespaces || !typeCounts.namespaces[this.value.id]) {\n          return namespaced;\n        }\n        const inNamespace = typeCounts.namespaces[this.value.id];\n\n        namespaced.push({\n          type,\n          byState:    this.reduceStates(inNamespace.states || {}, inNamespace.count),\n          totalCount: inNamespace.count,\n          schema:     this.schemaFor(type)\n        });\n\n        return namespaced;\n      }, []);\n    },\n\n    accumulatedStateCounts() {\n      const totals = {};\n\n      for (const state in this.statesByType) {\n        totals[state] = 0;\n      }\n\n      return this.namespacedResourceCounts.reduce((sum, type) => {\n        for (const state in type.byState) {\n          sum[state] += type.byState[state];\n        }\n\n        return sum;\n      }, totals);\n    },\n\n    statesByType() {\n      return getStatesByType();\n    },\n\n    /**\n     * Workload table data for current namespace\n     */\n    workloadRows() {\n      const params = this.$route.params;\n      const { id } = params;\n      const rows = flatten(compact(this.allWorkloads)).filter((row) => !row.ownedByWorkload);\n      const namespacedRows = filter(rows, ({ metadata: { namespace } }) => namespace === id);\n\n      return namespacedRows;\n    }\n  },\n\n  methods: {\n    // sort states into 5 color-delineated categories: info, error, success, warning, unknown\n    reduceStates(states, total) {\n      const out = { success: total };\n\n      Object.keys(states).forEach((state) => {\n        out.success -= states[state];\n        if (!!out[state]) {\n          out[state] += states[state];\n        } else {\n          const genericStateKey = findKey(\n            this.statesByType,\n            (stateNames) => stateNames.includes(state)\n          );\n\n          if (genericStateKey) {\n            out[genericStateKey] ? out[genericStateKey] += states[state] : out[genericStateKey] = states[state];\n          } else {\n            out.unknown ? out.unknown += states[state] : out.unknown = states[state];\n          }\n        }\n      });\n\n      return out;\n    },\n\n    /**\n     * Retrieve workloads for this namespace and each type\n     */\n    getAllWorkloads() {\n      return Promise.all(values(WORKLOAD_TYPES)\n        // You may not have RBAC to see some of the types\n        .filter((type) => Boolean(this.schemaFor(type)))\n        .map((type) => this.$store.dispatch('cluster/findAll', { type }))\n      );\n    },\n\n    schemaFor(type) {\n      return this.$store.getters[`${ this.inStore }/schemaFor`](type);\n    },\n\n    typeListLocation(schema) {\n      if (schema?.links?.collection) {\n        const location = {\n          name:   'c-cluster-product-resource',\n          params: { ...this.$route.params, resource: schema.shortId }\n        };\n\n        return location;\n      }\n\n      return null;\n    },\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <div class=\"mb-20\">\n      <h3>{{ t('namespace.resources') }}</h3>\n      <ResourcesSummary\n        state-key=\"namespace.resourceStates\"\n        :value=\"accumulatedStateCounts\"\n        :required-states=\"summaryStates\"\n      />\n    </div>\n    <ResourceTabs\n      v-model=\"value\"\n      :mode=\"mode\"\n    >\n      <Tab :name=\"t('namespace.resources')\">\n        <SortableTable\n          default-sort-by=\"error\"\n          :table-actions=\"false\"\n          :row-actions=\"false\"\n          :rows=\"namespacedResourceCounts\"\n          :headers=\"headers\"\n        >\n          <template #col:type=\"{row}\">\n            <td>\n              <router-link\n                v-if=\"typeListLocation(row.schema)\"\n                :to=\"typeListLocation(row.schema)\"\n              >\n                {{ row.schema.pluralName }}\n              </router-link>\n              <span v-else>{{ row.schema.pluralName }}</span>\n            </td>\n          </template>\n        </SortableTable>\n      </Tab>\n\n      <Tab :name=\"t('namespace.workloads')\">\n        <ResourceTable\n          name=\"workloads\"\n          :groupable=\"false\"\n          v-bind=\"$attrs\"\n          :schema=\"workloadSchema\"\n          :rows=\"workloadRows\"\n        />\n      </Tab>\n    </ResourceTabs>\n    <MoveModal />\n  </div>\n</template>\n"],"mappings":"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","ignoreList":[]}]}