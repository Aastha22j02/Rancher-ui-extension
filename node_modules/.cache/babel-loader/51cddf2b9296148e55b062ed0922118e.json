{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/namespace.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/namespace.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapGetters","NameNsDescription","CreateEditView","LabeledSelect","MANAGEMENT","CONTAINER_DEFAULT_RESOURCE_LIMIT","PROJECT","ContainerResourceLimit","PodSecurityAdmission","Tab","ResourceTabs","CruResource","PROJECT_ID","_VIEW","FLAT_VIEW","_CREATE","MoveModal","ResourceQuota","Loading","HARVESTER_TYPES","RANCHER_TYPES","HARVESTER_NAME","HARVESTER","Labels","randomStr","components","mixins","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$store","getters","dispatch","type","projects","sent","project","find","p","id","includes","projectName","stop","data","_this$liveValue","_this$value","_this$value$annotatio","originalQuotaId","liveValue","metadata","name","concat","value","labels","$route","query","viewMode","containerResourceLimits","annotations","getDefaultContainerResourceLimits","rerenderNums","computed","_objectSpread","isCreate","mode","projectOpts","clusterId","filter","c","_c$spec","spec","clusterName","out","map","label","nameDisplay","unshift","t","doneLocationOverride","listLocation","showResourceQuota","_this$project","isStandaloneHarvester","Object","keys","resourceQuota","limit","length","showContainerResourceLimit","flatView","showPodSecurityAdmission","showHarvesterHelpText","inStore","watch","limits","$set","newProjectName","created","registerBeforeHook","willSave","methods","_this$project2","cluster","projectId","split","annotation","setLabel","setAnnotation","_project$spec","containerDefaultResourceLimit","PSAChanged","$event","setLabels"],"sources":["node_modules/@rancher/shell/edit/namespace.vue"],"sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { MANAGEMENT } from '@shell/config/types';\nimport { CONTAINER_DEFAULT_RESOURCE_LIMIT, PROJECT } from '@shell/config/labels-annotations';\nimport ContainerResourceLimit from '@shell/components/ContainerResourceLimit';\nimport PodSecurityAdmission from '@shell/components/PodSecurityAdmission';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport ResourceTabs from '@shell/components/form/ResourceTabs/index.vue';\nimport CruResource from '@shell/components/CruResource';\nimport { PROJECT_ID, _VIEW, FLAT_VIEW, _CREATE } from '@shell/config/query-params';\nimport MoveModal from '@shell/components/MoveModal';\nimport ResourceQuota from '@shell/components/form/ResourceQuota/Namespace';\nimport Loading from '@shell/components/Loading';\nimport { HARVESTER_TYPES, RANCHER_TYPES } from '@shell/components/form/ResourceQuota/shared';\nimport { HARVESTER_NAME as HARVESTER } from '@shell/config/features';\nimport Labels from '@shell/components/form/Labels';\nimport { randomStr } from '@shell/utils/string';\n\nexport default {\n  components: {\n    ContainerResourceLimit,\n    CruResource,\n    LabeledSelect,\n    Labels,\n    Loading,\n    NameNsDescription,\n    PodSecurityAdmission,\n    ResourceQuota,\n    Tab,\n    ResourceTabs,\n    MoveModal\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    if (this.$store.getters['management/schemaFor'](MANAGEMENT.PROJECT)) {\n      this.projects = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.PROJECT });\n\n      this.project = this.projects.find((p) => p.id.includes(this.projectName));\n    }\n  },\n\n  data() {\n    let originalQuotaId = null;\n\n    if ( this.liveValue?.metadata?.name ) {\n      originalQuotaId = `${ this.liveValue.metadata.name }/default-quota`;\n    }\n\n    const projectName = this.value?.metadata?.labels?.[PROJECT] || this.$route.query[PROJECT_ID];\n\n    return {\n      originalQuotaId,\n      project:                 null,\n      projects:                null,\n      viewMode:                _VIEW,\n      containerResourceLimits: this.value.annotations?.[CONTAINER_DEFAULT_RESOURCE_LIMIT] || this.getDefaultContainerResourceLimits(projectName),\n      rerenderNums:            randomStr(4),\n      projectName,\n      HARVESTER_TYPES,\n      RANCHER_TYPES,\n    };\n  },\n\n  computed: {\n    ...mapGetters(['isStandaloneHarvester']),\n\n    isCreate() {\n      return this.mode === _CREATE;\n    },\n\n    projectOpts() {\n      const clusterId = this.$store.getters['currentCluster'].id;\n      let projects = this.$store.getters['management/all'](MANAGEMENT.PROJECT);\n\n      // Filter out projects not for the current cluster\n      projects = projects.filter((c) => c.spec?.clusterName === clusterId);\n      const out = projects.map((project) => {\n        return {\n          label: project.nameDisplay,\n          value: project.metadata.name,\n        };\n      });\n\n      out.unshift({\n        label: this.t('namespace.project.none'),\n        value: null,\n      });\n\n      return out;\n    },\n\n    doneLocationOverride() {\n      return this.value.listLocation;\n    },\n\n    showResourceQuota() {\n      return (!this.isStandaloneHarvester) && Object.keys(this.project?.spec?.resourceQuota?.limit || {}).length > 0;\n    },\n\n    showContainerResourceLimit() {\n      return !this.isStandaloneHarvester;\n    },\n\n    flatView() {\n      return (this.$route.query[FLAT_VIEW] || false);\n    },\n\n    showPodSecurityAdmission() {\n      return !this.isStandaloneHarvester;\n    },\n\n    showHarvesterHelpText() {\n      return !this.isStandaloneHarvester && this.$store.getters['currentProduct'].inStore === HARVESTER;\n    },\n  },\n\n  watch: {\n    project() {\n      const limits = this.getDefaultContainerResourceLimits(this.projectName);\n\n      this.$set(this, 'containerResourceLimits', limits);\n    },\n\n    projectName(newProjectName) {\n      this.$set(this, 'project', this.projects.find((p) => p.id.includes(newProjectName)));\n    }\n  },\n\n  created() {\n    this.registerBeforeHook(this.willSave, 'willSave');\n  },\n\n  methods: {\n    willSave() {\n      const cluster = this.$store.getters['currentCluster'];\n      const projectId = this.project?.id.split('/')[1];\n      const annotation = projectId ? `${ cluster.id }:${ projectId }` : null;\n\n      this.value.setLabel(PROJECT, projectId);\n      this.value.setAnnotation(PROJECT, annotation);\n    },\n\n    getDefaultContainerResourceLimits(projectName) {\n      if (!projectName) {\n        return;\n      }\n\n      const projects = this.$store.getters['management/all'](MANAGEMENT.PROJECT);\n      const project = projects.find((p) => p.id.includes(projectName));\n\n      return project?.spec?.containerDefaultResourceLimit || {};\n    },\n\n    PSAChanged($event) {\n      this.value.setLabels($event);\n      this.rerenderNums = randomStr(4);\n    }\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <CruResource\n    v-else\n    :done-route=\"doneLocationOverride.name\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"true\"\n    :errors=\"errors\"\n    :apply-hooks=\"applyHooks\"\n    @error=\"e=>errors = e\"\n    @finish=\"save\"\n    @cancel=\"done\"\n  >\n    <NameNsDescription\n      v-if=\"!isView\"\n      :value=\"value\"\n      :namespaced=\"false\"\n      :mode=\"mode\"\n      :extra-columns=\"['project-col']\"\n    >\n      <template\n        v-if=\"flatView && isCreate\"\n        #project-col\n      >\n        <LabeledSelect\n          v-model=\"projectName\"\n          data-testid=\"name-ns-description-project\"\n          :label=\"t('namespace.project.label')\"\n          :options=\"projectOpts\"\n        />\n      </template>\n    </NameNsDescription>\n    <ResourceTabs\n      v-model=\"value\"\n      :mode=\"mode\"\n      :side-tabs=\"true\"\n    >\n      <Tab\n        v-if=\"showResourceQuota\"\n        :weight=\"1\"\n        name=\"container-resource-quotas\"\n        :label=\"t('namespace.resourceQuotas')\"\n      >\n        <div class=\"row\">\n          <div class=\"col span-12\">\n            <p class=\"helper-text mb-10\">\n              <t\n                v-if=\"mode === viewMode\"\n                k=\"resourceQuota.helpTextDetail\"\n              />\n              <t\n                v-else\n                k=\"resourceQuota.helpText\"\n              />\n              <span v-if=\"showHarvesterHelpText\">\n                {{ t('resourceQuota.helpTextHarvester') }}\n              </span>\n            </p>\n          </div>\n        </div>\n        <ResourceQuota\n          v-model=\"value\"\n          :mode=\"mode\"\n          :project=\"project\"\n          :types=\"isStandaloneHarvester ? HARVESTER_TYPES : RANCHER_TYPES\"\n        />\n      </Tab>\n      <Tab\n        v-if=\"showContainerResourceLimit\"\n        :weight=\"0\"\n        name=\"container-resource-limit\"\n        :label=\"t('namespace.containerResourceLimit')\"\n      >\n        <ContainerResourceLimit\n          :key=\"JSON.stringify(containerResourceLimits)\"\n          :value=\"containerResourceLimits\"\n          :mode=\"mode\"\n          :namespace=\"value\"\n          :register-before-hook=\"registerBeforeHook\"\n        />\n      </Tab>\n      <Tab\n        name=\"labels-and-annotations\"\n        label-key=\"generic.labelsAndAnnotations\"\n        :weight=\"-1\"\n      >\n        <Labels\n          :key=\"rerenderNums\"\n          default-container-class=\"labels-and-annotations-container\"\n          :value=\"value\"\n          :mode=\"mode\"\n          :display-side-by-side=\"false\"\n        />\n      </Tab>\n      <Tab\n        v-if=\"showPodSecurityAdmission\"\n        name=\"pod-security-admission\"\n        label-key=\"podSecurityAdmission.name\"\n        :label=\"t('podSecurityAdmission.name')\"\n      >\n        <PodSecurityAdmission\n          :labels=\"value.labels\"\n          :mode=\"mode\"\n          labels-prefix=\"pod-security.kubernetes.io/\"\n          @updateLabels=\"PSAChanged\"\n        />\n      </Tab>\n    </ResourceTabs>\n    <MoveModal v-if=\"projects\" />\n  </CruResource>\n</template>\n"],"mappings":"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","ignoreList":[]}]}