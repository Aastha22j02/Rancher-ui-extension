{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/catalog.cattle.io.app.js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/catalog.cattle.io.app.js","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["NAMESPACE","NAME","REPO","REPO_TYPE","CHART","VERSION","_VIEW","FROM_TOOLS","_FLAGGED","CATALOG","CATALOG_ANNOTATIONS","FLEET","compare","isPrerelease","sortable","filterBy","MANAGEMENT","NORMAN","SHOW_PRE_RELEASE","set","SteveModel","compatibleVersionsFor","CatalogApp","_SteveModel","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","showMasthead","mode","applyDefaults","get","out","_get","_getPrototypeOf","prototype","upgrade","action","enabled","icon","label","t","unshift","matchingChart","includeHidden","_this$spec","_chart$metadata","_chart$metadata2","_chart$metadata3","chart","spec","chartName","metadata","name","preferRepoType","annotations","SOURCE_REPO_TYPE","preferRepoName","SOURCE_REPO_NAME","match","$rootGetters","_this$spec2","version","_this$spec3","_this$spec4","_this$spec5","_versions","MANAGED","BUNDLE_ID","workerOSs","showPreRelease","thisVersion","versions","filter","v","newestChart","newestVersion","cleanupVersion","upgradeAvailable","_this$spec6","versionInChart","find","compatibleVersions","thisVersionCompatible","currentVersionCompatible","goToUpgrade","forceVersion","fromTools","_this$spec7","versionName","query","_defineProperty","namespace","repoName","repoType","currentRouter","push","params","product","cluster","_this$spec8","_this$spec9","first","info","firstDeployed","last","lastDeployed","formatter","content","_this$spec10","_this$metadata","id","_this$spec11","concat","versionDisplay","_this$spec12","_remove","_asyncToGenerator","_regeneratorRuntime","mark","_callee","opt","res","operation","_args","wrap","_callee$","_context","prev","next","length","undefined","doAction","sent","$dispatch","type","OPERATION","operationNamespace","operationName","waitForLink","openLogs","t0","stop","remove","apply","_this","_callee2","crd","_callee2$","_context2","AUTO_INSTALL","replace","APP","abrupt","hasAction","_this$metadata2","relationships","_this2","_callee3","mcapps","_callee3$","_context3","MULTI_CLUSTER_APP","root","catch","Error","mcapp","_mcapp$spec","targets","target","_this2$metadata","appName","_this3","_callee4","_this3$spec","_this3$spec$values$gl","clusterName","projectName","_this3$metadata","_this3$metadata2","legacyApp","_callee4$","_context4","values","global","url","default","substr","hash"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/catalog.cattle.io.app.js"],"sourcesContent":["import {\n  NAMESPACE, NAME, REPO, REPO_TYPE, CHART, VERSION, _VIEW, FROM_TOOLS, _FLAGGED\n} from '@shell/config/query-params';\nimport { CATALOG as CATALOG_ANNOTATIONS, FLEET } from '@shell/config/labels-annotations';\nimport { compare, isPrerelease, sortable } from '@shell/utils/version';\nimport { filterBy } from '@shell/utils/array';\nimport { CATALOG, MANAGEMENT, NORMAN } from '@shell/config/types';\nimport { SHOW_PRE_RELEASE } from '@shell/store/prefs';\nimport { set } from '@shell/utils/object';\n\nimport SteveModel from '@shell/plugins/steve/steve-class';\nimport { compatibleVersionsFor } from '@shell/store/catalog';\n\nexport default class CatalogApp extends SteveModel {\n  showMasthead(mode) {\n    return mode === _VIEW;\n  }\n\n  applyDefaults() {\n    set(this, 'disableOpenApiValidation', false);\n    set(this, 'noHooks', false);\n    set(this, 'skipCRDs', false);\n    set(this, 'timeout', 300);\n    set(this, 'wait', true);\n  }\n\n  get _availableActions() {\n    const out = super._availableActions;\n\n    const upgrade = {\n      action:  'goToUpgrade',\n      enabled: true,\n      icon:    'icon icon-fw icon-edit',\n      label:   this.t('catalog.install.action.goToUpgrade'),\n    };\n\n    out.unshift(upgrade);\n\n    return out;\n  }\n\n  matchingChart(includeHidden) {\n    const chart = this.spec?.chart;\n\n    if ( !chart ) {\n      return;\n    }\n\n    const chartName = chart.metadata?.name;\n    const preferRepoType = chart.metadata?.annotations?.[CATALOG_ANNOTATIONS.SOURCE_REPO_TYPE];\n    const preferRepoName = chart.metadata?.annotations?.[CATALOG_ANNOTATIONS.SOURCE_REPO_NAME];\n    const match = this.$rootGetters['catalog/chart']({\n      chartName,\n      preferRepoType,\n      preferRepoName,\n      includeHidden\n    });\n\n    return match;\n  }\n\n  get currentVersion() {\n    return this.spec?.chart?.metadata?.version;\n  }\n\n  get upgradeAvailable() {\n    // false = does not apply (managed by fleet)\n    // null = no upgrade found\n    // object = version available to upgrade to\n\n    if (\n      this.spec?.chart?.metadata?.annotations?.[CATALOG_ANNOTATIONS.MANAGED] ||\n      this.spec?.chart?.metadata?.annotations?.[FLEET.BUNDLE_ID]\n    ) {\n      // Things managed by fleet shouldn't show upgrade available even if there might be.\n      return false;\n    }\n    const chart = this.matchingChart(false);\n\n    if ( !chart ) {\n      return null;\n    }\n\n    const workerOSs = this.$rootGetters['currentCluster'].workerOSs;\n\n    const showPreRelease = this.$rootGetters['prefs/get'](SHOW_PRE_RELEASE);\n\n    const thisVersion = this.spec?.chart?.metadata?.version;\n    let versions = chart.versions;\n\n    if (!showPreRelease) {\n      versions = chart.versions.filter((v) => !isPrerelease(v.version));\n    }\n\n    versions = compatibleVersionsFor(chart, workerOSs, showPreRelease);\n\n    const newestChart = versions?.[0];\n    const newestVersion = newestChart?.version;\n\n    if ( !thisVersion || !newestVersion ) {\n      return null;\n    }\n\n    if ( compare(thisVersion, newestVersion) < 0 ) {\n      return cleanupVersion(newestVersion);\n    }\n\n    return null;\n  }\n\n  get upgradeAvailableSort() {\n    const version = this.upgradeAvailable;\n\n    if ( !version ) {\n      return '~'; // Tilde sorts after all numbers and letters\n    }\n\n    return sortable(version);\n  }\n\n  get currentVersionCompatible() {\n    const workerOSs = this.$rootGetters['currentCluster'].workerOSs;\n\n    const chart = this.matchingChart(false);\n    const thisVersion = this.spec?.chart?.metadata?.version;\n\n    if (!chart) {\n      return true;\n    }\n\n    const versionInChart = chart.versions.find((version) => version.version === thisVersion);\n\n    if (!versionInChart) {\n      return true;\n    }\n    const compatibleVersions = compatibleVersionsFor(chart, workerOSs, true) || [];\n\n    const thisVersionCompatible = !!compatibleVersions.find((version) => version.version === thisVersion);\n\n    return thisVersionCompatible;\n  }\n\n  get stateDescription() {\n    if (this.currentVersionCompatible) {\n      return null;\n    }\n    if (this.upgradeAvailable) {\n      return this.t('catalog.os.versionIncompatible');\n    }\n\n    return this.t('catalog.os.chartIncompatible');\n  }\n\n  goToUpgrade(forceVersion, fromTools) {\n    const match = this.matchingChart(true);\n    const versionName = this.spec?.chart?.metadata?.version;\n    const query = {\n      [NAMESPACE]: this.metadata.namespace,\n      [NAME]:      this.metadata.name,\n      [VERSION]:   forceVersion || versionName,\n    };\n\n    if ( match ) {\n      query[REPO] = match.repoName;\n      query[REPO_TYPE] = match.repoType;\n      query[CHART] = match.chartName;\n    }\n\n    if ( fromTools ) {\n      query[FROM_TOOLS] = _FLAGGED;\n    }\n\n    this.currentRouter().push({\n      name:   'c-cluster-apps-charts-install',\n      params: {\n        product: this.$rootGetters['productId'],\n        cluster: this.$rootGetters['clusterId'],\n      },\n      query,\n    });\n  }\n\n  get details() {\n    const t = this.$rootGetters['i18n/t'];\n\n    const first = this.spec?.info?.firstDeployed;\n    const last = this.spec?.info?.lastDeployed;\n\n    if ( first && last && first !== last ) {\n      return [\n        {\n          label:     t('model.\"catalog.cattle.io.app\".lastDeployed'),\n          formatter: 'LiveDate',\n          content:   last,\n        },\n      ];\n    }\n\n    return [];\n  }\n\n  get nameDisplay() {\n    const out = this.spec?.name || this.metadata?.name || this.id || '';\n\n    return out;\n  }\n\n  get chartDisplay() {\n    const name = this.spec?.chart?.metadata?.name || '?';\n\n    return `${ name }:${ this.versionDisplay }`;\n  }\n\n  get versionDisplay() {\n    return cleanupVersion(this.spec?.chart?.metadata?.version);\n  }\n\n  get versionSort() {\n    return sortable(this.versionDisplay);\n  }\n\n  async remove(opt = {}) {\n    const res = await this.doAction('uninstall', opt);\n\n    const operation = await this.$dispatch('find', {\n      type: CATALOG.OPERATION,\n      id:   `${ res.operationNamespace }/${ res.operationName }`\n    });\n\n    try {\n      await operation.waitForLink('logs');\n      operation.openLogs();\n    } catch (e) {\n      // The wait times out eventually, move on...\n    }\n  }\n\n  get relatedResourcesToRemove() {\n    return async() => {\n      const crd = this.spec.chart.metadata.annotations[CATALOG_ANNOTATIONS.AUTO_INSTALL].replace('=match', '');\n\n      return await this.$dispatch('find', {\n        type: CATALOG.APP,\n        id:   `${ this.metadata.namespace }/${ crd }`\n      });\n    };\n  }\n\n  get canDelete() {\n    return this.hasAction('uninstall');\n  }\n\n  get deployedResources() {\n    return filterBy(this.metadata?.relationships || [], 'rel', 'helmresource');\n  }\n\n  get deployedAsMultiCluster() {\n    return async() => {\n      try {\n        const mcapps = await this.$dispatch('management/findAll', { type: MANAGEMENT.MULTI_CLUSTER_APP }, { root: true })\n          .catch(() => {\n            throw new Error(\"You don't have permission to list multi-cluster apps\");\n          });\n\n        if (mcapps) {\n          return mcapps.find((mcapp) => mcapp.spec?.targets?.find((target) => target.appName === this.metadata?.name));\n        }\n      } catch (e) {}\n\n      return false;\n    };\n  }\n\n  get deployedAsLegacy() {\n    return async() => {\n      if (this.spec?.values?.global) {\n        const { clusterName, projectName } = this.spec.values.global;\n\n        if (clusterName && projectName) {\n          try {\n            const legacyApp = await this.$dispatch('rancher/find', {\n              type: NORMAN.APP,\n              id:   `${ projectName }:${ this.metadata?.name }`,\n              opt:  { url: `/v3/project/${ clusterName }:${ projectName }/apps/${ projectName }:${ this.metadata?.name }` }\n            }, { root: true });\n\n            if (legacyApp) {\n              return legacyApp;\n            }\n          } catch (e) {}\n        }\n      }\n\n      return false;\n    };\n  }\n}\n\nfunction cleanupVersion(version) {\n  if ( !version ) {\n    return '?';\n  }\n\n  if ( version.match(/^v/i) ) {\n    version = version.substr(1);\n  }\n\n  const hash = version.match(/[0-9a-f]{32,}/);\n\n  if ( hash ) {\n    version = version.replace(hash[0], hash[0].substr(0, 7));\n  }\n\n  return version;\n}\n"],"mappings":"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","ignoreList":[]}]}