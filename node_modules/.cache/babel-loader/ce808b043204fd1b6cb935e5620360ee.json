{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/store/pnap.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/store/pnap.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["base64Encode","addParam","addParams","ENDPOINT","state","cache","mutations","setCache","_ref","credentialId","key","value","getters","fromCache","_ref2","_state$cache$credenti","actions","osChoices","_ref3","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","osList","oses","result","map","_iterator","_step","os","wrap","_callee$","_context","prev","next","command","sent","operatingSystems","Array","isArray","Map","_createForOfIteratorHelper","s","n","done","has","set","push","label","err","e","f","message","abrupt","stop","allProducts","_ref5","_ref6","_callee2","out","_callee2$","_context2","cachedCommand","_ref7","_ref8","_callee3","commit","_callee3$","_context3","request","_ref9","_ref10","_callee4","_res$links","clientId","clientSecret","opt","url","body","method","headers","credentials","encoded","res","_callee4$","_context4","replace","concat","per_page","params","Accept","data","redirectUnauthorized","root","links","pages"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/store/pnap.js"],"sourcesContent":["import { base64Encode } from '@shell/utils/crypto';\nimport { addParam, addParams } from '@shell/utils/url';\n\nconst ENDPOINT = 'api.phoenixnap.com';\n\nexport const state = () => {\n  return { cache: {} };\n};\n\nexport const mutations = {\n  setCache(state, { credentialId, key, value }) {\n    let cache = state.cache[credentialId];\n\n    if ( !cache ) {\n      cache = {};\n      state.cache[credentialId] = cache;\n    }\n\n    cache[key] = value;\n  },\n};\n\nexport const getters = {\n  fromCache: (state) => ({ credentialId, key }) => {\n    return state.cache[credentialId]?.[key];\n  },\n};\n\nexport const actions = {\n  async osChoices({ dispatch }, { credentialId }) {\n    const osList = await dispatch('cachedCommand', { credentialId, command: 'rancher-node-driver/options' });\n\n    const oses = osList.operatingSystems;\n    const result = [];\n\n    if (Array.isArray(oses)) {\n      const map = new Map();\n\n      for (const os of oses) {\n        if (!map.has(os)) {\n          map.set(os, true);\n          result.push({ value: os, label: os });\n        }\n      }\n    } else {\n      result.push({ value: osList.message });\n    }\n\n    return result;\n  },\n\n  async allProducts({ dispatch }, { credentialId }) {\n    const out = await dispatch('cachedCommand', { credentialId, command: 'billing/v1/products?productCategory=SERVER' });\n\n    return out;\n  },\n\n  async cachedCommand({ getters, commit, dispatch }, { credentialId, command }) {\n    let out = getters['fromCache']({ credentialId, key: command });\n\n    if ( !out ) {\n      out = await dispatch('request', { credentialId, command });\n      commit('setCache', {\n        credentialId, key: command, value: out\n      });\n    }\n\n    return out;\n  },\n\n  async request({ dispatch }, {\n    clientId, clientSecret, credentialId, command, opt, out\n  }) {\n    opt = opt || {};\n\n    let url = '/meta/proxy/';\n    const body = null;\n    let method = 'GET';\n\n    if ( opt.url ) {\n      url += opt.url.replace(/^https?:\\/\\//, '');\n    } else {\n      url += `${ ENDPOINT }/${ command }`;\n      url = addParam(url, 'per_page', opt.per_page || 1000);\n      url = addParams(url, opt.params || {});\n    }\n\n    const headers = { Accept: 'application/json' };\n\n    if ( credentialId ) {\n      headers['X-API-CattleAuth-Header'] = `Bearer credID=${ credentialId } passwordField=token`;\n    } else if ( clientId ) {\n      const credentials = `${ clientId }:${ clientSecret }`;\n      const encoded = base64Encode(credentials);\n\n      headers['Content-Type'] = 'application/json';\n      headers['X-API-Auth-Header'] = `Basic ${ encoded }`;\n      url = '/meta/proxy/auth.phoenixnap.com/auth/realms/BMC/protocol/openid-connect/token/';\n      // body = `grant_type:client_credentials`;\n      method = 'POST';\n    }\n\n    const res = await dispatch('management/request', {\n      url,\n      method,\n      headers,\n      data:                 body,\n      redirectUnauthorized: false,\n    }, { root: true });\n\n    if ( out ) {\n      out[command] = out[command].concat(res[command]);\n    } else {\n      out = res;\n    }\n\n    // De-pagination\n    if ( res?.links?.pages?.next ) {\n      opt.url = res.links.pages.next;\n\n      return dispatch('request', {\n        clientId, clientSecret, credentialId, command, opt, out\n      });\n    }\n\n    return out;\n  }\n};\n"],"mappings":"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","ignoreList":[]}]}