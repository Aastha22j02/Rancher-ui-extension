{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/c/_cluster/manager/jwt.authentication/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/c/_cluster/manager/jwt.authentication/index.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["MANAGEMENT","STATE","AGE","STATES_ENUM","colorForState","ResourceTable","defaultTableSortGenerationFn","Loading","Masthead","allHash","ResourceFetch","BadgeState","TypeDescription","exceptionToErrorsArray","Banner","name","components","mixins","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","hash","res","wrap","_callee$","_context","prev","next","mgmtClusters","$fetchType","CLUSTER","proxyConfig","CLUSTER_PROXY_CONFIG","sent","clusters","proxyConfigs","stop","data","resource","schema","$store","getters","useQueryParamsForSimpleFiltering","errors","forceUpdateLiveAndDelayed","methods","closeError","index","filter","_","i","sortGenerationFn","base","computed","headers","out","_objectSpread","value","labelKey","sort","search","formatter","rows","_this2","proxyConfigMap","Map","enableAction","action","allEnabled","anyEnabled","bulkable","enabled","icon","label","t","invoke","_invoke","_callee2","opts","resources","promises","_callee2$","_context2","forEach","enable","push","Promise","all","t0","_x","_x2","apply","arguments","disableAction","_invoke2","_callee3","_callee3$","_context3","disable","_x3","_x4","config","id","metadata","namespace","set","cluster","clusterName","spec","displayName","_proxyConfigMap$get","_config$metadata","_config$metadata2","get","configName","updatedOn","creationTimestamp","stateBackground","ACTIVE","replace","INFO","stateLabel","availableActions","_ref","_callee4","clusterProxyConfig","_callee4$","_context4","dispatch","generateName","abrupt","save","url","method","_ref2","_callee5","_callee5$","_context5","remove","Date","getTime"],"sources":["node_modules/@rancher/shell/pages/c/_cluster/manager/jwt.authentication/index.vue"],"sourcesContent":["<script>\nimport { MANAGEMENT } from '@shell/config/types';\nimport { STATE, AGE } from '@shell/config/table-headers';\nimport { STATES_ENUM, colorForState } from '@shell/plugins/dashboard-store/resource-class';\nimport ResourceTable, { defaultTableSortGenerationFn } from '@shell/components/ResourceTable';\nimport Loading from '@shell/components/Loading';\nimport Masthead from '@shell/components/ResourceList/Masthead';\nimport { allHash } from '@shell/utils/promise';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\nimport { BadgeState } from '@components/BadgeState';\nimport TypeDescription from '@shell/components/TypeDescription';\n\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport Banner from '@components/Banner/Banner.vue';\n\nexport default {\n  name:       'ClusterProxyConfig',\n  components: {\n    ResourceTable, Loading, Masthead, BadgeState, Banner, TypeDescription\n  },\n  mixins: [ResourceFetch],\n  async fetch() {\n    const hash = {\n      mgmtClusters: this.$fetchType(MANAGEMENT.CLUSTER),\n      proxyConfig:  this.$fetchType(MANAGEMENT.CLUSTER_PROXY_CONFIG)\n    };\n\n    const res = await allHash(hash);\n\n    this.clusters = res.mgmtClusters;\n    this.proxyConfigs = res.proxyConfig;\n  },\n\n  data() {\n    return {\n      clusters:                         [],\n      proxyConfigs:                     [],\n      resource:                         MANAGEMENT.CLUSTER_PROXY_CONFIG,\n      schema:                           this.$store.getters['management/schemaFor'](MANAGEMENT.CLUSTER_PROXY_CONFIG),\n      useQueryParamsForSimpleFiltering: false,\n      errors:                           [],\n      forceUpdateLiveAndDelayed:        5\n    };\n  },\n  methods: {\n    closeError(index) {\n      this.errors = this.errors.filter((_, i) => i !== index);\n    },\n    sortGenerationFn() {\n      // This is needed to make sure table gets refreshed when the status changes. Otherwise, it uses cached values.\n      const base = defaultTableSortGenerationFn(this.schema, this.$store);\n\n      return base + this.forceUpdateLiveAndDelayed;\n    },\n  },\n  computed: {\n    headers() {\n      const out = [\n        {\n          ...STATE,\n          value: 'value',\n        },\n        {\n          name:      'clusterName',\n          labelKey:  'jwt.headers.clusterName',\n          value:     'clusterName',\n          sort:      'clusterName',\n          search:    ['clusterName'],\n          formatter: 'LinkDetail'\n        },\n\n        {\n          name:      'updatedOn',\n          labelKey:  'jwt.headers.updatedOn',\n          value:     'updatedOn',\n          sort:      'updatedOn',\n          formatter: 'Date',\n        },\n        {\n          ...AGE,\n          labelKey: 'jwt.headers.clusterAge',\n        },\n      ];\n\n      return out;\n    },\n    rows() {\n      const proxyConfigMap = new Map();\n      const rows = [];\n\n      const enableAction = {\n        action:     'activate',\n        allEnabled: false,\n        anyEnabled: true,\n        bulkable:   true,\n        enabled:    true,\n        icon:       'icon icon-checkmark',\n        label:      this.t('jwt.actions.activate'),\n        invoke:     async(opts, resources) => {\n          const promises = [];\n\n          try {\n            resources.forEach((resource) => {\n              const res = resource.enable();\n\n              promises.push(res);\n            });\n            await Promise.all(promises);\n          } catch (e) {\n            this.errors = exceptionToErrorsArray(e);\n          }\n        }\n      };\n      const disableAction = {\n        action:     'deactivate',\n        allEnabled: false,\n        anyEnabled: true,\n        bulkable:   true,\n        enabled:    true,\n        icon:       'icon icon-x',\n        label:      this.t('jwt.actions.deactivate'),\n        invoke:     async(opts, resources) => {\n          const promises = [];\n\n          try {\n            resources.forEach((resource) => {\n              const res = resource.disable();\n\n              promises.push(res);\n            });\n            await Promise.all(promises);\n          } catch (e) {\n            this.errors = exceptionToErrorsArray(e);\n          }\n        }\n      };\n\n      this.proxyConfigs.forEach((config) => {\n        const id = config.metadata.namespace;\n\n        proxyConfigMap.set(id, { config });\n      });\n\n      this.clusters.forEach((cluster) => {\n        const id = cluster.id;\n        const clusterName = cluster.spec.displayName;\n\n        if (id !== 'local') {\n          const config = proxyConfigMap.get(id)?.config;\n\n          const value = config?.enabled || '';\n          const configName = config?.metadata?.name || '';\n          const updatedOn = value ? config?.metadata?.creationTimestamp : '';\n          const stateBackground = value ? colorForState(STATES_ENUM.ACTIVE).replace('text', 'bg') : colorForState(STATES_ENUM.INFO).replace('text', 'bg');\n          const stateLabel = value ? this.t('jwt.state.enabled') : this.t('jwt.state.disabled');\n          const creationTimestamp = cluster.metadata.creationTimestamp;\n          const availableActions = value ? [disableAction] : [enableAction];\n          const enable = async() => {\n            if (!configName) {\n              const clusterProxyConfig = await this.$store.dispatch('management/create', {\n                enabled:  true,\n                metadata: { namespace: id, generateName: 'cluster-proxy-config-' },\n              });\n\n              return clusterProxyConfig.save({ url: 'v1/management.cattle.io.clusterproxyconfigs', method: 'POST' });\n            } else {\n              config.enabled = true;\n\n              return config.save();\n            }\n          };\n          const disable = async() => {\n            return config.remove();\n          };\n\n          rows.push({\n            id, clusterName, value, stateBackground, stateLabel, creationTimestamp, updatedOn, availableActions, enable, disable\n          });\n        }\n      });\n      this.forceUpdateLiveAndDelayed = new Date().getTime();\n\n      return rows;\n    },\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <Masthead\n      :schema=\"schema\"\n      :resource=\"resource\"\n      :isCreatable=\"false\"\n      :type-display=\"t('jwt.title')\"\n    >\n      <template #typeDescription>\n        <TypeDescription :resource=\"'jwt.authentication'\" />\n      </template>\n    </Masthead>\n\n    <Banner\n      v-for=\"(err, i) in errors\"\n      :key=\"i\"\n      color=\"error\"\n      :label=\"err\"\n      :closable=\"true\"\n      @close=\"closeError(i)\"\n    />\n\n    <ResourceTable\n      :schema=\"schema\"\n      :headers=\"headers\"\n      :key-field=\"'id'\"\n      :namespaced=\"false\"\n      :rows=\"rows\"\n      :tableActions=\"true\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :sort-generation-fn=\"sortGenerationFn\"\n      data-testid=\"jwt-authentication-list\"\n    >\n      <template #col:state=\"{row}\">\n        <td>\n          <BadgeState\n            :color=\"row.stateBackground\"\n            :label=\"row.stateLabel\"\n            class=\"state-bagde\"\n          />\n        </td>\n      </template>\n    </ResourceTable>\n  </div>\n</template>\n"],"mappings":"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","ignoreList":[]}]}