{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/form/ArrayList.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/form/ArrayList.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["debounce","_EDIT","_VIEW","removeAt","TextAreaAutoGrow","clone","LabeledInput","DEFAULT_PROTIP","components","props","value","type","Array","default","mode","String","initialEmptyRow","Boolean","title","protip","showHeader","valueLabel","valuePlaceholder","valueMultiline","addLabel","addAllowed","addDisabled","removeLabel","removeAllowed","defaultAddValue","Number","Object","loading","disabled","rules","validator","every","rule","includes","_typeof","data","input","slice","rows","_iterator","_createForOfIteratorHelper","_step","s","n","done","push","err","e","f","length","lastUpdateWasFromValue","computed","_addLabel","t","_removeLabel","isView","showAdd","disableAdd","showRemove","isDefaultProtip","showProtip","watch","map","v","deep","handler","newValue","oldValue","queueUpdate","created","update","methods","add","_this","$nextTick","inputs","$refs","focus","$emit","remove","row","index","out","_iterator2","_step2","trim","onPaste","event","preventDefault","text","clipboardData","getData","_this$rows","split","splice","apply","concat","_toConsumableArray"],"sources":["node_modules/@rancher/shell/components/form/ArrayList.vue"],"sourcesContent":["<script>\nimport debounce from 'lodash/debounce';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport { removeAt } from '@shell/utils/array';\nimport { TextAreaAutoGrow } from '@components/Form/TextArea';\nimport { clone } from '@shell/utils/object';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nconst DEFAULT_PROTIP = 'Tip: Paste lines into any list field for easy bulk entry';\n\nexport default {\n  components: { TextAreaAutoGrow, LabeledInput },\n  props:      {\n    value: {\n      type:    Array,\n      default: null,\n    },\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n    initialEmptyRow: {\n      type:    Boolean,\n      default: false,\n    },\n    title: {\n      type:    String,\n      default: ''\n    },\n    protip: {\n      type:    [String, Boolean],\n      default: DEFAULT_PROTIP,\n    },\n    showHeader: {\n      type:    Boolean,\n      default: false,\n    },\n    valueLabel: {\n      type:    String,\n      default: 'Value',\n    },\n    valuePlaceholder: {\n      type:    String,\n      default: 'e.g. bar'\n    },\n    valueMultiline: {\n      type:    Boolean,\n      default: false,\n    },\n    addLabel: {\n      type:    String,\n      default: '',\n    },\n    addAllowed: {\n      type:    Boolean,\n      default: true,\n    },\n    addDisabled: {\n      type:    Boolean,\n      default: false,\n    },\n    removeLabel: {\n      type:    String,\n      default: '',\n    },\n    removeAllowed: {\n      type:    Boolean,\n      default: true,\n    },\n    defaultAddValue: {\n      type:    [String, Number, Object, Array],\n      default: ''\n    },\n    loading: {\n      type:    Boolean,\n      default: false\n    },\n    disabled: {\n      type:    Boolean,\n      default: false,\n    },\n    rules: {\n      default:   () => [],\n      type:      Array,\n      // we only want functions in the rules array\n      validator: (rules) => rules.every((rule) => ['function'].includes(typeof rule))\n    }\n  },\n  data() {\n    const input = (this.value || []).slice();\n    const rows = [];\n\n    for ( const value of input ) {\n      rows.push({ value });\n    }\n    if ( !rows.length && this.initialEmptyRow ) {\n      const value = this.defaultAddValue ? clone(this.defaultAddValue) : '';\n\n      rows.push({ value });\n    }\n\n    return { rows, lastUpdateWasFromValue: false };\n  },\n  computed: {\n    _addLabel() {\n      return this.addLabel || this.t('generic.add');\n    },\n    _removeLabel() {\n      return this.removeLabel || this.t('generic.remove');\n    },\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n    showAdd() {\n      return this.addAllowed;\n    },\n    disableAdd() {\n      return this.addDisabled;\n    },\n    showRemove() {\n      return this.removeAllowed;\n    },\n    isDefaultProtip() {\n      return this.protip === DEFAULT_PROTIP;\n    },\n    showProtip() {\n      if (this.protip && !this.isDefaultProtip) {\n        return true;\n      }\n\n      return !this.valueMultiline && this.protip;\n    }\n  },\n  watch: {\n    value() {\n      this.lastUpdateWasFromValue = true;\n      this.rows = (this.value || []).map((v) => ({ value: v }));\n    },\n    rows: {\n      deep: true,\n      handler(newValue, oldValue) {\n        // lastUpdateWasFromValue is used to break a cycle where when rows are updated\n        // this was called which then forced rows to updated again\n        if (!this.lastUpdateWasFromValue) {\n          this.queueUpdate();\n        }\n        this.lastUpdateWasFromValue = false;\n      }\n    }\n  },\n  created() {\n    this.queueUpdate = debounce(this.update, 50);\n  },\n  methods: {\n    add() {\n      this.rows.push({ value: clone(this.defaultAddValue) });\n      if (this.defaultAddValue) {\n        this.queueUpdate();\n      }\n      this.$nextTick(() => {\n        const inputs = this.$refs.value;\n\n        if ( inputs && inputs.length > 0 ) {\n          inputs[inputs.length - 1].focus();\n        }\n        this.$emit('add');\n      });\n    },\n    /**\n     * Remove item and emits removed row and its own index value\n     */\n    remove(row, index) {\n      this.$emit('remove', { row, index });\n      removeAt(this.rows, index);\n      this.queueUpdate();\n    },\n\n    /**\n     * Cleanup rows and emit input\n     */\n    update() {\n      if ( this.isView ) {\n        return;\n      }\n      const out = [];\n\n      for ( const row of this.rows ) {\n        const trim = !this.valueMultiline && (typeof row.value === 'string');\n        const value = trim ? row.value.trim() : row.value;\n\n        if ( typeof value !== 'undefined' ) {\n          out.push(value);\n        }\n      }\n      this.$emit('input', out);\n    },\n\n    /**\n     * Handle paste event, e.g. split multiple lines in rows\n     */\n    onPaste(index, event) {\n      event.preventDefault();\n      const text = event.clipboardData.getData('text/plain');\n\n      if (this.valueMultiline) {\n        // Allow to paste multiple lines\n        this.rows[index].value = text;\n      } else {\n        // Prevent to paste the value and emit text in multiple rows\n        const split = text.split('\\n').map((value) => ({ value }));\n\n        event.preventDefault();\n        this.rows.splice(index, 1, ...split);\n      }\n\n      this.update();\n    }\n  },\n};\n</script>\n\n<template>\n  <div>\n    <div\n      v-if=\"title\"\n      class=\"clearfix\"\n    >\n      <slot name=\"title\">\n        <h3>\n          {{ title }}\n          <i\n            v-if=\"showProtip\"\n            v-clean-tooltip=\"protip\"\n            class=\"icon icon-info\"\n          />\n        </h3>\n      </slot>\n    </div>\n\n    <template v-if=\"rows.length\">\n      <div v-if=\"showHeader\">\n        <slot name=\"column-headers\">\n          <label class=\"value text-label mb-10\">\n            {{ valueLabel }}\n          </label>\n        </slot>\n      </div>\n      <div\n        v-for=\"(row, idx) in rows\"\n        :key=\"idx\"\n        :data-testid=\"`array-list-box${ idx }`\"\n        class=\"box\"\n      >\n        <slot\n          name=\"columns\"\n          :queueUpdate=\"queueUpdate\"\n          :i=\"idx\"\n          :rows=\"rows\"\n          :row=\"row\"\n          :mode=\"mode\"\n          :isView=\"isView\"\n        >\n          <div class=\"value\">\n            <slot\n              name=\"value\"\n              :row=\"row\"\n              :mode=\"mode\"\n              :isView=\"isView\"\n              :queue-update=\"queueUpdate\"\n            >\n              <TextAreaAutoGrow\n                v-if=\"valueMultiline\"\n                ref=\"value\"\n                v-model=\"row.value\"\n                :data-testid=\"`textarea-${idx}`\"\n                :placeholder=\"valuePlaceholder\"\n                :mode=\"mode\"\n                :disabled=\"disabled\"\n                @paste=\"onPaste(idx, $event)\"\n                @input=\"queueUpdate\"\n              />\n              <LabeledInput\n                v-else-if=\"rules.length > 0\"\n                ref=\"value\"\n                v-model=\"row.value\"\n                :data-testid=\"`labeled-input-${idx}`\"\n                :placeholder=\"valuePlaceholder\"\n                :disabled=\"isView || disabled\"\n                :rules=\"rules\"\n                :compact=\"false\"\n                @paste=\"onPaste(idx, $event)\"\n                @input=\"queueUpdate\"\n              />\n              <input\n                v-else\n                ref=\"value\"\n                v-model=\"row.value\"\n                :data-testid=\"`input-${idx}`\"\n                :placeholder=\"valuePlaceholder\"\n                :disabled=\"isView || disabled\"\n                @paste=\"onPaste(idx, $event)\"\n                @input=\"queueUpdate\"\n              >\n            </slot>\n          </div>\n        </slot>\n        <div\n          v-if=\"showRemove\"\n          class=\"remove\"\n        >\n          <slot\n            name=\"remove-button\"\n            :remove=\"() => remove(row, idx)\"\n            :i=\"idx\"\n            :row=\"row\"\n          >\n            <button\n              type=\"button\"\n              :disabled=\"isView\"\n              class=\"btn role-link\"\n              :data-testid=\"`remove-item-${idx}`\"\n              @click=\"remove(row, idx)\"\n            >\n              {{ _removeLabel }}\n            </button>\n          </slot>\n        </div>\n      </div>\n    </template>\n    <div v-else>\n      <slot name=\"empty\">\n        <div\n          v-if=\"mode==='view'\"\n          class=\"text-muted\"\n        >\n          &mdash;\n        </div>\n      </slot>\n    </div>\n    <div\n      v-if=\"showAdd && !isView\"\n      class=\"footer mt-20\"\n    >\n      <slot\n        v-if=\"showAdd\"\n        name=\"add\"\n        :add=\"add\"\n      >\n        <button\n          type=\"button\"\n          class=\"btn role-tertiary add\"\n          :disabled=\"loading || disableAdd\"\n          data-testid=\"array-list-button\"\n          @click=\"add()\"\n        >\n          <i\n            v-if=\"loading\"\n            class=\"mr-5 icon icon-spinner icon-spin icon-lg\"\n          />\n          {{ _addLabel }}\n        </button>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .title {\n    margin-bottom: 10px;\n  }\n  .box {\n    display: grid;\n    grid-template-columns: auto $array-list-remove-margin;\n    align-items: center;\n    margin-bottom: 10px;\n    .value {\n      flex: 1;\n      INPUT {\n        height: $input-height;\n      }\n    }\n  }\n  .remove {\n    text-align: right;\n  }\n  .footer {\n    .protip {\n      float: right;\n      padding: 5px 0;\n    }\n  }\n</style>\n"],"mappings":"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","ignoreList":[]}]}