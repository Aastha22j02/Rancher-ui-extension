{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--17-0!/home/ubuntu/suseconf/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/store/type-map.utils.ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/store/type-map.utils.ts","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["findBy","insertAt","removeObject","COUNT","FIELD_REGEX","createHeaders","ctx","opt","headers","typeOptions","schema","columns","pagination","stateColumn","state","nameColumn","name","namespaceColumn","namespace","idColumn","id","ageColumn","age","rootGetters","out","showState","attributes","columnsFromSchema","_a","length","map","entry","col","headerFromSchemaCol","filter","hasName","namespaced","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","format","push","err","e","f","ageColumnActual","find","o","toLocaleLowerCase","showAge","formatter","width","formatterOpts","type","multiline","colName","includes","split","word","charAt","toUpperCase","substring","join","exists","t","labelKey","concat","toLowerCase","slice","description","tooltip","path","rowValueGetter","altPath","label","sort","search","asFn","arguments","undefined","field","startsWith","found","match","fieldIndex","parseInt","row","_b","metadata","fields","conditionalDepaginate","depaginate","depaginateArgs","configureConditionalDepaginate","_ref","maxResourceCount","_ref$isNorman","isNorman","fnArgs","args","safeType","inStore","resourceCounts","counts","resourceCount","summary","count"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/store/type-map.utils.ts"],"sourcesContent":["import { SchemaAttribute, SchemaAttributeColumn } from '@shell/plugins/steve/schema';\nimport { TableColumn } from '@shell/types/store/type-map';\nimport { VuexStoreGetters } from '@shell/types/store/vuex';\nimport { findBy, insertAt, removeObject } from '@shell/utils/array';\nimport { COUNT } from '@shell/config/types';\nimport { ActionFindAllArgs } from '@shell/types/store/dashboard-store.types';\n\nconst FIELD_REGEX = /^\\$\\.metadata\\.fields\\[([0-9]*)\\]/;\n\ntype StoreColumns = { [schemaId: string]: TableColumn[]}\n\n/**\n * Create the headers used in lists to show a resource\n *\n * These could be\n * - Pre-configured via the product (either non-paginated or paginated)\n * - Generated dynamically from schema's attributes.columns\n *\n * There's also some additional ones like state, age, and at least one of name or id\n *\n * The order of these are massaged as well\n */\nexport function createHeaders(\n  ctx: {\n    getters: VuexStoreGetters,\n    rootGetters: VuexStoreGetters,\n    state: any,\n  },\n  opt: {\n    headers: StoreColumns,\n    typeOptions: any,\n    schema: any, // Once the schema-diet changes go in this can be typed\n    columns: {\n      /**\n       * Always show this column (if showState is true)\n       */\n      state: TableColumn,\n      /**\n        * If dynamically creating columns, use specific column for name, if required\n        */\n      name?: TableColumn,\n      /**\n        * If dynamically creating columns, use specific column for id, if required\n        */\n      id?: TableColumn\n      /**\n        * If dynamically creating columns, use specific column for namespace, if required\n        */\n      namespace: TableColumn,\n      /**\n        * If dynamically creating columns, use specific column for age, if required\n        */\n      age: TableColumn,\n    },\n    pagination: boolean\n  }): TableColumn[] {\n  const {\n    headers, typeOptions, schema, columns, pagination\n  } = opt;\n  const {\n    state: stateColumn, name: nameColumn, namespace: namespaceColumn, id: idColumn, age: ageColumn\n  } = columns;\n  const { rootGetters } = ctx;\n  const out = typeOptions.showState ? [stateColumn] : [];\n  const attributes = (schema.attributes as SchemaAttribute) || {};\n  const columnsFromSchema = attributes.columns || [];\n\n  // A specific list has been provided\n  if ( headers?.[schema.id]?.length ) {\n    return headers[schema.id].map((entry: any) => {\n      if ( typeof entry === 'string' ) {\n        const col = findBy(columnsFromSchema, 'name', entry);\n\n        if ( col ) {\n          return headerFromSchemaCol(col, rootGetters, pagination, ageColumn);\n        } else {\n          return null;\n        }\n      } else {\n        return entry;\n      }\n    }).filter((col: SchemaAttributeColumn) => !!col);\n  }\n\n  // Otherwise make one up from schema\n  let hasName = false;\n  const namespaced = attributes.namespaced || false;\n\n  for ( const col of columnsFromSchema ) {\n    if ( col.format === 'name' ) {\n      hasName = true;\n      out.push(nameColumn || headerFromSchemaCol(col, rootGetters, pagination, ageColumn));\n      if ( namespaced ) {\n        out.push(namespaceColumn);\n      }\n    } else {\n      out.push(headerFromSchemaCol(col, rootGetters, pagination, ageColumn));\n    }\n  }\n\n  // Always try to have an identifier\n  if ( !hasName ) {\n    insertAt(out, 1, idColumn || nameColumn);\n    if ( namespaced ) {\n      insertAt(out, 2, namespaceColumn);\n    }\n  }\n\n  // Age always goes last\n  const ageColumnActual = out.find((o) => o.name.toLocaleLowerCase() === 'age');\n\n  if ( ageColumnActual ) {\n    removeObject(out, ageColumnActual);\n    if ( typeOptions.showAge ) {\n      out.push(ageColumnActual);\n    }\n  }\n\n  return out;\n}\n\n/**\n * Given a schema's attribute.column value create a header\n */\nexport function headerFromSchemaCol(col: SchemaAttributeColumn, rootGetters: VuexStoreGetters, pagination: boolean, ageColumn: TableColumn): TableColumn {\n  let formatter, width, formatterOpts;\n\n  if ( (col.format === '' || col.format === 'date') && col.name === 'Age' && ageColumn ) {\n    return ageColumn;\n  }\n\n  if ( col.format === 'date' || col.type === 'date' ) {\n    formatter = 'Date';\n    width = 120;\n    formatterOpts = { multiline: true };\n  }\n\n  if ( col.type === 'number' || col.type === 'int' ) {\n    formatter = 'Number';\n  }\n\n  const colName = col.name.includes(' ') ? col.name.split(' ').map((word) => word.charAt(0).toUpperCase() + word.substring(1) ).join('') : col.name;\n\n  const exists = rootGetters['i18n/exists'];\n  const t = rootGetters['i18n/t'];\n  const labelKey = `tableHeaders.${ colName.charAt(0).toLowerCase() + colName.slice(1) }`;\n  const description = col.description || '';\n  const tooltip = description && description[description.length - 1] === '.' ? description.slice(0, -1) : description;\n\n  const path = rowValueGetter(col, false) as string;\n  // If we're not paginating use a function to get the value, otherwise use the string path\n  const altPath = pagination ? path : rowValueGetter(col, true) as Function;\n\n  return {\n    name:   col.name.toLowerCase(),\n    label:  exists(labelKey) ? t(labelKey) : col.name,\n    value:  altPath,\n    sort:   [path],\n    search: path,\n    formatter,\n    formatterOpts,\n    width,\n    tooltip\n  };\n}\n\nexport function rowValueGetter(col: SchemaAttributeColumn, asFn = true): string | ((row: any) => string) {\n  // 'field' comes from the schema - typically it is of the form $.metadata.field[N]\n  // We will use JsonPath to look up this value, which is costly - so if we can detect this format\n  // Use a more efficient function to get the value\n  const value = col.field.startsWith('.') ? `$${ col.field }` : col.field;\n  const found = value.match(FIELD_REGEX);\n\n  if (found && found.length === 2) {\n    const fieldIndex = parseInt(found[1], 10);\n\n    if (asFn) {\n      return (row: any) => row.metadata?.fields?.[fieldIndex];\n    }\n\n    return `metadata.fields.${ fieldIndex }`;\n  }\n\n  return value;\n}\n\ntype conditionalDepaginateArgs ={\n  ctx: { rootGetters: VuexStoreGetters},\n  args: { type: string, opt: ActionFindAllArgs},\n};\ntype conditionalDepaginateFn = (args: conditionalDepaginateArgs) => boolean\n\n/**\n * Conditionally determine if a resource should use naive kube pagination api to fetch all results\n * (not just first page)\n */\nexport const conditionalDepaginate = (\n  depaginate?: conditionalDepaginateFn | boolean,\n  depaginateArgs?: conditionalDepaginateArgs\n): boolean => {\n  if (typeof depaginate === 'function') {\n    return !!depaginateArgs ? depaginate(depaginateArgs) : false;\n  }\n\n  return depaginate as boolean;\n};\n\n/**\n * Setup a function that will determine if a resource should use native kube pagination api to fetch all resources\n * (not just the first page)\n */\nexport const configureConditionalDepaginate = (\n  { maxResourceCount, isNorman = false }: { maxResourceCount: number, isNorman: boolean },\n): conditionalDepaginateFn => {\n  return (fnArgs: conditionalDepaginateArgs ): boolean => {\n    const { rootGetters } = fnArgs.ctx;\n    const { type } = fnArgs.args;\n    const safeType = isNorman ? `management.cattle.io.${ type }` : type;\n\n    const inStore = rootGetters['currentStore'](safeType);\n    const resourceCounts = rootGetters[`${ inStore }/all`](COUNT)[0]?.counts[safeType];\n    const resourceCount = resourceCounts?.summary?.count;\n\n    return resourceCount !== undefined ? resourceCount < maxResourceCount : false;\n  };\n};\n"],"mappings":"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","ignoreList":[]}]}