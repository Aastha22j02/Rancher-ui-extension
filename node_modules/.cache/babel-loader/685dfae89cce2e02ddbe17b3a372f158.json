{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/utils/alertmanagerconfig.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/utils/alertmanagerconfig.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["jsyaml","base64Decode","base64Encode","MONITORING","SECRET","get","set","isEmpty","ROOT_NAME","fetchAlertManagerConfigSpecs","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","$store","_schema$schemaDefinit","_schema$schemaDefinit2","schema","wrap","_callee$","_context","prev","next","getters","ALERTMANAGERCONFIG","abrupt","fetchResourceFields","receiverSchema","schemaDefinitions","concat","schemaDefinition","id","routeSchema","stop","_x","apply","arguments","DEFAULT_SECRET_ID","ALERTMANAGER_ID","FILENAME","getSecretId","_x2","_getSecretId","_callee2","dispatch","_alertManager$spec","alertManager","_alertManager$spec2","_callee2$","_context2","type","ALERTMANAGER","root","sent","spec","configSecret","namespace","getSecret","_x3","_getSecret","_callee3","secretId","_secretId$split","_secretId$split2","name","secret","_callee3$","_context3","t0","split","_slicedToArray","metadata","extractConfig","data","file","decodedFile","config","load","receivers","route","routes","loadConfig","_x4","_loadConfig","_callee4","_callee4$","_context4","updateConfig","_x5","_x6","_x7","_x8","_updateConfig","_callee5","path","updateFn","_yield$loadConfig","newValue","rootIndex","rootRoute","newFile","encodedFile","_callee5$","_context5","setDefaultRouteNames","findIndex","forEach","splice","dump","save","getAllReceivers","_x9","_getAllReceivers","_callee6","_yield$loadConfig2","receiversWithName","mapped","_callee6$","_context6","filter","receiver","map","SPOOFED","RECEIVER","Promise","all","getAllRoutes","_x10","_getAllRoutes","_callee7","_config$route2","_yield$loadConfig3","_callee7$","_context7","push","ROUTE","i","createDefaultRouteName","index","areRoutesSupportedFormat","_config$route","some","ex","canCreate","rootGetters","isCreatable"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/utils/alertmanagerconfig.js"],"sourcesContent":["import jsyaml from 'js-yaml';\nimport { base64Decode, base64Encode } from '@shell/utils/crypto';\nimport { MONITORING, SECRET } from '@shell/config/types';\nimport { get, set } from '@shell/utils/object';\nimport isEmpty from 'lodash/isEmpty';\nimport { ROOT_NAME } from '@shell/models/monitoring.coreos.com.route';\n\n/**\n * Find secondary schema's related to the primary `monitoring.coreos.com.alertmanagerconfig` schema\n */\nexport const fetchAlertManagerConfigSpecs = async($store) => {\n  const schema = $store.getters['cluster/schemaFor'](MONITORING.ALERTMANAGERCONFIG);\n\n  if (!schema) {\n    return;\n  }\n\n  // Make the http request to fetch schema definitions for alertmanagerconfig\n  await schema.fetchResourceFields();\n\n  return {\n    receiverSchema: schema.schemaDefinitions?.[`${ schema.schemaDefinition.id }.spec.receivers`],\n    routeSchema:    schema.schemaDefinitions?.[`${ schema.schemaDefinition.id }.spec.route`],\n  };\n};\n\nconst DEFAULT_SECRET_ID = 'cattle-monitoring-system/alertmanager-rancher-monitoring-alertmanager';\nconst ALERTMANAGER_ID = 'cattle-monitoring-system/rancher-monitoring-alertmanager';\n\nexport const FILENAME = 'alertmanager.yaml';\n\nexport async function getSecretId(dispatch) {\n  const alertManager = await dispatch('cluster/find', { type: MONITORING.ALERTMANAGER, id: ALERTMANAGER_ID }, { root: true });\n\n  if (alertManager?.spec?.configSecret) {\n    return `${ alertManager.namespace }/${ alertManager?.spec?.configSecret }`;\n  }\n\n  return DEFAULT_SECRET_ID;\n}\n\nexport async function getSecret(dispatch) {\n  const secretId = await getSecretId(dispatch, false);\n\n  try {\n    return await dispatch('cluster/find', { type: SECRET, id: secretId }, { root: true });\n  } catch (ex) {\n    const [namespace, name] = secretId.split('/');\n    const secret = await dispatch('cluster/create', { type: SECRET }, { root: true });\n\n    secret.metadata = {\n      namespace,\n      name\n    };\n\n    return secret;\n  }\n}\n\nfunction extractConfig(secret) {\n  secret.data = secret.data || {};\n  const file = secret.data[FILENAME];\n  const decodedFile = file ? base64Decode(file) : '{}';\n  const config = jsyaml.load(decodedFile);\n\n  config.receivers = config.receivers || [];\n  config.route = config.route || {};\n  config.route.routes = config.route.routes || [];\n\n  return config;\n}\n\nexport async function loadConfig(dispatch) {\n  const secret = await getSecret(dispatch);\n\n  return {\n    config: extractConfig(secret),\n    secret\n  };\n}\n\nexport async function updateConfig(dispatch, path, type, updateFn) {\n  const { config, secret } = await loadConfig(dispatch);\n\n  set(config, path, get(config, path) || []);\n  setDefaultRouteNames(config.route.routes);\n\n  const newValue = updateFn(get(config, path));\n\n  set(config, path, newValue);\n\n  const routes = config.route.routes;\n  const rootIndex = routes.findIndex((route) => route.name === ROOT_NAME);\n\n  routes.forEach((route) => {\n    if (route.name) {\n      delete route.name;\n    }\n  });\n\n  if (rootIndex >= 0) {\n    const rootRoute = routes.splice(rootIndex, 1)[0];\n\n    rootRoute.routes = routes;\n    config.route = rootRoute;\n  }\n\n  const newFile = jsyaml.dump(config);\n  const encodedFile = base64Encode(newFile);\n\n  secret.data[FILENAME] = encodedFile;\n  await secret.save();\n}\n\nexport async function getAllReceivers(dispatch) {\n  try {\n    const { config, secret } = await loadConfig(dispatch);\n    const receivers = config.receivers || [];\n    const receiversWithName = receivers.filter((receiver) => receiver.name);\n    const mapped = receiversWithName.map((receiver) => dispatch('cluster/create', {\n      id:   receiver.name,\n      spec: receiver,\n      type: MONITORING.SPOOFED.RECEIVER,\n      secret\n    }, { root: true }));\n\n    return Promise.all(mapped);\n  } catch (ex) {\n    return [];\n  }\n}\n\nexport async function getAllRoutes(dispatch) {\n  try {\n    const { config, secret } = await loadConfig(dispatch);\n\n    config.route = config.route || {};\n    config.route.name = ROOT_NAME;\n    const routes = config.route?.routes || [];\n\n    setDefaultRouteNames(routes);\n\n    routes.push(config.route);\n\n    const mapped = routes.map((route) => dispatch('cluster/create', {\n      id:   route.name,\n      spec: route,\n      type: MONITORING.SPOOFED.ROUTE,\n      secret\n    }, { root: true }));\n\n    return Promise.all(mapped);\n  } catch (ex) {\n    return [];\n  }\n}\n\nfunction setDefaultRouteNames(routes) {\n  routes.forEach((route, i) => {\n    route.name = route.name || createDefaultRouteName(i);\n  });\n}\n\nexport function createDefaultRouteName(index) {\n  return `route-${ index }`;\n}\n\nexport function areRoutesSupportedFormat(secret) {\n  try {\n    const config = extractConfig(secret);\n    const routes = config.route?.routes || [];\n\n    return !routes.some(isEmpty);\n  } catch (ex) {\n    return false;\n  }\n}\n\nexport function canCreate(rootGetters) {\n  return rootGetters['type-map/optionsFor'](SECRET).isCreatable;\n}\n"],"mappings":"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","ignoreList":[]}]}