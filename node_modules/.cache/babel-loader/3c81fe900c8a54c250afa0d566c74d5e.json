{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/workload/Upgrading.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/workload/Upgrading.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["get","RadioGroup","UnitInput","WORKLOAD_TYPES","_CREATE","mapGetters","InputWithSelect","components","props","value","type","Object","default","_default","String","DEPLOYMENT","mode","noPodSpec","Boolean","noDeploymentSpec","data","_podSpec$terminationG","_this$value","_this$value$strategy","strategy","strategyObj","_this$value$updateStr","updateStrategy","updateStrategyObj","_this$value$minReadyS","minReadySeconds","_this$value$progressD","progressDeadlineSeconds","_this$value$revisionH","revisionHistoryLimit","_this$value$podManage","podManagementPolicy","maxSurge","maxUnavailable","surgeUnits","unavailableUnits","rollingUpdate","includes","slice","indexOf","podSpec","terminationGracePeriodSeconds","computed","_objectSpread","strategyOptions","options","labels","t","DAEMON_SET","STATEFUL_SET","isDeployment","isStatefulSet","isDaemonSet","methods","update","_this$value2","template","spec","concat","$set","assign","$emit","updateWithUnits","_ref","target","units","selected","text","parseInt"],"sources":["node_modules/@rancher/shell/edit/workload/Upgrading.vue"],"sourcesContent":["<script>\nimport { get } from '@shell/utils/object';\nimport { RadioGroup } from '@components/Form/Radio';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { WORKLOAD_TYPES } from '@shell/config/types';\nimport { _CREATE } from '@shell/config/query-params';\nimport { mapGetters } from 'vuex';\nimport InputWithSelect from '@shell/components/form/InputWithSelect';\n\nexport default {\n  components: {\n    RadioGroup, UnitInput, InputWithSelect\n  },\n  props: {\n    // spec\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n\n    type: {\n      type:    String,\n      default: WORKLOAD_TYPES.DEPLOYMENT\n    },\n\n    mode: { type: String, default: _CREATE },\n\n    noPodSpec: {\n      type:    Boolean,\n      default: false\n    },\n\n    noDeploymentSpec: {\n      type:    Boolean,\n      default: false\n    }\n  },\n  data() {\n    const {\n      strategy:strategyObj = {},\n      updateStrategy: updateStrategyObj = {},\n      minReadySeconds = 0,\n      progressDeadlineSeconds = 600,\n      revisionHistoryLimit = 10,\n      podManagementPolicy = 'OrderedReady'\n    } = this.value;\n    const strategy = strategyObj.type || updateStrategyObj.type || 'RollingUpdate';\n    let maxSurge = '25';\n    let maxUnavailable = '25';\n    let surgeUnits = '%';\n    let unavailableUnits = '%';\n\n    if (strategyObj.rollingUpdate) {\n      maxSurge = strategyObj.rollingUpdate.maxSurge;\n      maxUnavailable = strategyObj.rollingUpdate.maxUnavailable;\n\n      if ( typeof maxSurge === 'string' && maxSurge.includes('%')) {\n        maxSurge = maxSurge.slice(0, maxSurge.indexOf('%'));\n      } else {\n        surgeUnits = 'Pods';\n      }\n\n      if ( typeof maxUnavailable === 'string' && maxUnavailable.includes('%')) {\n        unavailableUnits = '%';\n        maxUnavailable = maxUnavailable.slice(0, maxUnavailable.indexOf('%'));\n      } else {\n        unavailableUnits = 'Pods';\n      }\n    }\n\n    const podSpec = get(this.value, 'template.spec');\n\n    const terminationGracePeriodSeconds = podSpec?.terminationGracePeriodSeconds ?? 30;\n\n    return {\n      surgeUnits,\n      unavailableUnits,\n      strategy,\n      minReadySeconds,\n      progressDeadlineSeconds,\n      maxSurge,\n      maxUnavailable,\n      revisionHistoryLimit,\n      terminationGracePeriodSeconds,\n      podManagementPolicy\n    };\n  },\n  computed: {\n    strategyOptions() {\n      switch (this.type) {\n      case WORKLOAD_TYPES.DEPLOYMENT:\n        return {\n          options: ['RollingUpdate', 'Recreate'],\n          labels:  [this.t('workload.upgrading.strategies.labels.rollingUpdate'), this.t('workload.upgrading.strategies.labels.recreate')]\n        };\n      case WORKLOAD_TYPES.DAEMON_SET:\n      case WORKLOAD_TYPES.STATEFUL_SET:\n        return {\n          options: ['RollingUpdate', 'OnDelete'],\n          labels:  [this.t('workload.upgrading.strategies.labels.rollingUpdate'), this.t('workload.upgrading.strategies.labels.delete')]\n        };\n      default:\n        return null;\n      }\n    },\n\n    isDeployment() {\n      return this.type === WORKLOAD_TYPES.DEPLOYMENT;\n    },\n\n    isStatefulSet() {\n      return this.type === WORKLOAD_TYPES.STATEFUL_SET;\n    },\n\n    isDaemonSet() {\n      return this.type === WORKLOAD_TYPES.DAEMON_SET;\n    },\n\n    ...mapGetters({ t: 'i18n/t' })\n  },\n\n  methods: {\n    update() {\n      const podSpec = this.value?.template?.spec;\n      const {\n        minReadySeconds,\n        revisionHistoryLimit,\n        progressDeadlineSeconds,\n        terminationGracePeriodSeconds\n      } = this;\n      let { maxSurge, maxUnavailable } = this;\n\n      if (this.surgeUnits === '%' && !maxSurge.includes('%')) {\n        maxSurge = `${ maxSurge }%`;\n      }\n      if (this.unavailableUnits === '%' && !maxUnavailable.includes('%')) {\n        maxUnavailable = `${ maxUnavailable }%`;\n      }\n\n      if (podSpec) {\n        this.$set(podSpec, 'terminationGracePeriodSeconds', terminationGracePeriodSeconds);\n      }\n\n      switch (this.type) {\n      case WORKLOAD_TYPES.DEPLOYMENT: {\n        let strategy;\n\n        if (this.strategy === 'RollingUpdate') {\n          strategy = {\n            rollingUpdate: {\n              maxSurge,\n              maxUnavailable,\n            },\n            type: this.strategy\n          };\n        } else {\n          strategy = { type: this.strategy };\n        }\n\n        Object.assign(this.value, {\n          strategy,\n          minReadySeconds,\n          revisionHistoryLimit,\n          progressDeadlineSeconds\n        });\n        break;\n      }\n      case WORKLOAD_TYPES.DAEMON_SET: {\n        let updateStrategy;\n\n        if (this.strategy === 'RollingUpdate') {\n          updateStrategy = { rollingUpdate: { maxUnavailable }, type: this.strategy };\n        } else {\n          updateStrategy = { type: this.strategy };\n        }\n\n        Object.assign(this.value, {\n          updateStrategy, minReadySeconds, revisionHistoryLimit\n        });\n        break;\n      }\n      case WORKLOAD_TYPES.STATEFUL_SET: {\n        const updateStrategy = { type: this.strategy };\n\n        Object.assign(this.value, {\n          updateStrategy,\n          revisionHistoryLimit,\n          podManagementPolicy:\n          this.podManagementPolicy\n        });\n        break;\n      }\n      default:\n        break;\n      }\n\n      this.$emit('input', this.value);\n    },\n\n    updateWithUnits({ selected:units, text:value }, target) {\n      if (units === 'Pods') {\n        this[target] = parseInt(value);\n      } else {\n        this[target] = `${ value }%`;\n      }\n      if (target === 'maxSurge') {\n        this.surgeUnits = units;\n      } else {\n        this.unavailableUnits = units;\n      }\n\n      this.update();\n    }\n  },\n};\n</script>\n\n<template>\n  <div>\n    <!--workload  spec.upgradeStrategy -->\n    <div\n      v-if=\"strategyOptions && !noDeploymentSpec\"\n      class=\"row mb-20\"\n    >\n      <div\n        class=\"col\"\n        data-testid=\"input-policy-strategy\"\n      >\n        <RadioGroup\n          v-model=\"strategy\"\n          name=\"strategy\"\n          :options=\"strategyOptions.options\"\n          :labels=\"strategyOptions.labels\"\n          :mode=\"mode\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n    <div\n      v-if=\"isStatefulSet && !noDeploymentSpec\"\n      class=\"row mb-20\"\n    >\n      <div\n        class=\"col span-6\"\n        data-testid=\"input-policy-pod\"\n      >\n        <RadioGroup\n          v-model=\"podManagementPolicy\"\n          name=\"podManagement\"\n          :mode=\"mode\"\n          :label=\"t('workload.upgrading.podManagementPolicy.label')\"\n          :options=\"['OrderedReady', 'Parallel']\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n    <template v-if=\"strategy === 'RollingUpdate' && !noDeploymentSpec\">\n      <div\n        v-if=\"isDeployment || isDaemonSet\"\n        class=\"row mb-20\"\n        data-testid=\"input-policy-surge\"\n      >\n        <div\n          v-if=\"isDeployment\"\n          class=\"col span-6\"\n        >\n          <InputWithSelect\n            :text-value=\"maxSurge\"\n            :select-before-text=\"false\"\n            :select-value=\"surgeUnits\"\n            :text-label=\"t('workload.upgrading.maxSurge.label')\"\n            :mode=\"mode\"\n            type=\"number\"\n            :options=\"['Pods', '%']\"\n            @input=\"e=>updateWithUnits(e, 'maxSurge')\"\n          />\n        </div>\n        <div\n          class=\"col span-6\"\n          data-testid=\"input-policy-unavailable\"\n        >\n          <InputWithSelect\n            :text-value=\"maxUnavailable\"\n            :select-before-text=\"false\"\n            :select-value=\"unavailableUnits\"\n            :text-label=\"t('workload.upgrading.maxUnavailable.label')\"\n            :mode=\"mode\"\n            type=\"number\"\n            :options=\"['Pods', '%']\"\n            @input=\"e=>updateWithUnits(e, 'maxUnavailable')\"\n          />\n        </div>\n      </div>\n    </template>\n\n    <!-- workload spec -->\n    <div\n      v-if=\"!noDeploymentSpec\"\n      class=\"row mb-20\"\n    >\n      <div\n        v-if=\"!isStatefulSet\"\n        class=\"col span-6\"\n        data-testid=\"input-policy-min\"\n      >\n        <UnitInput\n          v-model=\"minReadySeconds\"\n          :suffix=\"t('suffix.seconds', {count: minReadySeconds})\"\n          label-key=\"workload.upgrading.minReadySeconds.label\"\n          tooltip-key=\"workload.upgrading.minReadySeconds.tip\"\n          :mode=\"mode\"\n          @input=\"update\"\n        />\n      </div>\n      <div\n        v-if=\"isDeployment || isStatefulSet || isDaemonSet\"\n        class=\"col span-6\"\n        data-testid=\"input-policy-limit\"\n      >\n        <UnitInput\n          v-model=\"revisionHistoryLimit\"\n          :suffix=\"t('suffix.revisions', {count: revisionHistoryLimit})\"\n          label-key=\"workload.upgrading.revisionHistoryLimit.label\"\n          tooltip-key=\"workload.upgrading.revisionHistoryLimit.tip\"\n          :mode=\"mode\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n    <div\n      v-if=\"isDeployment && !noDeploymentSpec\"\n      class=\"row mb-20\"\n    >\n      <div\n        class=\"col span-6\"\n        data-testid=\"input-policy-deadline\"\n      >\n        <UnitInput\n          v-model=\"progressDeadlineSeconds\"\n          :suffix=\"t('suffix.seconds', {count: progressDeadlineSeconds})\"\n          label-key=\"workload.upgrading.progressDeadlineSeconds.label\"\n          tooltip-key=\"workload.upgrading.progressDeadlineSeconds.tip\"\n          :mode=\"mode\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n\n    <!-- pod spec -->\n    <div\n      v-if=\"!noPodSpec\"\n      class=\"row\"\n    >\n      <div\n        class=\"col span-6\"\n        data-testid=\"input-policy-termination\"\n      >\n        <UnitInput\n          v-model=\"terminationGracePeriodSeconds\"\n          :suffix=\"t('suffix.seconds', {count: terminationGracePeriodSeconds})\"\n          label-key=\"workload.upgrading.terminationGracePeriodSeconds.label\"\n          tooltip-key=\"workload.upgrading.terminationGracePeriodSeconds.tip\"\n          :mode=\"mode\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n"],"mappings":"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","ignoreList":[]}]}