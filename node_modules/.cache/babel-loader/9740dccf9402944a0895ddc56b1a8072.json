{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/dialog/RotateEncryptionKeyDialog.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/dialog/RotateEncryptionKeyDialog.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["SNAPSHOT","NORMAN","AsyncButton","Card","Banner","exceptionToErrorsArray","sortBy","day","escapeHtml","DATE_FORMAT","TIME_FORMAT","set","components","props","cluster","type","Object","default","_default","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","etcdBackups","backups","name","createdDate","wrap","_callee$","_context","prev","next","$store","getters","abrupt","getEtcdBackups","sent","length","reverse","id","split","created","latestBackup","date","getFormattedCreatedDate","stop","data","errors","methods","close","buttonDone","$emit","_this2","_callee2","_etcdBackups","_callee2$","_context2","isRke1","dispatch","ETCD_BACKUP","filter","backup","clusterId","metadata","isRke2","dateFormat","timeFormat","d","format","t","concat","apply","_this3","_callee3","_this3$cluster$spec","currentGeneration","_callee3$","_context3","spec","rkeConfig","rotateEncryptionKeys","generation","save","mgmt","doAction","t0"],"sources":["node_modules/@rancher/shell/dialog/RotateEncryptionKeyDialog.vue"],"sourcesContent":["<script>\nimport { SNAPSHOT, NORMAN } from '@shell/config/types';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { Card } from '@components/Card';\nimport { Banner } from '@components/Banner';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\n\nimport { sortBy } from '@shell/utils/sort';\nimport day from 'dayjs';\nimport { escapeHtml } from '@shell/utils/string';\nimport { DATE_FORMAT, TIME_FORMAT } from '@shell/store/prefs';\nimport { set } from '@shell/utils/object';\n\nexport default {\n  components: {\n    Card,\n    AsyncButton,\n    Banner,\n  },\n\n  props: {\n    cluster: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n\n  async fetch() {\n    if (!this.$store.getters['isRancher']) {\n      // This fetch function is getting snapshots, which are associated\n      // with cluster manager. Rancher Desktop doesn't come with cluster\n      // manager, so for Rancher Desktop we return nothing.\n      return [];\n    }\n\n    const etcdBackups = await this.getEtcdBackups();\n\n    if (etcdBackups.length > 0) {\n      const backups = sortBy(etcdBackups, ['created']).reverse();\n      const name = backups[0].id.split(':');\n      const createdDate = backups[0].created;\n\n      this.latestBackup = {\n        name: name[0],\n        date: this.getFormattedCreatedDate(createdDate)\n      };\n    }\n  },\n\n  data() {\n    return { errors: [], latestBackup: null };\n  },\n\n  methods: {\n    close(buttonDone) {\n      if (buttonDone && typeof buttonDone === 'function') {\n        buttonDone(true);\n      }\n      this.$emit('close');\n    },\n\n    async getEtcdBackups() {\n      if ( this.cluster.isRke1) {\n        let etcdBackups = await this.$store.dispatch('rancher/findAll', { type: NORMAN.ETCD_BACKUP });\n\n        etcdBackups = etcdBackups.filter((backup) => backup.clusterId === this.cluster.metadata.name);\n\n        return etcdBackups;\n      }\n\n      if (this.cluster.isRke2) {\n        let etcdBackups = await this.$store.dispatch('management/findAll', { type: SNAPSHOT });\n\n        etcdBackups = etcdBackups.filter((backup) => backup.clusterId === this.cluster.id);\n\n        return etcdBackups;\n      }\n\n      return [];\n    },\n\n    getFormattedCreatedDate(createdDate) {\n      const dateFormat = escapeHtml(this.$store.getters['prefs/get'](DATE_FORMAT));\n      const timeFormat = escapeHtml( this.$store.getters['prefs/get'](TIME_FORMAT));\n      const d = day(createdDate).format(dateFormat);\n      const t = day(createdDate).format(timeFormat);\n\n      return `${ d } ${ t }`;\n    },\n\n    async apply(buttonDone) {\n      const isRke2 = this.cluster.isRke2;\n\n      try {\n        if (isRke2) {\n          const currentGeneration = this.cluster.spec?.rkeConfig?.rotateEncryptionKeys?.generation || 0;\n\n          // To rotate the encryption keys, increment\n          // rkeConfig.rotateEncyrptionKeys.generation in the YAML.\n          set(this.cluster, 'spec.rkeConfig.rotateEncryptionKeys.generation', currentGeneration + 1);\n          await this.cluster.save();\n\n          this.close(buttonDone);\n        } else {\n          await this.cluster.mgmt.doAction('rotateEncryptionKey');\n\n          this.close(buttonDone);\n        }\n      } catch (err) {\n        this.errors = exceptionToErrorsArray(err);\n        buttonDone(false);\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Card\n    class=\"prompt-rotate\"\n    :show-highlight-border=\"false\"\n  >\n    <h4\n      slot=\"title\"\n      v-clean-html=\"t('promptRotateEncryptionKey.title')\"\n      class=\"text-default-text\"\n    />\n\n    <div\n      slot=\"body\"\n      class=\"pl-10 pr-10\"\n    >\n      <Banner\n        color=\"warning\"\n        label-key=\"promptRotateEncryptionKey.warning\"\n      />\n\n      <div v-if=\"!$fetchState.pending\">\n        <p\n          v-if=\"latestBackup\"\n          class=\"pt-10 pb-10\"\n        >\n          {{ t('promptRotateEncryptionKey.description', latestBackup, true) }}\n        </p>\n        <Banner\n          v-else\n          color=\"error\"\n          label-key=\"promptRotateEncryptionKey.error\"\n        />\n      </div>\n    </div>\n\n    <div\n      slot=\"actions\"\n      class=\"buttons\"\n    >\n      <button\n        class=\"btn role-secondary mr-10\"\n        @click=\"close\"\n      >\n        {{ t('generic.cancel') }}\n      </button>\n\n      <AsyncButton\n        mode=\"rotate\"\n        :disabled=\"$fetchState.pending || !latestBackup\"\n        @click=\"apply\"\n      />\n\n      <Banner\n        v-for=\"(err, i) in errors\"\n        :key=\"i\"\n        color=\"error\"\n        :label=\"err\"\n      />\n    </div>\n  </Card>\n</template>\n<style lang='scss' scoped>\n  .prompt-rotate {\n    margin: 0;\n  }\n  .buttons {\n    display: flex;\n    justify-content: flex-end;\n    width: 100%;\n  }\n</style>\n"],"mappings":"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","ignoreList":[]}]}