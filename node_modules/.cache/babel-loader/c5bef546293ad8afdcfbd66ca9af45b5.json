{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/c/_cluster/uiplugins/SetupUIPlugins.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/c/_cluster/uiplugins/SetupUIPlugins.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapGetters","AsyncButton","ASYNC_BUTTON_STATES","IconMessage","CATALOG","MANAGEMENT","CATALOG_ANNOTATIONS","Dialog","Checkbox","Banner","isRancherPrime","UI_PLUGIN_NAMESPACE","UI_PLUGIN_CHARTS","UI_PLUGIN_OPERATOR_REPO_NAME","UI_PLUGINS_REPO_NAME","UI_PLUGINS_REPO_URL","UI_PLUGINS_REPO_BRANCH","UI_PLUGINS_PARTNERS_REPO_NAME","UI_PLUGINS_PARTNERS_REPO_URL","UI_PLUGINS_PARTNERS_REPO_BRANCH","components","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","c","charts","found","wrap","_callee$","_context","prev","next","$store","getters","Object","values","forEach","f","find","chart","repoName","chartName","push","haveCharts","length","installCharts","CLUSTER_REPO","dispatch","type","opt","force","SETTING","id","defaultRegistrySetting","sent","loading","stop","data","errors","prime","addRepos","official","partners","reposInfo","name","url","branch","buttonState","ACTION","computed","_objectSpread","repos","hasRancherUIPluginsRepo","r","urlDisplay","hasRancherUIPartnersPluginsRepo","isAnyRepoAvailableForInstall","methods","installChart","_this2","_callee2","_this2$defaultRegistr","version","repoType","repo","defaultRegistry","input","action","res","operationId","_callee2$","_context2","versions","releaseName","annotations","_defineProperty","SOURCE_REPO_TYPE","SOURCE_REPO_NAME","value","global","cattle","systemDefaultRegistry","wait","namespace","doAction","concat","operationNamespace","operationName","waitForOperation","abrupt","OPERATION","enable","_this3","_callee3","_callee3$","_context3","$emit","$modal","show","dialogClosed","ok","_this4","_callee4","_callee4$","_context4","WAITING","v","addDefaultHelmRepositories","installPluginCharts","Promise","resolve","setTimeout","ERROR","_this5","_callee5","promises","key","pluginCR","_callee5$","_context5","t0","keys","t1","done","metadata","spec","gitBranch","gitRepo","save","allSettled","result","status","console","error","reason","_this6","_callee6","i","_callee6$","_context6","message"],"sources":["node_modules/@rancher/shell/pages/c/_cluster/uiplugins/SetupUIPlugins.vue"],"sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport AsyncButton, { ASYNC_BUTTON_STATES } from '@shell/components/AsyncButton';\nimport IconMessage from '@shell/components/IconMessage.vue';\nimport { CATALOG, MANAGEMENT } from '@shell/config/types';\nimport { CATALOG as CATALOG_ANNOTATIONS } from '@shell/config/labels-annotations';\nimport Dialog from '@shell/components/Dialog.vue';\nimport Checkbox from '@components/Form/Checkbox/Checkbox.vue';\nimport Banner from '@components/Banner/Banner.vue';\nimport { isRancherPrime } from '@shell/config/version';\n\nimport {\n  UI_PLUGIN_NAMESPACE,\n  UI_PLUGIN_CHARTS,\n  UI_PLUGIN_OPERATOR_REPO_NAME,\n  UI_PLUGINS_REPO_NAME,\n  UI_PLUGINS_REPO_URL,\n  UI_PLUGINS_REPO_BRANCH,\n  UI_PLUGINS_PARTNERS_REPO_NAME,\n  UI_PLUGINS_PARTNERS_REPO_URL,\n  UI_PLUGINS_PARTNERS_REPO_BRANCH,\n} from '@shell/config/uiplugins';\n\nexport default {\n  components: {\n    AsyncButton,\n    Checkbox,\n    Banner,\n    IconMessage,\n    Dialog,\n  },\n\n  async fetch() {\n    // Check to see that the charts we need are available\n    const c = this.$store.getters['catalog/rawCharts'];\n    const charts = Object.values(c);\n    const found = [];\n\n    UI_PLUGIN_CHARTS.forEach((c) => {\n      const f = charts.find((chart) => chart.repoName === UI_PLUGIN_OPERATOR_REPO_NAME & chart.chartName === c);\n\n      if (f) {\n        found.push(f);\n      }\n    });\n\n    this.haveCharts = (found.length === UI_PLUGIN_CHARTS.length);\n\n    if (this.haveCharts) {\n      this.installCharts = found;\n\n      if (this.$store.getters['management/schemaFor'](CATALOG.CLUSTER_REPO)) {\n        // we need to force the request, so that we know at all times if what's the status of the offical and partners repos (installed or not)\n        await this.$store.dispatch('management/findAll', { type: CATALOG.CLUSTER_REPO, opt: { force: true } });\n      }\n    }\n\n    this.defaultRegistrySetting = await this.$store.dispatch('management/find', {\n      type: MANAGEMENT.SETTING,\n      id:   'system-default-registry'\n    });\n\n    this.loading = false;\n  },\n\n  data() {\n    return {\n      loading:       true,\n      haveCharts:    false,\n      installCharts: [],\n      errors:        [],\n      prime:         isRancherPrime(),\n      addRepos:      {\n        official: true,\n        partners: true,\n      },\n      reposInfo: {\n        official: {\n          name:   UI_PLUGINS_REPO_NAME,\n          url:    UI_PLUGINS_REPO_URL,\n          branch: UI_PLUGINS_REPO_BRANCH,\n        },\n        partners: {\n          name:   UI_PLUGINS_PARTNERS_REPO_NAME,\n          url:    UI_PLUGINS_PARTNERS_REPO_URL,\n          branch: UI_PLUGINS_PARTNERS_REPO_BRANCH,\n        }\n      },\n      buttonState:            ASYNC_BUTTON_STATES.ACTION,\n      defaultRegistrySetting: null,\n    };\n  },\n\n  computed: {\n    ...mapGetters({ repos: 'catalog/repos' }),\n    hasRancherUIPluginsRepo() {\n      return !!this.repos.find((r) => r.urlDisplay === UI_PLUGINS_REPO_URL);\n    },\n    hasRancherUIPartnersPluginsRepo() {\n      return !!this.repos.find((r) => r.urlDisplay === UI_PLUGINS_PARTNERS_REPO_URL);\n    },\n    isAnyRepoAvailableForInstall() {\n      return (isRancherPrime() && !this.hasRancherUIPluginsRepo) || !this.hasRancherUIPartnersPluginsRepo;\n    }\n  },\n\n  methods: {\n    async installChart(installChart) {\n      const version = installChart.versions[0];\n      const repoType = version.repoType;\n      const repoName = version.repoName;\n      const repo = this.$store.getters['catalog/repo']({ repoType, repoName });\n\n      const chart = {\n        chartName:   installChart.chartName,\n        version:     version.version,\n        releaseName: installChart.chartName,\n        annotations: {\n          [CATALOG_ANNOTATIONS.SOURCE_REPO_TYPE]: repoType,\n          [CATALOG_ANNOTATIONS.SOURCE_REPO_NAME]: repoName\n        },\n        values: {}\n      };\n\n      // Pass in the system default registry property if set\n      const defaultRegistry = this.defaultRegistrySetting?.value || '';\n\n      if (defaultRegistry) {\n        chart.values.global = chart.values.global || {};\n        chart.values.global.cattle = chart.values.global.cattle || {};\n        chart.values.global.cattle.systemDefaultRegistry = defaultRegistry;\n      }\n\n      const input = {\n        charts:    [chart],\n        wait:      true,\n        namespace: UI_PLUGIN_NAMESPACE,\n      };\n\n      const action = 'install';\n      const res = await repo.doAction(action, input);\n      const operationId = `${ res.operationNamespace }/${ res.operationName }`;\n\n      await repo.waitForOperation(operationId);\n\n      return this.$store.dispatch(`management/find`, {\n        type: CATALOG.OPERATION,\n        id:   operationId\n      });\n    },\n\n    async enable() {\n      this.errors = [];\n\n      // force update of cluster repos so that modal have the correct information about the official and partners repo\n      this.$emit('refreshCharts');\n\n      // Reset checkbox based on if the repo is already installed\n      this.addRepos = {\n        official: isRancherPrime() && !this.hasRancherUIPluginsRepo,\n        partners: !this.hasRancherUIPartnersPluginsRepo,\n      };\n\n      this.$modal.show('confirm-uiplugins-setup');\n    },\n\n    async dialogClosed(ok) {\n      this.errors = [];\n\n      // User wants to proceed\n      if (ok) {\n        this.buttonState = ASYNC_BUTTON_STATES.WAITING;\n\n        if (Object.values(this.addRepos).find((v) => v)) {\n          await this.addDefaultHelmRepositories();\n        }\n\n        await this.installPluginCharts();\n\n        await new Promise((resolve) => setTimeout(resolve, 5000));\n\n        this.buttonState = this.errors.length > 0 ? ASYNC_BUTTON_STATES.ERROR : ASYNC_BUTTON_STATES.ACTION;\n\n        this.$emit('done');\n      }\n    },\n\n    async addDefaultHelmRepositories() {\n      const promises = [];\n\n      for (const key in this.addRepos) {\n        if (this.addRepos[key]) {\n          const pluginCR = await this.$store.dispatch('management/create', {\n            type:     CATALOG.CLUSTER_REPO,\n            metadata: { name: this.reposInfo[key].name },\n            spec:     {\n              gitBranch: this.reposInfo[key].branch,\n              gitRepo:   this.reposInfo[key].url,\n            }\n          });\n\n          promises.push(pluginCR.save());\n        }\n      }\n\n      const res = await Promise.allSettled(promises);\n\n      res.forEach((result) => {\n        if (result.status === 'rejected') {\n          console.error(result.reason); // eslint-disable-line no-console\n\n          this.errors.push(result.reason);\n        }\n      });\n    },\n\n    async installPluginCharts() {\n      for (let i = 0; i < this.installCharts.length; i++) {\n        const chart = this.installCharts[i];\n\n        try {\n          await this.installChart(chart);\n        } catch (e) {\n          this.errors.push(e.message);\n        }\n      }\n\n      return new Promise((resolve) => setTimeout(resolve, 2000));\n    }\n  }\n};\n</script>\n<template>\n  <div>\n    <IconMessage\n      :vertical=\"true\"\n      :subtle=\"false\"\n      icon=\"icon-gear\"\n    >\n      <template v-slot:message>\n        <h2>\n          {{ t('plugins.setup.title') }}\n        </h2>\n        <div v-if=\"!loading\">\n          <div v-if=\"!haveCharts\">\n            <p>\n              {{ t('plugins.setup.prompt.cant') }}\n            </p>\n          </div>\n          <div v-else>\n            <p>\n              {{ t('plugins.setup.prompt.can') }}\n            </p>\n            <AsyncButton\n              mode=\"enable\"\n              :manual=\"true\"\n              :current-phase=\"buttonState\"\n              class=\"enable-plugin-support\"\n              data-testid=\"extension-enable-operator\"\n              @click=\"enable\"\n            />\n          </div>\n          <div\n            v-for=\"(e, i) in errors\"\n            :key=\"i\"\n            class=\"plugin-setup-error\"\n          >\n            {{ e }}\n          </div>\n        </div>\n      </template>\n    </IconMessage>\n    <Dialog\n      name=\"confirm-uiplugins-setup\"\n      :title=\"t('plugins.setup.install.title')\"\n      @closed=\"dialogClosed\"\n    >\n      <template>\n        <p class=\"mb-20\">\n          {{ t('plugins.setup.install.prompt') }}\n        </p>\n        <Banner\n          v-if=\"isAnyRepoAvailableForInstall\"\n          color=\"info\"\n          class=\"mb-20\"\n        >\n          {{ t('plugins.setup.install.airgap') }}\n        </Banner>\n        <!-- Official rancher repo -->\n        <div\n          v-if=\"prime\"\n          class=\"mb-15\"\n        >\n          <Checkbox\n            v-model=\"addRepos.official\"\n            :disabled=\"hasRancherUIPluginsRepo\"\n            :primary=\"true\"\n            label-key=\"plugins.setup.install.addRancherRepo\"\n            data-testid=\"extension-enable-operator-official-repo\"\n          />\n          <div\n            v-if=\"hasRancherUIPluginsRepo\"\n            class=\"checkbox-info\"\n          >\n            ({{ t('plugins.setup.installed') }})\n          </div>\n        </div>\n        <!-- Partners rancher repo -->\n        <div\n          class=\"mb-15\"\n        >\n          <Checkbox\n            v-model=\"addRepos.partners\"\n            :disabled=\"hasRancherUIPartnersPluginsRepo\"\n            :primary=\"true\"\n            label-key=\"plugins.setup.install.addPartnersRancherRepo\"\n            data-testid=\"extension-enable-operator-partners-repo\"\n          />\n          <div\n            v-if=\"hasRancherUIPartnersPluginsRepo\"\n            class=\"checkbox-info\"\n          >\n            ({{ t('plugins.setup.installed') }})\n          </div>\n        </div>\n      </template>\n    </Dialog>\n  </div>\n</template>\n<style lang=\"scss\" scoped>\n  .enable-plugin-support {\n    font-size: 14px;\n    margin-top: 20px;\n  }\n\n  .plugin-setup-error {\n    font-size: 14px;\n    color: var(--error);\n    margin: 10px 0 0 0;\n  }\n\n  .checkbox-info {\n    margin-left: 20px;\n    opacity: 0.7;\n  }\n</style>\n"],"mappings":"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","ignoreList":[]}]}