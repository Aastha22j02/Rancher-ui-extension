{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/auth/verify.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/auth/verify.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICIvaG9tZS91YnVudHUvc3VzZWNvbmYvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCB7IEdJVEhVQl9DT0RFLCBHSVRIVUJfTk9OQ0UsIEJBQ0tfVE8gfSBmcm9tICdAc2hlbGwvY29uZmlnL3F1ZXJ5LXBhcmFtcyc7CmltcG9ydCB7IGdldCB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwppbXBvcnQgeyBiYXNlNjREZWNvZGUgfSBmcm9tICdAc2hlbGwvdXRpbHMvY3J5cHRvJzsKaW1wb3J0IGxvYWRQbHVnaW5zIGZyb20gJ0BzaGVsbC9wbHVnaW5zL3BsdWdpbic7CnZhciBzYW1sUHJvdmlkZXJzID0gWydwaW5nJywgJ2FkZnMnLCAna2V5Y2xvYWsnLCAnb2t0YScsICdzaGliYm9sZXRoJ107CmZ1bmN0aW9uIHJlcGx5KGVyciwgY29kZSkgewogIHRyeSB7CiAgICB3aW5kb3cub3BlbmVyLndpbmRvdy5vbkF1dGhUZXN0KGVyciwgY29kZSk7CiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgd2luZG93LmNsb3NlKCk7CiAgICB9LCAyNTApOwogIH0gY2F0Y2ggKGUpIHsKICAgIHdpbmRvdy5jbG9zZSgpOwogIH0KfQpmdW5jdGlvbiBpc1NhbWwoJHJvdXRlKSB7CiAgdmFyIHF1ZXJ5ID0gJHJvdXRlLnF1ZXJ5OwogIHZhciBjb25maWdRdWVyeSA9IGdldChxdWVyeSwgJ2NvbmZpZycpOwogIHJldHVybiBzYW1sUHJvdmlkZXJzLmluY2x1ZGVzKGNvbmZpZ1F1ZXJ5KTsKfQpleHBvcnQgZGVmYXVsdCB7CiAgZmV0Y2g6IGZ1bmN0aW9uIGZldGNoKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBjb2RlLCBzdGF0ZVN0ciwgX3RoaXMkJHJvdXRlJHF1ZXJ5LCBlcnJvciwgZXJyb3JEZXNjcmlwdGlvbiwgZXJyb3JDb2RlLCBlcnJvck1zZywgb3V0LCBwYXJzZWQsIF9vdXQsIF9wYXJzZWQsIHRlc3QsIHByb3ZpZGVyLCBub25jZSwgcmVzLCBiYWNrVG87CiAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb2RlID0gX3RoaXMuJHJvdXRlLnF1ZXJ5W0dJVEhVQl9DT0RFXTsKICAgICAgICAgICAgc3RhdGVTdHIgPSBfdGhpcy4kcm91dGUucXVlcnlbR0lUSFVCX05PTkNFXTsKICAgICAgICAgICAgX3RoaXMkJHJvdXRlJHF1ZXJ5ID0gX3RoaXMuJHJvdXRlLnF1ZXJ5LCBlcnJvciA9IF90aGlzJCRyb3V0ZSRxdWVyeS5lcnJvciwgZXJyb3JEZXNjcmlwdGlvbiA9IF90aGlzJCRyb3V0ZSRxdWVyeS5lcnJvcl9kZXNjcmlwdGlvbiwgZXJyb3JDb2RlID0gX3RoaXMkJHJvdXRlJHF1ZXJ5LmVycm9yQ29kZSwgZXJyb3JNc2cgPSBfdGhpcyQkcm91dGUkcXVlcnkuZXJyb3JNc2c7CiAgICAgICAgICAgIGlmICghKGVycm9yIHx8IGVycm9yRGVzY3JpcHRpb24gfHwgZXJyb3JDb2RlIHx8IGVycm9yTXNnKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIG91dCA9IGVycm9yRGVzY3JpcHRpb24gfHwgZXJyb3IgfHwgZXJyb3JDb2RlOwogICAgICAgICAgICBpZiAoZXJyb3JNc2cpIHsKICAgICAgICAgICAgICBvdXQgPSBfdGhpcy4kc3RvcmUuZ2V0dGVyc1snaTE4bi93aXRoRmFsbGJhY2snXSgibG9naW4uc2VydmVyRXJyb3IuIi5jb25jYXQoZXJyb3JNc2cpLCBudWxsLCBlcnJvck1zZyk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgX3RoaXMuJHJvdXRlci5yZXBsYWNlKCIvYXV0aC9sb2dpbj9lcnI9Ii5jb25jYXQoZXNjYXBlKG91dCkpKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA4OwogICAgICAgICAgICBwYXJzZWQgPSBKU09OLnBhcnNlKGJhc2U2NERlY29kZShzdGF0ZVN0cikpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjA7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEyOwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDgpOwogICAgICAgICAgICBpZiAoIWlzU2FtbChfdGhpcy4kcm91dGUpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE2OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgX291dCA9IF90aGlzLiRzdG9yZS5nZXR0ZXJzWydpMThuL3QnXSgibG9naW4uZXJyb3IiKTsKICAgICAgICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIHBhcnNlIG5vbmNlJywgc3RhdGVTdHIsIF9jb250ZXh0LnQwKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlCgogICAgICAgICAgICBfdGhpcy4kcm91dGVyLnJlcGxhY2UoIi9hdXRoL2xvZ2luP2Vycj0iLmNvbmNhdChlc2NhcGUoX291dCkpKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CiAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICBfcGFyc2VkID0gcGFyc2VkLCB0ZXN0ID0gX3BhcnNlZC50ZXN0LCBwcm92aWRlciA9IF9wYXJzZWQucHJvdmlkZXIsIG5vbmNlID0gX3BhcnNlZC5ub25jZTsKICAgICAgICAgICAgaWYgKCF0ZXN0KSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIzOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgY2FzZSAyMzoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDIzOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjY7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2F1dGgvdmVyaWZ5T0F1dGgnLCB7CiAgICAgICAgICAgICAgY29kZTogY29kZSwKICAgICAgICAgICAgICBub25jZTogbm9uY2UsCiAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyCiAgICAgICAgICAgIH0pOwogICAgICAgICAgY2FzZSAyNjoKICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgaWYgKCEocmVzLl9zdGF0dXMgPT09IDIwMCkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzQ7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYmFja1RvID0gX3RoaXMuJHJvdXRlLnF1ZXJ5W0JBQ0tfVE9dIHx8ICcvJzsgLy8gTG9hZCBwbHVnaW5zCiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzMTsKICAgICAgICAgICAgcmV0dXJuIGxvYWRQbHVnaW5zKHsKICAgICAgICAgICAgICBhcHA6IF90aGlzLiRzdG9yZS5hcHAsCiAgICAgICAgICAgICAgc3RvcmU6IF90aGlzLiRzdG9yZSwKICAgICAgICAgICAgICAkcGx1Z2luOiBfdGhpcy4kc3RvcmUuJHBsdWdpbgogICAgICAgICAgICB9KTsKICAgICAgICAgIGNhc2UgMzE6CiAgICAgICAgICAgIF90aGlzLiRyb3V0ZXIucmVwbGFjZShiYWNrVG8pOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzU7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgY2FzZSAzNDoKICAgICAgICAgICAgX3RoaXMuJHJvdXRlci5yZXBsYWNlKCIvYXV0aC9sb2dpbj9lcnI9Ii5jb25jYXQoZXNjYXBlKHJlcykpKTsKICAgICAgICAgIGNhc2UgMzU6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0MDsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIDM3OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMzc7CiAgICAgICAgICAgIF9jb250ZXh0LnQxID0gX2NvbnRleHRbImNhdGNoIl0oMjMpOwogICAgICAgICAgICBfdGhpcy4kcm91dGVyLnJlcGxhY2UoIi9hdXRoL2xvZ2luP2Vycj0iLmNvbmNhdChlc2NhcGUoX2NvbnRleHQudDEpKSk7CiAgICAgICAgICBjYXNlIDQwOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbOCwgMTJdLCBbMjMsIDM3XV0pOwogICAgfSkpKCk7CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgdmFyIHN0YXRlSlNPTiA9IHRoaXMuJHJvdXRlLnF1ZXJ5W0dJVEhVQl9OT05DRV0gfHwgJyc7CiAgICB2YXIgcGFyc2VkID0ge307CiAgICB0cnkgewogICAgICBwYXJzZWQgPSBKU09OLnBhcnNlKGJhc2U2NERlY29kZShzdGF0ZUpTT04pKTsKICAgIH0gY2F0Y2ggKF91bnVzZWQpIHt9CiAgICB2YXIgX3BhcnNlZDIgPSBwYXJzZWQsCiAgICAgIHRlc3QgPSBfcGFyc2VkMi50ZXN0OwogICAgcmV0dXJuIHsKICAgICAgdGVzdGluZzogdGVzdAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBpZiAodGhpcy50ZXN0aW5nKSB7CiAgICAgIHRyeSB7CiAgICAgICAgdmFyIF90aGlzJCRyb3V0ZSRxdWVyeTIgPSB0aGlzLiRyb3V0ZS5xdWVyeSwKICAgICAgICAgIHJlc3BFcnJvciA9IF90aGlzJCRyb3V0ZSRxdWVyeTIuZXJyb3IsCiAgICAgICAgICByZXNwRXJyb3JEZXNjcmlwdGlvbiA9IF90aGlzJCRyb3V0ZSRxdWVyeTIuZXJyb3JfZGVzY3JpcHRpb24sCiAgICAgICAgICBjb2RlID0gX3RoaXMkJHJvdXRlJHF1ZXJ5MltHSVRIVUJfQ09ERV0sCiAgICAgICAgICBlcnJvck1zZyA9IF90aGlzJCRyb3V0ZSRxdWVyeTIuZXJyb3JNc2c7CiAgICAgICAgdmFyIGVycm9yID0gcmVzcEVycm9yRGVzY3JpcHRpb24gfHwgcmVzcEVycm9yIHx8ICghY29kZSA/ICdObyBjb2RlIHN1cHBsaWVkIGJ5IGF1dGggcHJvdmlkZXInIDogbnVsbCk7CiAgICAgICAgaWYgKGVycm9yTXNnKSB7CiAgICAgICAgICBlcnJvciA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2kxOG4vd2l0aEZhbGxiYWNrJ10oImxvZ2luLnNlcnZlckVycm9yLiIuY29uY2F0KGVycm9yTXNnKSwgbnVsbCwgZXJyb3JNc2cpOwogICAgICAgIH0KICAgICAgICByZXBseShlcnJvciwgY29kZSk7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICB3aW5kb3cuY2xvc2UoKTsKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgaWYgKHdpbmRvdy5vcGVuZXIpIHsKICAgICAgICBpZiAoaXNTYW1sKHRoaXMuJHJvdXRlKSkgewogICAgICAgICAgaWYgKHdpbmRvdy5vcGVuZXIud2luZG93Lm9uQXV0aFRlc3QpIHsKICAgICAgICAgICAgcmVwbHkobnVsbCwgbnVsbCk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXBseSh7CiAgICAgICAgICAgICAgZXJyOiAnZmFpbHVyZScKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["GITHUB_CODE","GITHUB_NONCE","BACK_TO","get","base64Decode","loadPlugins","samlProviders","reply","err","code","window","opener","onAuthTest","setTimeout","close","e","isSaml","$route","query","configQuery","includes","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","stateStr","_this$$route$query","error","errorDescription","errorCode","errorMsg","out","parsed","_out","_parsed","test","provider","nonce","res","backTo","wrap","_callee$","_context","prev","next","error_description","$store","getters","concat","$router","replace","escape","abrupt","JSON","parse","t0","console","dispatch","sent","_status","app","store","$plugin","t1","stop","data","stateJSON","_unused","_parsed2","testing","mounted","_this$$route$query2","respError","respErrorDescription"],"sources":["node_modules/@rancher/shell/pages/auth/verify.vue"],"sourcesContent":["<script>\nimport { GITHUB_CODE, GITHUB_NONCE, BACK_TO } from '@shell/config/query-params';\nimport { get } from '@shell/utils/object';\nimport { base64Decode } from '@shell/utils/crypto';\nimport loadPlugins from '@shell/plugins/plugin';\n\nconst samlProviders = ['ping', 'adfs', 'keycloak', 'okta', 'shibboleth'];\n\nfunction reply(err, code) {\n  try {\n    window.opener.window.onAuthTest(err, code);\n    setTimeout(() => {\n      window.close();\n    }, 250);\n  } catch (e) {\n    window.close();\n  }\n}\n\nfunction isSaml($route) {\n  const { query } = $route;\n  const configQuery = get(query, 'config');\n\n  return samlProviders.includes(configQuery);\n}\n\nexport default {\n  async fetch() {\n    const code = this.$route.query[GITHUB_CODE];\n    const stateStr = this.$route.query[GITHUB_NONCE];\n    const {\n      error, error_description: errorDescription, errorCode, errorMsg\n    } = this.$route.query;\n\n    if (error || errorDescription || errorCode || errorMsg) {\n      let out = errorDescription || error || errorCode;\n\n      if (errorMsg) {\n        out = this.$store.getters['i18n/withFallback'](`login.serverError.${ errorMsg }`, null, errorMsg);\n      }\n\n      this.$router.replace(`/auth/login?err=${ escape(out) }`);\n\n      return;\n    }\n    let parsed;\n\n    try {\n      parsed = JSON.parse(base64Decode((stateStr)));\n    } catch (err) {\n      if (isSaml(this.$route)) {\n        // This is an ok failure. SAML has no state string so a failure is fine (see similar check in mounted).\n        // This whole file could be re-written with that in mind, but this change keeps things simple and fixes a breaking addition\n        return;\n      }\n      const out = this.$store.getters['i18n/t'](`login.error`);\n\n      console.error('Failed to parse nonce', stateStr, err); // eslint-disable-line no-console\n\n      this.$router.replace(`/auth/login?err=${ escape(out) }`);\n\n      return;\n    }\n\n    const { test, provider, nonce } = parsed;\n\n    if (test) {\n      return;\n    }\n\n    try {\n      const res = await this.$store.dispatch('auth/verifyOAuth', {\n        code,\n        nonce,\n        provider\n      });\n\n      if ( res._status === 200) {\n        const backTo = this.$route.query[BACK_TO] || '/';\n\n        // Load plugins\n        await loadPlugins({\n          app:     this.$store.app,\n          store:   this.$store,\n          $plugin: this.$store.$plugin\n        });\n\n        this.$router.replace(backTo);\n      } else {\n        this.$router.replace(`/auth/login?err=${ escape(res) }`);\n      }\n    } catch (err) {\n      this.$router.replace(`/auth/login?err=${ escape(err) }`);\n    }\n  },\n\n  data() {\n    const stateJSON = this.$route.query[GITHUB_NONCE] || '';\n\n    let parsed = {};\n\n    try {\n      parsed = JSON.parse(base64Decode(stateJSON));\n    } catch {\n    }\n\n    const { test } = parsed;\n\n    return { testing: test };\n  },\n\n  mounted() {\n    if ( this.testing ) {\n      try {\n        const {\n          error: respError, error_description: respErrorDescription, [GITHUB_CODE]: code, errorMsg\n        } = this.$route.query;\n\n        let error = respErrorDescription || respError || (!code ? 'No code supplied by auth provider' : null);\n\n        if (errorMsg) {\n          error = this.$store.getters['i18n/withFallback'](`login.serverError.${ errorMsg }`, null, errorMsg);\n        }\n\n        reply(error, code );\n      } catch (e) {\n        window.close();\n      }\n    } else {\n      if ( window.opener ) {\n        if (isSaml(this.$route)) {\n          if ( window.opener.window.onAuthTest ) {\n            reply(null, null);\n          } else {\n            reply({ err: 'failure' });\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <main class=\"main-layout\">\n    <h1 class=\"text-center mt-50\">\n      <span v-if=\"testing\">\n        Testing Configuration&hellip;\n      </span>\n      <span v-else>\n        Logging In&hellip;\n      </span>\n    </h1>\n  </main>\n</template>\n"],"mappings":"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","ignoreList":[]}]}