{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/cis.cattle.io.clusterscan.js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/cis.cattle.io.clusterscan.js","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVmbGVjdC5jb25zdHJ1Y3QuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iOwppbXBvcnQgX2dldCBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9nZXQiOwppbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2dldFByb3RvdHlwZU9mIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gIi9ob21lL3VidW50dS9zdXNlY29uLTIwMjQtZXh0LWRlbW8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwpmdW5jdGlvbiBfY2FsbFN1cGVyKHQsIG8sIGUpIHsgcmV0dXJuIG8gPSBfZ2V0UHJvdG90eXBlT2YobyksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSA/IFJlZmxlY3QuY29uc3RydWN0KG8sIGUgfHwgW10sIF9nZXRQcm90b3R5cGVPZih0KS5jb25zdHJ1Y3RvcikgOiBvLmFwcGx5KHQsIGUpKTsgfQpmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyB0cnkgeyB2YXIgdCA9ICFCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IH0gY2F0Y2ggKHQpIHt9IHJldHVybiAoX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHJldHVybiAhIXQ7IH0pKCk7IH0KaW1wb3J0IHsgX0NSRUFURSwgX0VESVQgfSBmcm9tICdAc2hlbGwvY29uZmlnL3F1ZXJ5LXBhcmFtcyc7CmltcG9ydCB7IENJUyB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgeyBmaW5kQnkgfSBmcm9tICdAc2hlbGwvdXRpbHMvYXJyYXknOwppbXBvcnQgeyBkb3dubG9hZEZpbGUsIGdlbmVyYXRlWmlwIH0gZnJvbSAnQHNoZWxsL3V0aWxzL2Rvd25sb2FkJzsKaW1wb3J0IHsgZ2V0IGFzIF9nZXQyLCBpc0VtcHR5LCBzZXQgfSBmcm9tICdAc2hlbGwvdXRpbHMvb2JqZWN0JzsKaW1wb3J0IHsgc29ydEJ5IH0gZnJvbSAnQHNoZWxsL3V0aWxzL3NvcnQnOwppbXBvcnQgZGF5IGZyb20gJ2RheWpzJzsKaW1wb3J0IFN0ZXZlTW9kZWwgZnJvbSAnQHNoZWxsL3BsdWdpbnMvc3RldmUvc3RldmUtY2xhc3MnOwp2YXIgQ2x1c3RlclNjYW4gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9TdGV2ZU1vZGVsKSB7CiAgZnVuY3Rpb24gQ2x1c3RlclNjYW4oKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ2x1c3RlclNjYW4pOwogICAgcmV0dXJuIF9jYWxsU3VwZXIodGhpcywgQ2x1c3RlclNjYW4sIGFyZ3VtZW50cyk7CiAgfQogIF9pbmhlcml0cyhDbHVzdGVyU2NhbiwgX1N0ZXZlTW9kZWwpOwogIHJldHVybiBfY3JlYXRlQ2xhc3MoQ2x1c3RlclNjYW4sIFt7CiAgICBrZXk6ICJfYXZhaWxhYmxlQWN0aW9ucyIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgdmFyIG91dCA9IF9nZXQoX2dldFByb3RvdHlwZU9mKENsdXN0ZXJTY2FuLnByb3RvdHlwZSksICJfYXZhaWxhYmxlQWN0aW9ucyIsIHRoaXMpOwogICAgICB2YXIgdG9GaWx0ZXIgPSBbJ2Nsb25lWWFtbCcsICdnb1RvRWRpdFlhbWwnLCAnZG93bmxvYWQnXTsKICAgICAgb3V0ID0gb3V0LmZpbHRlcihmdW5jdGlvbiAoYWN0aW9uKSB7CiAgICAgICAgaWYgKCF0b0ZpbHRlci5pbmNsdWRlcyhhY3Rpb24uYWN0aW9uKSkgewogICAgICAgICAgcmV0dXJuIGFjdGlvbjsKICAgICAgICB9CiAgICAgIH0pOwogICAgICB2YXIgdCA9IHRoaXMuJHJvb3RHZXR0ZXJzWydpMThuL3QnXTsKICAgICAgdmFyIGRvd25sb2FkUmVwb3J0ID0gewogICAgICAgIGFjdGlvbjogJ2Rvd25sb2FkTGF0ZXN0UmVwb3J0JywKICAgICAgICBlbmFibGVkOiB0aGlzLmhhc1JlcG9ydCwKICAgICAgICBpY29uOiAnaWNvbiBpY29uLWZ3IGljb24tZG93bmxvYWQnLAogICAgICAgIGxhYmVsOiB0KCdjaXMuZG93bmxvYWRSZXBvcnQnKSwKICAgICAgICB0b3RhbDogMQogICAgICB9OwogICAgICB2YXIgZG93bmxvYWRBbGxSZXBvcnRzID0gewogICAgICAgIGFjdGlvbjogJ2Rvd25sb2FkQWxsUmVwb3J0cycsCiAgICAgICAgZW5hYmxlZDogdGhpcy5oYXNSZXBvcnQsCiAgICAgICAgaWNvbjogJ2ljb24gaWNvbi1mdyBpY29uLWRvd25sb2FkJywKICAgICAgICBsYWJlbDogdCgnY2lzLmRvd25sb2FkQWxsUmVwb3J0cycpLAogICAgICAgIHRvdGFsOiAxCiAgICAgIH07CiAgICAgIGlmICh0aGlzLmhhc1JlcG9ydHMpIHsKICAgICAgICB2YXIgX3RoaXMkc3BlYzsKICAgICAgICBvdXQudW5zaGlmdCh7CiAgICAgICAgICBkaXZpZGVyOiB0cnVlCiAgICAgICAgfSk7CiAgICAgICAgaWYgKChfdGhpcyRzcGVjID0gdGhpcy5zcGVjKSAhPT0gbnVsbCAmJiBfdGhpcyRzcGVjICE9PSB2b2lkIDAgJiYgKF90aGlzJHNwZWMgPSBfdGhpcyRzcGVjLnNjaGVkdWxlZFNjYW5Db25maWcpICE9PSBudWxsICYmIF90aGlzJHNwZWMgIT09IHZvaWQgMCAmJiBfdGhpcyRzcGVjLmNyb25TY2hlZHVsZSkgewogICAgICAgICAgb3V0LnVuc2hpZnQoZG93bmxvYWRBbGxSZXBvcnRzKTsKICAgICAgICAgIGRvd25sb2FkUmVwb3J0LmxhYmVsID0gdCgnY2lzLmRvd25sb2FkTGF0ZXN0UmVwb3J0Jyk7CiAgICAgICAgfQogICAgICAgIG91dC51bnNoaWZ0KGRvd25sb2FkUmVwb3J0KTsKICAgICAgfQogICAgICByZXR1cm4gb3V0OwogICAgfQogIH0sIHsKICAgIGtleTogImFwcGx5RGVmYXVsdHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGFwcGx5RGVmYXVsdHModm0sIG1vZGUpIHsKICAgICAgaWYgKG1vZGUgPT09IF9DUkVBVEUgfHwgbW9kZSA9PT0gX0VESVQpIHsKICAgICAgICB2YXIgaW5jbHVkZVNjaGVkdWxpbmcgPSB0aGlzLmNhbkJlU2NoZWR1bGVkKCk7CiAgICAgICAgdmFyIHNwZWMgPSB0aGlzLnNwZWMgfHwge307CiAgICAgICAgc3BlYy5zY2FuUHJvZmlsZU5hbWUgPSBudWxsOwogICAgICAgIGlmIChpbmNsdWRlU2NoZWR1bGluZykgewogICAgICAgICAgc3BlYy5zY29yZVdhcm5pbmcgPSAncGFzcyc7CiAgICAgICAgICBzcGVjLnNjaGVkdWxlZFNjYW5Db25maWcgPSB7CiAgICAgICAgICAgIHNjYW5BbGVydFJ1bGU6IHt9LAogICAgICAgICAgICByZXRlbnRpb25Db3VudDogMwogICAgICAgICAgfTsKICAgICAgICB9CiAgICAgICAgc2V0KHRoaXMsICdzcGVjJywgc3BlYyk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJjYW5CZVNjaGVkdWxlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY2FuQmVTY2hlZHVsZWQoKSB7CiAgICAgIHZhciBzY2hlbWEgPSB0aGlzLiRnZXR0ZXJzWydzY2hlbWFGb3InXSh0aGlzLnR5cGUpOwogICAgICB2YXIgc3BlY1NjaGVtYSA9IHRoaXMuJGdldHRlcnNbJ3NjaGVtYUZvciddKF9nZXQyKHNjaGVtYSwgJ3Jlc291cmNlRmllbGRzLnNwZWMudHlwZScpIHx8ICcnKTsKICAgICAgaWYgKCFzcGVjU2NoZW1hKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICAgIHJldHVybiAhIV9nZXQyKHNwZWNTY2hlbWEsICdyZXNvdXJjZUZpZWxkcy5zY2hlZHVsZWRTY2FuQ29uZmlnJyk7CiAgICB9CiAgfSwgewogICAga2V5OiAiaXNTY2hlZHVsZWQiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiAhIV9nZXQyKHRoaXMsICdzcGVjLnNjaGVkdWxlZFNjYW5Db25maWcuY3JvblNjaGVkdWxlJyk7CiAgICB9CiAgfSwgewogICAga2V5OiAiY2FuVXBkYXRlIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5oYXNMaW5rKCd1cGRhdGUnKSAmJiB0aGlzLmlzU2NoZWR1bGVkOwogICAgfQogIH0sIHsKICAgIGtleTogImhhc1JlcG9ydHMiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHZhciBfdGhpcyRtZXRhZGF0YSRyZWxhdGkgPSB0aGlzLm1ldGFkYXRhLnJlbGF0aW9uc2hpcHMsCiAgICAgICAgcmVsYXRpb25zaGlwcyA9IF90aGlzJG1ldGFkYXRhJHJlbGF0aSA9PT0gdm9pZCAwID8gW10gOiBfdGhpcyRtZXRhZGF0YSRyZWxhdGk7CiAgICAgIHZhciByZXBvcnRSZWwgPSBmaW5kQnkocmVsYXRpb25zaGlwcywgJ3RvVHlwZScsIENJUy5SRVBPUlQpOwogICAgICByZXR1cm4gISFyZXBvcnRSZWw7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0UmVwb3J0cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2dldFJlcG9ydHMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBvd25lZCwgcmVwb3J0czsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmluZE93bmVkKCk7CiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBvd25lZCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgcmVwb3J0cyA9IG93bmVkLmZpbHRlcihmdW5jdGlvbiAob2JqKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gb2JqLnR5cGUgPT09IENJUy5SRVBPUlQ7CiAgICAgICAgICAgICAgfSkgfHwgW107CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgc29ydEJ5KHJlcG9ydHMsICdtZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCcsIHRydWUpKTsKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICAgIH0pKTsKICAgICAgZnVuY3Rpb24gZ2V0UmVwb3J0cygpIHsKICAgICAgICByZXR1cm4gX2dldFJlcG9ydHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQogICAgICByZXR1cm4gZ2V0UmVwb3J0czsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImRvd25sb2FkTGF0ZXN0UmVwb3J0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZG93bmxvYWRMYXRlc3RSZXBvcnQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgcmVwb3J0cywgcmVwb3J0LCBQYXBhLCB0ZXN0UmVzdWx0cywgY3N2OwogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFJlcG9ydHMoKTsKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIGlmIChfY29udGV4dDIudDApIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBbXTsKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHJlcG9ydHMgPSBfY29udGV4dDIudDA7CiAgICAgICAgICAgICAgcmVwb3J0ID0gc29ydEJ5KHJlcG9ydHMsICdtZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCcsIHRydWUpWzBdOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gOTsKICAgICAgICAgICAgICByZXR1cm4gaW1wb3J0KCAvKiB3ZWJwYWNrQ2h1bmtOYW1lOiAiY3N2IiAqLydwYXBhcGFyc2UnKTsKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIFBhcGEgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgdGVzdFJlc3VsdHMgPSAocmVwb3J0LmFnZ3JlZ2F0ZWRUZXN0cyB8fCBbXSkubWFwKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICAgICAgICAgICAgZGVsZXRlIHJlc3VsdC5hY3R1YWxfdmFsdWVfcGVyX25vZGU7CiAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNzdiA9IFBhcGEudW5wYXJzZSh0ZXN0UmVzdWx0cyk7CiAgICAgICAgICAgICAgICBkb3dubG9hZEZpbGUoIiIuY29uY2F0KGxhYmVsRm9yKHJlcG9ydCksICIuY3N2IiksIGNzdiwgJ2FwcGxpY2F0aW9uL2NzdicpOwogICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICAgICAgdGhpcy4kZGlzcGF0Y2goJ2dyb3dsL2Zyb21FcnJvcicsIHsKICAgICAgICAgICAgICAgICAgdGl0bGU6ICdFcnJvciBkb3dubG9hZGluZyBmaWxlJywKICAgICAgICAgICAgICAgICAgZXJyOiBlcnIKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzKTsKICAgICAgfSkpOwogICAgICBmdW5jdGlvbiBkb3dubG9hZExhdGVzdFJlcG9ydCgpIHsKICAgICAgICByZXR1cm4gX2Rvd25sb2FkTGF0ZXN0UmVwb3J0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KICAgICAgcmV0dXJuIGRvd25sb2FkTGF0ZXN0UmVwb3J0OwogICAgfSgpCiAgfSwgewogICAga2V5OiAiZG93bmxvYWRBbGxSZXBvcnRzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZG93bmxvYWRBbGxSZXBvcnRzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgICB2YXIgdG9aaXAsIHJlcG9ydHMsIFBhcGE7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICB0b1ppcCA9IHt9OwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRSZXBvcnRzKCk7CiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICBpZiAoX2NvbnRleHQzLnQwKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDY7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gW107CiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICByZXBvcnRzID0gX2NvbnRleHQzLnQwOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gOTsKICAgICAgICAgICAgICByZXR1cm4gaW1wb3J0KCAvKiB3ZWJwYWNrQ2h1bmtOYW1lOiAiY3N2IiAqLydwYXBhcGFyc2UnKTsKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIFBhcGEgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICByZXBvcnRzLmZvckVhY2goZnVuY3Rpb24gKHJlcG9ydCkgewogICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgdmFyIHRlc3RSZXN1bHRzID0gKHJlcG9ydC5hZ2dyZWdhdGVkVGVzdHMgfHwgW10pLm1hcChmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHJlc3VsdC5hY3R1YWxfdmFsdWVfcGVyX25vZGU7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIHZhciBjc3YgPSBQYXBhLnVucGFyc2UodGVzdFJlc3VsdHMpOwogICAgICAgICAgICAgICAgICB0b1ppcFsiIi5jb25jYXQobGFiZWxGb3IocmVwb3J0KSwgIi5jc3YiKV0gPSBjc3Y7CiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuJGRpc3BhdGNoKCdncm93bC9mcm9tRXJyb3InLCB7CiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdFcnJvciBkb3dubG9hZGluZyBmaWxlJywKICAgICAgICAgICAgICAgICAgICBlcnI6IGVycgogICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBpZiAoIWlzRW1wdHkodG9aaXApKSB7CiAgICAgICAgICAgICAgICBnZW5lcmF0ZVppcCh0b1ppcCkudGhlbihmdW5jdGlvbiAoemlwKSB7CiAgICAgICAgICAgICAgICAgIGRvd25sb2FkRmlsZSgiIi5jb25jYXQoX3RoaXMuaWQsICItcmVwb3J0cyIpLCB6aXAsICdhcHBsaWNhdGlvbi96aXAnKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMywgdGhpcyk7CiAgICAgIH0pKTsKICAgICAgZnVuY3Rpb24gZG93bmxvYWRBbGxSZXBvcnRzKCkgewogICAgICAgIHJldHVybiBfZG93bmxvYWRBbGxSZXBvcnRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KICAgICAgcmV0dXJuIGRvd25sb2FkQWxsUmVwb3J0czsKICAgIH0oKQogIH1dKTsKfShTdGV2ZU1vZGVsKTsKZXhwb3J0IHsgQ2x1c3RlclNjYW4gYXMgZGVmYXVsdCB9Owp2YXIgbGFiZWxGb3IgPSBmdW5jdGlvbiBsYWJlbEZvcihyZXBvcnQpIHsKICB2YXIgY3JlYXRpb25UaW1lc3RhbXAgPSByZXBvcnQubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXA7CiAgdmFyIGRhdGUgPSBkYXkoY3JlYXRpb25UaW1lc3RhbXApLmZvcm1hdCgnWVlZWS1NTS1ERC1ISG1tc3MnKTsKICB2YXIgbmFtZSA9IHJlcG9ydC5pZC5yZXBsYWNlKC9ec2Nhbi1yZXBvcnQtLywgJycpOwogIHJldHVybiAiIi5jb25jYXQobmFtZSwgIi0tIikuY29uY2F0KGRhdGUpOwp9Ow=="},{"version":3,"names":["_CREATE","_EDIT","CIS","findBy","downloadFile","generateZip","get","isEmpty","set","sortBy","day","SteveModel","ClusterScan","_SteveModel","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","out","_get","_getPrototypeOf","prototype","toFilter","filter","action","includes","t","$rootGetters","downloadReport","enabled","hasReport","icon","label","total","downloadAllReports","hasReports","_this$spec","unshift","divider","spec","scheduledScanConfig","cronSchedule","value","applyDefaults","vm","mode","includeScheduling","canBeScheduled","scanProfileName","scoreWarning","scanAlertRule","retentionCount","schema","$getters","type","specSchema","hasLink","isScheduled","_this$metadata$relati","metadata","relationships","reportRel","REPORT","_getReports","_asyncToGenerator","_regeneratorRuntime","mark","_callee","owned","reports","wrap","_callee$","_context","prev","next","findOwned","sent","obj","abrupt","stop","getReports","apply","_downloadLatestReport","_callee2","report","Papa","testResults","csv","_callee2$","_context2","t0","aggregatedTests","map","result","actual_value_per_node","unparse","concat","labelFor","err","$dispatch","title","root","downloadLatestReport","_downloadAllReports","_callee3","_this","toZip","_callee3$","_context3","forEach","then","zip","id","default","creationTimestamp","date","format","name","replace"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/cis.cattle.io.clusterscan.js"],"sourcesContent":["import { _CREATE, _EDIT } from '@shell/config/query-params';\nimport { CIS } from '@shell/config/types';\nimport { findBy } from '@shell/utils/array';\nimport { downloadFile, generateZip } from '@shell/utils/download';\nimport { get, isEmpty, set } from '@shell/utils/object';\nimport { sortBy } from '@shell/utils/sort';\nimport day from 'dayjs';\nimport SteveModel from '@shell/plugins/steve/steve-class';\n\nexport default class ClusterScan extends SteveModel {\n  get _availableActions() {\n    let out = super._availableActions;\n\n    const toFilter = ['cloneYaml', 'goToEditYaml', 'download'];\n\n    out = out.filter((action) => {\n      if (!toFilter.includes(action.action)) {\n        return action;\n      }\n    });\n\n    const t = this.$rootGetters['i18n/t'];\n\n    const downloadReport = {\n      action:  'downloadLatestReport',\n      enabled: this.hasReport,\n      icon:    'icon icon-fw icon-download',\n      label:   t('cis.downloadReport'),\n      total:   1,\n    };\n\n    const downloadAllReports = {\n      action:  'downloadAllReports',\n      enabled: this.hasReport,\n      icon:    'icon icon-fw icon-download',\n      label:   t('cis.downloadAllReports'),\n      total:   1,\n    };\n\n    if (this.hasReports) {\n      out.unshift({ divider: true });\n      if (this.spec?.scheduledScanConfig?.cronSchedule) {\n        out.unshift(downloadAllReports);\n        downloadReport.label = t('cis.downloadLatestReport');\n      }\n      out.unshift(downloadReport);\n    }\n\n    return out;\n  }\n\n  applyDefaults(vm, mode) {\n    if (mode === _CREATE || mode === _EDIT) {\n      const includeScheduling = this.canBeScheduled();\n      const spec = this.spec || {};\n\n      spec.scanProfileName = null;\n      if (includeScheduling) {\n        spec.scoreWarning = 'pass';\n        spec.scheduledScanConfig = { scanAlertRule: {}, retentionCount: 3 };\n      }\n      set(this, 'spec', spec);\n    }\n  }\n\n  canBeScheduled() {\n    const schema = this.$getters['schemaFor'](this.type);\n    const specSchema = this.$getters['schemaFor'](get(schema, 'resourceFields.spec.type') || '');\n\n    if (!specSchema) {\n      return false;\n    }\n\n    return !!get(specSchema, 'resourceFields.scheduledScanConfig');\n  }\n\n  get isScheduled() {\n    return !!get(this, 'spec.scheduledScanConfig.cronSchedule');\n  }\n\n  get canUpdate() {\n    return this.hasLink('update') && this.isScheduled;\n  }\n\n  get hasReports() {\n    const { relationships = [] } = this.metadata;\n\n    const reportRel = findBy(relationships, 'toType', CIS.REPORT);\n\n    return !!reportRel;\n  }\n\n  async getReports() {\n    const owned = await this.findOwned();\n\n    const reports = owned.filter((obj) => obj.type === CIS.REPORT) || [];\n\n    return sortBy(reports, 'metadata.creationTimestamp', true);\n  }\n\n  async downloadLatestReport() {\n    const reports = await this.getReports() || [];\n    const report = sortBy(reports, 'metadata.creationTimestamp', true)[0];\n    const Papa = await import(/* webpackChunkName: \"csv\" */'papaparse');\n\n    try {\n      const testResults = (report.aggregatedTests || []).map((result) => {\n        delete result.actual_value_per_node;\n\n        return result;\n      });\n\n      const csv = Papa.unparse(testResults);\n\n      downloadFile(`${ labelFor(report) }.csv`, csv, 'application/csv');\n    } catch (err) {\n      this.$dispatch('growl/fromError', { title: 'Error downloading file', err }, { root: true });\n    }\n  }\n\n  async downloadAllReports() {\n    const toZip = {};\n    const reports = await this.getReports() || [];\n\n    const Papa = await import(/* webpackChunkName: \"csv\" */'papaparse');\n\n    reports.forEach((report) => {\n      try {\n        const testResults = (report.aggregatedTests || []).map((result) => {\n          delete result.actual_value_per_node;\n\n          return result;\n        });\n\n        const csv = Papa.unparse(testResults);\n\n        toZip[`${ labelFor(report) }.csv`] = csv;\n      } catch (err) {\n        this.$dispatch('growl/fromError', { title: 'Error downloading file', err }, { root: true });\n      }\n    });\n    if (!isEmpty(toZip)) {\n      generateZip(toZip).then((zip) => {\n        downloadFile(`${ this.id }-reports`, zip, 'application/zip');\n      });\n    }\n  }\n}\n\nconst labelFor = (report) => {\n  const { creationTimestamp } = report.metadata;\n\n  const date = day(creationTimestamp).format('YYYY-MM-DD-HHmmss');\n  const name = report.id.replace(/^scan-report-/, '');\n\n  return `${ name }--${ date }`;\n};\n"],"mappings":"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","ignoreList":[]}]}