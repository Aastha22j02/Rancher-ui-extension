{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/c/_cluster/explorer/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/c/_cluster/explorer/index.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gIi9ob21lL3VidW50dS9zdXNlY29uLTIwMjQtZXh0LWRlbW8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb24uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnNldC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuYWRkLWFsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuZGVsZXRlLWFsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuZGlmZmVyZW5jZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuZXZlcnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuc2V0LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuaW50ZXJzZWN0aW9uLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0LnNldC5pcy1kaXNqb2ludC1mcm9tLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0LnNldC5pcy1zdWJzZXQtb2YuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuc2V0LmlzLXN1cGVyc2V0LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0LnNldC5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0LnNldC5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuc2V0LnJlZHVjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuc29tZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuc3ltbWV0cmljLWRpZmZlcmVuY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuc2V0LnVuaW9uLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwpmdW5jdGlvbiBvd25LZXlzKGUsIHIpIHsgdmFyIHQgPSBPYmplY3Qua2V5cyhlKTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIG8gPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpOyByICYmIChvID0gby5maWx0ZXIoZnVuY3Rpb24gKHIpIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSwgcikuZW51bWVyYWJsZTsgfSkpLCB0LnB1c2guYXBwbHkodCwgbyk7IH0gcmV0dXJuIHQ7IH0KZnVuY3Rpb24gX29iamVjdFNwcmVhZChlKSB7IGZvciAodmFyIHIgPSAxOyByIDwgYXJndW1lbnRzLmxlbmd0aDsgcisrKSB7IHZhciB0ID0gbnVsbCAhPSBhcmd1bWVudHNbcl0gPyBhcmd1bWVudHNbcl0gOiB7fTsgciAlIDIgPyBvd25LZXlzKE9iamVjdCh0KSwgITApLmZvckVhY2goZnVuY3Rpb24gKHIpIHsgX2RlZmluZVByb3BlcnR5KGUsIHIsIHRbcl0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnModCkpIDogb3duS2V5cyhPYmplY3QodCkpLmZvckVhY2goZnVuY3Rpb24gKHIpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIHIsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCwgcikpOyB9KTsgfSByZXR1cm4gZTsgfQppbXBvcnQgRGFzaGJvYXJkTWV0cmljcyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9EYXNoYm9hcmRNZXRyaWNzJzsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgeyBDQVBJLCBFTkRQT0lOVFMsIEVWRU5ULCBOQU1FU1BBQ0UsIElOR1JFU1MsIE1BTkFHRU1FTlQsIE1FVFJJQywgTk9ERSwgU0VSVklDRSwgUFYsIFdPUktMT0FEX1RZUEVTLCBDT1VOVCwgQ0FUQUxPRywgU0VDUkVUIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IHNldFByb21pc2VSZXN1bHQgfSBmcm9tICdAc2hlbGwvdXRpbHMvcHJvbWlzZSc7CmltcG9ydCBBbGVydFRhYmxlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0FsZXJ0VGFibGUnOwppbXBvcnQgeyBCYW5uZXIgfSBmcm9tICdAY29tcG9uZW50cy9CYW5uZXInOwppbXBvcnQgeyBwYXJzZVNpLCBjcmVhdGVNZW1vcnlWYWx1ZXMgfSBmcm9tICdAc2hlbGwvdXRpbHMvdW5pdHMnOwppbXBvcnQgeyBOQU1FLCBST0xFUywgU1RBVEUgfSBmcm9tICdAc2hlbGwvY29uZmlnL3RhYmxlLWhlYWRlcnMnOwppbXBvcnQgeyBoYXZlVjFNb25pdG9yaW5nLCBtb25pdG9yaW5nU3RhdHVzLCBjYW5WaWV3R3JhZmFuYUxpbmsgfSBmcm9tICdAc2hlbGwvdXRpbHMvbW9uaXRvcmluZyc7CmltcG9ydCBUYWJiZWQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvVGFiYmVkJzsKaW1wb3J0IFRhYiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9UYWJiZWQvVGFiJzsKaW1wb3J0IHsgYWxsRGFzaGJvYXJkc0V4aXN0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2dyYWZhbmEnOwppbXBvcnQgRXRjZEluZm9CYW5uZXIgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvRXRjZEluZm9CYW5uZXInOwppbXBvcnQgbWV0cmljUG9sbGVyIGZyb20gJ0BzaGVsbC9taXhpbnMvbWV0cmljLXBvbGxlcic7CmltcG9ydCBFbWJlclBhZ2UgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvRW1iZXJQYWdlJzsKaW1wb3J0IFJlc291cmNlU3VtbWFyeSwgeyByZXNvdXJjZUNvdW50cyB9IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1Jlc291cmNlU3VtbWFyeSc7CmltcG9ydCBIYXJkd2FyZVJlc291cmNlR2F1Z2UgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvSGFyZHdhcmVSZXNvdXJjZUdhdWdlJzsKaW1wb3J0IHsgaXNFbXB0eSB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwppbXBvcnQgQ29uZmlnQmFkZ2UgZnJvbSAnLi9Db25maWdCYWRnZSc7CmltcG9ydCBFdmVudHNUYWJsZSBmcm9tICcuL0V2ZW50c1RhYmxlJzsKaW1wb3J0IHsgZmV0Y2hDbHVzdGVyUmVzb3VyY2VzIH0gZnJvbSAnLi9leHBsb3Jlci11dGlscyc7CmltcG9ydCBTaW1wbGVCb3ggZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvU2ltcGxlQm94JzsKaW1wb3J0IHsgRXh0ZW5zaW9uUG9pbnQsIENhcmRMb2NhdGlvbiB9IGZyb20gJ0BzaGVsbC9jb3JlL3R5cGVzJzsKaW1wb3J0IHsgZ2V0QXBwbGljYWJsZUV4dGVuc2lvbkVuaGFuY2VtZW50cyB9IGZyb20gJ0BzaGVsbC9jb3JlL3BsdWdpbi1oZWxwZXJzJzsKaW1wb3J0IENlcnRpZmljYXRlcyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DZXJ0aWZpY2F0ZXMnOwppbXBvcnQgeyBOQU1FIGFzIEVYUExPUkVSIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9wcm9kdWN0L2V4cGxvcmVyJzsKZXhwb3J0IHZhciBSRVNPVVJDRVMgPSBbTkFNRVNQQUNFLCBJTkdSRVNTLCBQViwgV09SS0xPQURfVFlQRVMuREVQTE9ZTUVOVCwgV09SS0xPQURfVFlQRVMuU1RBVEVGVUxfU0VULCBXT1JLTE9BRF9UWVBFUy5KT0IsIFdPUktMT0FEX1RZUEVTLkRBRU1PTl9TRVQsIFNFUlZJQ0VdOwp2YXIgQ0xVU1RFUl9NRVRSSUNTX0RFVEFJTF9VUkwgPSAnL2FwaS92MS9uYW1lc3BhY2VzL2NhdHRsZS1tb25pdG9yaW5nLXN5c3RlbS9zZXJ2aWNlcy9odHRwOnJhbmNoZXItbW9uaXRvcmluZy1ncmFmYW5hOjgwL3Byb3h5L2QvcmFuY2hlci1jbHVzdGVyLW5vZGVzLTEvcmFuY2hlci1jbHVzdGVyLW5vZGVzP29yZ0lkPTEnOwp2YXIgQ0xVU1RFUl9NRVRSSUNTX1NVTU1BUllfVVJMID0gJy9hcGkvdjEvbmFtZXNwYWNlcy9jYXR0bGUtbW9uaXRvcmluZy1zeXN0ZW0vc2VydmljZXMvaHR0cDpyYW5jaGVyLW1vbml0b3JpbmctZ3JhZmFuYTo4MC9wcm94eS9kL3JhbmNoZXItY2x1c3Rlci0xL3JhbmNoZXItY2x1c3Rlcj9vcmdJZD0xJzsKdmFyIEs4U19NRVRSSUNTX0RFVEFJTF9VUkwgPSAnL2FwaS92MS9uYW1lc3BhY2VzL2NhdHRsZS1tb25pdG9yaW5nLXN5c3RlbS9zZXJ2aWNlcy9odHRwOnJhbmNoZXItbW9uaXRvcmluZy1ncmFmYW5hOjgwL3Byb3h5L2QvcmFuY2hlci1rOHMtY29tcG9uZW50cy1ub2Rlcy0xL3JhbmNoZXIta3ViZXJuZXRlcy1jb21wb25lbnRzLW5vZGVzP29yZ0lkPTEnOwp2YXIgSzhTX01FVFJJQ1NfU1VNTUFSWV9VUkwgPSAnL2FwaS92MS9uYW1lc3BhY2VzL2NhdHRsZS1tb25pdG9yaW5nLXN5c3RlbS9zZXJ2aWNlcy9odHRwOnJhbmNoZXItbW9uaXRvcmluZy1ncmFmYW5hOjgwL3Byb3h5L2QvcmFuY2hlci1rOHMtY29tcG9uZW50cy0xL3JhbmNoZXIta3ViZXJuZXRlcy1jb21wb25lbnRzP29yZ0lkPTEnOwp2YXIgRVRDRF9NRVRSSUNTX0RFVEFJTF9VUkwgPSAnL2FwaS92MS9uYW1lc3BhY2VzL2NhdHRsZS1tb25pdG9yaW5nLXN5c3RlbS9zZXJ2aWNlcy9odHRwOnJhbmNoZXItbW9uaXRvcmluZy1ncmFmYW5hOjgwL3Byb3h5L2QvcmFuY2hlci1ldGNkLW5vZGVzLTEvcmFuY2hlci1ldGNkLW5vZGVzP29yZ0lkPTEnOwp2YXIgRVRDRF9NRVRSSUNTX1NVTU1BUllfVVJMID0gJy9hcGkvdjEvbmFtZXNwYWNlcy9jYXR0bGUtbW9uaXRvcmluZy1zeXN0ZW0vc2VydmljZXMvaHR0cDpyYW5jaGVyLW1vbml0b3JpbmctZ3JhZmFuYTo4MC9wcm94eS9kL3JhbmNoZXItZXRjZC0xL3JhbmNoZXItZXRjZD9vcmdJZD0xJzsKdmFyIENPTVBPTkVOVF9TVEFUVVMgPSBbJ2V0Y2QnLCAnc2NoZWR1bGVyJywgJ2NvbnRyb2xsZXItbWFuYWdlciddOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NsdXN0ZXJFeHBsb3JlckluZGV4UGFnZScsCiAgY29tcG9uZW50czogewogICAgRXRjZEluZm9CYW5uZXI6IEV0Y2RJbmZvQmFubmVyLAogICAgRGFzaGJvYXJkTWV0cmljczogRGFzaGJvYXJkTWV0cmljcywKICAgIEhhcmR3YXJlUmVzb3VyY2VHYXVnZTogSGFyZHdhcmVSZXNvdXJjZUdhdWdlLAogICAgUmVzb3VyY2VTdW1tYXJ5OiBSZXNvdXJjZVN1bW1hcnksCiAgICBUYWI6IFRhYiwKICAgIFRhYmJlZDogVGFiYmVkLAogICAgQWxlcnRUYWJsZTogQWxlcnRUYWJsZSwKICAgIEJhbm5lcjogQmFubmVyLAogICAgRW1iZXJQYWdlOiBFbWJlclBhZ2UsCiAgICBDb25maWdCYWRnZTogQ29uZmlnQmFkZ2UsCiAgICBFdmVudHNUYWJsZTogRXZlbnRzVGFibGUsCiAgICBTaW1wbGVCb3g6IFNpbXBsZUJveCwKICAgIENlcnRpZmljYXRlczogQ2VydGlmaWNhdGVzCiAgfSwKICBtaXhpbnM6IFttZXRyaWNQb2xsZXJdLAogIGZldGNoOiBmdW5jdGlvbiBmZXRjaCgpIHsKICAgIGZldGNoQ2x1c3RlclJlc291cmNlcyh0aGlzLiRzdG9yZSwgTk9ERSk7CiAgICBpZiAodGhpcy5jdXJyZW50Q2x1c3RlcikgewogICAgICBzZXRQcm9taXNlUmVzdWx0KGFsbERhc2hib2FyZHNFeGlzdCh0aGlzLiRzdG9yZSwgdGhpcy5jdXJyZW50Q2x1c3Rlci5pZCwgW0NMVVNURVJfTUVUUklDU19ERVRBSUxfVVJMLCBDTFVTVEVSX01FVFJJQ1NfU1VNTUFSWV9VUkxdKSwgdGhpcywgJ3Nob3dDbHVzdGVyTWV0cmljcycsICJEZXRlcm1pbmUgY2x1c3RlciBtZXRyaWNzIik7CiAgICAgIHNldFByb21pc2VSZXN1bHQoYWxsRGFzaGJvYXJkc0V4aXN0KHRoaXMuJHN0b3JlLCB0aGlzLmN1cnJlbnRDbHVzdGVyLmlkLCBbSzhTX01FVFJJQ1NfREVUQUlMX1VSTCwgSzhTX01FVFJJQ1NfU1VNTUFSWV9VUkxdKSwgdGhpcywgJ3Nob3dLOHNNZXRyaWNzJywgIkRldGVybWluZSBrOHMgbWV0cmljcyIpOwogICAgICBzZXRQcm9taXNlUmVzdWx0KGFsbERhc2hib2FyZHNFeGlzdCh0aGlzLiRzdG9yZSwgdGhpcy5jdXJyZW50Q2x1c3Rlci5pZCwgW0VUQ0RfTUVUUklDU19ERVRBSUxfVVJMLCBFVENEX01FVFJJQ1NfU1VNTUFSWV9VUkxdKSwgdGhpcywgJ3Nob3dFdGNkTWV0cmljcycsICJEZXRlcm1pbmUgZXRjZCBtZXRyaWNzIik7CgogICAgICAvLyBJdCdzIG5vdCBlbm91Z2ggdG8gY2hlY2sgdGhhdCB0aGUgZ3JhZmFuYSBsaW5rcyBhcmUgd29ya2luZyBmb3IgdGhlIGN1cnJlbnQgdXNlcjsgZW1iZWRkZWQgY2x1c3Rlci1sZXZlbCBkYXNoYm9hcmRzIHNob3VsZCBvbmx5IGJlIHNob3duIGlmIHRoZSB1c2VyIGNhbiB2aWV3IHRoZSBncmFmYW5hIGVuZHBvaW50CiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9yYW5jaGVyL2Rhc2hib2FyZC9pc3N1ZXMvOTc5MgogICAgICBzZXRQcm9taXNlUmVzdWx0KGNhblZpZXdHcmFmYW5hTGluayh0aGlzLiRzdG9yZSksIHRoaXMsICdjYW5WaWV3TWV0cmljcycsICdEZXRlcm1pbmUgR3JhZmFuYSBQZXJtaXNzaW9uJyk7CiAgICAgIGlmICh0aGlzLmN1cnJlbnRDbHVzdGVyLmlzTG9jYWwgJiYgdGhpcy4kc3RvcmUuZ2V0dGVyc1snbWFuYWdlbWVudC9zY2hlbWFGb3InXShNQU5BR0VNRU5ULk5PREUpKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ21hbmFnZW1lbnQvZmluZEFsbCcsIHsKICAgICAgICAgIHR5cGU6IE1BTkFHRU1FTlQuTk9ERQogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgdmFyIGNsdXN0ZXJDb3VudHMgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWyJjbHVzdGVyL2FsbCJdKENPVU5UKTsKICAgIHZhciBub2RlSGVhZGVycyA9IFtTVEFURSwgTkFNRSwgUk9MRVNdOwogICAgcmV0dXJuIHsKICAgICAgbm9kZUhlYWRlcnM6IG5vZGVIZWFkZXJzLAogICAgICBjb25zdHJhaW50czogW10sCiAgICAgIGV2ZW50czogW10sCiAgICAgIG5vZGVNZXRyaWNzOiBbXSwKICAgICAgc2hvd0NsdXN0ZXJNZXRyaWNzOiBmYWxzZSwKICAgICAgc2hvd0s4c01ldHJpY3M6IGZhbHNlLAogICAgICBzaG93RXRjZE1ldHJpY3M6IGZhbHNlLAogICAgICBjYW5WaWV3TWV0cmljczogZmFsc2UsCiAgICAgIENMVVNURVJfTUVUUklDU19ERVRBSUxfVVJMOiBDTFVTVEVSX01FVFJJQ1NfREVUQUlMX1VSTCwKICAgICAgQ0xVU1RFUl9NRVRSSUNTX1NVTU1BUllfVVJMOiBDTFVTVEVSX01FVFJJQ1NfU1VNTUFSWV9VUkwsCiAgICAgIEs4U19NRVRSSUNTX0RFVEFJTF9VUkw6IEs4U19NRVRSSUNTX0RFVEFJTF9VUkwsCiAgICAgIEs4U19NRVRSSUNTX1NVTU1BUllfVVJMOiBLOFNfTUVUUklDU19TVU1NQVJZX1VSTCwKICAgICAgRVRDRF9NRVRSSUNTX0RFVEFJTF9VUkw6IEVUQ0RfTUVUUklDU19ERVRBSUxfVVJMLAogICAgICBFVENEX01FVFJJQ1NfU1VNTUFSWV9VUkw6IEVUQ0RfTUVUUklDU19TVU1NQVJZX1VSTCwKICAgICAgY2x1c3RlckNvdW50czogY2x1c3RlckNvdW50cywKICAgICAgc2VsZWN0ZWRUYWI6ICdjbHVzdGVyLWV2ZW50cycsCiAgICAgIGV4dGVuc2lvbkNhcmRzOiBnZXRBcHBsaWNhYmxlRXh0ZW5zaW9uRW5oYW5jZW1lbnRzKHRoaXMsIEV4dGVuc2lvblBvaW50LkNBUkQsIENhcmRMb2NhdGlvbi5DTFVTVEVSX0RBU0hCT0FSRF9DQVJELCB0aGlzLiRyb3V0ZSkKICAgIH07CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgLy8gUmVtb3ZlIHRoZSBkYXRhIGFuZCBzdG9wIHdhdGNoaW5nIHJlc291cmNlcyB0aGF0IHdlcmUgZmV0Y2hlZCBpbiB0aGlzIHBhZ2UKICAgIC8vIEV2ZW50cyBpbiBwYXJ0aWN1bGFyIGNhbiBsZWFkIHRvIGNoYW5nZSBtZXNzYWdlcyBoYXZpbmcgdG8gYmUgcHJvY2Vzc2VkIHdoZW4gd2UgYXJlIG5vIGxvbmdlciBpbnRlcmVzdGVkIGluIGV2ZW50cwogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvZm9yZ2V0VHlwZScsIEVWRU5UKTsKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjbHVzdGVyL2ZvcmdldFR5cGUnLCBOT0RFKTsKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjbHVzdGVyL2ZvcmdldFR5cGUnLCBFTkRQT0lOVFMpOyAvLyBVc2VkIGJ5IEFsZXJ0VGFibGUgdG8gZ2V0IGFsZXJ0cyB3aGVuIHYyIG1vbml0b3JpbmcgaXMgaW5zdGFsbGVkCiAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9mb3JnZXRUeXBlJywgTUVUUklDLk5PREUpOwogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvZm9yZ2V0VHlwZScsIE1BTkFHRU1FTlQuTk9ERSk7CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoWydjdXJyZW50Q2x1c3RlciddKSksIG1vbml0b3JpbmdTdGF0dXMoKSksIHt9LCB7CiAgICBub2RlczogZnVuY3Rpb24gbm9kZXMoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjbHVzdGVyL2FsbCddKE5PREUpOwogICAgfSwKICAgIG1nbXROb2RlczogZnVuY3Rpb24gbWdtdE5vZGVzKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1snbWFuYWdlbWVudC9hbGwnXShNQU5BR0VNRU5ULkNMVVNURVIpOwogICAgfSwKICAgIGhhc1YxTW9uaXRvcmluZzogZnVuY3Rpb24gaGFzVjFNb25pdG9yaW5nKCkgewogICAgICByZXR1cm4gaGF2ZVYxTW9uaXRvcmluZyh0aGlzLiRzdG9yZS5nZXR0ZXJzKTsKICAgIH0sCiAgICB2MU1vbml0b3JpbmdVUkw6IGZ1bmN0aW9uIHYxTW9uaXRvcmluZ1VSTCgpIHsKICAgICAgcmV0dXJuICIvay8iLmNvbmNhdCh0aGlzLmN1cnJlbnRDbHVzdGVyLmlkLCAiL21vbml0b3JpbmciKTsKICAgIH0sCiAgICBkaXNwbGF5UHJvdmlkZXI6IGZ1bmN0aW9uIGRpc3BsYXlQcm92aWRlcigpIHsKICAgICAgdmFyIF90aGlzJGN1cnJlbnRDbHVzdGVyOwogICAgICB2YXIgb3RoZXIgPSAnb3RoZXInOwogICAgICB2YXIgcHJvdmlkZXIgPSAoKF90aGlzJGN1cnJlbnRDbHVzdGVyID0gdGhpcy5jdXJyZW50Q2x1c3RlcikgPT09IG51bGwgfHwgX3RoaXMkY3VycmVudENsdXN0ZXIgPT09IHZvaWQgMCB8fCAoX3RoaXMkY3VycmVudENsdXN0ZXIgPSBfdGhpcyRjdXJyZW50Q2x1c3Rlci5zdGF0dXMpID09PSBudWxsIHx8IF90aGlzJGN1cnJlbnRDbHVzdGVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRjdXJyZW50Q2x1c3Rlci5wcm92aWRlcikgfHwgb3RoZXI7CiAgICAgIGlmIChwcm92aWRlciA9PT0gJ3JrZS53aW5kb3dzJykgewogICAgICAgIHByb3ZpZGVyID0gJ3JrZVdpbmRvd3MnOwogICAgICB9CiAgICAgIGlmICghdGhpcy4kc3RvcmUuZ2V0dGVyc1snaTE4bi9leGlzdHMnXSgiY2x1c3Rlci5wcm92aWRlci4iLmNvbmNhdChwcm92aWRlcikpKSB7CiAgICAgICAgcHJvdmlkZXIgPSAnb3RoZXInOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzLnQoImNsdXN0ZXIucHJvdmlkZXIuIi5jb25jYXQocHJvdmlkZXIpKTsKICAgIH0sCiAgICBpc0hhcnZlc3RlckNsdXN0ZXI6IGZ1bmN0aW9uIGlzSGFydmVzdGVyQ2x1c3RlcigpIHsKICAgICAgdmFyIF90aGlzJGN1cnJlbnRDbHVzdGVyMjsKICAgICAgcmV0dXJuIChfdGhpcyRjdXJyZW50Q2x1c3RlcjIgPSB0aGlzLmN1cnJlbnRDbHVzdGVyKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50Q2x1c3RlcjIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGN1cnJlbnRDbHVzdGVyMi5pc0hhcnZlc3RlcjsKICAgIH0sCiAgICBpc1JLRTogZnVuY3Rpb24gaXNSS0UoKSB7CiAgICAgIHJldHVybiBbJ3JrZScsICdya2Uud2luZG93cycsICdya2UyJywgJ3JrZTIud2luZG93cyddLmluY2x1ZGVzKCh0aGlzLmN1cnJlbnRDbHVzdGVyLnN0YXR1cy5wcm92aWRlciB8fCAnJykudG9Mb3dlckNhc2UoKSk7CiAgICB9LAogICAgYWNjZXNzaWJsZVJlc291cmNlczogZnVuY3Rpb24gYWNjZXNzaWJsZVJlc291cmNlcygpIHsKICAgICAgdmFyIF90aGlzJGNsdXN0ZXJDb3VudHMsCiAgICAgICAgX3RoaXMgPSB0aGlzOwogICAgICAvLyBUaGlzIGlzIGEgbGlzdCBvZiBJRHMgZm9yIGFsbG93ZWQgcmVzb3VyY2VzIGNvdW50cy4KICAgICAgdmFyIGRlZmF1bHRBbGxvd2VkUmVzb3VyY2VzID0gT2JqZWN0LmtleXMoKChfdGhpcyRjbHVzdGVyQ291bnRzID0gdGhpcy5jbHVzdGVyQ291bnRzKSA9PT0gbnVsbCB8fCBfdGhpcyRjbHVzdGVyQ291bnRzID09PSB2b2lkIDAgfHwgKF90aGlzJGNsdXN0ZXJDb3VudHMgPSBfdGhpcyRjbHVzdGVyQ291bnRzWzBdKSA9PT0gbnVsbCB8fCBfdGhpcyRjbHVzdGVyQ291bnRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRjbHVzdGVyQ291bnRzLmNvdW50cykgfHwge30pLmZpbHRlcihmdW5jdGlvbiAodHlwZUlkKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLiRzdG9yZS5nZXR0ZXJzWyd0eXBlLW1hcC9pc0lnbm9yZWQnXSh7CiAgICAgICAgICBpZDogdHlwZUlkCiAgICAgICAgfSk7CiAgICAgIH0pOwoKICAgICAgLy8gTWVyZ2Ugd2l0aCBSRVNPVVJDRVMgbGlzdAogICAgICB2YXIgYWxsb3dlZFJlc291cmNlcyA9IF90b0NvbnN1bWFibGVBcnJheShuZXcgU2V0KFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoZGVmYXVsdEFsbG93ZWRSZXNvdXJjZXMpLCBSRVNPVVJDRVMpKSk7CiAgICAgIHJldHVybiBhbGxvd2VkUmVzb3VyY2VzLmZpbHRlcihmdW5jdGlvbiAocmVzb3VyY2UpIHsKICAgICAgICByZXR1cm4gX3RoaXMuJHN0b3JlLmdldHRlcnNbJ2NsdXN0ZXIvc2NoZW1hRm9yJ10ocmVzb3VyY2UpOwogICAgICB9KTsKICAgIH0sCiAgICBjb21wb25lbnRTZXJ2aWNlczogZnVuY3Rpb24gY29tcG9uZW50U2VydmljZXMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICB2YXIgc3RhdHVzID0gW107CiAgICAgIENPTVBPTkVOVF9TVEFUVVMuZm9yRWFjaChmdW5jdGlvbiAoY3MpIHsKICAgICAgICBzdGF0dXMucHVzaCh7CiAgICAgICAgICBuYW1lOiBjcywKICAgICAgICAgIGhlYWx0aHk6IF90aGlzMi5pc0NvbXBvbmVudFN0YXR1c0hlYWx0aHkoY3MpLAogICAgICAgICAgbGFiZWxLZXk6ICJjbHVzdGVySW5kZXhQYWdlLnNlY3Rpb25zLmNvbXBvbmVudFN0YXR1cy4iLmNvbmNhdChjcykKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIHJldHVybiBzdGF0dXM7CiAgICB9LAogICAgdG90YWxDb3VudEdhdWdlSW5wdXQ6IGZ1bmN0aW9uIHRvdGFsQ291bnRHYXVnZUlucHV0KCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKICAgICAgdmFyIHRvdGFsSW5wdXQgPSB7CiAgICAgICAgbmFtZTogdGhpcy50KCdjbHVzdGVySW5kZXhQYWdlLnJlc291cmNlR2F1Z2UudG90YWxSZXNvdXJjZXMnKSwKICAgICAgICB0b3RhbDogMCwKICAgICAgICB1c2VmdWw6IDAsCiAgICAgICAgd2FybmluZ0NvdW50OiAwLAogICAgICAgIGVycm9yQ291bnQ6IDAKICAgICAgfTsKICAgICAgdGhpcy5hY2Nlc3NpYmxlUmVzb3VyY2VzLmZvckVhY2goZnVuY3Rpb24gKHJlc291cmNlKSB7CiAgICAgICAgdmFyIGNvdW50cyA9IHJlc291cmNlQ291bnRzKF90aGlzMy4kc3RvcmUsIHJlc291cmNlKTsKICAgICAgICBPYmplY3QuZW50cmllcyhjb3VudHMpLmZvckVhY2goZnVuY3Rpb24gKGVudHJ5KSB7CiAgICAgICAgICB0b3RhbElucHV0W2VudHJ5WzBdXSArPSBlbnRyeVsxXTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIHJldHVybiB0b3RhbElucHV0OwogICAgfSwKICAgIGhhc1N0YXRzOiBmdW5jdGlvbiBoYXNTdGF0cygpIHsKICAgICAgdmFyIF90aGlzJGN1cnJlbnRDbHVzdGVyMywgX3RoaXMkY3VycmVudENsdXN0ZXI0OwogICAgICByZXR1cm4gKChfdGhpcyRjdXJyZW50Q2x1c3RlcjMgPSB0aGlzLmN1cnJlbnRDbHVzdGVyKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50Q2x1c3RlcjMgPT09IHZvaWQgMCB8fCAoX3RoaXMkY3VycmVudENsdXN0ZXIzID0gX3RoaXMkY3VycmVudENsdXN0ZXIzLnN0YXR1cykgPT09IG51bGwgfHwgX3RoaXMkY3VycmVudENsdXN0ZXIzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRjdXJyZW50Q2x1c3RlcjMuYWxsb2NhdGFibGUpICYmICgoX3RoaXMkY3VycmVudENsdXN0ZXI0ID0gdGhpcy5jdXJyZW50Q2x1c3RlcikgPT09IG51bGwgfHwgX3RoaXMkY3VycmVudENsdXN0ZXI0ID09PSB2b2lkIDAgfHwgKF90aGlzJGN1cnJlbnRDbHVzdGVyNCA9IF90aGlzJGN1cnJlbnRDbHVzdGVyNC5zdGF0dXMpID09PSBudWxsIHx8IF90aGlzJGN1cnJlbnRDbHVzdGVyNCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkY3VycmVudENsdXN0ZXI0LnJlcXVlc3RlZCk7CiAgICB9LAogICAgY3B1UmVzZXJ2ZWQ6IGZ1bmN0aW9uIGNwdVJlc2VydmVkKCkgewogICAgICB2YXIgX3RoaXMkY3VycmVudENsdXN0ZXI1LCBfdGhpcyRjdXJyZW50Q2x1c3RlcjY7CiAgICAgIHZhciB0b3RhbCA9IHBhcnNlU2koKF90aGlzJGN1cnJlbnRDbHVzdGVyNSA9IHRoaXMuY3VycmVudENsdXN0ZXIpID09PSBudWxsIHx8IF90aGlzJGN1cnJlbnRDbHVzdGVyNSA9PT0gdm9pZCAwIHx8IChfdGhpcyRjdXJyZW50Q2x1c3RlcjUgPSBfdGhpcyRjdXJyZW50Q2x1c3RlcjUuc3RhdHVzKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50Q2x1c3RlcjUgPT09IHZvaWQgMCB8fCAoX3RoaXMkY3VycmVudENsdXN0ZXI1ID0gX3RoaXMkY3VycmVudENsdXN0ZXI1LmFsbG9jYXRhYmxlKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50Q2x1c3RlcjUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGN1cnJlbnRDbHVzdGVyNS5jcHUpOwogICAgICByZXR1cm4gewogICAgICAgIHRvdGFsOiB0b3RhbCwKICAgICAgICB1c2VmdWw6IHBhcnNlU2koKF90aGlzJGN1cnJlbnRDbHVzdGVyNiA9IHRoaXMuY3VycmVudENsdXN0ZXIpID09PSBudWxsIHx8IF90aGlzJGN1cnJlbnRDbHVzdGVyNiA9PT0gdm9pZCAwIHx8IChfdGhpcyRjdXJyZW50Q2x1c3RlcjYgPSBfdGhpcyRjdXJyZW50Q2x1c3RlcjYuc3RhdHVzKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50Q2x1c3RlcjYgPT09IHZvaWQgMCB8fCAoX3RoaXMkY3VycmVudENsdXN0ZXI2ID0gX3RoaXMkY3VycmVudENsdXN0ZXI2LnJlcXVlc3RlZCkgPT09IG51bGwgfHwgX3RoaXMkY3VycmVudENsdXN0ZXI2ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRjdXJyZW50Q2x1c3RlcjYuY3B1KSwKICAgICAgICB1bml0czogdGhpcy50KCdjbHVzdGVySW5kZXhQYWdlLmhhcmR3YXJlUmVzb3VyY2VHYXVnZS51bml0cy5jb3JlcycsIHsKICAgICAgICAgIGNvdW50OiB0b3RhbAogICAgICAgIH0pCiAgICAgIH07CiAgICB9LAogICAgcG9kc1VzZWQ6IGZ1bmN0aW9uIHBvZHNVc2VkKCkgewogICAgICB2YXIgX3RoaXMkY3VycmVudENsdXN0ZXI3LCBfdGhpcyRjdXJyZW50Q2x1c3Rlcjg7CiAgICAgIHJldHVybiB7CiAgICAgICAgdG90YWw6IHBhcnNlU2koKChfdGhpcyRjdXJyZW50Q2x1c3RlcjcgPSB0aGlzLmN1cnJlbnRDbHVzdGVyKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50Q2x1c3RlcjcgPT09IHZvaWQgMCB8fCAoX3RoaXMkY3VycmVudENsdXN0ZXI3ID0gX3RoaXMkY3VycmVudENsdXN0ZXI3LnN0YXR1cykgPT09IG51bGwgfHwgX3RoaXMkY3VycmVudENsdXN0ZXI3ID09PSB2b2lkIDAgfHwgKF90aGlzJGN1cnJlbnRDbHVzdGVyNyA9IF90aGlzJGN1cnJlbnRDbHVzdGVyNy5hbGxvY2F0YWJsZSkgPT09IG51bGwgfHwgX3RoaXMkY3VycmVudENsdXN0ZXI3ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRjdXJyZW50Q2x1c3RlcjcucG9kcykgfHwgJzAnKSwKICAgICAgICB1c2VmdWw6IHBhcnNlU2koKChfdGhpcyRjdXJyZW50Q2x1c3RlcjggPSB0aGlzLmN1cnJlbnRDbHVzdGVyKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50Q2x1c3RlcjggPT09IHZvaWQgMCB8fCAoX3RoaXMkY3VycmVudENsdXN0ZXI4ID0gX3RoaXMkY3VycmVudENsdXN0ZXI4LnN0YXR1cykgPT09IG51bGwgfHwgX3RoaXMkY3VycmVudENsdXN0ZXI4ID09PSB2b2lkIDAgfHwgKF90aGlzJGN1cnJlbnRDbHVzdGVyOCA9IF90aGlzJGN1cnJlbnRDbHVzdGVyOC5yZXF1ZXN0ZWQpID09PSBudWxsIHx8IF90aGlzJGN1cnJlbnRDbHVzdGVyOCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkY3VycmVudENsdXN0ZXI4LnBvZHMpIHx8ICcwJykKICAgICAgfTsKICAgIH0sCiAgICByYW1SZXNlcnZlZDogZnVuY3Rpb24gcmFtUmVzZXJ2ZWQoKSB7CiAgICAgIHZhciBfdGhpcyRjdXJyZW50Q2x1c3RlcjksIF90aGlzJGN1cnJlbnRDbHVzdGVyMTA7CiAgICAgIHJldHVybiBjcmVhdGVNZW1vcnlWYWx1ZXMoKF90aGlzJGN1cnJlbnRDbHVzdGVyOSA9IHRoaXMuY3VycmVudENsdXN0ZXIpID09PSBudWxsIHx8IF90aGlzJGN1cnJlbnRDbHVzdGVyOSA9PT0gdm9pZCAwIHx8IChfdGhpcyRjdXJyZW50Q2x1c3RlcjkgPSBfdGhpcyRjdXJyZW50Q2x1c3Rlcjkuc3RhdHVzKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50Q2x1c3RlcjkgPT09IHZvaWQgMCB8fCAoX3RoaXMkY3VycmVudENsdXN0ZXI5ID0gX3RoaXMkY3VycmVudENsdXN0ZXI5LmFsbG9jYXRhYmxlKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50Q2x1c3RlcjkgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGN1cnJlbnRDbHVzdGVyOS5tZW1vcnksIChfdGhpcyRjdXJyZW50Q2x1c3RlcjEwID0gdGhpcy5jdXJyZW50Q2x1c3RlcikgPT09IG51bGwgfHwgX3RoaXMkY3VycmVudENsdXN0ZXIxMCA9PT0gdm9pZCAwIHx8IChfdGhpcyRjdXJyZW50Q2x1c3RlcjEwID0gX3RoaXMkY3VycmVudENsdXN0ZXIxMC5zdGF0dXMpID09PSBudWxsIHx8IF90aGlzJGN1cnJlbnRDbHVzdGVyMTAgPT09IHZvaWQgMCB8fCAoX3RoaXMkY3VycmVudENsdXN0ZXIxMCA9IF90aGlzJGN1cnJlbnRDbHVzdGVyMTAucmVxdWVzdGVkKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50Q2x1c3RlcjEwID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRjdXJyZW50Q2x1c3RlcjEwLm1lbW9yeSk7CiAgICB9LAogICAgbWV0cmljQWdncmVnYXRpb25zOiBmdW5jdGlvbiBtZXRyaWNBZ2dyZWdhdGlvbnMoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwogICAgICB2YXIgY2hlY2tOb2RlcyA9IHRoaXMubm9kZXM7CgogICAgICAvLyBTcGVjaWFsIGNhc2UgbG9jYWwgY2x1c3RlcgogICAgICBpZiAodGhpcy5jdXJyZW50Q2x1c3Rlci5pc0xvY2FsKSB7CiAgICAgICAgdmFyIG5vZGVOYW1lcyA9IHRoaXMubm9kZXMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIG4pIHsKICAgICAgICAgIGFjY1tuLmlkXSA9IG47CiAgICAgICAgICByZXR1cm4gYWNjOwogICAgICAgIH0sIHt9KTsKICAgICAgICBjaGVja05vZGVzID0gdGhpcy5tZ210Tm9kZXMuZmlsdGVyKGZ1bmN0aW9uIChuKSB7CiAgICAgICAgICB2YXIgX24kbWV0YWRhdGE7CiAgICAgICAgICB2YXIgbm9kZU5hbWUgPSAoKF9uJG1ldGFkYXRhID0gbi5tZXRhZGF0YSkgPT09IG51bGwgfHwgX24kbWV0YWRhdGEgPT09IHZvaWQgMCB8fCAoX24kbWV0YWRhdGEgPSBfbiRtZXRhZGF0YS5sYWJlbHMpID09PSBudWxsIHx8IF9uJG1ldGFkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbiRtZXRhZGF0YVsnbWFuYWdlbWVudC5jYXR0bGUuaW8vbm9kZW5hbWUnXSkgfHwgbi5pZDsKICAgICAgICAgIHJldHVybiAhIW5vZGVOYW1lc1tub2RlTmFtZV07CiAgICAgICAgfSk7CiAgICAgIH0KICAgICAgdmFyIHNvbWVOb25Xb3JrZXJSb2xlcyA9IGNoZWNrTm9kZXMuc29tZShmdW5jdGlvbiAobm9kZSkgewogICAgICAgIHJldHVybiBub2RlLmhhc0FSb2xlICYmICFub2RlLmlzV29ya2VyOwogICAgICB9KTsKICAgICAgdmFyIG1ldHJpY3MgPSB0aGlzLm5vZGVNZXRyaWNzLmZpbHRlcihmdW5jdGlvbiAobm9kZU1ldHJpY3MpIHsKICAgICAgICB2YXIgbm9kZSA9IF90aGlzNC5ub2Rlcy5maW5kKGZ1bmN0aW9uIChuZCkgewogICAgICAgICAgcmV0dXJuIG5kLmlkID09PSBub2RlTWV0cmljcy5pZDsKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gbm9kZSAmJiAoIXNvbWVOb25Xb3JrZXJSb2xlcyB8fCBub2RlLmlzV29ya2VyKTsKICAgICAgfSk7CiAgICAgIHZhciBpbml0aWFsQWdncmVnYXRpb24gPSB7CiAgICAgICAgY3B1OiAwLAogICAgICAgIG1lbW9yeTogMAogICAgICB9OwogICAgICBpZiAoaXNFbXB0eShtZXRyaWNzKSkgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CiAgICAgIHJldHVybiBtZXRyaWNzLnJlZHVjZShmdW5jdGlvbiAoYWdnLCBtZXRyaWMpIHsKICAgICAgICBhZ2cuY3B1ICs9IHBhcnNlU2kobWV0cmljLnVzYWdlLmNwdSk7CiAgICAgICAgYWdnLm1lbW9yeSArPSBwYXJzZVNpKG1ldHJpYy51c2FnZS5tZW1vcnkpOwogICAgICAgIHJldHVybiBhZ2c7CiAgICAgIH0sIGluaXRpYWxBZ2dyZWdhdGlvbik7CiAgICB9LAogICAgY3B1VXNlZDogZnVuY3Rpb24gY3B1VXNlZCgpIHsKICAgICAgdmFyIF90aGlzJGN1cnJlbnRDbHVzdGVyMTEsIF90aGlzJG1ldHJpY0FnZ3JlZ2F0aTsKICAgICAgdmFyIHRvdGFsID0gcGFyc2VTaSgoX3RoaXMkY3VycmVudENsdXN0ZXIxMSA9IHRoaXMuY3VycmVudENsdXN0ZXIpID09PSBudWxsIHx8IF90aGlzJGN1cnJlbnRDbHVzdGVyMTEgPT09IHZvaWQgMCB8fCAoX3RoaXMkY3VycmVudENsdXN0ZXIxMSA9IF90aGlzJGN1cnJlbnRDbHVzdGVyMTEuc3RhdHVzKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50Q2x1c3RlcjExID09PSB2b2lkIDAgfHwgKF90aGlzJGN1cnJlbnRDbHVzdGVyMTEgPSBfdGhpcyRjdXJyZW50Q2x1c3RlcjExLmNhcGFjaXR5KSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50Q2x1c3RlcjExID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRjdXJyZW50Q2x1c3RlcjExLmNwdSk7CiAgICAgIHJldHVybiB7CiAgICAgICAgdG90YWw6IHRvdGFsLAogICAgICAgIHVzZWZ1bDogKF90aGlzJG1ldHJpY0FnZ3JlZ2F0aSA9IHRoaXMubWV0cmljQWdncmVnYXRpb25zKSA9PT0gbnVsbCB8fCBfdGhpcyRtZXRyaWNBZ2dyZWdhdGkgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJG1ldHJpY0FnZ3JlZ2F0aS5jcHUsCiAgICAgICAgdW5pdHM6IHRoaXMudCgnY2x1c3RlckluZGV4UGFnZS5oYXJkd2FyZVJlc291cmNlR2F1Z2UudW5pdHMuY29yZXMnLCB7CiAgICAgICAgICBjb3VudDogdG90YWwKICAgICAgICB9KQogICAgICB9OwogICAgfSwKICAgIHJhbVVzZWQ6IGZ1bmN0aW9uIHJhbVVzZWQoKSB7CiAgICAgIHZhciBfdGhpcyRjdXJyZW50Q2x1c3RlcjEyLCBfdGhpcyRtZXRyaWNBZ2dyZWdhdGkyOwogICAgICByZXR1cm4gY3JlYXRlTWVtb3J5VmFsdWVzKChfdGhpcyRjdXJyZW50Q2x1c3RlcjEyID0gdGhpcy5jdXJyZW50Q2x1c3RlcikgPT09IG51bGwgfHwgX3RoaXMkY3VycmVudENsdXN0ZXIxMiA9PT0gdm9pZCAwIHx8IChfdGhpcyRjdXJyZW50Q2x1c3RlcjEyID0gX3RoaXMkY3VycmVudENsdXN0ZXIxMi5zdGF0dXMpID09PSBudWxsIHx8IF90aGlzJGN1cnJlbnRDbHVzdGVyMTIgPT09IHZvaWQgMCB8fCAoX3RoaXMkY3VycmVudENsdXN0ZXIxMiA9IF90aGlzJGN1cnJlbnRDbHVzdGVyMTIuY2FwYWNpdHkpID09PSBudWxsIHx8IF90aGlzJGN1cnJlbnRDbHVzdGVyMTIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGN1cnJlbnRDbHVzdGVyMTIubWVtb3J5LCAoX3RoaXMkbWV0cmljQWdncmVnYXRpMiA9IHRoaXMubWV0cmljQWdncmVnYXRpb25zKSA9PT0gbnVsbCB8fCBfdGhpcyRtZXRyaWNBZ2dyZWdhdGkyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRtZXRyaWNBZ2dyZWdhdGkyLm1lbW9yeSk7CiAgICB9LAogICAgaGFzTW9uaXRvcmluZzogZnVuY3Rpb24gaGFzTW9uaXRvcmluZygpIHsKICAgICAgdmFyIF90aGlzJGNsdXN0ZXJDb3VudHMyOwogICAgICByZXR1cm4gISEoKF90aGlzJGNsdXN0ZXJDb3VudHMyID0gdGhpcy5jbHVzdGVyQ291bnRzKSAhPT0gbnVsbCAmJiBfdGhpcyRjbHVzdGVyQ291bnRzMiAhPT0gdm9pZCAwICYmIChfdGhpcyRjbHVzdGVyQ291bnRzMiA9IF90aGlzJGNsdXN0ZXJDb3VudHMyWzBdKSAhPT0gbnVsbCAmJiBfdGhpcyRjbHVzdGVyQ291bnRzMiAhPT0gdm9pZCAwICYmIChfdGhpcyRjbHVzdGVyQ291bnRzMiA9IF90aGlzJGNsdXN0ZXJDb3VudHMyLmNvdW50cykgIT09IG51bGwgJiYgX3RoaXMkY2x1c3RlckNvdW50czIgIT09IHZvaWQgMCAmJiAoX3RoaXMkY2x1c3RlckNvdW50czIgPSBfdGhpcyRjbHVzdGVyQ291bnRzMltDQVRBTE9HLkFQUF0pICE9PSBudWxsICYmIF90aGlzJGNsdXN0ZXJDb3VudHMyICE9PSB2b2lkIDAgJiYgKF90aGlzJGNsdXN0ZXJDb3VudHMyID0gX3RoaXMkY2x1c3RlckNvdW50czIubmFtZXNwYWNlcykgIT09IG51bGwgJiYgX3RoaXMkY2x1c3RlckNvdW50czIgIT09IHZvaWQgMCAmJiBfdGhpcyRjbHVzdGVyQ291bnRzMlsnY2F0dGxlLW1vbml0b3Jpbmctc3lzdGVtJ10pOwogICAgfSwKICAgIGNhbkFjY2Vzc05vZGVzOiBmdW5jdGlvbiBjYW5BY2Nlc3NOb2RlcygpIHsKICAgICAgdmFyIF90aGlzJGNsdXN0ZXJDb3VudHMzOwogICAgICByZXR1cm4gISEoKF90aGlzJGNsdXN0ZXJDb3VudHMzID0gdGhpcy5jbHVzdGVyQ291bnRzKSAhPT0gbnVsbCAmJiBfdGhpcyRjbHVzdGVyQ291bnRzMyAhPT0gdm9pZCAwICYmIChfdGhpcyRjbHVzdGVyQ291bnRzMyA9IF90aGlzJGNsdXN0ZXJDb3VudHMzWzBdKSAhPT0gbnVsbCAmJiBfdGhpcyRjbHVzdGVyQ291bnRzMyAhPT0gdm9pZCAwICYmIChfdGhpcyRjbHVzdGVyQ291bnRzMyA9IF90aGlzJGNsdXN0ZXJDb3VudHMzLmNvdW50cykgIT09IG51bGwgJiYgX3RoaXMkY2x1c3RlckNvdW50czMgIT09IHZvaWQgMCAmJiBfdGhpcyRjbHVzdGVyQ291bnRzM1tOT0RFXSk7CiAgICB9LAogICAgY2FuQWNjZXNzRGVwbG95bWVudHM6IGZ1bmN0aW9uIGNhbkFjY2Vzc0RlcGxveW1lbnRzKCkgewogICAgICB2YXIgX3RoaXMkY2x1c3RlckNvdW50czQ7CiAgICAgIHJldHVybiAhISgoX3RoaXMkY2x1c3RlckNvdW50czQgPSB0aGlzLmNsdXN0ZXJDb3VudHMpICE9PSBudWxsICYmIF90aGlzJGNsdXN0ZXJDb3VudHM0ICE9PSB2b2lkIDAgJiYgKF90aGlzJGNsdXN0ZXJDb3VudHM0ID0gX3RoaXMkY2x1c3RlckNvdW50czRbMF0pICE9PSBudWxsICYmIF90aGlzJGNsdXN0ZXJDb3VudHM0ICE9PSB2b2lkIDAgJiYgKF90aGlzJGNsdXN0ZXJDb3VudHM0ID0gX3RoaXMkY2x1c3RlckNvdW50czQuY291bnRzKSAhPT0gbnVsbCAmJiBfdGhpcyRjbHVzdGVyQ291bnRzNCAhPT0gdm9pZCAwICYmIF90aGlzJGNsdXN0ZXJDb3VudHM0W1dPUktMT0FEX1RZUEVTLkRFUExPWU1FTlRdKTsKICAgIH0sCiAgICBoYXNNZXRyaWNzVGFiczogZnVuY3Rpb24gaGFzTWV0cmljc1RhYnMoKSB7CiAgICAgIHJldHVybiB0aGlzLmNhblZpZXdNZXRyaWNzICYmICh0aGlzLnNob3dDbHVzdGVyTWV0cmljcyB8fCB0aGlzLnNob3dLOHNNZXRyaWNzIHx8IHRoaXMuc2hvd0V0Y2RNZXRyaWNzKTsKICAgIH0sCiAgICBoYXNCYWRnZTogZnVuY3Rpb24gaGFzQmFkZ2UoKSB7CiAgICAgIHZhciBfdGhpcyRjdXJyZW50Q2x1c3RlcjEzOwogICAgICByZXR1cm4gISEoKF90aGlzJGN1cnJlbnRDbHVzdGVyMTMgPSB0aGlzLmN1cnJlbnRDbHVzdGVyKSAhPT0gbnVsbCAmJiBfdGhpcyRjdXJyZW50Q2x1c3RlcjEzICE9PSB2b2lkIDAgJiYgX3RoaXMkY3VycmVudENsdXN0ZXIxMy5iYWRnZSk7CiAgICB9LAogICAgaGFzRGVzY3JpcHRpb246IGZ1bmN0aW9uIGhhc0Rlc2NyaXB0aW9uKCkgewogICAgICB2YXIgX3RoaXMkY3VycmVudENsdXN0ZXIxNDsKICAgICAgcmV0dXJuICEhKChfdGhpcyRjdXJyZW50Q2x1c3RlcjE0ID0gdGhpcy5jdXJyZW50Q2x1c3RlcikgIT09IG51bGwgJiYgX3RoaXMkY3VycmVudENsdXN0ZXIxNCAhPT0gdm9pZCAwICYmIChfdGhpcyRjdXJyZW50Q2x1c3RlcjE0ID0gX3RoaXMkY3VycmVudENsdXN0ZXIxNC5zcGVjKSAhPT0gbnVsbCAmJiBfdGhpcyRjdXJyZW50Q2x1c3RlcjE0ICE9PSB2b2lkIDAgJiYgX3RoaXMkY3VycmVudENsdXN0ZXIxNC5kZXNjcmlwdGlvbik7CiAgICB9LAogICAgYWxsRXZlbnRzTGluazogZnVuY3Rpb24gYWxsRXZlbnRzTGluaygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBuYW1lOiAnYy1jbHVzdGVyLXByb2R1Y3QtcmVzb3VyY2UnLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgcHJvZHVjdDogRVhQTE9SRVIsCiAgICAgICAgICByZXNvdXJjZTogRVZFTlQKICAgICAgICB9CiAgICAgIH07CiAgICB9LAogICAgYWxsU2VjcmV0c0xpbms6IGZ1bmN0aW9uIGFsbFNlY3JldHNMaW5rKCkgewogICAgICByZXR1cm4gewogICAgICAgIG5hbWU6ICdjLWNsdXN0ZXItcHJvZHVjdC1yZXNvdXJjZScsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBwcm9kdWN0OiBFWFBMT1JFUiwKICAgICAgICAgIHJlc291cmNlOiBTRUNSRVQKICAgICAgICB9CiAgICAgIH07CiAgICB9CiAgfSksCiAgbWV0aG9kczogewogICAgLy8gUG9ydGVkIGZyb20gRW1iZXIKICAgIGlzQ29tcG9uZW50U3RhdHVzSGVhbHRoeTogZnVuY3Rpb24gaXNDb21wb25lbnRTdGF0dXNIZWFsdGh5KGZpZWxkKSB7CiAgICAgIHZhciBfdGhpcyRjdXJyZW50Q2x1c3RlcjE1OwogICAgICB2YXIgbWF0Y2hpbmcgPSAoKChfdGhpcyRjdXJyZW50Q2x1c3RlcjE1ID0gdGhpcy5jdXJyZW50Q2x1c3RlcikgPT09IG51bGwgfHwgX3RoaXMkY3VycmVudENsdXN0ZXIxNSA9PT0gdm9pZCAwIHx8IChfdGhpcyRjdXJyZW50Q2x1c3RlcjE1ID0gX3RoaXMkY3VycmVudENsdXN0ZXIxNS5zdGF0dXMpID09PSBudWxsIHx8IF90aGlzJGN1cnJlbnRDbHVzdGVyMTUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGN1cnJlbnRDbHVzdGVyMTUuY29tcG9uZW50U3RhdHVzZXMpIHx8IFtdKS5maWx0ZXIoZnVuY3Rpb24gKHMpIHsKICAgICAgICByZXR1cm4gcy5uYW1lLnN0YXJ0c1dpdGgoZmllbGQpOwogICAgICB9KTsKCiAgICAgIC8vIElmIHRoZXJlJ3Mgbm8gbWF0Y2hpbmcgY29tcG9uZW50IHN0YXR1cywgaXQncyAiaGVhbHRoeSIKICAgICAgaWYgKCFtYXRjaGluZy5sZW5ndGgpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgICB2YXIgY291bnQgPSBtYXRjaGluZy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgc3RhdHVzKSB7CiAgICAgICAgdmFyIGNvbmRpdGlvbnMgPSBzdGF0dXMuY29uZGl0aW9ucy5maW5kKGZ1bmN0aW9uIChjKSB7CiAgICAgICAgICByZXR1cm4gYy5zdGF0dXMgIT09ICdUcnVlJzsKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gIWNvbmRpdGlvbnMgPyBhY2MgOiBhY2MgKyAxOwogICAgICB9LCAwKTsKICAgICAgcmV0dXJuIGNvdW50ID09PSAwOwogICAgfSwKICAgIHNob3dBY3Rpb25zOiBmdW5jdGlvbiBzaG93QWN0aW9ucygpIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhY3Rpb24tbWVudS9zaG93JywgewogICAgICAgIHJlc291cmNlczogdGhpcy5jdXJyZW50Q2x1c3RlciwKICAgICAgICBlbGVtOiB0aGlzLiRyZWZzWydjbHVzdGVyLWFjdGlvbnMnXQogICAgICB9KTsKICAgIH0sCiAgICAvLyBVc2VkIGJ5IG1ldHJpYy1wb2xsZXIgbWl4aW4KICAgIGxvYWRNZXRyaWNzOiBmdW5jdGlvbiBsb2FkTWV0cmljcygpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2hDbHVzdGVyUmVzb3VyY2VzKF90aGlzNS4kc3RvcmUsIE1FVFJJQy5OT0RFLCB7CiAgICAgICAgICAgICAgICBmb3JjZTogdHJ1ZQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgX3RoaXM1Lm5vZGVNZXRyaWNzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIEV2ZW50cy9BbGVydHMgdGFiIGNoYW5nZWQKICAgIHRhYkNoYW5nZTogZnVuY3Rpb24gdGFiQ2hhbmdlKG5ldSkgewogICAgICB0aGlzLnNlbGVjdGVkVGFiID0gbmV1ID09PSBudWxsIHx8IG5ldSA9PT0gdm9pZCAwID8gdm9pZCAwIDogbmV1LnNlbGVjdGVkTmFtZTsKICAgIH0sCiAgICBnb1RvSGFydmVzdGVyQ2x1c3RlcjogZnVuY3Rpb24gZ29Ub0hhcnZlc3RlckNsdXN0ZXIoKSB7CiAgICAgIHZhciBfdGhpczYgPSB0aGlzOwogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHByb3ZDbHVzdGVycywgcHJvdkNsdXN0ZXI7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBfdGhpczYuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2ZpbmRBbGwnLCB7CiAgICAgICAgICAgICAgICB0eXBlOiBDQVBJLlJBTkNIRVJfQ0xVU1RFUgogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcHJvdkNsdXN0ZXJzID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgcHJvdkNsdXN0ZXIgPSBwcm92Q2x1c3RlcnMuZmluZChmdW5jdGlvbiAocCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHAubWdtdC5pZCA9PT0gX3RoaXM2LmN1cnJlbnRDbHVzdGVyLmlkOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNzsKICAgICAgICAgICAgICByZXR1cm4gcHJvdkNsdXN0ZXIuZ29Ub0hhcnZlc3RlckNsdXN0ZXIoKTsKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDk7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDldXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"names":["DashboardMetrics","mapGetters","CAPI","ENDPOINTS","EVENT","NAMESPACE","INGRESS","MANAGEMENT","METRIC","NODE","SERVICE","PV","WORKLOAD_TYPES","COUNT","CATALOG","SECRET","setPromiseResult","AlertTable","Banner","parseSi","createMemoryValues","NAME","ROLES","STATE","haveV1Monitoring","monitoringStatus","canViewGrafanaLink","Tabbed","Tab","allDashboardsExist","EtcdInfoBanner","metricPoller","EmberPage","ResourceSummary","resourceCounts","HardwareResourceGauge","isEmpty","ConfigBadge","EventsTable","fetchClusterResources","SimpleBox","ExtensionPoint","CardLocation","getApplicableExtensionEnhancements","Certificates","EXPLORER","RESOURCES","DEPLOYMENT","STATEFUL_SET","JOB","DAEMON_SET","CLUSTER_METRICS_DETAIL_URL","CLUSTER_METRICS_SUMMARY_URL","K8S_METRICS_DETAIL_URL","K8S_METRICS_SUMMARY_URL","ETCD_METRICS_DETAIL_URL","ETCD_METRICS_SUMMARY_URL","COMPONENT_STATUS","name","components","mixins","fetch","$store","currentCluster","id","isLocal","getters","dispatch","type","data","clusterCounts","nodeHeaders","constraints","events","nodeMetrics","showClusterMetrics","showK8sMetrics","showEtcdMetrics","canViewMetrics","selectedTab","extensionCards","CARD","CLUSTER_DASHBOARD_CARD","$route","beforeDestroy","computed","_objectSpread","nodes","mgmtNodes","CLUSTER","hasV1Monitoring","v1MonitoringURL","concat","displayProvider","_this$currentCluster","other","provider","status","t","isHarvesterCluster","_this$currentCluster2","isHarvester","isRKE","includes","toLowerCase","accessibleResources","_this$clusterCounts","_this","defaultAllowedResources","Object","keys","counts","filter","typeId","allowedResources","_toConsumableArray","Set","resource","componentServices","_this2","forEach","cs","push","healthy","isComponentStatusHealthy","labelKey","totalCountGaugeInput","_this3","totalInput","total","useful","warningCount","errorCount","entries","entry","hasStats","_this$currentCluster3","_this$currentCluster4","allocatable","requested","cpuReserved","_this$currentCluster5","_this$currentCluster6","cpu","units","count","podsUsed","_this$currentCluster7","_this$currentCluster8","pods","ramReserved","_this$currentCluster9","_this$currentCluster10","memory","metricAggregations","_this4","checkNodes","nodeNames","reduce","acc","n","_n$metadata","nodeName","metadata","labels","someNonWorkerRoles","some","node","hasARole","isWorker","metrics","find","nd","initialAggregation","agg","metric","usage","cpuUsed","_this$currentCluster11","_this$metricAggregati","capacity","ramUsed","_this$currentCluster12","_this$metricAggregati2","hasMonitoring","_this$clusterCounts2","APP","namespaces","canAccessNodes","_this$clusterCounts3","canAccessDeployments","_this$clusterCounts4","hasMetricsTabs","hasBadge","_this$currentCluster13","badge","hasDescription","_this$currentCluster14","spec","description","allEventsLink","params","product","allSecretsLink","methods","field","_this$currentCluster15","matching","componentStatuses","s","startsWith","length","conditions","c","showActions","commit","resources","elem","$refs","loadMetrics","_this5","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","force","sent","stop","tabChange","neu","selectedName","goToHarvesterCluster","_this6","_callee2","provClusters","provCluster","_callee2$","_context2","RANCHER_CLUSTER","p","mgmt","t0"],"sources":["node_modules/@rancher/shell/pages/c/_cluster/explorer/index.vue"],"sourcesContent":["<script>\nimport DashboardMetrics from '@shell/components/DashboardMetrics';\nimport { mapGetters } from 'vuex';\nimport {\n  CAPI,\n  ENDPOINTS,\n  EVENT,\n  NAMESPACE,\n  INGRESS,\n  MANAGEMENT,\n  METRIC,\n  NODE,\n  SERVICE,\n  PV,\n  WORKLOAD_TYPES,\n  COUNT,\n  CATALOG,\n  SECRET\n} from '@shell/config/types';\nimport { setPromiseResult } from '@shell/utils/promise';\nimport AlertTable from '@shell/components/AlertTable';\nimport { Banner } from '@components/Banner';\nimport { parseSi, createMemoryValues } from '@shell/utils/units';\nimport {\n  NAME,\n  ROLES,\n  STATE,\n} from '@shell/config/table-headers';\n\nimport { haveV1Monitoring, monitoringStatus, canViewGrafanaLink } from '@shell/utils/monitoring';\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport { allDashboardsExist } from '@shell/utils/grafana';\nimport EtcdInfoBanner from '@shell/components/EtcdInfoBanner';\nimport metricPoller from '@shell/mixins/metric-poller';\nimport EmberPage from '@shell/components/EmberPage';\nimport ResourceSummary, { resourceCounts } from '@shell/components/ResourceSummary';\nimport HardwareResourceGauge from '@shell/components/HardwareResourceGauge';\nimport { isEmpty } from '@shell/utils/object';\nimport ConfigBadge from './ConfigBadge';\nimport EventsTable from './EventsTable';\nimport { fetchClusterResources } from './explorer-utils';\nimport SimpleBox from '@shell/components/SimpleBox';\nimport { ExtensionPoint, CardLocation } from '@shell/core/types';\nimport { getApplicableExtensionEnhancements } from '@shell/core/plugin-helpers';\nimport Certificates from '@shell/components/Certificates';\nimport { NAME as EXPLORER } from '@shell/config/product/explorer';\n\nexport const RESOURCES = [NAMESPACE, INGRESS, PV, WORKLOAD_TYPES.DEPLOYMENT, WORKLOAD_TYPES.STATEFUL_SET, WORKLOAD_TYPES.JOB, WORKLOAD_TYPES.DAEMON_SET, SERVICE];\n\nconst CLUSTER_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-cluster-nodes-1/rancher-cluster-nodes?orgId=1';\nconst CLUSTER_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-cluster-1/rancher-cluster?orgId=1';\nconst K8S_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-k8s-components-nodes-1/rancher-kubernetes-components-nodes?orgId=1';\nconst K8S_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-k8s-components-1/rancher-kubernetes-components?orgId=1';\nconst ETCD_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-etcd-nodes-1/rancher-etcd-nodes?orgId=1';\nconst ETCD_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-etcd-1/rancher-etcd?orgId=1';\n\nconst COMPONENT_STATUS = [\n  'etcd',\n  'scheduler',\n  'controller-manager',\n];\n\nexport default {\n  name: 'ClusterExplorerIndexPage',\n\n  components: {\n    EtcdInfoBanner,\n    DashboardMetrics,\n    HardwareResourceGauge,\n    ResourceSummary,\n    Tab,\n    Tabbed,\n    AlertTable,\n    Banner,\n    EmberPage,\n    ConfigBadge,\n    EventsTable,\n    SimpleBox,\n    Certificates\n  },\n\n  mixins: [metricPoller],\n\n  fetch() {\n    fetchClusterResources(this.$store, NODE);\n\n    if (this.currentCluster) {\n      setPromiseResult(\n        allDashboardsExist(this.$store, this.currentCluster.id, [CLUSTER_METRICS_DETAIL_URL, CLUSTER_METRICS_SUMMARY_URL]),\n        this,\n        'showClusterMetrics',\n        `Determine cluster metrics`\n      );\n      setPromiseResult(\n        allDashboardsExist(this.$store, this.currentCluster.id, [K8S_METRICS_DETAIL_URL, K8S_METRICS_SUMMARY_URL]),\n        this,\n        'showK8sMetrics',\n        `Determine k8s metrics`\n      );\n      setPromiseResult(\n        allDashboardsExist(this.$store, this.currentCluster.id, [ETCD_METRICS_DETAIL_URL, ETCD_METRICS_SUMMARY_URL]),\n        this,\n        'showEtcdMetrics',\n        `Determine etcd metrics`\n      );\n\n      // It's not enough to check that the grafana links are working for the current user; embedded cluster-level dashboards should only be shown if the user can view the grafana endpoint\n      // https://github.com/rancher/dashboard/issues/9792\n      setPromiseResult(canViewGrafanaLink(this.$store), this, 'canViewMetrics', 'Determine Grafana Permission');\n\n      if (this.currentCluster.isLocal && this.$store.getters['management/schemaFor'](MANAGEMENT.NODE)) {\n        this.$store.dispatch('management/findAll', { type: MANAGEMENT.NODE });\n      }\n    }\n  },\n\n  data() {\n    const clusterCounts = this.$store.getters[`cluster/all`](COUNT);\n    const nodeHeaders = [\n      STATE,\n      NAME,\n      ROLES,\n    ];\n\n    return {\n      nodeHeaders,\n      constraints:        [],\n      events:             [],\n      nodeMetrics:        [],\n      showClusterMetrics: false,\n      showK8sMetrics:     false,\n      showEtcdMetrics:    false,\n      canViewMetrics:     false,\n      CLUSTER_METRICS_DETAIL_URL,\n      CLUSTER_METRICS_SUMMARY_URL,\n      K8S_METRICS_DETAIL_URL,\n      K8S_METRICS_SUMMARY_URL,\n      ETCD_METRICS_DETAIL_URL,\n      ETCD_METRICS_SUMMARY_URL,\n      clusterCounts,\n      selectedTab:        'cluster-events',\n      extensionCards:     getApplicableExtensionEnhancements(this, ExtensionPoint.CARD, CardLocation.CLUSTER_DASHBOARD_CARD, this.$route),\n    };\n  },\n\n  beforeDestroy() {\n    // Remove the data and stop watching resources that were fetched in this page\n    // Events in particular can lead to change messages having to be processed when we are no longer interested in events\n    this.$store.dispatch('cluster/forgetType', EVENT);\n    this.$store.dispatch('cluster/forgetType', NODE);\n    this.$store.dispatch('cluster/forgetType', ENDPOINTS); // Used by AlertTable to get alerts when v2 monitoring is installed\n    this.$store.dispatch('cluster/forgetType', METRIC.NODE);\n    this.$store.dispatch('cluster/forgetType', MANAGEMENT.NODE);\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n    ...monitoringStatus(),\n\n    nodes() {\n      return this.$store.getters['cluster/all'](NODE);\n    },\n\n    mgmtNodes() {\n      return this.$store.getters['management/all'](MANAGEMENT.CLUSTER);\n    },\n\n    hasV1Monitoring() {\n      return haveV1Monitoring(this.$store.getters);\n    },\n\n    v1MonitoringURL() {\n      return `/k/${ this.currentCluster.id }/monitoring`;\n    },\n\n    displayProvider() {\n      const other = 'other';\n\n      let provider = this.currentCluster?.status?.provider || other;\n\n      if (provider === 'rke.windows') {\n        provider = 'rkeWindows';\n      }\n\n      if (!this.$store.getters['i18n/exists'](`cluster.provider.${ provider }`)) {\n        provider = 'other';\n      }\n\n      return this.t(`cluster.provider.${ provider }`);\n    },\n\n    isHarvesterCluster() {\n      return this.currentCluster?.isHarvester;\n    },\n\n    isRKE() {\n      return ['rke', 'rke.windows', 'rke2', 'rke2.windows'].includes((this.currentCluster.status.provider || '').toLowerCase());\n    },\n\n    accessibleResources() {\n      // This is a list of IDs for allowed resources counts.\n      const defaultAllowedResources = Object.keys(this.clusterCounts?.[0]?.counts || {}).filter((typeId) => {\n        return this.$store.getters['type-map/isIgnored']({ id: typeId });\n      });\n\n      // Merge with RESOURCES list\n      const allowedResources = [...new Set([...defaultAllowedResources, ...RESOURCES])];\n\n      return allowedResources.filter((resource) => this.$store.getters['cluster/schemaFor'](resource));\n    },\n\n    componentServices() {\n      const status = [];\n\n      COMPONENT_STATUS.forEach((cs) => {\n        status.push({\n          name:     cs,\n          healthy:  this.isComponentStatusHealthy(cs),\n          labelKey: `clusterIndexPage.sections.componentStatus.${ cs }`,\n        });\n      });\n\n      return status;\n    },\n\n    totalCountGaugeInput() {\n      const totalInput = {\n        name:         this.t('clusterIndexPage.resourceGauge.totalResources'),\n        total:        0,\n        useful:       0,\n        warningCount: 0,\n        errorCount:   0\n      };\n\n      this.accessibleResources.forEach((resource) => {\n        const counts = resourceCounts(this.$store, resource);\n\n        Object.entries(counts).forEach((entry) => {\n          totalInput[entry[0]] += entry[1];\n        });\n      });\n\n      return totalInput;\n    },\n\n    hasStats() {\n      return this.currentCluster?.status?.allocatable && this.currentCluster?.status?.requested;\n    },\n\n    cpuReserved() {\n      const total = parseSi(this.currentCluster?.status?.allocatable?.cpu);\n\n      return {\n        total,\n        useful: parseSi(this.currentCluster?.status?.requested?.cpu),\n        units:  this.t('clusterIndexPage.hardwareResourceGauge.units.cores', { count: total })\n      };\n    },\n\n    podsUsed() {\n      return {\n        total:  parseSi(this.currentCluster?.status?.allocatable?.pods || '0'),\n        useful: parseSi(this.currentCluster?.status?.requested?.pods || '0'),\n      };\n    },\n\n    ramReserved() {\n      return createMemoryValues(this.currentCluster?.status?.allocatable?.memory, this.currentCluster?.status?.requested?.memory);\n    },\n\n    metricAggregations() {\n      let checkNodes = this.nodes;\n\n      // Special case local cluster\n      if (this.currentCluster.isLocal) {\n        const nodeNames = this.nodes.reduce((acc, n) => {\n          acc[n.id] = n;\n\n          return acc;\n        }, {});\n\n        checkNodes = this.mgmtNodes.filter((n) => {\n          const nodeName = n.metadata?.labels?.['management.cattle.io/nodename'] || n.id;\n\n          return !!nodeNames[nodeName];\n        });\n      }\n\n      const someNonWorkerRoles = checkNodes.some((node) => node.hasARole && !node.isWorker);\n      const metrics = this.nodeMetrics.filter((nodeMetrics) => {\n        const node = this.nodes.find((nd) => nd.id === nodeMetrics.id);\n\n        return node && (!someNonWorkerRoles || node.isWorker);\n      });\n      const initialAggregation = {\n        cpu:    0,\n        memory: 0\n      };\n\n      if (isEmpty(metrics)) {\n        return null;\n      }\n\n      return metrics.reduce((agg, metric) => {\n        agg.cpu += parseSi(metric.usage.cpu);\n        agg.memory += parseSi(metric.usage.memory);\n\n        return agg;\n      }, initialAggregation);\n    },\n\n    cpuUsed() {\n      const total = parseSi(this.currentCluster?.status?.capacity?.cpu);\n\n      return {\n        total,\n        useful: this.metricAggregations?.cpu,\n        units:  this.t('clusterIndexPage.hardwareResourceGauge.units.cores', { count: total })\n      };\n    },\n\n    ramUsed() {\n      return createMemoryValues(this.currentCluster?.status?.capacity?.memory, this.metricAggregations?.memory);\n    },\n\n    hasMonitoring() {\n      return !!this.clusterCounts?.[0]?.counts?.[CATALOG.APP]?.namespaces?.['cattle-monitoring-system'];\n    },\n\n    canAccessNodes() {\n      return !!this.clusterCounts?.[0]?.counts?.[NODE];\n    },\n\n    canAccessDeployments() {\n      return !!this.clusterCounts?.[0]?.counts?.[WORKLOAD_TYPES.DEPLOYMENT];\n    },\n\n    hasMetricsTabs() {\n      return this.canViewMetrics && ( this.showClusterMetrics || this.showK8sMetrics || this.showEtcdMetrics);\n    },\n\n    hasBadge() {\n      return !!this.currentCluster?.badge;\n    },\n\n    hasDescription() {\n      return !!this.currentCluster?.spec?.description;\n    },\n\n    allEventsLink() {\n      return {\n        name:   'c-cluster-product-resource',\n        params: {\n          product:  EXPLORER,\n          resource: EVENT,\n        }\n      };\n    },\n\n    allSecretsLink() {\n      return {\n        name:   'c-cluster-product-resource',\n        params: {\n          product:  EXPLORER,\n          resource: SECRET,\n        }\n      };\n    }\n  },\n\n  methods: {\n    // Ported from Ember\n    isComponentStatusHealthy(field) {\n      const matching = (this.currentCluster?.status?.componentStatuses || []).filter((s) => s.name.startsWith(field));\n\n      // If there's no matching component status, it's \"healthy\"\n      if ( !matching.length ) {\n        return true;\n      }\n\n      const count = matching.reduce((acc, status) => {\n        const conditions = status.conditions.find((c) => c.status !== 'True');\n\n        return !conditions ? acc : acc + 1;\n      }, 0);\n\n      return count === 0;\n    },\n\n    showActions() {\n      this.$store.commit('action-menu/show', {\n        resources: this.currentCluster,\n        elem:      this.$refs['cluster-actions'],\n      });\n    },\n\n    // Used by metric-poller mixin\n    async loadMetrics() {\n      this.nodeMetrics = await fetchClusterResources(this.$store, METRIC.NODE, { force: true } );\n    },\n\n    // Events/Alerts tab changed\n    tabChange(neu) {\n      this.selectedTab = neu?.selectedName;\n    },\n\n    async goToHarvesterCluster() {\n      try {\n        const provClusters = await this.$store.dispatch('management/findAll', { type: CAPI.RANCHER_CLUSTER });\n        const provCluster = provClusters.find((p) => p.mgmt.id === this.currentCluster.id);\n\n        await provCluster.goToHarvesterCluster();\n      } catch {\n      }\n    }\n  },\n};\n</script>\n\n<template>\n  <section class=\"dashboard\">\n    <header>\n      <div class=\"title\">\n        <h1>\n          <t k=\"clusterIndexPage.header\" />\n        </h1>\n        <div>\n          <span v-if=\"hasDescription\">{{ currentCluster.spec.description }}</span>\n        </div>\n      </div>\n    </header>\n    <div\n      class=\"cluster-dashboard-glance\"\n    >\n      <div>\n        <label>{{ t('glance.provider') }}: </label>\n        <span v-if=\"isHarvesterCluster\">\n          <a\n            role=\"button\"\n            @click=\"goToHarvesterCluster\"\n          >\n            {{ displayProvider }}\n          </a>\n        </span>\n        <span v-else>\n          {{ displayProvider }}\n        </span>\n      </div>\n      <div>\n        <label>{{ t('glance.version') }}: </label>\n        <span>{{ currentCluster.kubernetesVersionBase }}</span>\n        <span\n          v-if=\"currentCluster.kubernetesVersionExtension\"\n          style=\"font-size: 0.75em\"\n        >{{ currentCluster.kubernetesVersionExtension }}</span>\n      </div>\n      <div>\n        <label>{{ t('glance.created') }}: </label>\n        <span><LiveDate\n          :value=\"currentCluster.metadata.creationTimestamp\"\n          :add-suffix=\"true\"\n          :show-tooltip=\"true\"\n        /></span>\n      </div>\n      <div :style=\"{'flex':1}\" />\n      <div v-if=\"!monitoringStatus.v2 && !monitoringStatus.v1\">\n        <n-link\n          :to=\"{name: 'c-cluster-explorer-tools'}\"\n          class=\"monitoring-install\"\n        >\n          <i class=\"icon icon-gear\" />\n          <span>{{ t('glance.installMonitoring') }}</span>\n        </n-link>\n      </div>\n      <div v-if=\"monitoringStatus.v1\">\n        <span>{{ t('glance.v1MonitoringInstalled') }}</span>\n      </div>\n      <ConfigBadge\n        v-if=\"currentCluster.canUpdate\"\n        :cluster=\"currentCluster\"\n      />\n    </div>\n\n    <div class=\"resource-gauges\">\n      <ResourceSummary :spoofed-counts=\"totalCountGaugeInput\" />\n      <ResourceSummary\n        v-if=\"canAccessNodes\"\n        resource=\"node\"\n      />\n      <ResourceSummary\n        v-if=\"canAccessDeployments\"\n        resource=\"apps.deployment\"\n      />\n    </div>\n\n    <!-- extension cards -->\n    <div\n      v-if=\"extensionCards.length\"\n      class=\"extension-card-container mt-20\"\n    >\n      <SimpleBox\n        v-for=\"item, i in extensionCards\"\n        :key=\"`extensionCards${i}`\"\n        class=\"extension-card\"\n        :style=\"item.style\"\n      >\n        <h3>\n          {{ item.label }}\n        </h3>\n        <component\n          :is=\"item.component\"\n          :resource=\"currentCluster\"\n        />\n      </SimpleBox>\n    </div>\n\n    <h3\n      v-if=\"!hasV1Monitoring && hasStats\"\n      class=\"mt-40\"\n    >\n      {{ t('clusterIndexPage.sections.capacity.label') }}\n    </h3>\n    <div\n      v-if=\"!hasV1Monitoring && hasStats\"\n      class=\"hardware-resource-gauges\"\n    >\n      <HardwareResourceGauge\n        :name=\"t('clusterIndexPage.hardwareResourceGauge.pods')\"\n        :used=\"podsUsed\"\n      />\n      <HardwareResourceGauge\n        :name=\"t('clusterIndexPage.hardwareResourceGauge.cores')\"\n        :reserved=\"cpuReserved\"\n        :used=\"cpuUsed\"\n        :units=\"cpuReserved.units\"\n      />\n      <HardwareResourceGauge\n        :name=\"t('clusterIndexPage.hardwareResourceGauge.ram')\"\n        :reserved=\"ramReserved\"\n        :used=\"ramUsed\"\n        :units=\"ramReserved.units\"\n      />\n    </div>\n\n    <div v-if=\"!hasV1Monitoring && componentServices\">\n      <div\n        v-for=\"status in componentServices\"\n        :key=\"status.name\"\n        class=\"k8s-component-status\"\n        :class=\"{'k8s-component-status-healthy': status.healthy, 'k8s-component-status-unhealthy': !status.healthy}\"\n      >\n        <i\n          v-if=\"status.healthy\"\n          class=\"icon icon-checkmark\"\n        />\n        <i\n          v-else\n          class=\"icon icon-warning\"\n        />\n        <div>{{ t(status.labelKey) }}</div>\n      </div>\n    </div>\n\n    <div\n      v-if=\"hasV1Monitoring\"\n      id=\"ember-anchor\"\n      class=\"mt-20\"\n    >\n      <EmberPage\n        inline=\"ember-anchor\"\n        :src=\"v1MonitoringURL\"\n      />\n    </div>\n\n    <div class=\"mt-30\">\n      <Tabbed @changed=\"tabChange\">\n        <Tab\n          name=\"cluster-events\"\n          :label=\"t('clusterIndexPage.sections.events.label')\"\n          :weight=\"2\"\n        >\n          <span class=\"events-table-link\">\n            <n-link :to=\"allEventsLink\">\n              <span>{{ t('glance.eventsTable') }}</span>\n            </n-link>\n          </span>\n          <EventsTable />\n        </Tab>\n        <Tab\n          v-if=\"hasMonitoring\"\n          name=\"cluster-alerts\"\n          :label=\"t('clusterIndexPage.sections.alerts.label')\"\n          :weight=\"1\"\n        >\n          <AlertTable v-if=\"selectedTab === 'cluster-alerts'\" />\n        </Tab>\n        <Tab\n          name=\"cluster-certs\"\n          :label=\"t('clusterIndexPage.sections.certs.label')\"\n          :weight=\"1\"\n        >\n          <span class=\"events-table-link\">\n            <n-link :to=\"allSecretsLink\">\n              <span>{{ t('glance.secretsTable') }}</span>\n            </n-link>\n          </span>\n          <Certificates v-if=\"selectedTab === 'cluster-certs'\" />\n        </Tab>\n      </Tabbed>\n    </div>\n    <Tabbed\n      v-if=\"hasMetricsTabs\"\n      default-tab=\"cluster-metrics\"\n      :use-hash=\"false\"\n      class=\"mt-30\"\n    >\n      <Tab\n        v-if=\"showClusterMetrics\"\n        name=\"cluster-metrics\"\n        :label=\"t('clusterIndexPage.sections.clusterMetrics.label')\"\n        :weight=\"2\"\n      >\n        <template #default=\"props\">\n          <DashboardMetrics\n            v-if=\"props.active\"\n            :detail-url=\"CLUSTER_METRICS_DETAIL_URL\"\n            :summary-url=\"CLUSTER_METRICS_SUMMARY_URL\"\n            graph-height=\"825px\"\n          />\n        </template>\n      </Tab>\n      <Tab\n        v-if=\"showK8sMetrics\"\n        name=\"k8s-metrics\"\n        :label=\"t('clusterIndexPage.sections.k8sMetrics.label')\"\n        :weight=\"1\"\n      >\n        <template #default=\"props\">\n          <DashboardMetrics\n            v-if=\"props.active\"\n            :detail-url=\"K8S_METRICS_DETAIL_URL\"\n            :summary-url=\"K8S_METRICS_SUMMARY_URL\"\n            graph-height=\"550px\"\n          />\n        </template>\n      </Tab>\n      <Tab\n        v-if=\"showEtcdMetrics\"\n        name=\"etcd-metrics\"\n        :label=\"t('clusterIndexPage.sections.etcdMetrics.label')\"\n        :weight=\"0\"\n      >\n        <template #default=\"props\">\n          <DashboardMetrics\n            v-if=\"props.active\"\n            class=\"etcd-metrics\"\n            :detail-url=\"ETCD_METRICS_DETAIL_URL\"\n            :summary-url=\"ETCD_METRICS_SUMMARY_URL\"\n            graph-height=\"550px\"\n          >\n            <EtcdInfoBanner />\n          </DashboardMetrics>\n        </template>\n      </Tab>\n    </Tabbed>\n  </section>\n</template>\n\n<style lang=\"scss\" scoped>\n.extension-card-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(calc((100%/3) - 40px), 1fr));\n  grid-column-gap: 15px;\n  grid-row-gap: 20px;\n}\n\n@media only screen and (max-width: map-get($breakpoints, \"--viewport-9\")) {\n  .extension-card-container {\n    grid-template-columns: 1fr !important;\n  }\n}\n\n.cluster-dashboard-glance {\n  border-top: 1px solid var(--border);\n  border-bottom: 1px solid var(--border);\n  padding: 20px 0px;\n  display: flex;\n\n  &>*:not(:nth-last-child(-n+2)) {\n    margin-right: 40px;\n\n    & SPAN {\n       font-weight: bold\n    }\n  }\n}\n\n.title h1 {\n  margin: 0;\n}\n\n.actions-span {\n  align-self: center;\n}\n\n.events {\n  margin-top: 30px;\n}\n\n.graph-options {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.etcd-metrics ::v-deep .external-link {\n  top: -107px;\n}\n\n.cluster-tools-tip {\n  margin-top: 0;\n}\n\n.monitoring-install {\n  display: flex;\n  margin-left: 10px;\n\n  > I {\n    line-height: inherit;\n    margin-right: 4px;\n  }\n\n  &:focus {\n    outline: 0;\n  }\n}\n\n.events-table-link {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 20px;\n}\n\n.k8s-component-status {\n  align-items: center;\n  display: inline-flex;\n  border: 1px solid;\n  margin-top: 20px;\n\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n\n  > div {\n    padding: 5px 20px;\n  }\n\n  > I {\n    text-align: center;\n    padding: 5px 10px;\n    border-right: 1px solid var(--border);\n  }\n\n  &.k8s-component-status-unhealthy {\n    border-color: var(--error-border);\n\n    > I {\n      color: var(--error)\n    }\n  }\n\n  &.k8s-component-status-healthy {\n    border-color: var(--border);\n\n    > I {\n      color: var(--success)\n    }\n  }\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAAA,gBAAA;AACA,SAAAC,UAAA;AACA,SACAC,IAAA,EACAC,SAAA,EACAC,KAAA,EACAC,SAAA,EACAC,OAAA,EACAC,UAAA,EACAC,MAAA,EACAC,IAAA,EACAC,OAAA,EACAC,EAAA,EACAC,cAAA,EACAC,KAAA,EACAC,OAAA,EACAC,MAAA,QACA;AACA,SAAAC,gBAAA;AACA,OAAAC,UAAA;AACA,SAAAC,MAAA;AACA,SAAAC,OAAA,EAAAC,kBAAA;AACA,SACAC,IAAA,EACAC,KAAA,EACAC,KAAA,QACA;AAEA,SAAAC,gBAAA,EAAAC,gBAAA,EAAAC,kBAAA;AACA,OAAAC,MAAA;AACA,OAAAC,GAAA;AACA,SAAAC,kBAAA;AACA,OAAAC,cAAA;AACA,OAAAC,YAAA;AACA,OAAAC,SAAA;AACA,OAAAC,eAAA,IAAAC,cAAA;AACA,OAAAC,qBAAA;AACA,SAAAC,OAAA;AACA,OAAAC,WAAA;AACA,OAAAC,WAAA;AACA,SAAAC,qBAAA;AACA,OAAAC,SAAA;AACA,SAAAC,cAAA,EAAAC,YAAA;AACA,SAAAC,kCAAA;AACA,OAAAC,YAAA;AACA,SAAAvB,IAAA,IAAAwB,QAAA;AAEA,WAAAC,SAAA,IAAAzC,SAAA,EAAAC,OAAA,EAAAK,EAAA,EAAAC,cAAA,CAAAmC,UAAA,EAAAnC,cAAA,CAAAoC,YAAA,EAAApC,cAAA,CAAAqC,GAAA,EAAArC,cAAA,CAAAsC,UAAA,EAAAxC,OAAA;AAEA,IAAAyC,0BAAA;AACA,IAAAC,2BAAA;AACA,IAAAC,sBAAA;AACA,IAAAC,uBAAA;AACA,IAAAC,uBAAA;AACA,IAAAC,wBAAA;AAEA,IAAAC,gBAAA,IACA,QACA,aACA,qBACA;AAEA;EACAC,IAAA;EAEAC,UAAA;IACA7B,cAAA,EAAAA,cAAA;IACA9B,gBAAA,EAAAA,gBAAA;IACAmC,qBAAA,EAAAA,qBAAA;IACAF,eAAA,EAAAA,eAAA;IACAL,GAAA,EAAAA,GAAA;IACAD,MAAA,EAAAA,MAAA;IACAV,UAAA,EAAAA,UAAA;IACAC,MAAA,EAAAA,MAAA;IACAc,SAAA,EAAAA,SAAA;IACAK,WAAA,EAAAA,WAAA;IACAC,WAAA,EAAAA,WAAA;IACAE,SAAA,EAAAA,SAAA;IACAI,YAAA,EAAAA;EACA;EAEAgB,MAAA,GAAA7B,YAAA;EAEA8B,KAAA,WAAAA,MAAA;IACAtB,qBAAA,MAAAuB,MAAA,EAAArD,IAAA;IAEA,SAAAsD,cAAA;MACA/C,gBAAA,CACAa,kBAAA,MAAAiC,MAAA,OAAAC,cAAA,CAAAC,EAAA,GAAAb,0BAAA,EAAAC,2BAAA,IACA,MACA,iDAEA;MACApC,gBAAA,CACAa,kBAAA,MAAAiC,MAAA,OAAAC,cAAA,CAAAC,EAAA,GAAAX,sBAAA,EAAAC,uBAAA,IACA,MACA,yCAEA;MACAtC,gBAAA,CACAa,kBAAA,MAAAiC,MAAA,OAAAC,cAAA,CAAAC,EAAA,GAAAT,uBAAA,EAAAC,wBAAA,IACA,MACA,2CAEA;;MAEA;MACA;MACAxC,gBAAA,CAAAU,kBAAA,MAAAoC,MAAA;MAEA,SAAAC,cAAA,CAAAE,OAAA,SAAAH,MAAA,CAAAI,OAAA,yBAAA3D,UAAA,CAAAE,IAAA;QACA,KAAAqD,MAAA,CAAAK,QAAA;UAAAC,IAAA,EAAA7D,UAAA,CAAAE;QAAA;MACA;IACA;EACA;EAEA4D,IAAA,WAAAA,KAAA;IACA,IAAAC,aAAA,QAAAR,MAAA,CAAAI,OAAA,gBAAArD,KAAA;IACA,IAAA0D,WAAA,IACAhD,KAAA,EACAF,IAAA,EACAC,KAAA,CACA;IAEA;MACAiD,WAAA,EAAAA,WAAA;MACAC,WAAA;MACAC,MAAA;MACAC,WAAA;MACAC,kBAAA;MACAC,cAAA;MACAC,eAAA;MACAC,cAAA;MACA3B,0BAAA,EAAAA,0BAAA;MACAC,2BAAA,EAAAA,2BAAA;MACAC,sBAAA,EAAAA,sBAAA;MACAC,uBAAA,EAAAA,uBAAA;MACAC,uBAAA,EAAAA,uBAAA;MACAC,wBAAA,EAAAA,wBAAA;MACAc,aAAA,EAAAA,aAAA;MACAS,WAAA;MACAC,cAAA,EAAArC,kCAAA,OAAAF,cAAA,CAAAwC,IAAA,EAAAvC,YAAA,CAAAwC,sBAAA,OAAAC,MAAA;IACA;EACA;EAEAC,aAAA,WAAAA,cAAA;IACA;IACA;IACA,KAAAtB,MAAA,CAAAK,QAAA,uBAAA/D,KAAA;IACA,KAAA0D,MAAA,CAAAK,QAAA,uBAAA1D,IAAA;IACA,KAAAqD,MAAA,CAAAK,QAAA,uBAAAhE,SAAA;IACA,KAAA2D,MAAA,CAAAK,QAAA,uBAAA3D,MAAA,CAAAC,IAAA;IACA,KAAAqD,MAAA,CAAAK,QAAA,uBAAA5D,UAAA,CAAAE,IAAA;EACA;EAEA4E,QAAA,EAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACArF,UAAA,uBACAwB,gBAAA;IAEA8D,KAAA,WAAAA,MAAA;MACA,YAAAzB,MAAA,CAAAI,OAAA,gBAAAzD,IAAA;IACA;IAEA+E,SAAA,WAAAA,UAAA;MACA,YAAA1B,MAAA,CAAAI,OAAA,mBAAA3D,UAAA,CAAAkF,OAAA;IACA;IAEAC,eAAA,WAAAA,gBAAA;MACA,OAAAlE,gBAAA,MAAAsC,MAAA,CAAAI,OAAA;IACA;IAEAyB,eAAA,WAAAA,gBAAA;MACA,aAAAC,MAAA,MAAA7B,cAAA,CAAAC,EAAA;IACA;IAEA6B,eAAA,WAAAA,gBAAA;MAAA,IAAAC,oBAAA;MACA,IAAAC,KAAA;MAEA,IAAAC,QAAA,KAAAF,oBAAA,QAAA/B,cAAA,cAAA+B,oBAAA,gBAAAA,oBAAA,GAAAA,oBAAA,CAAAG,MAAA,cAAAH,oBAAA,uBAAAA,oBAAA,CAAAE,QAAA,KAAAD,KAAA;MAEA,IAAAC,QAAA;QACAA,QAAA;MACA;MAEA,UAAAlC,MAAA,CAAAI,OAAA,oCAAA0B,MAAA,CAAAI,QAAA;QACAA,QAAA;MACA;MAEA,YAAAE,CAAA,qBAAAN,MAAA,CAAAI,QAAA;IACA;IAEAG,kBAAA,WAAAA,mBAAA;MAAA,IAAAC,qBAAA;MACA,QAAAA,qBAAA,QAAArC,cAAA,cAAAqC,qBAAA,uBAAAA,qBAAA,CAAAC,WAAA;IACA;IAEAC,KAAA,WAAAA,MAAA;MACA,sDAAAC,QAAA,OAAAxC,cAAA,CAAAkC,MAAA,CAAAD,QAAA,QAAAQ,WAAA;IACA;IAEAC,mBAAA,WAAAA,oBAAA;MAAA,IAAAC,mBAAA;QAAAC,KAAA;MACA;MACA,IAAAC,uBAAA,GAAAC,MAAA,CAAAC,IAAA,GAAAJ,mBAAA,QAAApC,aAAA,cAAAoC,mBAAA,gBAAAA,mBAAA,GAAAA,mBAAA,iBAAAA,mBAAA,uBAAAA,mBAAA,CAAAK,MAAA,SAAAC,MAAA,WAAAC,MAAA;QACA,OAAAN,KAAA,CAAA7C,MAAA,CAAAI,OAAA;UAAAF,EAAA,EAAAiD;QAAA;MACA;;MAEA;MACA,IAAAC,gBAAA,GAAAC,kBAAA,KAAAC,GAAA,IAAAxB,MAAA,CAAAuB,kBAAA,CAAAP,uBAAA,GAAA9D,SAAA;MAEA,OAAAoE,gBAAA,CAAAF,MAAA,WAAAK,QAAA;QAAA,OAAAV,KAAA,CAAA7C,MAAA,CAAAI,OAAA,sBAAAmD,QAAA;MAAA;IACA;IAEAC,iBAAA,WAAAA,kBAAA;MAAA,IAAAC,MAAA;MACA,IAAAtB,MAAA;MAEAxC,gBAAA,CAAA+D,OAAA,WAAAC,EAAA;QACAxB,MAAA,CAAAyB,IAAA;UACAhE,IAAA,EAAA+D,EAAA;UACAE,OAAA,EAAAJ,MAAA,CAAAK,wBAAA,CAAAH,EAAA;UACAI,QAAA,+CAAAjC,MAAA,CAAA6B,EAAA;QACA;MACA;MAEA,OAAAxB,MAAA;IACA;IAEA6B,oBAAA,WAAAA,qBAAA;MAAA,IAAAC,MAAA;MACA,IAAAC,UAAA;QACAtE,IAAA,OAAAwC,CAAA;QACA+B,KAAA;QACAC,MAAA;QACAC,YAAA;QACAC,UAAA;MACA;MAEA,KAAA3B,mBAAA,CAAAe,OAAA,WAAAH,QAAA;QACA,IAAAN,MAAA,GAAA7E,cAAA,CAAA6F,MAAA,CAAAjE,MAAA,EAAAuD,QAAA;QAEAR,MAAA,CAAAwB,OAAA,CAAAtB,MAAA,EAAAS,OAAA,WAAAc,KAAA;UACAN,UAAA,CAAAM,KAAA,QAAAA,KAAA;QACA;MACA;MAEA,OAAAN,UAAA;IACA;IAEAO,QAAA,WAAAA,SAAA;MAAA,IAAAC,qBAAA,EAAAC,qBAAA;MACA,SAAAD,qBAAA,QAAAzE,cAAA,cAAAyE,qBAAA,gBAAAA,qBAAA,GAAAA,qBAAA,CAAAvC,MAAA,cAAAuC,qBAAA,uBAAAA,qBAAA,CAAAE,WAAA,OAAAD,qBAAA,QAAA1E,cAAA,cAAA0E,qBAAA,gBAAAA,qBAAA,GAAAA,qBAAA,CAAAxC,MAAA,cAAAwC,qBAAA,uBAAAA,qBAAA,CAAAE,SAAA;IACA;IAEAC,WAAA,WAAAA,YAAA;MAAA,IAAAC,qBAAA,EAAAC,qBAAA;MACA,IAAAb,KAAA,GAAA9G,OAAA,EAAA0H,qBAAA,QAAA9E,cAAA,cAAA8E,qBAAA,gBAAAA,qBAAA,GAAAA,qBAAA,CAAA5C,MAAA,cAAA4C,qBAAA,gBAAAA,qBAAA,GAAAA,qBAAA,CAAAH,WAAA,cAAAG,qBAAA,uBAAAA,qBAAA,CAAAE,GAAA;MAEA;QACAd,KAAA,EAAAA,KAAA;QACAC,MAAA,EAAA/G,OAAA,EAAA2H,qBAAA,QAAA/E,cAAA,cAAA+E,qBAAA,gBAAAA,qBAAA,GAAAA,qBAAA,CAAA7C,MAAA,cAAA6C,qBAAA,gBAAAA,qBAAA,GAAAA,qBAAA,CAAAH,SAAA,cAAAG,qBAAA,uBAAAA,qBAAA,CAAAC,GAAA;QACAC,KAAA,OAAA9C,CAAA;UAAA+C,KAAA,EAAAhB;QAAA;MACA;IACA;IAEAiB,QAAA,WAAAA,SAAA;MAAA,IAAAC,qBAAA,EAAAC,qBAAA;MACA;QACAnB,KAAA,EAAA9G,OAAA,GAAAgI,qBAAA,QAAApF,cAAA,cAAAoF,qBAAA,gBAAAA,qBAAA,GAAAA,qBAAA,CAAAlD,MAAA,cAAAkD,qBAAA,gBAAAA,qBAAA,GAAAA,qBAAA,CAAAT,WAAA,cAAAS,qBAAA,uBAAAA,qBAAA,CAAAE,IAAA;QACAnB,MAAA,EAAA/G,OAAA,GAAAiI,qBAAA,QAAArF,cAAA,cAAAqF,qBAAA,gBAAAA,qBAAA,GAAAA,qBAAA,CAAAnD,MAAA,cAAAmD,qBAAA,gBAAAA,qBAAA,GAAAA,qBAAA,CAAAT,SAAA,cAAAS,qBAAA,uBAAAA,qBAAA,CAAAC,IAAA;MACA;IACA;IAEAC,WAAA,WAAAA,YAAA;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MACA,OAAApI,kBAAA,EAAAmI,qBAAA,QAAAxF,cAAA,cAAAwF,qBAAA,gBAAAA,qBAAA,GAAAA,qBAAA,CAAAtD,MAAA,cAAAsD,qBAAA,gBAAAA,qBAAA,GAAAA,qBAAA,CAAAb,WAAA,cAAAa,qBAAA,uBAAAA,qBAAA,CAAAE,MAAA,GAAAD,sBAAA,QAAAzF,cAAA,cAAAyF,sBAAA,gBAAAA,sBAAA,GAAAA,sBAAA,CAAAvD,MAAA,cAAAuD,sBAAA,gBAAAA,sBAAA,GAAAA,sBAAA,CAAAb,SAAA,cAAAa,sBAAA,uBAAAA,sBAAA,CAAAC,MAAA;IACA;IAEAC,kBAAA,WAAAA,mBAAA;MAAA,IAAAC,MAAA;MACA,IAAAC,UAAA,QAAArE,KAAA;;MAEA;MACA,SAAAxB,cAAA,CAAAE,OAAA;QACA,IAAA4F,SAAA,QAAAtE,KAAA,CAAAuE,MAAA,WAAAC,GAAA,EAAAC,CAAA;UACAD,GAAA,CAAAC,CAAA,CAAAhG,EAAA,IAAAgG,CAAA;UAEA,OAAAD,GAAA;QACA;QAEAH,UAAA,QAAApE,SAAA,CAAAwB,MAAA,WAAAgD,CAAA;UAAA,IAAAC,WAAA;UACA,IAAAC,QAAA,KAAAD,WAAA,GAAAD,CAAA,CAAAG,QAAA,cAAAF,WAAA,gBAAAA,WAAA,GAAAA,WAAA,CAAAG,MAAA,cAAAH,WAAA,uBAAAA,WAAA,sCAAAD,CAAA,CAAAhG,EAAA;UAEA,SAAA6F,SAAA,CAAAK,QAAA;QACA;MACA;MAEA,IAAAG,kBAAA,GAAAT,UAAA,CAAAU,IAAA,WAAAC,IAAA;QAAA,OAAAA,IAAA,CAAAC,QAAA,KAAAD,IAAA,CAAAE,QAAA;MAAA;MACA,IAAAC,OAAA,QAAAhG,WAAA,CAAAsC,MAAA,WAAAtC,WAAA;QACA,IAAA6F,IAAA,GAAAZ,MAAA,CAAApE,KAAA,CAAAoF,IAAA,WAAAC,EAAA;UAAA,OAAAA,EAAA,CAAA5G,EAAA,KAAAU,WAAA,CAAAV,EAAA;QAAA;QAEA,OAAAuG,IAAA,MAAAF,kBAAA,IAAAE,IAAA,CAAAE,QAAA;MACA;MACA,IAAAI,kBAAA;QACA9B,GAAA;QACAU,MAAA;MACA;MAEA,IAAArH,OAAA,CAAAsI,OAAA;QACA;MACA;MAEA,OAAAA,OAAA,CAAAZ,MAAA,WAAAgB,GAAA,EAAAC,MAAA;QACAD,GAAA,CAAA/B,GAAA,IAAA5H,OAAA,CAAA4J,MAAA,CAAAC,KAAA,CAAAjC,GAAA;QACA+B,GAAA,CAAArB,MAAA,IAAAtI,OAAA,CAAA4J,MAAA,CAAAC,KAAA,CAAAvB,MAAA;QAEA,OAAAqB,GAAA;MACA,GAAAD,kBAAA;IACA;IAEAI,OAAA,WAAAA,QAAA;MAAA,IAAAC,sBAAA,EAAAC,qBAAA;MACA,IAAAlD,KAAA,GAAA9G,OAAA,EAAA+J,sBAAA,QAAAnH,cAAA,cAAAmH,sBAAA,gBAAAA,sBAAA,GAAAA,sBAAA,CAAAjF,MAAA,cAAAiF,sBAAA,gBAAAA,sBAAA,GAAAA,sBAAA,CAAAE,QAAA,cAAAF,sBAAA,uBAAAA,sBAAA,CAAAnC,GAAA;MAEA;QACAd,KAAA,EAAAA,KAAA;QACAC,MAAA,GAAAiD,qBAAA,QAAAzB,kBAAA,cAAAyB,qBAAA,uBAAAA,qBAAA,CAAApC,GAAA;QACAC,KAAA,OAAA9C,CAAA;UAAA+C,KAAA,EAAAhB;QAAA;MACA;IACA;IAEAoD,OAAA,WAAAA,QAAA;MAAA,IAAAC,sBAAA,EAAAC,sBAAA;MACA,OAAAnK,kBAAA,EAAAkK,sBAAA,QAAAvH,cAAA,cAAAuH,sBAAA,gBAAAA,sBAAA,GAAAA,sBAAA,CAAArF,MAAA,cAAAqF,sBAAA,gBAAAA,sBAAA,GAAAA,sBAAA,CAAAF,QAAA,cAAAE,sBAAA,uBAAAA,sBAAA,CAAA7B,MAAA,GAAA8B,sBAAA,QAAA7B,kBAAA,cAAA6B,sBAAA,uBAAAA,sBAAA,CAAA9B,MAAA;IACA;IAEA+B,aAAA,WAAAA,cAAA;MAAA,IAAAC,oBAAA;MACA,WAAAA,oBAAA,QAAAnH,aAAA,cAAAmH,oBAAA,gBAAAA,oBAAA,GAAAA,oBAAA,iBAAAA,oBAAA,gBAAAA,oBAAA,GAAAA,oBAAA,CAAA1E,MAAA,cAAA0E,oBAAA,gBAAAA,oBAAA,GAAAA,oBAAA,CAAA3K,OAAA,CAAA4K,GAAA,eAAAD,oBAAA,gBAAAA,oBAAA,GAAAA,oBAAA,CAAAE,UAAA,cAAAF,oBAAA,eAAAA,oBAAA;IACA;IAEAG,cAAA,WAAAA,eAAA;MAAA,IAAAC,oBAAA;MACA,WAAAA,oBAAA,QAAAvH,aAAA,cAAAuH,oBAAA,gBAAAA,oBAAA,GAAAA,oBAAA,iBAAAA,oBAAA,gBAAAA,oBAAA,GAAAA,oBAAA,CAAA9E,MAAA,cAAA8E,oBAAA,eAAAA,oBAAA,CAAApL,IAAA;IACA;IAEAqL,oBAAA,WAAAA,qBAAA;MAAA,IAAAC,oBAAA;MACA,WAAAA,oBAAA,QAAAzH,aAAA,cAAAyH,oBAAA,gBAAAA,oBAAA,GAAAA,oBAAA,iBAAAA,oBAAA,gBAAAA,oBAAA,GAAAA,oBAAA,CAAAhF,MAAA,cAAAgF,oBAAA,eAAAA,oBAAA,CAAAnL,cAAA,CAAAmC,UAAA;IACA;IAEAiJ,cAAA,WAAAA,eAAA;MACA,YAAAlH,cAAA,UAAAH,kBAAA,SAAAC,cAAA,SAAAC,eAAA;IACA;IAEAoH,QAAA,WAAAA,SAAA;MAAA,IAAAC,sBAAA;MACA,WAAAA,sBAAA,QAAAnI,cAAA,cAAAmI,sBAAA,eAAAA,sBAAA,CAAAC,KAAA;IACA;IAEAC,cAAA,WAAAA,eAAA;MAAA,IAAAC,sBAAA;MACA,WAAAA,sBAAA,QAAAtI,cAAA,cAAAsI,sBAAA,gBAAAA,sBAAA,GAAAA,sBAAA,CAAAC,IAAA,cAAAD,sBAAA,eAAAA,sBAAA,CAAAE,WAAA;IACA;IAEAC,aAAA,WAAAA,cAAA;MACA;QACA9I,IAAA;QACA+I,MAAA;UACAC,OAAA,EAAA7J,QAAA;UACAwE,QAAA,EAAAjH;QACA;MACA;IACA;IAEAuM,cAAA,WAAAA,eAAA;MACA;QACAjJ,IAAA;QACA+I,MAAA;UACAC,OAAA,EAAA7J,QAAA;UACAwE,QAAA,EAAAtG;QACA;MACA;IACA;EAAA,EACA;EAEA6L,OAAA;IACA;IACAhF,wBAAA,WAAAA,yBAAAiF,KAAA;MAAA,IAAAC,sBAAA;MACA,IAAAC,QAAA,MAAAD,sBAAA,QAAA/I,cAAA,cAAA+I,sBAAA,gBAAAA,sBAAA,GAAAA,sBAAA,CAAA7G,MAAA,cAAA6G,sBAAA,uBAAAA,sBAAA,CAAAE,iBAAA,SAAAhG,MAAA,WAAAiG,CAAA;QAAA,OAAAA,CAAA,CAAAvJ,IAAA,CAAAwJ,UAAA,CAAAL,KAAA;MAAA;;MAEA;MACA,KAAAE,QAAA,CAAAI,MAAA;QACA;MACA;MAEA,IAAAlE,KAAA,GAAA8D,QAAA,CAAAjD,MAAA,WAAAC,GAAA,EAAA9D,MAAA;QACA,IAAAmH,UAAA,GAAAnH,MAAA,CAAAmH,UAAA,CAAAzC,IAAA,WAAA0C,CAAA;UAAA,OAAAA,CAAA,CAAApH,MAAA;QAAA;QAEA,QAAAmH,UAAA,GAAArD,GAAA,GAAAA,GAAA;MACA;MAEA,OAAAd,KAAA;IACA;IAEAqE,WAAA,WAAAA,YAAA;MACA,KAAAxJ,MAAA,CAAAyJ,MAAA;QACAC,SAAA,OAAAzJ,cAAA;QACA0J,IAAA,OAAAC,KAAA;MACA;IACA;IAEA;IACAC,WAAA,WAAAA,YAAA;MAAA,IAAAC,MAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,CAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACA9L,qBAAA,CAAAqL,MAAA,CAAA9J,MAAA,EAAAtD,MAAA,CAAAC,IAAA;gBAAA6N,KAAA;cAAA;YAAA;cAAAV,MAAA,CAAAlJ,WAAA,GAAAyJ,QAAA,CAAAI,IAAA;YAAA;YAAA;cAAA,OAAAJ,QAAA,CAAAK,IAAA;UAAA;QAAA,GAAAR,OAAA;MAAA;IACA;IAEA;IACAS,SAAA,WAAAA,UAAAC,GAAA;MACA,KAAA3J,WAAA,GAAA2J,GAAA,aAAAA,GAAA,uBAAAA,GAAA,CAAAC,YAAA;IACA;IAEAC,oBAAA,WAAAA,qBAAA;MAAA,IAAAC,MAAA;MAAA,OAAAhB,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,UAAAe,SAAA;QAAA,IAAAC,YAAA,EAAAC,WAAA;QAAA,OAAAlB,mBAAA,CAAAG,IAAA,UAAAgB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAd,IAAA,GAAAc,SAAA,CAAAb,IAAA;YAAA;cAAAa,SAAA,CAAAd,IAAA;cAAAc,SAAA,CAAAb,IAAA;cAAA,OAEAQ,MAAA,CAAA/K,MAAA,CAAAK,QAAA;gBAAAC,IAAA,EAAAlE,IAAA,CAAAiP;cAAA;YAAA;cAAAJ,YAAA,GAAAG,SAAA,CAAAX,IAAA;cACAS,WAAA,GAAAD,YAAA,CAAApE,IAAA,WAAAyE,CAAA;gBAAA,OAAAA,CAAA,CAAAC,IAAA,CAAArL,EAAA,KAAA6K,MAAA,CAAA9K,cAAA,CAAAC,EAAA;cAAA;cAAAkL,SAAA,CAAAb,IAAA;cAAA,OAEAW,WAAA,CAAAJ,oBAAA;YAAA;cAAAM,SAAA,CAAAb,IAAA;cAAA;YAAA;cAAAa,SAAA,CAAAd,IAAA;cAAAc,SAAA,CAAAI,EAAA,GAAAJ,SAAA;YAAA;YAAA;cAAA,OAAAA,SAAA,CAAAV,IAAA;UAAA;QAAA,GAAAM,QAAA;MAAA;IAGA;EACA;AACA","ignoreList":[]}]}