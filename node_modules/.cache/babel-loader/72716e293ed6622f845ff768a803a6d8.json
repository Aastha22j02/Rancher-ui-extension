{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/store/aws.js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/store/aws.js","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["sortBy","randomStr","FetchHttpHandler","isArray","addObjects","state","Handler","cloudCredentialId","_classCallCheck","_createClass","key","value","handle","httpRequest","_FetchHttpHandler$pro","headers","concat","endpoint","path","startsWith","hostname","protocol","window","location","port","_len","arguments","length","args","Array","_key","prototype","call","apply","credentialDefaultProvider","accessKey","secretKey","out","accessKeyId","secretAccessKey","getters","defaultRegion","defaultInstanceType","actions","ec2Lib","eksLib","kmsLib","ec2","_ref","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","region","lib","client","wrap","_callee$","_context","prev","next","sent","EC2","requestHandler","abrupt","stop","eks","_ref3","_ref4","_callee2","_callee2$","_context2","EKS","kms","_ref5","_ref6","_callee3","_callee3$","_context3","KMS","instanceInfo","_ref7","_ref8","_callee4","rootGetters","data","groups","list","_iterator","_step","row","apiName","instanceClass","groupLabel","storageSize","storageUnit","storageType","storageInfo","_storageInfo$Disks","disk","_callee4$","_context4","cmd","default","_createForOfIteratorHelper","s","n","done","InstanceType","split","toLowerCase","InstanceStorageInfo","TotalSizeInGB","Disks","NvmeSupport","Type","push","currentGeneration","CurrentGeneration","memoryBytes","MemoryInfo","SizeInMiB","label","cpu","VCpuInfo","DefaultVCpus","memory","err","e","f","depaginateList","ctx","_ref9","_callee5","opt","hasNext","_loop","_callee5$","_context6","res","_loop$","_context5","Object","keys","find","x","NextToken","delegateYield","defaultRegions","_callee6","_callee6$","_context7"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/store/aws.js"],"sourcesContent":["import { sortBy } from '@shell/utils/sort';\nimport { randomStr } from '@shell/utils/string';\nimport { FetchHttpHandler } from '@aws-sdk/fetch-http-handler';\nimport { isArray, addObjects } from '@shell/utils/array';\n\nexport const state = () => {\n  return {};\n};\n\nclass Handler {\n  constructor(cloudCredentialId) {\n    this.cloudCredentialId = (cloudCredentialId || '');\n  }\n\n  handle(httpRequest, ...args) {\n    httpRequest.headers['x-api-headers-restrict'] = 'Content-Length';\n\n    if ( this.cloudCredentialId ) {\n      httpRequest.headers['x-api-cattleauth-header'] = `awsv4 credID=${ this.cloudCredentialId }`;\n    } else {\n      httpRequest.headers['x-api-auth-header'] = httpRequest.headers['authorization'];\n    }\n\n    delete httpRequest.headers['authorization'];\n\n    httpRequest.headers['content-type'] = `rancher:${ httpRequest.headers['content-type'] }`;\n\n    const endpoint = `/meta/proxy/`;\n\n    if ( !httpRequest.path.startsWith(endpoint) ) {\n      httpRequest.path = endpoint + httpRequest.hostname + httpRequest.path;\n    }\n\n    httpRequest.protocol = window.location.protocol;\n    httpRequest.hostname = window.location.hostname;\n    httpRequest.port = window.location.port;\n\n    return FetchHttpHandler.prototype.handle.call(this, httpRequest, ...args);\n  }\n}\n\nfunction credentialDefaultProvider(accessKey, secretKey) {\n  return function() {\n    // The SDK will complain if these aren't set, so fill them with something\n    // even though the cloudCredential will be used eventually\n    const out = {\n      accessKeyId:     accessKey || randomStr(),\n      secretAccessKey: secretKey || randomStr(),\n    };\n\n    return out;\n  };\n}\n\nexport const getters = {\n  // You could override these to do something based on the user, maybe.\n  defaultRegion() {\n    return 'us-west-2';\n  },\n\n  defaultInstanceType() {\n    return 't3a.medium';\n  }\n};\n\nexport const actions = {\n  ec2Lib() {\n    return import(/* webpackChunkName: \"aws-ec2\" */ '@aws-sdk/client-ec2');\n  },\n\n  eksLib() {\n    return import(/* webpackChunkName: \"aws-eks\" */ '@aws-sdk/client-eks');\n  },\n\n  kmsLib() {\n    return import(/* webpackChunkName: \"aws-ec2\" */ '@aws-sdk/client-kms');\n  },\n\n  async ec2({ dispatch }, {\n    region, cloudCredentialId, accessKey, secretKey\n  }) {\n    const lib = await dispatch('ec2Lib');\n\n    const client = new lib.EC2({\n      region,\n      credentialDefaultProvider: credentialDefaultProvider(accessKey, secretKey),\n      requestHandler:            new Handler(cloudCredentialId),\n    });\n\n    return client;\n  },\n\n  async eks({ dispatch }, {\n    region, cloudCredentialId, accessKey, secretKey\n  }) {\n    const lib = await dispatch('eksLib');\n\n    const client = new lib.EKS({\n      region,\n      credentialDefaultProvider: credentialDefaultProvider(accessKey, secretKey),\n      requestHandler:            new Handler(cloudCredentialId),\n    });\n\n    return client;\n  },\n\n  async kms({ dispatch }, {\n    region, cloudCredentialId, accessKey, secretKey\n  }) {\n    const lib = await dispatch('kmsLib');\n\n    const client = new lib.KMS({\n      region,\n      credentialDefaultProvider: credentialDefaultProvider(accessKey, secretKey),\n      requestHandler:            new Handler(cloudCredentialId),\n    });\n\n    return client;\n  },\n\n  async instanceInfo({ dispatch, rootGetters, state }, { client }) {\n    const data = await dispatch('depaginateList', { client, cmd: 'describeInstanceTypes' });\n\n    const groups = (await import(/* webpackChunkName: \"aws-data\" */'@shell/assets/data/ec2-instance-groups.json')).default;\n    const list = [];\n\n    for ( const row of data ) {\n      const apiName = row.InstanceType;\n      const instanceClass = apiName.split('.')[0].toLowerCase();\n      const groupLabel = groups[instanceClass] || 'Unknown';\n\n      let storageSize = 0;\n      let storageUnit = 'GB';\n      let storageType = null;\n      const storageInfo = row.InstanceStorageInfo;\n\n      if ( storageInfo) {\n        storageSize = storageInfo.TotalSizeInGB;\n        const disk = storageInfo.Disks?.[0];\n\n        if ( storageInfo.NvmeSupport === 'supported' ) {\n          storageType = 'NVMe';\n        } else if ( disk?.Type === 'ssd' ) {\n          storageType = 'SSD';\n        } else if ( disk?.Type === 'hdd' ) {\n          storageType = 'HDD';\n        } else {\n          storageType = 'Unknown';\n        }\n\n        if ( storageSize > 1000 ) {\n          storageSize /= 1000;\n          storageUnit = 'TB';\n        }\n      } else {\n        // storageSize == 0 shows EBS-Only\n      }\n\n      list.push({\n        apiName,\n        currentGeneration: row.CurrentGeneration || false,\n        groupLabel,\n        instanceClass,\n        memoryBytes:       row.MemoryInfo.SizeInMiB * 1024 * 1024,\n        label:             rootGetters['i18n/t']('cluster.machineConfig.aws.sizeLabel', {\n          apiName,\n          cpu:    row.VCpuInfo.DefaultVCpus,\n          memory: row.MemoryInfo.SizeInMiB / 1024,\n          storageSize,\n          storageUnit,\n          storageType,\n        }),\n      });\n    }\n\n    const out = sortBy(list, ['currentGeneration:desc', 'groupLabel', 'instanceClass', 'memoryBytes', 'apiName']);\n\n    return out;\n  },\n\n  async depaginateList(ctx, {\n    client, cmd, key, opt\n  }) {\n    let hasNext = true;\n    const out = [];\n\n    opt = opt || {};\n\n    while ( hasNext ) {\n      const res = await client[cmd](opt);\n\n      if ( !key ) {\n        key = Object.keys(res).find((x) => isArray(res[x]));\n      }\n\n      addObjects(out, res[key]);\n      opt.NextToken = res.NextToken;\n      hasNext = !!res.NextToken;\n    }\n\n    return out;\n  },\n\n  async defaultRegions() {\n    const data = (await import(/* webpackChunkName: \"aws-data\" */'@shell/assets/data/aws-regions.json')).default;\n\n    return data;\n  }\n};\n"],"mappings":"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","ignoreList":[]}]}