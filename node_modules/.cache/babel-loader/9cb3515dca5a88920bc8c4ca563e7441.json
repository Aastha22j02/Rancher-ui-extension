{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/c/_cluster/fleet/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/c/_cluster/fleet/index.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapState","FLEET","WORKSPACE","STATES_ENUM","STATES","getStateLabel","Loading","CollapsibleCard","ResourceTable","CompoundStatusBadge","checkPermissions","checkSchemasForFindAllHash","WORKSPACE_ANNOTATION","filterBy","FleetNoWorkspaces","NAME","name","components","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","hash","permissions","wrap","_callee$","_context","prev","next","fleetWorkspaces","inStoreType","type","schemaValidator","schema","_schema$links","links","collection","clusterGroups","CLUSTER_GROUP","allBundles","BUNDLE","gitRepos","GIT_REPO","fleetClusters","CLUSTER","$store","sent","fleetWorkspacesData","workspaces","resourceMethods","includes","getters","t0","console","error","stop","data","admissableAreas","headers","labelKey","value","sort","formatter","canBeVariable","search","isCollapsed","getStartedLink","params","product","resource","computed","_objectSpread","_this$fleetWorkspaces","_this2","length","allNamespaces","filter","item","metadata","annotations","map","obj","repos","id","counts","clusters","nameDisplay","workspacesData","ws","emptyWorkspaces","areAllCardsExpanded","_this3","Object","keys","every","key","methods","setWorkspaceFilterAndLinkToGitRepo","commit","dispatch","$router","push","getStatusInfo","area","row","defaultStatusInfo","badgeClass","concat","NOT_READY","color","icon","compoundIcon","getBadgeClassAndIcon","_group","_group2","_group3","_group4","_group5","_group6","group","targetClusters","bundles","_row$status","status","resources","_item$state","state","toLowerCase","ACTIVE","UNKNOWN","some","_item$state2","ERR_APPLIED","_item$state3","_row$status2","_row$status3","_row$status4","resourceCounts","desiredReady","ready","getTooltipInfo","_group7","_row$status5","generateTooltipData","infoObj","tooltipData","forEach","getBadgeValue","_row$targetClustersRe","_row$targetClusters","targetClustersReady","_row$bundlesReady","_row$bundles","bundlesReady","_row$status6","_row$status7","toggleCollapse","val","$set","toggleAll","action","_this4","watch","_this5","_ws$repos"],"sources":["node_modules/@rancher/shell/pages/c/_cluster/fleet/index.vue"],"sourcesContent":["<script>\nimport { mapState } from 'vuex';\nimport { FLEET } from '@shell/config/types';\nimport { WORKSPACE } from '@shell/store/prefs';\nimport { STATES_ENUM, STATES, getStateLabel } from '@shell/plugins/dashboard-store/resource-class';\nimport Loading from '@shell/components/Loading';\nimport CollapsibleCard from '@shell/components/CollapsibleCard.vue';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport CompoundStatusBadge from '@shell/components/CompoundStatusBadge';\nimport { checkPermissions, checkSchemasForFindAllHash } from '@shell/utils/auth';\nimport { WORKSPACE_ANNOTATION } from '@shell/config/labels-annotations';\nimport { filterBy } from '@shell/utils/array';\nimport FleetNoWorkspaces from '@shell/components/fleet/FleetNoWorkspaces.vue';\nimport { NAME } from '@shell/config/product/fleet';\n\nexport default {\n  name:       'FleetDashboard',\n  components: {\n    Loading,\n    ResourceTable,\n    CollapsibleCard,\n    CompoundStatusBadge,\n    FleetNoWorkspaces\n  },\n\n  async fetch() {\n    const hash = await checkSchemasForFindAllHash({\n      fleetWorkspaces: {\n        inStoreType:     'management',\n        type:            FLEET.WORKSPACE,\n        schemaValidator: (schema) => {\n          return !!schema?.links?.collection;\n        }\n      },\n      clusterGroups: {\n        inStoreType: 'management',\n        type:        FLEET.CLUSTER_GROUP\n      },\n      allBundles: {\n        inStoreType: 'management',\n        type:        FLEET.BUNDLE,\n      },\n      gitRepos: {\n        inStoreType: 'management',\n        type:        FLEET.GIT_REPO,\n      },\n      fleetClusters: {\n        inStoreType: 'management',\n        type:        FLEET.CLUSTER,\n      }\n    }, this.$store);\n\n    this.gitRepos = hash.gitRepos;\n    this.fleetWorkspacesData = hash.fleetWorkspaces || [];\n\n    try {\n      const permissions = await checkPermissions({ workspaces: { type: FLEET.WORKSPACE }, gitRepos: { type: FLEET.GIT_REPO, schemaValidator: (schema) => schema.resourceMethods.includes('PUT') } }, this.$store.getters);\n\n      this.permissions = permissions;\n    } catch (e) {\n      console.error(e); // eslint-disable-line no-console\n    }\n  },\n\n  data() {\n    return {\n      admissableAreas: ['clusters', 'bundles', 'resources'],\n      headers:         [\n        {\n          name:          'name',\n          labelKey:      'tableHeaders.repoName',\n          value:         'nameDisplay',\n          sort:          ['nameSort'],\n          formatter:     'LinkDetail',\n          canBeVariable: true,\n        },\n        {\n          name:     'clustersReady',\n          labelKey: 'tableHeaders.clustersReady',\n          value:    'status.readyClusters',\n          sort:     'status.readyClusters',\n          search:   false,\n        },\n        {\n          name:     'bundlesReady',\n          labelKey: 'tableHeaders.bundlesReady',\n          value:    'status.readyClusters',\n          sort:     'status.readyClusters',\n          search:   false,\n        },\n        {\n          name:     'resourcesReady',\n          labelKey: 'tableHeaders.resourcesReady',\n          value:    'status.resourceCounts.ready',\n          sort:     'status.resourceCounts.ready',\n        }\n      ],\n      schema:              {},\n      allBundles:          [],\n      gitRepos:            [],\n      fleetWorkspacesData: [],\n      isCollapsed:         {},\n      permissions:         {},\n      getStartedLink:      {\n        name:   'c-cluster-product-resource-create',\n        params: {\n          product:  NAME,\n          resource: FLEET.GIT_REPO\n        },\n      }\n    };\n  },\n  computed: {\n    ...mapState(['workspace', 'allNamespaces']),\n    fleetWorkspaces() {\n      if (this.fleetWorkspacesData?.length) {\n        return this.fleetWorkspacesData;\n      }\n\n      // When user doesn't have access to the workspaces fall back to namespaces\n      return this.allNamespaces.filter((item) => {\n        return item.metadata.annotations[WORKSPACE_ANNOTATION] === WORKSPACE;\n      }).map(( obj ) => {\n        const repos = filterBy(this.gitRepos, 'metadata.namespace', obj.id);\n\n        return {\n          ...obj,\n          counts: {\n            clusters:      '-',\n            clusterGroups: '-',\n            gitRepos:      repos.length\n          },\n          repos,\n          nameDisplay: obj.id\n        };\n      });\n    },\n    workspacesData() {\n      return this.fleetWorkspaces.filter((ws) => ws.repos && ws.repos.length);\n    },\n    emptyWorkspaces() {\n      return this.fleetWorkspaces.filter((ws) => !ws.repos || !ws.repos.length);\n    },\n    areAllCardsExpanded() {\n      return Object.keys(this.isCollapsed).every((key) => !this.isCollapsed[key]);\n    }\n  },\n  methods: {\n    setWorkspaceFilterAndLinkToGitRepo(value) {\n      this.$store.commit('updateWorkspace', { value, getters: this.$store.getters } );\n      this.$store.dispatch('prefs/set', { key: WORKSPACE, value });\n\n      this.$router.push({\n        name:   'c-cluster-product-resource',\n        params: {\n          product:  NAME,\n          resource: FLEET.GIT_REPO\n        },\n      });\n    },\n    getStatusInfo(area, row) {\n      const defaultStatusInfo = {\n        badgeClass: `${ STATES[STATES_ENUM.NOT_READY].color } badge-class-default`,\n        icon:       STATES[STATES_ENUM.NOT_READY].compoundIcon\n      };\n\n      // classes are defined in the themes SASS files...\n      return this.getBadgeClassAndIcon(area, row) || defaultStatusInfo;\n    },\n    getBadgeClassAndIcon(area, row) {\n      let group;\n\n      if (!this.admissableAreas.includes(area)) {\n        return false;\n      }\n\n      if (area === 'clusters') {\n        group = row.targetClusters;\n      } else if (area === 'bundles') {\n        group = row.bundles;\n      } else if (area === 'resources') {\n        group = row.status?.resources;\n      }\n\n      if (group?.length && group?.every((item) => item.state?.toLowerCase() === STATES_ENUM.ACTIVE)) {\n        return {\n          badgeClass: STATES[STATES_ENUM.ACTIVE].color ? STATES[STATES_ENUM.ACTIVE].color : `${ STATES[STATES_ENUM.UNKNOWN].color } bg-unmapped-state`,\n          icon:       STATES[STATES_ENUM.ACTIVE].compoundIcon ? STATES[STATES_ENUM.ACTIVE].compoundIcon : `${ STATES[STATES_ENUM.UNKNOWN].compoundIcon } unmapped-icon`\n        };\n      }\n      if (group?.length && group?.some((item) => item.state?.toLowerCase() === STATES_ENUM.ERR_APPLIED)) {\n        return {\n          badgeClass: STATES[STATES_ENUM.ERR_APPLIED].color ? STATES[STATES_ENUM.ERR_APPLIED].color : `${ STATES[STATES_ENUM.UNKNOWN].color } bg-unmapped-state`,\n          icon:       STATES[STATES_ENUM.ERR_APPLIED].compoundIcon ? STATES[STATES_ENUM.ERR_APPLIED].compoundIcon : `${ STATES[STATES_ENUM.UNKNOWN].compoundIcon } unmapped-icon`\n        };\n      }\n      if (group?.length && group?.some((item) => item.state?.toLowerCase() === STATES_ENUM.NOT_READY)) {\n        return {\n          badgeClass: STATES[STATES_ENUM.NOT_READY].color ? STATES[STATES_ENUM.NOT_READY].color : `${ STATES[STATES_ENUM.UNKNOWN].color } bg-unmapped-state`,\n          icon:       STATES[STATES_ENUM.NOT_READY].compoundIcon ? STATES[STATES_ENUM.NOT_READY].compoundIcon : `${ STATES[STATES_ENUM.UNKNOWN].compoundIcon } unmapped-icon`\n        };\n      }\n\n      if (area === 'resources') {\n        if (row.status?.resourceCounts?.desiredReady === row.status?.resourceCounts?.ready && row.status?.resourceCounts?.desiredReady) {\n          return {\n            badgeClass: STATES[STATES_ENUM.ACTIVE].color,\n            icon:       STATES[STATES_ENUM.ACTIVE].compoundIcon\n          };\n        }\n      }\n\n      return {\n        badgeClass: `${ STATES[STATES_ENUM.NOT_READY].color } badge-class-area-${ area }`,\n        icon:       STATES[STATES_ENUM.NOT_READY].compoundIcon\n      };\n    },\n    getTooltipInfo(area, row) {\n      let group;\n\n      if (!this.admissableAreas.includes(area)) {\n        return {};\n      }\n\n      if (area === 'clusters') {\n        group = row.targetClusters;\n      } else if (area === 'bundles') {\n        group = row.bundles;\n      } else if (area === 'resources') {\n        group = row.status?.resources;\n      }\n\n      if (group?.length) {\n        return this.generateTooltipData(group);\n      }\n\n      return '';\n    },\n    generateTooltipData(data) {\n      const infoObj = {};\n      let tooltipData = '';\n\n      data.forEach((item) => {\n        if (!infoObj[item.state]) {\n          infoObj[item.state] = 0;\n        }\n\n        infoObj[item.state]++;\n      });\n\n      Object.keys(infoObj).forEach((key) => {\n        tooltipData += `${ getStateLabel(key) }: ${ infoObj[key] }<br>`;\n      });\n\n      return tooltipData;\n    },\n    getBadgeValue(area, row) {\n      let value;\n\n      if (!this.admissableAreas.includes(area)) {\n        return 'N/A';\n      }\n\n      if (area === 'clusters') {\n        value = `${ row.targetClustersReady?.length || '0' }/${ row.targetClusters?.length || '?' }`;\n      } else if (area === 'bundles') {\n        value = `${ row.bundlesReady?.length || '0' }/${ row.bundles?.length || '?' }`;\n      } else if (area === 'resources') {\n        value = `${ row.status?.resourceCounts?.ready || '0' }/${ row.status?.resourceCounts?.desiredReady || '?' }`;\n      }\n\n      return value;\n    },\n    toggleCollapse(val, key) {\n      this.$set(this.isCollapsed, key, val);\n    },\n    toggleAll(action) {\n      const val = action !== 'expand';\n\n      Object.keys(this.isCollapsed).forEach((key) => {\n        this.$set(this.isCollapsed, key, val);\n      });\n    }\n  },\n\n  watch: {\n    fleetWorkspaces(value) {\n      value?.filter((ws) => ws.repos?.length).forEach((ws) => {\n        this.$set(this.isCollapsed, ws.id, false);\n      });\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"fleet-dashboard\">\n    <Loading v-if=\"$fetchState.pending\" />\n    <!-- no git repos -->\n    <FleetNoWorkspaces\n      v-else-if=\"!fleetWorkspacesData.length\"\n      :can-view=\"permissions.workspaces\"\n    />\n    <div\n      v-else-if=\"!gitRepos.length\"\n      class=\"fleet-empty-dashboard\"\n    >\n      <i class=\"icon-fleet mb-30\" />\n      <h1>{{ t('fleet.dashboard.welcome') }}</h1>\n      <p class=\"mb-30\">\n        <span>{{ t('fleet.dashboard.gitOpsScale') }}</span>\n        <a\n          :href=\"t('fleet.dashboard.learnMoreLink')\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer nofollow\"\n        >\n          {{ t('fleet.dashboard.learnMore') }} <i class=\"icon icon-external-link\" />\n        </a>\n      </p>\n      <template v-if=\"permissions.gitRepos\">\n        <h3 class=\"mb-30\">\n          {{ t('fleet.dashboard.noRepo', null, true) }}\n        </h3>\n        <router-link\n          :to=\"getStartedLink\"\n          class=\"btn role-secondary\"\n        >\n          {{ t('fleet.dashboard.getStarted') }}\n        </router-link>\n      </template>\n    </div>\n    <!-- fleet dashboard with repos -->\n    <div\n      v-else\n      class=\"fleet-dashboard-data\"\n    >\n      <div class=\"title\">\n        <h1>\n          <t k=\"fleet.dashboard.pageTitle\" />\n        </h1>\n        <div>\n          <p\n            v-if=\"areAllCardsExpanded\"\n            @click=\"toggleAll('collapse')\"\n          >\n            {{ t('fleet.dashboard.collapseAll') }}\n          </p>\n          <p\n            v-else\n            @click=\"toggleAll('expand')\"\n          >\n            {{ t('fleet.dashboard.expandAll') }}\n          </p>\n        </div>\n      </div>\n      <div\n        v-if=\"emptyWorkspaces.length\"\n        class=\"title-footnote\"\n      >\n        <p>{{ t('fleet.dashboard.thereIsMore', { count: emptyWorkspaces.length }) }}:&nbsp;</p>\n        <p\n          v-for=\"(ews, i) in emptyWorkspaces\"\n          :key=\"i\"\n        >\n          {{ ews.nameDisplay }}<span v-if=\"i != (emptyWorkspaces.length - 1)\">,&nbsp;</span>\n        </p>\n      </div>\n      <CollapsibleCard\n        v-for=\"ws in workspacesData\"\n        :key=\"ws.id\"\n        class=\"mt-20 mb-40\"\n        :title=\"`${t('resourceDetail.masthead.workspace')}: ${ws.nameDisplay}`\"\n        :is-collapsed=\"isCollapsed[ws.id]\"\n        :is-title-clickable=\"true\"\n        :data-testid=\"`collapsible-card-${ ws.id }`\"\n        @toggleCollapse=\"toggleCollapse($event, ws.id)\"\n        @titleClick=\"setWorkspaceFilterAndLinkToGitRepo(ws.id)\"\n      >\n        <template v-slot:header-right>\n          <div class=\"header-icons\">\n            <p>\n              <i class=\"icon icon-repository\" />\n              <span>{{ t('tableHeaders.repositories') }}: <span>{{ ws.counts.gitRepos }}</span></span>\n            </p>\n            <p>\n              <i class=\"icon icon-storage\" />\n              <span>{{ t('tableHeaders.clusters') }}: <span>{{ ws.counts.clusters }}</span></span>\n            </p>\n            <p>\n              <i class=\"icon icon-folder\" />\n              <span>{{ t('tableHeaders.clusterGroups') }}: <span>{{ ws.counts.clusterGroups }}</span></span>\n            </p>\n          </div>\n        </template>\n        <template v-slot:content>\n          <ResourceTable\n            v-bind=\"$attrs\"\n            :schema=\"schema\"\n            :headers=\"headers\"\n            :rows=\"ws.repos\"\n            key-field=\"_key\"\n            :search=\"false\"\n            :table-actions=\"false\"\n            v-on=\"$listeners\"\n          >\n            <template #cell:clustersReady=\"{row}\">\n              <span v-if=\"ws.type === 'namespace'\"> - </span>\n              <CompoundStatusBadge\n                v-else\n                data-testid=\"clusters-ready\"\n                :tooltip-text=\"getTooltipInfo('clusters', row)\"\n                :badge-class=\"getStatusInfo('clusters', row).badgeClass\"\n                :icon=\"getStatusInfo('clusters', row).icon\"\n                :value=\"getBadgeValue('clusters', row)\"\n              />\n            </template>\n            <template #cell:bundlesReady=\"{row}\">\n              <span v-if=\"ws.type === 'namespace'\"> - </span>\n              <CompoundStatusBadge\n                v-else\n                data-testid=\"bundles-ready\"\n                :tooltip-text=\"getTooltipInfo('bundles', row)\"\n                :badge-class=\"getStatusInfo('bundles', row).badgeClass\"\n                :icon=\"getStatusInfo('bundles', row).icon\"\n                :value=\"getBadgeValue('bundles', row)\"\n              />\n            </template>\n            <template #cell:resourcesReady=\"{row}\">\n              <CompoundStatusBadge\n                data-testid=\"resources-ready\"\n                :tooltip-text=\"getTooltipInfo('resources', row)\"\n                :badge-class=\"getStatusInfo('resources', row).badgeClass\"\n                :icon=\"getStatusInfo('resources', row).icon\"\n                :value=\"getBadgeValue('resources', row)\"\n              />\n            </template>\n\n            <template #cell:target=\"{row}\">\n              {{ row.targetInfo.modeDisplay }}\n            </template>\n          </ResourceTable>\n        </template>\n      </CollapsibleCard>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.fleet-dashboard {\n  min-height: 100vh;\n}\n.fleet-empty-dashboard {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100%;\n\n  .icon-fleet {\n    font-size: 100px;\n    color: var(--disabled-text);\n  }\n\n  > p > span {\n    color: var(--disabled-text);\n  }\n}\n\n.fleet-dashboard-data {\n  .title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    min-height: 48px;\n\n    > div {\n      display: flex;\n      align-items: center;\n\n      p{\n        color: var(--primary);\n\n        &:hover {\n          text-decoration: underline;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n\n  .title-footnote {\n    display: flex;\n    align-items: center;\n    color: var(--darker);\n  }\n\n  .header-icons {\n    display: flex;\n    align-items: center;\n\n    p {\n      margin-right: 30px;\n      display: flex;\n      align-items: center;\n\n      > span {\n        color: var(--disabled-text);\n\n        > span {\n          color: var(--body-text);\n        }\n      }\n\n      i {\n        color: var(--disabled-text);\n        font-size: 20px;\n        margin-right: 10px;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}