{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/cloudcredential.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/cloudcredential.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["SECRET_TYPES","TYPES","MANAGEMENT","NORMAN","SCHEMA","DEFAULT_WORKSPACE","CreateEditView","NameNsDescription","CruResource","_CREATE","_EDIT","Loading","Labels","HIDE_SENSITIVE","CAPI","clear","uniq","SelectIconGrid","sortBy","ucFirst","set","mapFeature","RKE2","RKE2_FEATURE","rke1Supports","name","components","mixins","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$value","schema","k","id","wrap","_callee$","_context","prev","next","$store","dispatch","type","NODE_DRIVER","nodeDrivers","sent","KONTAINER_DRIVER","kontainerDrivers","CLOUD_CREDENTIAL","opt","force","url","concat","t0","keys","resourceFields","t1","done","value","endsWith","abrupt","getters","t2","_name","mode","length","nameRequiredValidation","provider","selectType","stop","data","credCustomComponentValidation","computed","rke2Enabled","validationPassed","storeOverride","driverName","_this$value2","cloudComponent","secretSubTypes","_this2","out","drivers","_toConsumableArray","filter","x","spec","active","map","displayName","types","includes","_schema$resourceField","key","subSchemaName","subSchema","fields","Object","push","_iterator","_createForOfIteratorHelper","_step","s","n","bannerImage","bannerAbbrv","require","e","initialDisplayFor","label","typeDisplay","CREDENTIAL_DRIVER","err","f","hideSensitiveData","doneRoute","methods","handleNameRequiredValidation","_this$value3","createValidationChanged","passed","saveCredential","btnCb","_this3","_callee2","_this3$$refs$cloudCom","res","_callee2$","_context2","errors","$refs","test","save","driver","setAnnotation","metadata","generateName","namespace","field","$set","$emit","fallback","replace","substr"],"sources":["node_modules/@rancher/shell/edit/cloudcredential.vue"],"sourcesContent":["<script>\nimport { SECRET_TYPES as TYPES } from '@shell/config/secret';\nimport { MANAGEMENT, NORMAN, SCHEMA, DEFAULT_WORKSPACE } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport CruResource from '@shell/components/CruResource';\nimport { _CREATE, _EDIT } from '@shell/config/query-params';\nimport Loading from '@shell/components/Loading';\nimport Labels from '@shell/components/form/Labels';\nimport { HIDE_SENSITIVE } from '@shell/store/prefs';\nimport { CAPI } from '@shell/config/labels-annotations';\nimport { clear, uniq } from '@shell/utils/array';\nimport SelectIconGrid from '@shell/components/SelectIconGrid';\nimport { sortBy } from '@shell/utils/sort';\nimport { ucFirst } from '@shell/utils/string';\nimport { set } from '@shell/utils/object';\nimport { mapFeature, RKE2 as RKE2_FEATURE } from '@shell/store/features';\nimport { rke1Supports } from '@shell/store/plugins';\n\nexport default {\n  name: 'CruCloudCredential',\n\n  components: {\n    Loading,\n    NameNsDescription,\n    CruResource,\n    Labels,\n    SelectIconGrid\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    this.nodeDrivers = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.NODE_DRIVER });\n    this.kontainerDrivers = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.KONTAINER_DRIVER });\n\n    // Force reload the cloud cred schema and any missing subtypes because there aren't change events sent when drivers come/go\n    try {\n      const schema = await this.$store.dispatch('rancher/find', {\n        type: SCHEMA,\n        id:   NORMAN.CLOUD_CREDENTIAL,\n        opt:  {\n          force: true,\n          url:   `schemas/${ NORMAN.CLOUD_CREDENTIAL }`,\n        },\n      });\n\n      for ( const k in schema.resourceFields ) {\n        if ( !k.endsWith('Config') ) {\n          continue;\n        }\n\n        const id = schema.resourceFields[k].type;\n\n        if ( !this.$store.getters['rancher/schemaFor'](id) ) {\n          await this.$store.dispatch('rancher/find', {\n            type: SCHEMA,\n            id,\n            opt:  {\n              force: true,\n              url:   `schemas/${ id }`,\n            },\n          });\n        }\n      }\n    } catch (e) {\n    }\n\n    if ( !this.value._name ) {\n      set(this.value, '_name', '');\n    }\n\n    if (this.mode === _EDIT && this.value?.name?.length) {\n      this.value._name = this.value.name;\n      this.nameRequiredValidation = true;\n    }\n\n    if ( this.value.provider ) {\n      this.selectType(this.value.provider);\n    }\n  },\n\n  data() {\n    return {\n      credCustomComponentValidation: false,\n      nameRequiredValidation:        false,\n      nodeDrivers:                   null,\n      kontainerDrivers:              null\n    };\n  },\n\n  computed: {\n    rke2Enabled: mapFeature(RKE2_FEATURE),\n\n    validationPassed() {\n      return this.credCustomComponentValidation && this.nameRequiredValidation;\n    },\n\n    storeOverride() {\n      return 'rancher';\n    },\n\n    driverName() {\n      return this.value?.provider;\n    },\n\n    cloudComponent() {\n      if (this.$store.getters['type-map/hasCustomCloudCredentialComponent'](this.driverName)) {\n        return this.$store.getters['type-map/importCloudCredential'](this.driverName);\n      }\n\n      return this.$store.getters['type-map/importCloudCredential']('generic');\n    },\n\n    // array of id, label, description, initials for type selection step\n    secretSubTypes() {\n      const out = [];\n\n      const drivers = [...this.nodeDrivers, ...this.kontainerDrivers]\n        .filter((x) => x.spec.active && x.id !== 'rancherkubernetesengine')\n        .map((x) => x.spec.displayName || x.id);\n\n      let types = uniq(drivers.map((x) => this.$store.getters['plugins/credentialDriverFor'](x)));\n\n      if ( !this.rke2Enabled ) {\n        types = types.filter((x) => rke1Supports.includes(x));\n      }\n\n      const schema = this.$store.getters['rancher/schemaFor'](NORMAN.CLOUD_CREDENTIAL);\n\n      types = types.filter((name) => {\n        const key = this.$store.getters['plugins/credentialFieldForDriver'](name);\n        const subSchemaName = schema.resourceFields[`${ key }credentialConfig`]?.type;\n\n        if ( !subSchemaName ) {\n          return;\n        }\n\n        const subSchema = this.$store.getters['rancher/schemaFor'](subSchemaName);\n\n        if ( !subSchema ) {\n          return false;\n        }\n\n        const fields = subSchema.resourceFields;\n\n        return fields && Object.keys(fields).length > 0;\n      });\n\n      if ( schema.resourceFields['s3credentialConfig'] ) {\n        types.push('s3');\n      }\n\n      for ( const id of types ) {\n        let bannerImage, bannerAbbrv;\n\n        try {\n          bannerImage = require(`~shell/assets/images/providers/${ id }.svg`);\n        } catch (e) {\n          bannerImage = null;\n          bannerAbbrv = this.initialDisplayFor(id);\n        }\n\n        out.push({\n          id,\n          label: this.typeDisplay(CAPI.CREDENTIAL_DRIVER, id),\n          bannerImage,\n          bannerAbbrv\n        });\n      }\n\n      return sortBy(out, 'label');\n    },\n\n    hideSensitiveData() {\n      return this.$store.getters['prefs/get'](HIDE_SENSITIVE);\n    },\n\n    doneRoute() {\n      return 'c-cluster-manager-cloudCredential';\n    },\n  },\n\n  methods: {\n    handleNameRequiredValidation() {\n      this.nameRequiredValidation = !!this.value?._name?.length;\n    },\n\n    createValidationChanged(passed) {\n      this.credCustomComponentValidation = passed;\n    },\n\n    async saveCredential(btnCb) {\n      if ( this.errors ) {\n        clear(this.errors);\n      }\n\n      if ( typeof this.$refs.cloudComponent?.test === 'function' ) {\n        try {\n          const res = await this.$refs.cloudComponent.test();\n\n          if ( !res || res?.errors) {\n            if (res?.errors) {\n              this.errors = res.errors;\n            } else {\n              this.errors = ['Authentication test failed, please check your credentials'];\n            }\n            btnCb(false);\n\n            return;\n          }\n        } catch (e) {\n          this.errors = [e];\n          btnCb(false);\n\n          return;\n        }\n      }\n\n      return this.save(btnCb);\n    },\n\n    selectType(type) {\n      let driver;\n\n      if ( type === TYPES.CLOUD_CREDENTIAL ) {\n        // Clone goes through here\n        driver = this.driverName;\n      } else {\n        driver = type;\n        type = TYPES.CLOUD_CREDENTIAL;\n      }\n\n      if ( this.mode === _CREATE ) {\n        this.value.setAnnotation(CAPI.CREDENTIAL_DRIVER, driver);\n        this.value.metadata.generateName = 'cc-';\n        this.value.metadata.namespace = DEFAULT_WORKSPACE;\n\n        const field = this.$store.getters['plugins/credentialFieldForDriver'](driver);\n\n        set(this.value, `${ field }credentialConfig`, {});\n      }\n\n      this.$set(this.value, '_type', type);\n      this.$emit('set-subtype', this.typeDisplay(type, driver));\n    },\n\n    typeDisplay(type, driver) {\n      return this.$store.getters['i18n/withFallback'](`cluster.provider.\"${ driver }\"`, null, driver);\n    },\n\n    initialDisplayFor(type) {\n      const fallback = (ucFirst(this.typeDisplay(type) || '').replace(/[^A-Z]/g, '') || type).substr(0, 3);\n\n      return this.$store.getters['i18n/withFallback'](`secret.initials.\"${ type }\"`, null, fallback);\n    },\n  },\n};\n</script>\n\n<template>\n  <form class=\"filled-height\">\n    <Loading v-if=\"$fetchState.pending\" />\n    <CruResource\n      v-else\n      :mode=\"mode\"\n      :validation-passed=\"validationPassed\"\n      :selected-subtype=\"value._type\"\n      :resource=\"value\"\n      :errors=\"errors\"\n      :done-route=\"doneRoute\"\n      :subtypes=\"secretSubTypes\"\n      :can-yaml=\"false\"\n      @finish=\"saveCredential\"\n      @select-type=\"selectType\"\n      @error=\"e=>errors = e\"\n    >\n      <NameNsDescription\n        v-model=\"value\"\n        :name-editable=\"true\"\n        name-key=\"_name\"\n        description-key=\"description\"\n        name-label=\"cluster.credential.name.label\"\n        name-placeholder=\"cluster.credential.name.placeholder\"\n        :mode=\"mode\"\n        :namespaced=\"false\"\n        @change=\"handleNameRequiredValidation\"\n      />\n      <keep-alive>\n        <component\n          :is=\"cloudComponent\"\n          ref=\"cloudComponent\"\n          :driver-name=\"driverName\"\n          :value=\"value\"\n          :mode=\"mode\"\n          :hide-sensitive-data=\"hideSensitiveData\"\n          @validationChanged=\"createValidationChanged\"\n        />\n      </keep-alive>\n    </CruResource>\n  </form>\n</template>\n\n<style lang='scss'>\n</style>\n"],"mappings":"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","ignoreList":[]}]}