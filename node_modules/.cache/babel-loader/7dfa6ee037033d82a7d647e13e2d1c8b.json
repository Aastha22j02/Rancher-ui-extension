{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/dialog/AddCustomBadgeDialog.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/dialog/AddCustomBadgeDialog.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gIi9ob21lL3VidW50dS9zdXNlY29uLTIwMjQtZXh0LWRlbW8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwpmdW5jdGlvbiBvd25LZXlzKGUsIHIpIHsgdmFyIHQgPSBPYmplY3Qua2V5cyhlKTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIG8gPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpOyByICYmIChvID0gby5maWx0ZXIoZnVuY3Rpb24gKHIpIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSwgcikuZW51bWVyYWJsZTsgfSkpLCB0LnB1c2guYXBwbHkodCwgbyk7IH0gcmV0dXJuIHQ7IH0KZnVuY3Rpb24gX29iamVjdFNwcmVhZChlKSB7IGZvciAodmFyIHIgPSAxOyByIDwgYXJndW1lbnRzLmxlbmd0aDsgcisrKSB7IHZhciB0ID0gbnVsbCAhPSBhcmd1bWVudHNbcl0gPyBhcmd1bWVudHNbcl0gOiB7fTsgciAlIDIgPyBvd25LZXlzKE9iamVjdCh0KSwgITApLmZvckVhY2goZnVuY3Rpb24gKHIpIHsgX2RlZmluZVByb3BlcnR5KGUsIHIsIHRbcl0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnModCkpIDogb3duS2V5cyhPYmplY3QodCkpLmZvckVhY2goZnVuY3Rpb24gKHIpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIHIsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCwgcikpOyB9KTsgfSByZXR1cm4gZTsgfQppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IENMVVNURVJfQkFER0UgfSBmcm9tICdAc2hlbGwvY29uZmlnL2xhYmVscy1hbm5vdGF0aW9ucyc7CmltcG9ydCBBc3luY0J1dHRvbiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Bc3luY0J1dHRvbic7CmltcG9ydCB7IENhcmQgfSBmcm9tICdAY29tcG9uZW50cy9DYXJkJzsKaW1wb3J0IHsgQmFubmVyIH0gZnJvbSAnQGNvbXBvbmVudHMvQmFubmVyJzsKaW1wb3J0IENsdXN0ZXJCYWRnZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DbHVzdGVyQmFkZ2UnOwppbXBvcnQgQ2x1c3RlclByb3ZpZGVySWNvbiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DbHVzdGVyUHJvdmlkZXJJY29uJzsKaW1wb3J0IHsgZXhjZXB0aW9uVG9FcnJvcnNBcnJheSB9IGZyb20gJ0BzaGVsbC91dGlscy9lcnJvcic7CmltcG9ydCB7IENoZWNrYm94IH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9DaGVja2JveCc7CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IENvbG9ySW5wdXQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9Db2xvcklucHV0JzsKaW1wb3J0IHsgcGFyc2VDb2xvciwgdGV4dENvbG9yIH0gZnJvbSAnQHNoZWxsL3V0aWxzL2NvbG9yJzsKaW1wb3J0IHsgTk9STUFOIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQWRkQ3VzdG9tQmFkZ2VEaWFsb2cnLAogIGNvbXBvbmVudHM6IHsKICAgIENhcmQ6IENhcmQsCiAgICBBc3luY0J1dHRvbjogQXN5bmNCdXR0b24sCiAgICBCYW5uZXI6IEJhbm5lciwKICAgIENoZWNrYm94OiBDaGVja2JveCwKICAgIExhYmVsZWRJbnB1dDogTGFiZWxlZElucHV0LAogICAgQ29sb3JJbnB1dDogQ29sb3JJbnB1dCwKICAgIENsdXN0ZXJCYWRnZTogQ2x1c3RlckJhZGdlLAogICAgQ2x1c3RlclByb3ZpZGVySWNvbjogQ2x1c3RlclByb3ZpZGVySWNvbgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZUN1c3RvbUJhZGdlOiBudWxsLAogICAgICBlcnJvcnM6IFtdLAogICAgICBiYWRnZUJnQ29sb3I6ICcnLAogICAgICBiYWRnZURlc2NyaXB0aW9uOiAnJywKICAgICAgYmFkZ2VBc0ljb246IG51bGwsCiAgICAgIGxldHRlcjogJycKICAgIH07CiAgfSwKICBmZXRjaDogZnVuY3Rpb24gZmV0Y2goKSB7CiAgICB2YXIgX3RoaXMkY3VycmVudENsdXN0ZXIkOwogICAgaWYgKChfdGhpcyRjdXJyZW50Q2x1c3RlciQgPSB0aGlzLmN1cnJlbnRDbHVzdGVyLm1ldGFkYXRhKSAhPT0gbnVsbCAmJiBfdGhpcyRjdXJyZW50Q2x1c3RlciQgIT09IHZvaWQgMCAmJiBfdGhpcyRjdXJyZW50Q2x1c3RlciQuYW5ub3RhdGlvbnMpIHsKICAgICAgdmFyIF90aGlzJGN1cnJlbnRDbHVzdGVyJDIsIF90aGlzJGJhZGdlRGVzY3JpcHRpbywgX3RoaXMkY3VycmVudENsdXN0ZXIkMywgX3RoaXMkY3VycmVudENsdXN0ZXIkNCwgX3RoaXMkY3VycmVudENsdXN0ZXIkNTsKICAgICAgdGhpcy5iYWRnZURlc2NyaXB0aW9uID0gKF90aGlzJGN1cnJlbnRDbHVzdGVyJDIgPSB0aGlzLmN1cnJlbnRDbHVzdGVyLm1ldGFkYXRhKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50Q2x1c3RlciQyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRjdXJyZW50Q2x1c3RlciQyLmFubm90YXRpb25zW0NMVVNURVJfQkFER0UuVEVYVF07CiAgICAgIHRoaXMudXNlQ3VzdG9tQmFkZ2UgPSAoKF90aGlzJGJhZGdlRGVzY3JpcHRpbyA9IHRoaXMuYmFkZ2VEZXNjcmlwdGlvbikgPT09IG51bGwgfHwgX3RoaXMkYmFkZ2VEZXNjcmlwdGlvID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRiYWRnZURlc2NyaXB0aW8ubGVuZ3RoKSA+IDA7CiAgICAgIHRoaXMuYmFkZ2VEZXNjcmlwdGlvbiA9IHRoaXMuYmFkZ2VEZXNjcmlwdGlvbiB8fCAnRXhhbXBsZSBUZXh0JzsKICAgICAgdGhpcy5iYWRnZUJnQ29sb3IgPSAoKF90aGlzJGN1cnJlbnRDbHVzdGVyJDMgPSB0aGlzLmN1cnJlbnRDbHVzdGVyLm1ldGFkYXRhKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50Q2x1c3RlciQzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRjdXJyZW50Q2x1c3RlciQzLmFubm90YXRpb25zW0NMVVNURVJfQkFER0UuQ09MT1JdKSB8fCAnI2ZmMDAwMCc7CiAgICAgIHRoaXMuYmFkZ2VBc0ljb24gPSAhISgoX3RoaXMkY3VycmVudENsdXN0ZXIkNCA9IHRoaXMuY3VycmVudENsdXN0ZXIubWV0YWRhdGEpICE9PSBudWxsICYmIF90aGlzJGN1cnJlbnRDbHVzdGVyJDQgIT09IHZvaWQgMCAmJiBfdGhpcyRjdXJyZW50Q2x1c3RlciQ0LmFubm90YXRpb25zW0NMVVNURVJfQkFER0UuSUNPTl9URVhUXSkgfHwgZmFsc2U7CiAgICAgIHRoaXMubGV0dGVyID0gKChfdGhpcyRjdXJyZW50Q2x1c3RlciQ1ID0gdGhpcy5jdXJyZW50Q2x1c3Rlci5tZXRhZGF0YSkgPT09IG51bGwgfHwgX3RoaXMkY3VycmVudENsdXN0ZXIkNSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkY3VycmVudENsdXN0ZXIkNS5hbm5vdGF0aW9uc1tDTFVTVEVSX0JBREdFLklDT05fVEVYVF0pIHx8IHRoaXMuYmFkZ2VEZXNjcmlwdGlvbi5zdWJzdHJpbmcoMCwgMik7CiAgICB9CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKFsnY3VycmVudENsdXN0ZXInXSkpLCB7fSwgewogICAgcHJldmlld0NvbG9yOiBmdW5jdGlvbiBwcmV2aWV3Q29sb3IoKSB7CiAgICAgIHJldHVybiB0ZXh0Q29sb3IocGFyc2VDb2xvcih0aGlzLmJhZGdlQmdDb2xvcikpIHx8ICcjZmZmZmZmJzsKICAgIH0sCiAgICBjYW5TdWJtaXQ6IGZ1bmN0aW9uIGNhblN1Ym1pdCgpIHsKICAgICAgcmV0dXJuIHRoaXMuYmFkZ2VEZXNjcmlwdGlvbi5sZW5ndGggPj0gMTsKICAgIH0sCiAgICAvLyBGYWtlIGNsdXN0ZXIgb2JqZWN0IGZvciB1c2Ugd2l0aCBiYWRnZSBjb21wb25lbnQKICAgIHByZXZpZXdDbHVzdGVyOiBmdW5jdGlvbiBwcmV2aWV3Q2x1c3RlcigpIHsKICAgICAgLy8gTWFrZSBjbHVzdGVyIG9iamVjdCB0aGF0IGlzIGVub3VnaCBmb3IgdGhlIGJhZGdlIGNvbXBvbmVudCB0byB3b3JrCiAgICAgIHJldHVybiB7CiAgICAgICAgaXNMb2NhbDogdGhpcy5jdXJyZW50Q2x1c3Rlci5pc0xvY2FsLAogICAgICAgIHByb3ZpZGVyTmF2TG9nbzogdGhpcy5jdXJyZW50Q2x1c3Rlci5wcm92aWRlck5hdkxvZ28sCiAgICAgICAgYmFkZ2U6IHsKICAgICAgICAgIHRleHQ6IHRoaXMuYmFkZ2VEZXNjcmlwdGlvbiwKICAgICAgICAgIGNvbG9yOiB0aGlzLmJhZGdlQmdDb2xvciwKICAgICAgICAgIHRleHRDb2xvcjogdGV4dENvbG9yKHBhcnNlQ29sb3IodGhpcy5iYWRnZUJnQ29sb3IpKSwKICAgICAgICAgIGljb25UZXh0OiB0aGlzLmJhZGdlQXNJY29uID8gdGhpcy5sZXR0ZXIudG9VcHBlckNhc2UoKSA6ICcnCiAgICAgICAgfQogICAgICB9OwogICAgfSwKICAgIG1vZGU6IGZ1bmN0aW9uIG1vZGUoKSB7CiAgICAgIHJldHVybiAhIXRoaXMudXNlQ3VzdG9tQmFkZ2UgPyAnZWRpdCcgOiAndmlldyc7CiAgICB9CiAgfSksCiAgbWV0aG9kczogewogICAgY2xvc2U6IGZ1bmN0aW9uIGNsb3NlKCkgewogICAgICB0aGlzLiRlbWl0KCdjbG9zZScpOwogICAgfSwKICAgIGFwcGx5OiBmdW5jdGlvbiBhcHBseShidXR0b25Eb25lKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBub3JtYW47CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3JhbmNoZXIvZmluZCcsIHsKICAgICAgICAgICAgICAgIHR5cGU6IE5PUk1BTi5DTFVTVEVSLAogICAgICAgICAgICAgICAgaWQ6IF90aGlzLmN1cnJlbnRDbHVzdGVyLmlkCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBub3JtYW4gPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGRlbGV0ZSBub3JtYW4uYW5ub3RhdGlvbnNbQ0xVU1RFUl9CQURHRS5URVhUXTsKICAgICAgICAgICAgICBkZWxldGUgbm9ybWFuLmFubm90YXRpb25zW0NMVVNURVJfQkFER0UuQ09MT1JdOwogICAgICAgICAgICAgIGRlbGV0ZSBub3JtYW4uYW5ub3RhdGlvbnNbQ0xVU1RFUl9CQURHRS5JQ09OX1RFWFRdOwogICAgICAgICAgICAgIGlmIChfdGhpcy51c2VDdXN0b21CYWRnZSkgewogICAgICAgICAgICAgICAgX3RoaXMuJHNldChub3JtYW4uYW5ub3RhdGlvbnMsIENMVVNURVJfQkFER0UuVEVYVCwgX3RoaXMuYmFkZ2VEZXNjcmlwdGlvbik7CiAgICAgICAgICAgICAgICBfdGhpcy4kc2V0KG5vcm1hbi5hbm5vdGF0aW9ucywgQ0xVU1RFUl9CQURHRS5DT0xPUiwgX3RoaXMuYmFkZ2VCZ0NvbG9yKTsKICAgICAgICAgICAgICAgIGlmIChfdGhpcy5iYWRnZUFzSWNvbikgewogICAgICAgICAgICAgICAgICBfdGhpcy4kc2V0KG5vcm1hbi5hbm5vdGF0aW9ucywgQ0xVU1RFUl9CQURHRS5JQ09OX1RFWFQsIF90aGlzLmxldHRlci50b1VwcGVyQ2FzZSgpKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgIHJldHVybiBub3JtYW4uc2F2ZSgpOwogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGJ1dHRvbkRvbmUodHJ1ZSk7CiAgICAgICAgICAgICAgX3RoaXMuY2xvc2UoKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTg7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE0OwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgX3RoaXMuZXJyb3JzID0gZXhjZXB0aW9uVG9FcnJvcnNBcnJheShfY29udGV4dC50MCk7CiAgICAgICAgICAgICAgYnV0dG9uRG9uZShmYWxzZSk7CiAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDE0XV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"names":["mapGetters","CLUSTER_BADGE","AsyncButton","Card","Banner","ClusterBadge","ClusterProviderIcon","exceptionToErrorsArray","Checkbox","LabeledInput","ColorInput","parseColor","textColor","NORMAN","name","components","data","useCustomBadge","errors","badgeBgColor","badgeDescription","badgeAsIcon","letter","fetch","_this$currentCluster$","currentCluster","metadata","annotations","_this$currentCluster$2","_this$badgeDescriptio","_this$currentCluster$3","_this$currentCluster$4","_this$currentCluster$5","TEXT","length","COLOR","ICON_TEXT","substring","computed","_objectSpread","previewColor","canSubmit","previewCluster","isLocal","providerNavLogo","badge","text","color","iconText","toUpperCase","mode","methods","close","$emit","apply","buttonDone","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","norman","wrap","_callee$","_context","prev","next","$store","dispatch","type","CLUSTER","id","sent","$set","save","t0","stop"],"sources":["node_modules/@rancher/shell/dialog/AddCustomBadgeDialog.vue"],"sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport { CLUSTER_BADGE } from '@shell/config/labels-annotations';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { Card } from '@components/Card';\nimport { Banner } from '@components/Banner';\nimport ClusterBadge from '@shell/components/ClusterBadge';\nimport ClusterProviderIcon from '@shell/components/ClusterProviderIcon';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport ColorInput from '@shell/components/form/ColorInput';\nimport { parseColor, textColor } from '@shell/utils/color';\nimport { NORMAN } from '@shell/config/types';\n\nexport default {\n  name:       'AddCustomBadgeDialog',\n  components: {\n    Card,\n    AsyncButton,\n    Banner,\n    Checkbox,\n    LabeledInput,\n    ColorInput,\n    ClusterBadge,\n    ClusterProviderIcon,\n  },\n\n  data() {\n    return {\n      useCustomBadge:   null,\n      errors:           [],\n      badgeBgColor:     '',\n      badgeDescription: '',\n      badgeAsIcon:      null,\n      letter:           '',\n    };\n  },\n\n  fetch() {\n    if (this.currentCluster.metadata?.annotations) {\n      this.badgeDescription = this.currentCluster.metadata?.annotations[CLUSTER_BADGE.TEXT];\n      this.useCustomBadge = this.badgeDescription?.length > 0;\n      this.badgeDescription = this.badgeDescription || 'Example Text';\n      this.badgeBgColor = this.currentCluster.metadata?.annotations[CLUSTER_BADGE.COLOR] || '#ff0000';\n\n      this.badgeAsIcon = !!this.currentCluster.metadata?.annotations[CLUSTER_BADGE.ICON_TEXT] || false;\n\n      this.letter = this.currentCluster.metadata?.annotations[CLUSTER_BADGE.ICON_TEXT] || this.badgeDescription.substring(0, 2);\n    }\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n\n    previewColor() {\n      return textColor(parseColor(this.badgeBgColor)) || '#ffffff';\n    },\n    canSubmit() {\n      return this.badgeDescription.length >= 1;\n    },\n    // Fake cluster object for use with badge component\n    previewCluster() {\n      // Make cluster object that is enough for the badge component to work\n      return {\n        isLocal:         this.currentCluster.isLocal,\n        providerNavLogo: this.currentCluster.providerNavLogo,\n        badge:           {\n          text:      this.badgeDescription,\n          color:     this.badgeBgColor,\n          textColor: textColor(parseColor(this.badgeBgColor)),\n          iconText:  this.badgeAsIcon ? this.letter.toUpperCase() : '',\n        }\n      };\n    },\n\n    mode() {\n      return !!this.useCustomBadge ? 'edit' : 'view';\n    },\n  },\n\n  methods: {\n    close() {\n      this.$emit('close');\n    },\n\n    async apply(buttonDone) {\n      try {\n        // Fetch the Norman cluster object\n        const norman = await this.$store.dispatch('rancher/find', { type: NORMAN.CLUSTER, id: this.currentCluster.id });\n\n        delete norman.annotations[CLUSTER_BADGE.TEXT];\n        delete norman.annotations[CLUSTER_BADGE.COLOR];\n        delete norman.annotations[CLUSTER_BADGE.ICON_TEXT];\n\n        if (this.useCustomBadge) {\n          this.$set(norman.annotations, CLUSTER_BADGE.TEXT, this.badgeDescription);\n          this.$set(norman.annotations, CLUSTER_BADGE.COLOR, this.badgeBgColor);\n          if (this.badgeAsIcon) {\n            this.$set(norman.annotations, CLUSTER_BADGE.ICON_TEXT, this.letter.toUpperCase());\n          }\n        }\n\n        await norman.save();\n\n        buttonDone(true);\n        this.close();\n      } catch (err) {\n        this.errors = exceptionToErrorsArray(err);\n        buttonDone(false);\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Card\n    class=\"prompt-badge\"\n    :show-highlight-border=\"false\"\n  >\n    <h4\n      slot=\"title\"\n      class=\"text-default-text\"\n    >\n      {{ t('clusterBadge.modal.title') }}\n    </h4>\n\n    <div\n      slot=\"body\"\n      class=\"pl-10 pr-10 cluster-badge-body\"\n    >\n      <div>{{ t('clusterBadge.modal.previewTitle') }}</div>\n\n      <div class=\"mt-10 pl-20 row preview-row\">\n        <div class=\"badge-preview col span-12\">\n          <ClusterProviderIcon\n            v-if=\"useCustomBadge\"\n            :cluster=\"previewCluster\"\n          />\n          <ClusterProviderIcon\n            v-else\n            :cluster=\"currentCluster\"\n          />\n          <div class=\"cluster-name\">\n            {{ currentCluster.nameDisplay }}\n          </div>\n          <ClusterBadge\n            v-if=\"useCustomBadge\"\n            :cluster=\"previewCluster\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col\">\n          <Checkbox\n            v-model=\"useCustomBadge\"\n            :label=\"t('clusterBadge.modal.checkbox')\"\n            class=\"mt-10\"\n          />\n        </div>\n      </div>\n\n      <div class=\"options\">\n        <div class=\"row mt-10\">\n          <div class=\"col span-12\">\n            <LabeledInput\n              v-model.trim=\"badgeDescription\"\n              :mode=\"mode\"\n              :label=\"t('clusterBadge.modal.description')\"\n              :maxlength=\"32\"\n              :required=\"true\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row mt-10\">\n          <div class=\"col span-12\">\n            <ColorInput\n              v-model=\"badgeBgColor\"\n              :mode=\"mode\"\n              :default-value=\"badgeBgColor\"\n              :label=\"t('clusterBadge.modal.badgeBgColor')\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row mt-10\">\n          <div class=\"col\">\n            <Checkbox\n              v-model=\"badgeAsIcon\"\n              :mode=\"mode\"\n              :label=\"t('clusterBadge.modal.badgeAsIcon')\"\n              class=\"mt-10\"\n              :tooltip=\"t('clusterBadge.modal.maxCharsTooltip')\"\n            />\n          </div>\n        </div>\n        <div class=\"row mt-10\">\n          <div class=\"col\">\n            <LabeledInput\n              v-model.trim=\"letter\"\n              :disabled=\"!badgeAsIcon\"\n              class=\"badge-icon-text\"\n              :mode=\"mode\"\n              :label=\"t('clusterBadge.modal.iconText')\"\n              :maxlength=\"2\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div\n      slot=\"actions\"\n      class=\"bottom\"\n    >\n      <Banner\n        v-for=\"(err, i) in errors\"\n        :key=\"i\"\n        color=\"error\"\n        :label=\"err\"\n      />\n      <div class=\"buttons\">\n        <button\n          class=\"btn role-secondary mr-10\"\n          @click=\"close\"\n        >\n          {{ t('generic.cancel') }}\n        </button>\n        <AsyncButton\n          :action-label=\"t('clusterBadge.modal.buttonAction')\"\n          :disabled=\"!canSubmit\"\n          @click=\"apply\"\n        />\n      </div>\n    </div>\n  </Card>\n</template>\n<style lang='scss' scoped>\n  .prompt-badge {\n    margin: 0;\n\n    .cluster-badge-body {\n      min-height: 50px;\n      display: flex;\n      flex-direction: column;\n\n      .preview-row {\n        height: 32px;\n\n        .badge-preview {\n          align-items: center;\n          display: flex;\n          height: 32px;\n          white-space: nowrap;\n\n          .cluster-name {\n            margin: 0 10px;\n            font-size: 16px;\n          }\n\n          .cluster-badge-icon-preview {\n            width: 32px;\n            height: 32px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            border-radius: 5px;\n            font-weight: bold;\n          }\n\n          .cluster-badge-preview {\n            cursor: default;\n            border-radius: 10px;\n            font-size: 12px;\n            padding: 2px 10px;\n          }\n        }\n      }\n\n      ::v-deep .badge-icon-text input {\n        text-transform: uppercase;\n      }\n    }\n  }\n\n  .bottom {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n\n    .banner {\n      margin-top: 0;\n    }\n\n    .buttons {\n      display: flex;\n      justify-content: flex-end;\n      width: 100%;\n    }\n  }\n\n</style>\n"],"mappings":"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","ignoreList":[]}]}