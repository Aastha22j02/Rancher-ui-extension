{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/service.js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/service.js","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["find","POD","SteveModel","DEFAULT_SERVICE_TYPES","id","label","description","bannerAbbrv","HEADLESS","headless","CLUSTERIP","clusterIp","_default","_SteveModel","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","get","nullable","path","required","translationKey","type","validators","_this$serviceType","out","t","content","serviceType","_this$spec","spec","clusterIP","externalName","sessionAffinity","loadBalancerIP","push","_this$status$loadBala","statusIps","status","loadBalancer","ingress","map","hostname","ip","join","loadbalancerInfo","_this$metadata$relati","metadata","relationships","filter","relationship","toType","value","_fetchPods","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","podRelationship","$dispatch","selector","namespace","root","stop","fetchPods","apply","$getters","matching","_this$spec2","_this$spec3","defaultService","proxyUrl","scheme","port","view","linkFor","idx","lastIndexOf","proxyUrlFromBase","slice","name","default","proxyUrlFromParts","clusterId","base","concat","escape","schemaNamePort","cleanPath","replace","cleanBase"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/service.js"],"sourcesContent":["import find from 'lodash/find';\nimport { POD } from '@shell/config/types';\nimport SteveModel from '@shell/plugins/steve/steve-class';\n\nexport const DEFAULT_SERVICE_TYPES = [\n  {\n    id:          'ClusterIP',\n    label:       'servicesPage.serviceTypes.clusterIp.label',\n    description: 'servicesPage.serviceTypes.clusterIp.description',\n    bannerAbbrv: 'servicesPage.serviceTypes.clusterIp.abbrv',\n  },\n  {\n    id:          'ExternalName',\n    label:       'servicesPage.serviceTypes.externalName.label',\n    description: 'servicesPage.serviceTypes.externalName.description',\n    bannerAbbrv: 'servicesPage.serviceTypes.externalName.abbrv',\n  },\n  {\n    id:          'Headless',\n    label:       'servicesPage.serviceTypes.headless.label',\n    description: 'servicesPage.serviceTypes.headless.description',\n    bannerAbbrv: 'servicesPage.serviceTypes.headless.abbrv',\n  },\n  {\n    id:          'LoadBalancer',\n    label:       'servicesPage.serviceTypes.loadBalancer.label',\n    description: 'servicesPage.serviceTypes.loadBalancer.description',\n    bannerAbbrv: 'servicesPage.serviceTypes.loadBalancer.abbrv',\n  },\n  {\n    id:          'NodePort',\n    label:       'servicesPage.serviceTypes.nodePort.label',\n    description: 'servicesPage.serviceTypes.nodePort.description',\n    bannerAbbrv: 'servicesPage.serviceTypes.nodePort.abbrv',\n  },\n];\n\nexport const HEADLESS = (() => {\n  const headless = find(DEFAULT_SERVICE_TYPES, ['id', 'Headless']);\n\n  return headless.id;\n})();\n\nexport const CLUSTERIP = (() => {\n  const clusterIp = find(DEFAULT_SERVICE_TYPES, ['id', 'ClusterIP']);\n\n  return clusterIp.id;\n})();\n\nexport default class extends SteveModel {\n  get customValidationRules() {\n    return [\n      {\n        nullable:       false,\n        path:           'metadata.name',\n        required:       true,\n        translationKey: 'generic.name',\n        type:           'dnsLabel',\n      },\n      {\n        nullable:   false,\n        path:       'spec',\n        required:   true,\n        type:       'array',\n        validators: ['servicePort'],\n      },\n      {\n        nullable:   true,\n        path:       'spec',\n        required:   true,\n        type:       'string',\n        validators: ['clusterIp'],\n      },\n      {\n        nullable:   true,\n        path:       'spec',\n        required:   true,\n        type:       'array',\n        validators: ['externalName'],\n      },\n    ];\n  }\n\n  get details() {\n    const out = [{\n      label:   this.t('generic.type'),\n      content: this.serviceType?.id || this.serviceType,\n    }];\n\n    const {\n      clusterIP, externalName, sessionAffinity, loadBalancerIP\n    } = this.spec;\n\n    if (clusterIP) {\n      out.push({\n        label:   this.t('servicesPage.serviceTypes.clusterIp.label'),\n        content: clusterIP,\n      });\n    }\n\n    if (this.serviceType === 'LoadBalancer') {\n      const statusIps = this.status.loadBalancer?.ingress?.map((ingress) => ingress.hostname || ingress.ip).join(', ');\n\n      const loadbalancerInfo = loadBalancerIP || statusIps || '';\n\n      if (loadbalancerInfo) {\n        out.push({\n          label:   this.t('servicesPage.ips.loadBalancer.label'),\n          content: loadbalancerInfo\n        });\n      }\n    }\n\n    if (externalName) {\n      out.push({\n        label:   this.t('servicesPage.serviceTypes.externalName.label'),\n        content: externalName,\n      });\n    }\n\n    if (sessionAffinity) {\n      out.push({\n        label:   this.t('servicesPage.affinity.label'),\n        content: sessionAffinity,\n      });\n    }\n\n    return out;\n  }\n\n  get podRelationship() {\n    const { metadata:{ relationships = [] } } = this;\n\n    return (relationships || []).filter((relationship) => relationship.toType === POD)[0];\n  }\n\n  async fetchPods() {\n    if (this.podRelationship) {\n      await this.$dispatch('cluster/findMatching', {\n        type:      POD,\n        selector:  this.podRelationship.selector,\n        namespace: this.namespace\n      }, { root: true });\n    }\n  }\n\n  get pods() {\n    return this.podRelationship ? this.$getters.matching( POD, this.podRelationship.selector, this.namespace ) : [];\n  }\n\n  get serviceType() {\n    const serviceType = this.spec?.type;\n    const clusterIp = this.spec?.clusterIP;\n    const defaultService = find(DEFAULT_SERVICE_TYPES, ['id', CLUSTERIP]);\n\n    if (serviceType) {\n      if (serviceType === CLUSTERIP && clusterIp === 'None') {\n        return HEADLESS;\n      } else {\n        return serviceType;\n      }\n    }\n\n    return defaultService;\n  }\n\n  proxyUrl(scheme, port) {\n    const view = this.linkFor('view');\n    const idx = view.lastIndexOf(`/`);\n\n    return proxyUrlFromBase(view.slice(0, idx), scheme, this.metadata.name, port);\n  }\n}\n\nexport function proxyUrlFromParts(clusterId, namespace, name, scheme, port, path) {\n  const base = `/k8s/clusters/${ escape(clusterId) }/api/v1/namespaces/${ escape(namespace) }/services`;\n\n  return proxyUrlFromBase(base, scheme, name, port, path);\n}\n\nexport function proxyUrlFromBase(base, scheme, name, port, path) {\n  const schemaNamePort = (scheme ? `${ escape(scheme) }:` : '') + escape(name) + (port ? `:${ escape(port) }` : '');\n\n  const cleanPath = `/${ (path || '').replace(/^\\/+/g, '') }`;\n  const cleanBase = base.replace(/\\/+$/g, '');\n\n  const out = `${ cleanBase }/${ schemaNamePort }/proxy${ cleanPath }`;\n\n  return out;\n}\n"],"mappings":"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","ignoreList":[]}]}