{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/detail/node.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/detail/node.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ConsumptionGauge","Alert","ResourceTable","Tab","EFFECT","IMAGE_SIZE","KEY","SIMPLE_NAME","VALUE","ResourceTabs","METRIC","POD","createEditView","formatSi","exponentNeeded","UNITS","DashboardMetrics","mapGetters","allDashboardsExist","Loading","metricPoller","FilterArgs","PaginationParamFilter","NODE_METRICS_DETAIL_URL","NODE_METRICS_SUMMARY_URL","name","components","mixins","props","value","type","Object","required","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","opt","wrap","_callee$","_context","prev","next","filterByApi","$store","getters","pagination","sort","field","asc","filters","createSingleField","id","dispatch","currentCluster","showMetrics","sent","stop","data","podSchema","metrics","cpu","memory","infoTableHeaders","_objectSpread","label","width","dashIfEmpty","imageTableHeaders","taintTableHeaders","podTableHeaders","undefined","computed","memoryUnits","exponent","ramReserved","concat","pidPressureStatus","mapToStatus","isPidPressureOk","diskPressureStatus","isDiskPressureOk","memoryPressureStatus","isMemoryPressureOk","kubeletStatus","isKubeletOk","infoTableRows","_this2","keys","status","nodeInfo","map","key","t","imageTableRows","images","image","names","sizeBytes","taintTableRows","spec","taints","graphVars","instance","internalIp","methods","memoryFormatter","formatOptions","addSuffix","increment","isOk","loadMetrics","_this3","_callee2","schema","_callee2$","_context2","NODE","force","$forceUpdate"],"sources":["node_modules/@rancher/shell/detail/node.vue"],"sourcesContent":["<script>\nimport ConsumptionGauge from '@shell/components/ConsumptionGauge';\nimport Alert from '@shell/components/Alert';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport {\n  EFFECT,\n  IMAGE_SIZE,\n  KEY,\n  SIMPLE_NAME,\n  VALUE\n} from '@shell/config/table-headers';\nimport ResourceTabs from '@shell/components/form/ResourceTabs';\nimport { METRIC, POD } from '@shell/config/types';\nimport createEditView from '@shell/mixins/create-edit-view';\nimport { formatSi, exponentNeeded, UNITS } from '@shell/utils/units';\nimport DashboardMetrics from '@shell/components/DashboardMetrics';\nimport { mapGetters } from 'vuex';\nimport { allDashboardsExist } from '@shell/utils/grafana';\nimport Loading from '@shell/components/Loading';\nimport metricPoller from '@shell/mixins/metric-poller';\nimport { FilterArgs, PaginationParamFilter } from '@shell/types/store/pagination.types';\n\nconst NODE_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-node-detail-1/rancher-node-detail?orgId=1';\nconst NODE_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-node-1/rancher-node?orgId=1';\n\nexport default {\n  name: 'DetailNode',\n\n  components: {\n    Alert,\n    ConsumptionGauge,\n    DashboardMetrics,\n    Loading,\n    ResourceTabs,\n    Tab,\n    ResourceTable,\n  },\n\n  mixins: [createEditView, metricPoller],\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n  },\n\n  async fetch() {\n    this.filterByApi = this.$store.getters[`cluster/paginationEnabled`](POD);\n\n    if (this.filterByApi) {\n      // Only get pods associated with this node. The actual values used are from a get all in node model `pods` getter (this works as it just gets all...)\n      const opt = { // Of type ActionFindPageArgs\n        pagination: new FilterArgs({\n          sort:    [{ field: 'metadata.name', asc: true }],\n          filters: PaginationParamFilter.createSingleField({\n            field: 'spec.nodeName',\n            value: this.value.id,\n          })\n        })\n      };\n\n      this.$store.dispatch(`cluster/findPage`, { type: POD, opt });\n    } else {\n      this.$store.dispatch('cluster/findAll', { type: POD });\n    }\n\n    this.showMetrics = await allDashboardsExist(this.$store, this.currentCluster.id, [NODE_METRICS_DETAIL_URL, NODE_METRICS_SUMMARY_URL]);\n  },\n\n  data() {\n    const podSchema = this.$store.getters['cluster/schemaFor'](POD);\n\n    return {\n      metrics:          { cpu: 0, memory: 0 },\n      infoTableHeaders: [\n        {\n          ...KEY,\n          label: '',\n          width: 200\n        },\n        {\n          ...VALUE,\n          label:       '',\n          dashIfEmpty: true,\n        }\n      ],\n      imageTableHeaders: [\n        { ...SIMPLE_NAME, width: null },\n        { ...IMAGE_SIZE, width: 100 } // Ensure one header has a size, all other columns will scale\n      ],\n      taintTableHeaders: [\n        KEY,\n        VALUE,\n        EFFECT\n      ],\n      podTableHeaders: this.$store.getters['type-map/headersFor'](podSchema),\n      NODE_METRICS_DETAIL_URL,\n      NODE_METRICS_SUMMARY_URL,\n      showMetrics:     false,\n      filterByApi:     undefined,\n    };\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n    memoryUnits() {\n      const exponent = exponentNeeded(this.value.ramReserved, 1024);\n\n      return `${ UNITS[exponent] }iB`;\n    },\n\n    pidPressureStatus() {\n      return this.mapToStatus(this.value.isPidPressureOk);\n    },\n\n    diskPressureStatus() {\n      return this.mapToStatus(this.value.isDiskPressureOk);\n    },\n\n    memoryPressureStatus() {\n      return this.mapToStatus(this.value.isMemoryPressureOk);\n    },\n\n    kubeletStatus() {\n      return this.mapToStatus(this.value.isKubeletOk);\n    },\n\n    infoTableRows() {\n      return Object.keys(this.value.status.nodeInfo)\n        .map((key) => ({\n          key:   this.t(`node.detail.tab.info.key.${ key }`),\n          value: this.value.status.nodeInfo[key]\n        }));\n    },\n\n    imageTableRows() {\n      const images = this.value.status.images || [];\n\n      return images.map((image) => ({\n        // image.names[1] typically has the user friendly name but on occasion there's only one name and we should use that\n        name:      image.names ? (image.names[1] || image.names[0]) : '---',\n        sizeBytes: image.sizeBytes\n      }));\n    },\n\n    taintTableRows() {\n      return this.value.spec.taints || [];\n    },\n\n    graphVars() {\n      return { instance: `${ this.value.internalIp }:9796` };\n    }\n  },\n\n  methods: {\n    memoryFormatter(value) {\n      const formatOptions = {\n        addSuffix: false,\n        increment: 1024,\n      };\n\n      return formatSi(value, formatOptions);\n    },\n\n    mapToStatus(isOk) {\n      return isOk ? 'success' : 'error';\n    },\n\n    async loadMetrics() {\n      const schema = this.$store.getters['cluster/schemaFor'](METRIC.NODE);\n\n      if (schema) {\n        await this.$store.dispatch('cluster/find', {\n          type: METRIC.NODE,\n          id:   this.value.id,\n          opt:  { force: true }\n        });\n\n        this.$forceUpdate();\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div\n    v-else\n    class=\"node\"\n  >\n    <div class=\"spacer\" />\n    <div class=\"alerts\">\n      <Alert\n        class=\"mr-10\"\n        :status=\"pidPressureStatus\"\n        :message=\"t('node.detail.glance.pidPressure')\"\n      />\n      <Alert\n        class=\"mr-10\"\n        :status=\"diskPressureStatus\"\n        :message=\"t('node.detail.glance.diskPressure')\"\n      />\n      <Alert\n        class=\"mr-10\"\n        :status=\"memoryPressureStatus\"\n        :message=\"t('node.detail.glance.memoryPressure')\"\n      />\n      <Alert\n        :status=\"kubeletStatus\"\n        :message=\"t('node.detail.glance.kubelet')\"\n      />\n    </div>\n    <div class=\"mt-20 resources\">\n      <ConsumptionGauge\n        :resource-name=\"t('node.detail.glance.consumptionGauge.cpu')\"\n        :capacity=\"value.cpuCapacity\"\n        :used=\"value.cpuUsage\"\n      />\n      <ConsumptionGauge\n        :resource-name=\"t('node.detail.glance.consumptionGauge.memory')\"\n        :capacity=\"value.ramReserved\"\n        :used=\"value.ramUsage\"\n        :units=\"memoryUnits\"\n        :number-formatter=\"memoryFormatter\"\n      />\n      <ConsumptionGauge\n        :resource-name=\"t('node.detail.glance.consumptionGauge.pods')\"\n        :capacity=\"value.podCapacity\"\n        :used=\"value.podConsumed\"\n      />\n    </div>\n    <div class=\"spacer\" />\n    <ResourceTabs\n      v-model=\"value\"\n      :mode=\"mode\"\n    >\n      <Tab\n        name=\"pods\"\n        :label=\"t('node.detail.tab.pods')\"\n        :weight=\"4\"\n      >\n        <ResourceTable\n          key-field=\"_key\"\n          :headers=\"podTableHeaders\"\n          :rows=\"value.pods\"\n          :row-actions=\"false\"\n          :table-actions=\"false\"\n          :search=\"false\"\n        />\n      </Tab>\n      <Tab\n        v-if=\"showMetrics\"\n        :label=\"t('node.detail.tab.metrics')\"\n        name=\"node-metrics\"\n        :weight=\"3\"\n      >\n        <template #default=\"props\">\n          <DashboardMetrics\n            v-if=\"props.active\"\n            :detail-url=\"NODE_METRICS_DETAIL_URL\"\n            :summary-url=\"NODE_METRICS_SUMMARY_URL\"\n            :vars=\"graphVars\"\n            graph-height=\"825px\"\n          />\n        </template>\n      </Tab>\n      <Tab\n        name=\"info\"\n        :label=\"t('node.detail.tab.info.label')\"\n        class=\"bordered-table\"\n        :weight=\"2\"\n      >\n        <ResourceTable\n          key-field=\"_key\"\n          :headers=\"infoTableHeaders\"\n          :rows=\"infoTableRows\"\n          :row-actions=\"false\"\n          :table-actions=\"false\"\n          :show-headers=\"false\"\n          :search=\"false\"\n        />\n      </Tab>\n      <Tab\n        name=\"images\"\n        :label=\"t('node.detail.tab.images')\"\n        :weight=\"1\"\n      >\n        <ResourceTable\n          key-field=\"_key\"\n          :headers=\"imageTableHeaders\"\n          :rows=\"imageTableRows\"\n          :row-actions=\"false\"\n          :table-actions=\"false\"\n        />\n      </Tab>\n      <Tab\n        name=\"taints\"\n        :label=\"t('node.detail.tab.taints')\"\n        :weight=\"0\"\n      >\n        <ResourceTable\n          key-field=\"_key\"\n          :headers=\"taintTableHeaders\"\n          :rows=\"taintTableRows\"\n          :row-actions=\"false\"\n          :table-actions=\"false\"\n          :search=\"false\"\n        />\n      </Tab>\n    </ResourceTabs>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.resources {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  & > * {\n    width: 30%;\n  }\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;AACA,OAAAA,gBAAA;AACA,OAAAC,KAAA;AACA,OAAAC,aAAA;AACA,OAAAC,GAAA;AACA,SACAC,MAAA,EACAC,UAAA,EACAC,GAAA,EACAC,WAAA,EACAC,KAAA,QACA;AACA,OAAAC,YAAA;AACA,SAAAC,MAAA,EAAAC,GAAA;AACA,OAAAC,cAAA;AACA,SAAAC,QAAA,EAAAC,cAAA,EAAAC,KAAA;AACA,OAAAC,gBAAA;AACA,SAAAC,UAAA;AACA,SAAAC,kBAAA;AACA,OAAAC,OAAA;AACA,OAAAC,YAAA;AACA,SAAAC,UAAA,EAAAC,qBAAA;AAEA,IAAAC,uBAAA;AACA,IAAAC,wBAAA;AAEA;EACAC,IAAA;EAEAC,UAAA;IACAzB,KAAA,EAAAA,KAAA;IACAD,gBAAA,EAAAA,gBAAA;IACAgB,gBAAA,EAAAA,gBAAA;IACAG,OAAA,EAAAA,OAAA;IACAV,YAAA,EAAAA,YAAA;IACAN,GAAA,EAAAA,GAAA;IACAD,aAAA,EAAAA;EACA;EAEAyB,MAAA,GAAAf,cAAA,EAAAQ,YAAA;EAEAQ,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EAEAC,KAAA,WAAAA,MAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAAC,QAAA;MAAA,IAAAC,GAAA;MAAA,OAAAH,mBAAA,CAAAI,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YACAV,KAAA,CAAAW,WAAA,GAAAX,KAAA,CAAAY,MAAA,CAAAC,OAAA,8BAAApC,GAAA;YAEA,IAAAuB,KAAA,CAAAW,WAAA;cACA;cACAN,GAAA;gBAAA;gBACAS,UAAA,MAAA3B,UAAA;kBACA4B,IAAA;oBAAAC,KAAA;oBAAAC,GAAA;kBAAA;kBACAC,OAAA,EAAA9B,qBAAA,CAAA+B,iBAAA;oBACAH,KAAA;oBACArB,KAAA,EAAAK,KAAA,CAAAL,KAAA,CAAAyB;kBACA;gBACA;cACA;cAEApB,KAAA,CAAAY,MAAA,CAAAS,QAAA;gBAAAzB,IAAA,EAAAnB,GAAA;gBAAA4B,GAAA,EAAAA;cAAA;YACA;cACAL,KAAA,CAAAY,MAAA,CAAAS,QAAA;gBAAAzB,IAAA,EAAAnB;cAAA;YACA;YAAA+B,QAAA,CAAAE,IAAA;YAAA,OAEA1B,kBAAA,CAAAgB,KAAA,CAAAY,MAAA,EAAAZ,KAAA,CAAAsB,cAAA,CAAAF,EAAA,GAAA/B,uBAAA,EAAAC,wBAAA;UAAA;YAAAU,KAAA,CAAAuB,WAAA,GAAAf,QAAA,CAAAgB,IAAA;UAAA;UAAA;YAAA,OAAAhB,QAAA,CAAAiB,IAAA;QAAA;MAAA,GAAArB,OAAA;IAAA;EACA;EAEAsB,IAAA,WAAAA,KAAA;IACA,IAAAC,SAAA,QAAAf,MAAA,CAAAC,OAAA,sBAAApC,GAAA;IAEA;MACAmD,OAAA;QAAAC,GAAA;QAAAC,MAAA;MAAA;MACAC,gBAAA,GAAAC,aAAA,CAAAA,aAAA,KAEA5D,GAAA;QACA6D,KAAA;QACAC,KAAA;MAAA,IAAAF,aAAA,CAAAA,aAAA,KAGA1D,KAAA;QACA2D,KAAA;QACAE,WAAA;MAAA,GAEA;MACAC,iBAAA,GAAAJ,aAAA,CAAAA,aAAA,KACA3D,WAAA;QAAA6D,KAAA;MAAA,IAAAF,aAAA,CAAAA,aAAA,KACA7D,UAAA;QAAA+D,KAAA;MAAA;MAAA,CACA;MACAG,iBAAA,GACAjE,GAAA,EACAE,KAAA,EACAJ,MAAA,CACA;MACAoE,eAAA,OAAA1B,MAAA,CAAAC,OAAA,wBAAAc,SAAA;MACAtC,uBAAA,EAAAA,uBAAA;MACAC,wBAAA,EAAAA,wBAAA;MACAiC,WAAA;MACAZ,WAAA,EAAA4B;IACA;EACA;EAEAC,QAAA,EAAAR,aAAA,CAAAA,aAAA,KACAjD,UAAA;IACA0D,WAAA,WAAAA,YAAA;MACA,IAAAC,QAAA,GAAA9D,cAAA,MAAAe,KAAA,CAAAgD,WAAA;MAEA,UAAAC,MAAA,CAAA/D,KAAA,CAAA6D,QAAA;IACA;IAEAG,iBAAA,WAAAA,kBAAA;MACA,YAAAC,WAAA,MAAAnD,KAAA,CAAAoD,eAAA;IACA;IAEAC,kBAAA,WAAAA,mBAAA;MACA,YAAAF,WAAA,MAAAnD,KAAA,CAAAsD,gBAAA;IACA;IAEAC,oBAAA,WAAAA,qBAAA;MACA,YAAAJ,WAAA,MAAAnD,KAAA,CAAAwD,kBAAA;IACA;IAEAC,aAAA,WAAAA,cAAA;MACA,YAAAN,WAAA,MAAAnD,KAAA,CAAA0D,WAAA;IACA;IAEAC,aAAA,WAAAA,cAAA;MAAA,IAAAC,MAAA;MACA,OAAA1D,MAAA,CAAA2D,IAAA,MAAA7D,KAAA,CAAA8D,MAAA,CAAAC,QAAA,EACAC,GAAA,WAAAC,GAAA;QAAA;UACAA,GAAA,EAAAL,MAAA,CAAAM,CAAA,6BAAAjB,MAAA,CAAAgB,GAAA;UACAjE,KAAA,EAAA4D,MAAA,CAAA5D,KAAA,CAAA8D,MAAA,CAAAC,QAAA,CAAAE,GAAA;QACA;MAAA;IACA;IAEAE,cAAA,WAAAA,eAAA;MACA,IAAAC,MAAA,QAAApE,KAAA,CAAA8D,MAAA,CAAAM,MAAA;MAEA,OAAAA,MAAA,CAAAJ,GAAA,WAAAK,KAAA;QAAA;UACA;UACAzE,IAAA,EAAAyE,KAAA,CAAAC,KAAA,GAAAD,KAAA,CAAAC,KAAA,OAAAD,KAAA,CAAAC,KAAA;UACAC,SAAA,EAAAF,KAAA,CAAAE;QACA;MAAA;IACA;IAEAC,cAAA,WAAAA,eAAA;MACA,YAAAxE,KAAA,CAAAyE,IAAA,CAAAC,MAAA;IACA;IAEAC,SAAA,WAAAA,UAAA;MACA;QAAAC,QAAA,KAAA3B,MAAA,MAAAjD,KAAA,CAAA6E,UAAA;MAAA;IACA;EAAA,EACA;EAEAC,OAAA;IACAC,eAAA,WAAAA,gBAAA/E,KAAA;MACA,IAAAgF,aAAA;QACAC,SAAA;QACAC,SAAA;MACA;MAEA,OAAAlG,QAAA,CAAAgB,KAAA,EAAAgF,aAAA;IACA;IAEA7B,WAAA,WAAAA,YAAAgC,IAAA;MACA,OAAAA,IAAA;IACA;IAEAC,WAAA,WAAAA,YAAA;MAAA,IAAAC,MAAA;MAAA,OAAA/E,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAA8E,SAAA;QAAA,IAAAC,MAAA;QAAA,OAAAhF,mBAAA,CAAAI,IAAA,UAAA6E,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA3E,IAAA,GAAA2E,SAAA,CAAA1E,IAAA;YAAA;cACAwE,MAAA,GAAAF,MAAA,CAAApE,MAAA,CAAAC,OAAA,sBAAArC,MAAA,CAAA6G,IAAA;cAAA,KAEAH,MAAA;gBAAAE,SAAA,CAAA1E,IAAA;gBAAA;cAAA;cAAA0E,SAAA,CAAA1E,IAAA;cAAA,OACAsE,MAAA,CAAApE,MAAA,CAAAS,QAAA;gBACAzB,IAAA,EAAApB,MAAA,CAAA6G,IAAA;gBACAjE,EAAA,EAAA4D,MAAA,CAAArF,KAAA,CAAAyB,EAAA;gBACAf,GAAA;kBAAAiF,KAAA;gBAAA;cACA;YAAA;cAEAN,MAAA,CAAAO,YAAA;YAAA;YAAA;cAAA,OAAAH,SAAA,CAAA3D,IAAA;UAAA;QAAA,GAAAwD,QAAA;MAAA;IAEA;EACA;AACA","ignoreList":[]}]}