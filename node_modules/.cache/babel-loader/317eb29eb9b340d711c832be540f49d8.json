{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/list/management.cattle.io.feature.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/list/management.cattle.io.feature.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapState","mapGetters","AsyncButton","AppModal","Card","ResourceTable","Banner","LabeledInput","MANAGEMENT","SETTING","ResourceFetch","components","mixins","props","resource","type","String","required","schema","Object","useQueryParamsForSimpleFiltering","Boolean","default","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$serverUrlSettin","wrap","_callee$","_context","prev","next","$fetchType","serverUrlSetting","$store","getters","SERVER_URL","value","serverUrl","noUrlSet","window","location","origin","stop","data","update","updateMode","error","enabling","restart","waiting","timer","showModal","computed","_objectSpread","t","filteredRows","rows","filter","x","name","promptForUrl","_this$update","id","enableRowActions","_schema$resourceMetho","FEATURE","resourceMethods","includes","$loadingResources","loadIndeterminate","watch","showPromptUpdate","show","toUpdate","neu","Array","isArray","restartRequired","enabled","methods","close","commit","clearTimeout","toggleFlag","btnCB","doToggleWithRestart","doToggle","_this2","_callee2","_callee2$","_context2","spec","save","t0","err","waitForBackend","_this3","url","concat","setTimeout","_callee3","response","_callee3$","_context3","$axios","get","timeout","sent","status","dispatch","opt","force","saveUrl","_this4","_callee4","_callee4$","_context4"],"sources":["node_modules/@rancher/shell/list/management.cattle.io.feature.vue"],"sourcesContent":["<script>\nimport { mapState, mapGetters } from 'vuex';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport AppModal from '@shell/components/AppModal';\nimport { Card } from '@components/Card';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport { Banner } from '@components/Banner';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { MANAGEMENT } from '@shell/config/types';\nimport { SETTING } from '@shell/config/settings';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\n\nexport default {\n  components: {\n    AsyncButton,\n    Banner,\n    Card,\n    ResourceTable,\n    LabeledInput,\n    AppModal,\n  },\n  mixins: [ResourceFetch],\n  props:  {\n    resource: {\n      type:     String,\n      required: true,\n    },\n\n    schema: {\n      type:     Object,\n      required: true,\n    },\n\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  async fetch() {\n    await this.$fetchType(this.resource);\n\n    this.serverUrlSetting = this.$store.getters['management/byId'](MANAGEMENT.SETTING, SETTING.SERVER_URL);\n\n    if (this.serverUrlSetting?.value) {\n      this.serverUrl = this.serverUrlSetting.value;\n    } else {\n      this.noUrlSet = true;\n      this.serverUrl = window.location.origin;\n    }\n  },\n\n  data() {\n    return {\n      update:           [],\n      updateMode:       'activate',\n      error:            null,\n      enabling:         false,\n      restart:          false,\n      waiting:          false,\n      timer:            null,\n      serverUrlSetting: {},\n      serverUrl:        '',\n      noUrlSet:         false,\n      showModal:        false,\n    };\n  },\n\n  computed: {\n    ...mapState('action-menu', ['showPromptUpdate', 'toUpdate']),\n    ...mapGetters({ t: 'i18n/t' }),\n\n    filteredRows() {\n      return this.rows.filter((x) => x.name !== 'fleet');\n    },\n\n    promptForUrl() {\n      return this.update?.id === 'multi-cluster-management' && this.noUrlSet;\n    },\n\n    enableRowActions() {\n      const schema = this.$store.getters[`management/schemaFor`](MANAGEMENT.FEATURE);\n\n      return schema?.resourceMethods?.includes('PUT');\n    },\n  },\n\n  $loadingResources() {\n    // results are filtered so we wouldn't get the correct count on indicator...\n    return { loadIndeterminate: true };\n  },\n\n  watch: {\n    showPromptUpdate(show) {\n      if (show) {\n        this.showModal = true;\n      } else {\n        this.showModal = false;\n      }\n    },\n\n    toUpdate(neu) {\n      // Only support updating one at a time - bulk does not make sense, as they may\n      // be in different states and with different restart values\n      this.update = Array.isArray(neu) ? neu[0] : neu;\n      if (this.update) {\n        this.restart = this.update.restartRequired;\n        // If the value is currently false, then we will be enabling it\n        this.enabling = !this.update.enabled;\n        this.updateMode = this.enabling ? 'activate' : 'deactivate';\n      }\n    }\n  },\n\n  methods: {\n    close() {\n      this.$store.commit('action-menu/togglePromptUpdate');\n\n      if (this.timer) {\n        clearTimeout(this.timer);\n        this.timer = null;\n      }\n    },\n\n    toggleFlag(btnCB) {\n      if (this.restart) {\n        this.doToggleWithRestart(btnCB);\n      } else {\n        this.doToggle(btnCB);\n      }\n    },\n\n    async doToggle(btnCB) {\n      this.error = null;\n      try {\n        this.update.spec.value = !this.update.enabled;\n        await this.update.save();\n        btnCB(true);\n        this.close();\n      } catch (err) {\n        this.error = err;\n        btnCB(false);\n      }\n    },\n\n    doToggleWithRestart(btnCB) {\n      this.error = null;\n      try {\n        this.update.spec.value = !this.update.enabled;\n        // await can go back in when backend returns from the save before restarting\n        this.update.save();\n      } catch (err) {}\n\n      this.waitForBackend(btnCB, this.update.id);\n      this.waiting = true;\n    },\n\n    waitForBackend(btnCB, id) {\n      const url = `/v3/features/${ id }`;\n\n      this.timer = setTimeout(async() => {\n        try {\n          const response = await this.$axios.get(url, { timeout: 5000 });\n\n          if (response?.status === 200) {\n            await this.$store.dispatch('management/findAll', { type: this.resource, opt: { force: true } });\n            btnCB(true);\n            this.close();\n            this.waiting = false;\n          }\n        } catch (e) {}\n\n        if (this.waiting) {\n          this.waitForBackend(btnCB, id);\n        }\n      }, 5000);\n    },\n\n    async saveUrl(btnCB) {\n      try {\n        this.serverUrlSetting.value = this.serverUrl;\n        await this.serverUrlSetting.save();\n        btnCB(true);\n      } catch (err) {\n        this.error = err;\n        btnCB(false);\n      }\n    },\n  }\n};\n</script>\n\n<template>\n  <div>\n    <ResourceTable\n      :schema=\"schema\"\n      :rows=\"filteredRows\"\n      :row-actions=\"enableRowActions\"\n      :loading=\"loading\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n    >\n      <template\n        slot=\"cell:name\"\n        slot-scope=\"scope\"\n      >\n        <div class=\"feature-name\">\n          <div>{{ scope.row.nameDisplay }}</div>\n          <i\n            v-if=\"scope.row.status.lockedValue !== null\"\n            class=\"icon icon-lock\"\n          />\n        </div>\n      </template>\n    </ResourceTable>\n    <app-modal\n      v-if=\"showModal\"\n      class=\"update-modal\"\n      name=\"toggleFlag\"\n      :width=\"350\"\n      height=\"auto\"\n      styles=\"max-height: 100vh;\"\n      :click-to-close=\"!restart || !waiting\"\n      @close=\"close\"\n    >\n      <Card\n        v-if=\"!waiting\"\n        class=\"prompt-update\"\n        :show-highlight-border=\"false\"\n      >\n        <h4\n          slot=\"title\"\n          class=\"text-default-text\"\n        >\n          Are you sure?\n        </h4>\n        <div slot=\"body\">\n          <div\n            v-if=\"update\"\n            class=\"mb-10\"\n          >\n            <div v-if=\"enabling\">\n              <span>\n                {{ t('featureFlags.promptActivate', {flag: update.id}) }}\n              </span>\n              <div\n                v-if=\"promptForUrl\"\n                class=\"mt-10\"\n              >\n                <span> {{ t('featureFlags.requiresSetting') }}</span>\n                <div\n                  :style=\"{'align-items':'center'}\"\n                  class=\"row mt-10\"\n                >\n                  <LabeledInput\n                    v-model=\"serverUrl\"\n                    :label=\"t('setup.serverUrl.label')\"\n                  />\n                  <div class=\"col pl-5\">\n                    <AsyncButton @click=\"saveUrl\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <span v-else>\n              {{ t('featureFlags.promptDeactivate', {flag: update.id}) }}\n            </span>\n            <Banner\n              v-if=\"restart\"\n              color=\"warning\"\n              :label=\"t('featureFlags.restartRequired')\"\n            />\n          </div>\n          <div class=\"text-error mb-10\">\n            {{ error }}\n          </div>\n        </div>\n        <template #actions>\n          <button\n            class=\"btn role-secondary\"\n            @click=\"close\"\n          >\n            {{ t('generic.cancel') }}\n          </button>\n          <AsyncButton\n            :disabled=\"promptForUrl && !serverUrlSetting.value\"\n            :mode=\"updateMode\"\n            class=\"btn bg-error ml-10\"\n            @click=\"toggleFlag\"\n          />\n        </template>\n      </Card>\n      <Card\n        v-else\n        class=\"prompt-update\"\n        :show-highlight-border=\"false\"\n      >\n        <h4\n          slot=\"title\"\n          class=\"text-default-text\"\n        >\n          {{ t('featureFlags.restart.title') }}\n        </h4>\n        <div\n          slot=\"body\"\n          class=\"waiting\"\n        >\n          <p>{{ t('featureFlags.restart.wait') }}</p>\n          <span class=\"restarting-icon\">\n            <i class=\" icon icon-spinner icon-spin\" />\n          </span>\n        </div>\n        <template #actions>\n          <button\n            class=\"btn role-secondary\"\n            @click=\"close\"\n          >\n            {{ t('generic.cancel') }}\n          </button>\n        </template>\n      </Card>\n    </app-modal>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n  .prompt-update {\n    &.card-container {\n      box-shadow: none;\n    }\n\n    ::v-deep .card-actions {\n      display: flex;\n      justify-content: center;\n    }\n  }\n\n  .waiting {\n    text-align: center;\n    font-size: 14px;\n    margin: 10px 0;\n\n    p {\n      line-height: 20px;;\n    }\n  }\n\n  .restarting-icon {\n    display: flex;\n    justify-content: center;\n    margin-top: 10px;\n\n    > I {\n    font-size: 24px;\n    }\n  }\n\n  .feature-name {\n    align-items: center;\n    display: flex;\n\n    > i {\n      margin-left: 10px;\n    }\n  }\n</style>\n"],"mappings":"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","ignoreList":[]}]}