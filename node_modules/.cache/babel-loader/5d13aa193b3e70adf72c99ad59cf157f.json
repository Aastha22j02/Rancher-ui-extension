{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/nav/NamespaceFilter.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/nav/NamespaceFilter.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapGetters","NAMESPACE_FILTERS","ALL_NAMESPACES","NAMESPACE","MANAGEMENT","sortBy","isArray","addObjects","findBy","filterBy","NAMESPACE_FILTER_ALL_USER","ALL_USER","NAMESPACE_FILTER_ALL","ALL","NAMESPACE_FILTER_ALL_SYSTEM","ALL_SYSTEM","NAMESPACE_FILTER_ALL_ORPHANS","ALL_ORPHANS","NAMESPACE_FILTER_NAMESPACED_YES","NAMESPACED_YES","NAMESPACE_FILTER_NAMESPACED_NO","NAMESPACED_NO","createNamespaceFilterKey","NAMESPACE_FILTER_KINDS","NAMESPACE_FILTER_NS_FULL_PREFIX","NAMESPACE_FILTER_P_FULL_PREFIX","KEY","pAndNFiltering","SETTING","forcedNamespaceValidTypes","DIVIDER","PROJECT","data","isOpen","filter","hidden","total","activeElement","cachedFiltered","namespaceFilterMode","undefined","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$store","dispatch","type","id","UI_PERFORMANCE","calcNamespaceFilterMode","stop","computed","_objectSpread","hasFilter","length","filtered","_this2","_out","out","options","item","_this2$namespaceFilte","includes","kind","validCustomType","find","prefix","startsWith","value","findIndex","v","SPECIAL","label","toLowerCase","splice","mapped","reduce","m","forEach","i","_this2$namespaceFilte2","selected","elementId","replace","enabled","isLastSelected","kindAllowed","f","isNotInProjectGroup","tooltip","concat","content","placement","delay","show","key","getters","currentProduct","_this$currentProduct","_this$currentProduct2","_this$currentProduct3","_this3","t","params","$route","resource","notFilterNamespaces","notFilterNamespace","customNamespaceFilter","inStore","allNamespaces","commit","addNamespace","divider","hideSystemResources","namespaces","filterNamespaces","cluster","projects","p","_this3$currentProduct","isSystem","spec","clusterName","projectsById","namespacesByProject","firstProject","_iterator","_createForOfIteratorHelper","_step","s","n","done","project","metadata","name","err","e","_iterator2","_step2","namespace","projectId","entry","push","_iterator3","_step3","nameDisplay","forThisProject","orphans","disabled","map","isSingleSpecial","get","prefs","values","defaultOption","filters","x","set","neu","_this4","old","slice","last","lastIsSpecial","hadUser","hadAll","ids","$nextTick","beforeDestroy","removeCloseKeyHandler","mounted","layout","watch","methods","isObscure","_this5","$refs","container","overflow","scrollWidth","offsetWidth","dropdown","maxWidth","itemCount","currentWidth","itemWidth","style","visibility","addCloseKeyHandler","document","addEventListener","closeKeyHandler","removeEventListener","keyCode","ESCAPE","close","itemKeyHandler","opt","DOWN","preventDefault","stopPropagation","down","UP","up","SPACE","CR","selectOption","target","focus","inputKeyHandler","TAB","blur","mouseOver","event","_event$path","el","path","classList","contains","setActiveElement","input","exising","c","children","_next","_next2","nextSibling","_prev","_prev2","previousSibling","toggle","open","_this6","clear","option","_this$namespaceFilter","_this7","current","index","exists","handleValueMouseDown","ns","removeOption","_this$currentProduct4","isEnabled"],"sources":["node_modules/@rancher/shell/components/nav/NamespaceFilter.vue"],"sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport { NAMESPACE_FILTERS, ALL_NAMESPACES } from '@shell/store/prefs';\nimport { NAMESPACE, MANAGEMENT } from '@shell/config/types';\nimport { sortBy } from '@shell/utils/sort';\nimport { isArray, addObjects, findBy, filterBy } from '@shell/utils/array';\nimport {\n  NAMESPACE_FILTER_ALL_USER as ALL_USER,\n  NAMESPACE_FILTER_ALL as ALL,\n  NAMESPACE_FILTER_ALL_SYSTEM as ALL_SYSTEM,\n  NAMESPACE_FILTER_ALL_ORPHANS as ALL_ORPHANS,\n  NAMESPACE_FILTER_NAMESPACED_YES as NAMESPACED_YES,\n  NAMESPACE_FILTER_NAMESPACED_NO as NAMESPACED_NO,\n  createNamespaceFilterKey,\n  NAMESPACE_FILTER_KINDS,\n  NAMESPACE_FILTER_NS_FULL_PREFIX,\n  NAMESPACE_FILTER_P_FULL_PREFIX,\n} from '@shell/utils/namespace-filter';\nimport { KEY } from '@shell/utils/platform';\nimport pAndNFiltering from '@shell/utils/projectAndNamespaceFiltering.utils';\nimport { SETTING } from '@shell/config/settings';\n\nconst forcedNamespaceValidTypes = [NAMESPACE_FILTER_KINDS.DIVIDER, NAMESPACE_FILTER_KINDS.PROJECT, NAMESPACE_FILTER_KINDS.NAMESPACE];\n\nexport default {\n\n  data() {\n    return {\n      isOpen:              false,\n      filter:              '',\n      hidden:              0,\n      total:               0,\n      activeElement:       null,\n      cachedFiltered:      [],\n      NAMESPACE_FILTER_KINDS,\n      namespaceFilterMode: undefined,\n    };\n  },\n\n  async fetch() {\n    // Determine if filtering by specific namespaces/projects is required\n    // This is done once and up front\n    // - it doesn't need to be re-active\n    // - added it as a computed caused massive amounts of churn around the `filtered` watcher\n    await this.$store.dispatch('management/find', { type: MANAGEMENT.SETTING, id: SETTING.UI_PERFORMANCE });\n    this.namespaceFilterMode = this.calcNamespaceFilterMode();\n  },\n\n  computed: {\n    ...mapGetters(['currentProduct']),\n\n    hasFilter() {\n      return this.filter.length > 0;\n    },\n\n    filtered() {\n      let out = this.options;\n\n      out = out.filter((item) => {\n        // Filter out anything not applicable to singleton selection\n        if (this.namespaceFilterMode?.length) {\n          // We always show dividers, projects and namespaces\n          if (!forcedNamespaceValidTypes.includes(item.kind)) {\n            const validCustomType = this.namespaceFilterMode.find((prefix) => item.kind.startsWith(prefix));\n\n            if (!validCustomType) {\n              // Hide any invalid option that's not selected\n              return this.value.findIndex((v) => v.id === item.id) >= 0;\n            }\n          }\n        }\n\n        // Filter by the current filter\n        if (this.hasFilter) {\n          return item.kind !== NAMESPACE_FILTER_KINDS.SPECIAL && item.label.toLowerCase().includes(this.filter.toLowerCase());\n        }\n\n        return true;\n      });\n\n      if (out?.[0]?.kind === NAMESPACE_FILTER_KINDS.DIVIDER) {\n        out.splice(0, 1);\n      }\n\n      const mapped = this.value.reduce((m, v) => {\n        m[v.id] = v;\n\n        return m;\n      }, {});\n\n      // Mark all of the selected options\n      out.forEach((i) => {\n        i.selected = !!mapped[i.id] || (i.id === ALL && this.value && this.value.length === 0);\n        i.elementId = (i.id || '').replace('://', '_');\n        i.enabled = true;\n        // Are we in restricted resource type mode, if so is this an allowed type?\n        if (this.namespaceFilterMode?.length) {\n          const isLastSelected = i.selected && (i.id === ALL || this.value.length === 1);\n          const kindAllowed = this.namespaceFilterMode.find((f) => f === i.kind);\n          const isNotInProjectGroup = i.id === ALL_ORPHANS;\n\n          i.enabled = (!isLastSelected && kindAllowed) && !isNotInProjectGroup;\n        }\n      });\n\n      return out;\n    },\n\n    tooltip() {\n      if (this.isOpen || (this.total + this.hidden) === 0) {\n        return null;\n      }\n\n      let tooltip = '<div class=\"ns-filter-tooltip\">';\n\n      (this.value || []).forEach((v) => {\n        tooltip += `<div class=\"ns-filter-tooltip-item\"><div>${ v.label }</div></div>`;\n      });\n\n      tooltip += '</div>';\n\n      return {\n        content:   tooltip,\n        placement: 'bottom',\n        delay:     { show: 500 }\n      };\n    },\n\n    key() {\n      return createNamespaceFilterKey(this.$store.getters['clusterId'], this.currentProduct);\n    },\n\n    options() {\n      const t = this.$store.getters['i18n/t'];\n      let out = [];\n\n      const params = { ...this.$route.params };\n      const resource = params.resource;\n      // Sometimes, different pages may have different namespaces to filter\n      const notFilterNamespaces = this.$store.getters[`type-map/optionsFor`](resource).notFilterNamespace || [];\n\n      // TODO: Add return info\n      if (this.currentProduct?.customNamespaceFilter && this.currentProduct?.inStore) {\n        // Sometimes the component can show before the 'currentProduct' has caught up, so access the product via the getter rather\n        // than caching it in the `fetch`\n\n        // The namespace display on the list and edit pages should be the same as in the namespaceFilter component\n        if (this.$store.getters[`${ this.currentProduct.inStore }/filterNamespace`]) {\n          const allNamespaces = this.$store.getters[`${ this.currentProduct.inStore }/filterNamespace`](notFilterNamespaces);\n\n          this.$store.commit('changeAllNamespaces', allNamespaces);\n        }\n\n        return this.$store.getters[`${ this.currentProduct.inStore }/namespaceFilterOptions`]({\n          addNamespace,\n          divider,\n          notFilterNamespaces\n        });\n      }\n\n      // TODO: Add return info\n      if (!this.currentProduct?.hideSystemResources) {\n        out = [\n          {\n            id:    ALL,\n            kind:  NAMESPACE_FILTER_KINDS.SPECIAL,\n            label: t('nav.ns.all'),\n          },\n          {\n            id:    ALL_USER,\n            kind:  NAMESPACE_FILTER_KINDS.SPECIAL,\n            label: t('nav.ns.user'),\n          },\n          {\n            id:    ALL_SYSTEM,\n            kind:  NAMESPACE_FILTER_KINDS.SPECIAL,\n            label: t('nav.ns.system'),\n          },\n          {\n            id:    NAMESPACED_YES,\n            kind:  NAMESPACE_FILTER_KINDS.SPECIAL,\n            label: t('nav.ns.namespaced'),\n          },\n          {\n            id:    NAMESPACED_NO,\n            kind:  NAMESPACE_FILTER_KINDS.SPECIAL,\n            label: t('nav.ns.clusterLevel'),\n          },\n        ];\n\n        divider(out);\n      }\n\n      const inStore = this.$store.getters['currentStore'](NAMESPACE);\n\n      if (!inStore) {\n        return out;\n      }\n\n      let namespaces = sortBy(\n        this.$store.getters[`${ inStore }/all`](NAMESPACE),\n        ['nameDisplay']\n      );\n\n      namespaces = this.filterNamespaces(namespaces);\n\n      // isRancher = mgmt schemas are loaded and there's a project schema\n      if (this.$store.getters['isRancher']) {\n        const cluster = this.$store.getters['currentCluster'];\n        let projects = this.$store.getters['management/all'](\n          MANAGEMENT.PROJECT\n        );\n\n        projects = projects.filter((p) => {\n          return this.currentProduct?.hideSystemResources ? !p.isSystem && p.spec.clusterName === cluster.id : p.spec.clusterName === cluster.id;\n        });\n        projects = sortBy(filterBy(projects, 'spec.clusterName', cluster.id), [\n          'nameDisplay',\n        ]);\n        const projectsById = {};\n        const namespacesByProject = {};\n        let firstProject = true;\n\n        namespacesByProject[null] = []; // For namespaces not in a project\n        for (const project of projects) {\n          projectsById[project.metadata.name] = project;\n        }\n\n        for (const namespace of namespaces) {\n          let projectId = namespace.projectId;\n\n          if (!projectId || !projectsById[projectId]) {\n            // If there's a projectId but that project doesn't exist, treat it like no project\n            projectId = null;\n          }\n\n          let entry = namespacesByProject[projectId];\n\n          if (!entry) {\n            entry = [];\n            namespacesByProject[namespace.projectId] = entry;\n          }\n          entry.push(namespace);\n        }\n\n        for (const project of projects) {\n          const id = project.metadata.name;\n\n          if (firstProject) {\n            firstProject = false;\n          } else {\n            divider(out);\n          }\n\n          out.push({\n            id:    `${ NAMESPACE_FILTER_P_FULL_PREFIX }${ id }`,\n            kind:  NAMESPACE_FILTER_KINDS.PROJECT,\n            label: t('nav.ns.project', { name: project.nameDisplay }),\n          });\n\n          const forThisProject = namespacesByProject[id] || [];\n\n          addNamespace(out, forThisProject);\n        }\n\n        const orphans = namespacesByProject[null];\n\n        if (orphans.length) {\n          if (!firstProject) {\n            divider(out);\n          }\n\n          out.push({\n            id:       ALL_ORPHANS,\n            kind:     NAMESPACE_FILTER_KINDS.PROJECT,\n            label:    t('nav.ns.orphan'),\n            disabled: true,\n          });\n\n          addNamespace(out, orphans);\n        }\n      } else {\n        addNamespace(out, namespaces);\n      }\n\n      return out;\n\n      function addNamespace(out, namespaces) {\n        if (!isArray(namespaces)) {\n          namespaces = [namespaces];\n        }\n\n        addObjects(\n          out,\n          namespaces.map((namespace) => {\n            return {\n              id:    `${ NAMESPACE_FILTER_NS_FULL_PREFIX }${ namespace.id }`,\n              kind:  NAMESPACE_FILTER_KINDS.NAMESPACE,\n              label: t('nav.ns.namespace', { name: namespace.nameDisplay }),\n            };\n          })\n        );\n      }\n\n      function divider(out) {\n        out.push({\n          kind:     NAMESPACE_FILTER_KINDS.DIVIDER,\n          label:    `Divider ${ out.length }`,\n          disabled: true,\n        });\n      }\n    },\n\n    isSingleSpecial() {\n      return this.value && this.value.length === 1 && this.value[0].kind === NAMESPACE_FILTER_KINDS.SPECIAL;\n    },\n\n    value: {\n      get() {\n        // Use last picked filter from user preferences\n        const prefs = this.$store.getters['prefs/get'](NAMESPACE_FILTERS);\n        const values = prefs && prefs[this.key] ? prefs[this.key] : this.defaultOption();\n        const options = this.options;\n\n        // Remove values that are not valid options\n        const filters = values\n          .map((value) => {\n            return findBy(options, 'id', value);\n          })\n          .filter((x) => !!x);\n\n        return filters;\n      },\n\n      set(neu) {\n        const old = (this.value || []).slice();\n\n        neu = neu.filter((x) => !!x.id);\n\n        const last = neu[neu.length - 1];\n        const lastIsSpecial = last?.kind === NAMESPACE_FILTER_KINDS.SPECIAL;\n        const hadUser = !!old.find((x) => x.id === ALL_USER);\n        const hadAll = !!old.find((x) => x.id === ALL);\n\n        if (lastIsSpecial) {\n          neu = [last];\n        }\n\n        if (neu.length > 1) {\n          neu = neu.filter((x) => x.kind !== NAMESPACE_FILTER_KINDS.SPECIAL);\n        }\n\n        if (neu.find((x) => x.id === 'all')) {\n          neu = [];\n        }\n\n        let ids;\n\n        // If there was something selected and you remove it, go back to user by default\n        // Unless it was user or all\n        if (neu.length === 0 && !hadUser && !hadAll) {\n          ids = this.defaultOption();\n        } else {\n          ids = neu.map((x) => x.id);\n        }\n\n        this.$nextTick(() => {\n          this.$store.dispatch('switchNamespaces', {\n            ids,\n            key: this.key\n          });\n        });\n      },\n    }\n  },\n\n  beforeDestroy() {\n    this.removeCloseKeyHandler();\n  },\n\n  mounted() {\n    this.layout();\n  },\n\n  watch: {\n    value(neu) {\n      this.layout();\n    },\n\n    /**\n     * When there are thousands of entries certain actions (drop down opened, selection changed, etc) take a long time to complete (upwards\n     * of 5 seconds)\n     *\n     * This is caused by churn of the filtered and options computed properties causing multiple renders for each action.\n     *\n     * To break this multiple-render per cycle behaviour detatch `filtered` from the value used in `v-for`.\n     *\n     */\n    filtered(neu) {\n      if (!!neu) {\n        this.cachedFiltered = neu;\n      }\n    }\n  },\n\n  methods: {\n    filterNamespaces(namespaces) {\n      if (this.$store.getters['prefs/get'](ALL_NAMESPACES)) {\n        // If all namespaces options are turned on in the user preferences,\n        // return all namespaces including system namespaces and RBAC\n        // management namespaces.\n        return namespaces;\n      }\n\n      return namespaces.filter((namespace) => {\n        // Otherwise only filter out obscure namespaces, such as namespaces\n        // that Rancher uses to manage RBAC for projects, which should not be\n        // edited or deleted by Rancher users.\n        return !namespace.isObscure;\n      });\n    },\n    // Layout the content in the dropdown box to best use the space to show the selection\n    layout() {\n      this.$nextTick(() => {\n        // One we have re-rendered, see what we can fit in the control to show the selected namespaces\n        if (this.$refs.values) {\n          const container = this.$refs.values;\n          const overflow = container.scrollWidth > container.offsetWidth;\n          let hidden = 0;\n\n          const dropdown = this.$refs.dropdown;\n          // Remove padding and dropdown arrow size\n          const maxWidth = dropdown.offsetWidth - 20 - 24;\n\n          // If we are overflowing, then allow some space for the +N indicator\n          const itemCount = this.$refs.value ? this.$refs.value.length : 0;\n          let currentWidth = 0;\n          let show = true;\n\n          this.total = 0;\n\n          for (let i = 0; i < itemCount; i++) {\n            const item = this.$refs.value[i];\n            let itemWidth = item.offsetWidth + 10;\n\n            // If this is the first item and we have overflow then add on some space for the +N\n            if (i === 0 && overflow) {\n              itemWidth += 40;\n            }\n\n            currentWidth += itemWidth;\n\n            if (show) {\n              if (i === 0) {\n                // Can't even fit the first item in\n                if (itemWidth > maxWidth) {\n                  show = false;\n                  this.total = this.value.length;\n                }\n              } else {\n                show = currentWidth < maxWidth;\n              }\n            }\n\n            hidden += show ? 0 : 1;\n            item.style.visibility = show ? 'visible' : 'hidden';\n          }\n\n          this.hidden = this.total > 0 ? 0 : hidden;\n        }\n      });\n    },\n    addCloseKeyHandler() {\n      document.addEventListener('keyup', this.closeKeyHandler);\n    },\n    removeCloseKeyHandler() {\n      document.removeEventListener('keyup', this.closeKeyHandler);\n    },\n    closeKeyHandler(e) {\n      if (e.keyCode === KEY.ESCAPE ) {\n        this.close();\n      }\n    },\n    // Keyboard support\n    itemKeyHandler(e, opt) {\n      if (e.keyCode === KEY.DOWN ) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.down();\n      } else if (e.keyCode === KEY.UP ) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.up();\n      } else if (e.keyCode === KEY.SPACE || e.keyCode === KEY.CR) {\n        if (this.namespaceFilterMode && !opt.enabled) {\n          return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        this.selectOption(opt);\n        e.target.focus();\n      }\n    },\n    inputKeyHandler(e) {\n      switch (e.keyCode) {\n      case KEY.DOWN:\n        e.preventDefault();\n        e.stopPropagation();\n        this.down(true);\n        break;\n      case KEY.TAB:\n        // Tab out of the input box\n        this.close();\n        e.target.blur();\n        break;\n      case KEY.CR:\n        if (this.filtered.length === 1) {\n          this.selectOption(this.filtered[0]);\n          this.filter = '';\n        }\n        break;\n      }\n    },\n    mouseOver(event) {\n      const el = event?.path?.find((e) => e.classList.contains('ns-option'));\n\n      this.activeElement = el;\n    },\n    setActiveElement(el) {\n      if (!el?.focus) {\n        return;\n      }\n\n      el.focus();\n      this.activeElement = null;\n    },\n    down(input) {\n      const exising = this.activeElement || document.activeElement;\n\n      // Focus the first element in the list\n      if (input || !exising) {\n        if (this.$refs.options) {\n          const c = this.$refs.options.children;\n\n          if (c && c.length > 0) {\n            this.setActiveElement(c[0]);\n          }\n        }\n      } else {\n        let next = exising.nextSibling;\n\n        if (next?.children?.length) {\n          const item = next.children[0];\n\n          // Skip over dividers (assumes we don't have two dividers next to each other)\n          if (item.classList.contains('ns-divider')) {\n            next = next.nextSibling;\n          }\n        }\n\n        if (next?.focus) {\n          this.setActiveElement(next);\n        }\n      }\n    },\n    up() {\n      if (document.activeElement) {\n        let prev = document.activeElement.previousSibling;\n\n        if (prev?.children?.length) {\n          const item = prev.children[0];\n\n          if (item.classList.contains('ns-divider')) {\n            prev = prev.previousSibling;\n          }\n        }\n\n        if (prev?.focus) {\n          this.setActiveElement(prev);\n        }\n      }\n    },\n    toggle() {\n      if (this.isOpen) {\n        this.close();\n      } else {\n        this.open();\n      }\n    },\n    open() {\n      this.isOpen = true;\n      this.$nextTick(() => {\n        this.$refs.filter.focus();\n      });\n      this.addCloseKeyHandler();\n      this.layout();\n    },\n    close() {\n      this.isOpen = false;\n      this.activeElement = null;\n      this.removeCloseKeyHandler();\n      this.layout();\n    },\n    clear() {\n      this.value = [];\n    },\n    selectOption(option) {\n      // Ignore click for a divider\n      if (option.kind === NAMESPACE_FILTER_KINDS.DIVIDER) {\n        return;\n      }\n\n      const current = this.value;\n\n      // Remove invalid\n      if (!!this.namespaceFilterMode?.length) {\n        this.value.forEach((v) => {\n          if (!this.namespaceFilterMode.find((f) => f === v.kind)) {\n            const index = current.findIndex((c) => c.id === v.id);\n\n            current.splice(index, 1);\n          }\n        });\n      }\n\n      const exists = current.findIndex((v) => v.id === option.id);\n\n      // Remove if it exists (or always add if in singleton mode - we've reset the list above)\n      if (exists !== -1) {\n        current.splice(exists, 1);\n      } else {\n        current.push(option);\n      }\n\n      this.value = current;\n\n      if (document.activeElement) {\n        document.activeElement.blur();\n      }\n    },\n    handleValueMouseDown(ns, event) {\n      this.removeOption(ns, event);\n\n      if (this.value.length === 0) {\n        this.open();\n      }\n    },\n\n    removeOption(ns, event) {\n      this.selectOption(ns);\n      event.preventDefault();\n      event.stopPropagation();\n    },\n\n    defaultOption() {\n      // Note - This is one place where a default ns/project filter value is provided (ALL_USER)\n      // There's also..\n      // - dashboard root store `loadCluster` --> when `updateNamespaces` is dispatched\n      // - harvester root store `loadCluster` --> when `updateNamespaces` is dispatched (can be discarded)\n      // Due to this, we can't really set a nicer default when forced ns/project filtering is on (ALL_USER is invalid)\n      if (this.currentProduct?.customNamespaceFilter) {\n        return [];\n      }\n\n      return [ALL_USER];\n    },\n\n    calcNamespaceFilterMode() {\n      if (pAndNFiltering.isEnabled(this.$store.getters)) {\n        return [NAMESPACE_FILTER_KINDS.NAMESPACE, NAMESPACE_FILTER_KINDS.PROJECT];\n      }\n\n      return null;\n    },\n  }\n};\n</script>\n\n<template>\n  <div\n    v-if=\"!$fetchState.pending\"\n    class=\"ns-filter\"\n    data-testid=\"namespaces-filter\"\n    tabindex=\"0\"\n    @focus=\"open()\"\n  >\n    <div\n      v-if=\"isOpen\"\n      class=\"ns-glass\"\n      @click=\"close()\"\n    />\n\n    <!-- Select Dropdown control -->\n    <div\n      ref=\"dropdown\"\n      class=\"ns-dropdown\"\n      data-testid=\"namespaces-dropdown\"\n      :class=\"{ 'ns-open': isOpen }\"\n      @click=\"toggle()\"\n    >\n      <!-- No filters found or available -->\n      <div\n        v-if=\"value.length === 0\"\n        ref=\"values\"\n        data-testid=\"namespaces-values-none\"\n        class=\"ns-values\"\n      >\n        {{ t('nav.ns.all') }}\n      </div>\n\n      <!-- Filtered by set with custom label E.g. \"All namespaces\" -->\n      <div\n        v-else-if=\"isSingleSpecial\"\n        ref=\"values\"\n        data-testid=\"namespaces-values-label\"\n        class=\"ns-values\"\n      >\n        {{ value[0].label }}\n      </div>\n\n      <!-- All the selected namespaces -->\n      <div\n        v-else\n        ref=\"values\"\n        v-clean-tooltip=\"tooltip\"\n        data-testid=\"namespaces-values\"\n        class=\"ns-values\"\n      >\n        <div\n          v-if=\"total\"\n          ref=\"total\"\n          data-testid=\"namespaces-values-total\"\n          class=\"ns-value ns-abs\"\n        >\n          {{ t('namespaceFilter.selected.label', { total }) }}\n        </div>\n        <div\n          v-for=\"(ns, j) in value\"\n          ref=\"value\"\n          :key=\"ns.id\"\n          :data-testid=\"`namespaces-value-${j}`\"\n          class=\"ns-value\"\n        >\n          <div>{{ ns.label }}</div>\n          <!-- block user from removing the last selection if ns forced filtering is on -->\n          <i\n            v-if=\"!namespaceFilterMode || value.length > 1\"\n            class=\"icon icon-close\"\n            :data-testid=\"`namespaces-values-close-${j}`\"\n            @click=\"removeOption(ns, $event)\"\n            @mousedown=\"handleValueMouseDown(ns, $event)\"\n          />\n        </div>\n      </div>\n\n      <!-- Inform user if more namespaces are selected -->\n      <div\n        v-if=\"hidden > 0\"\n        ref=\"more\"\n        v-clean-tooltip=\"tooltip\"\n        class=\"ns-more\"\n      >\n        {{ t('namespaceFilter.more', { more: hidden }) }}\n      </div>\n      <i\n        v-if=\"!isOpen\"\n        class=\"icon icon-chevron-down\"\n      />\n      <i\n        v-else\n        class=\"icon icon-chevron-up\"\n      />\n    </div>\n    <button\n      v-shortkey.once=\"['n']\"\n      class=\"hide\"\n      @shortkey=\"open()\"\n    />\n\n    <!-- Dropdown menu -->\n    <div\n      v-if=\"isOpen\"\n      class=\"ns-dropdown-menu\"\n      data-testid=\"namespaces-menu\"\n    >\n      <div class=\"ns-controls\">\n        <div class=\"ns-input\">\n          <input\n            ref=\"filter\"\n            v-model=\"filter\"\n            tabindex=\"0\"\n            class=\"ns-filter-input\"\n            @keydown=\"inputKeyHandler($event)\"\n          >\n          <i\n            v-if=\"hasFilter\"\n            class=\"ns-filter-clear icon icon-close\"\n            @click=\"filter = ''\"\n          />\n        </div>\n        <div\n          v-if=\"namespaceFilterMode\"\n          class=\"ns-singleton-info\"\n        >\n          <i\n            v-clean-tooltip=\"t('resourceList.nsFilterToolTip')\"\n            class=\"icon icon-info\"\n          />\n        </div>\n        <div\n          v-else\n          class=\"ns-clear\"\n        >\n          <i\n            class=\"icon icon-close\"\n            @click=\"clear()\"\n          />\n        </div>\n      </div>\n      <div class=\"ns-divider mt-0\" />\n      <div\n        ref=\"options\"\n        class=\"ns-options\"\n        role=\"list\"\n      >\n        <div\n          v-for=\"(opt, i) in cachedFiltered\"\n          :id=\"opt.elementId\"\n          :key=\"opt.id\"\n          tabindex=\"0\"\n          class=\"ns-option\"\n          :disabled=\"!opt.enabled\"\n          :class=\"{\n            'ns-selected': opt.selected,\n            'ns-single-match': cachedFiltered.length === 1 && !opt.selected,\n          }\"\n          :data-testid=\"`namespaces-option-${i}`\"\n          @click=\"opt.enabled && selectOption(opt)\"\n          @mouseover=\"opt.enabled && mouseOver($event)\"\n          @keydown=\"itemKeyHandler($event, opt)\"\n        >\n          <div\n            v-if=\"opt.kind === NAMESPACE_FILTER_KINDS.DIVIDER\"\n            class=\"ns-divider\"\n          />\n          <div\n            v-else\n            class=\"ns-item\"\n          >\n            <i\n              v-if=\"opt.kind === NAMESPACE_FILTER_KINDS.NAMESPACE\"\n              class=\"icon icon-folder\"\n            />\n            <div>{{ opt.label }}</div>\n            <i\n              v-if=\"opt.selected\"\n              class=\"icon icon-checkmark\"\n            />\n          </div>\n        </div>\n        <div\n          v-if=\"cachedFiltered.length === 0\"\n          class=\"ns-none\"\n          data-testid=\"namespaces-option-none\"\n        >\n          {{ t('namespaceFilter.noMatchingOptions') }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  $ns_dropdown_size: 24px;\n\n  .ns-abs {\n    position: absolute;\n  }\n\n  .ns-filter {\n    width: 280px;\n    display: inline-block;\n\n    $glass-z-index: 2;\n    $dropdown-z-index: 1000;\n\n    .ns-glass {\n      height: 100vh;\n      left: 0;\n      opacity: 0;\n      position: absolute;\n      top: 0;\n      width: 100vw;\n      z-index: $glass-z-index;\n    }\n\n    .ns-controls {\n      align-items: center;\n      display: flex;\n    }\n\n    .ns-clear {\n      &:hover {\n        color: var(--primary);\n        cursor: pointer;\n      }\n    }\n\n    .ns-singleton-info, .ns-clear {\n      align-items: center;\n      display: flex;\n      > i {\n        padding-right: 5px;\n      }\n    }\n\n    .ns-input {\n      flex: 1;\n      padding: 5px;\n      position: relative;\n    }\n\n    .ns-filter-input {\n      height: 24px;\n    }\n\n    .ns-filter-clear {\n      cursor: pointer;\n      position: absolute;\n      right: 10px;\n      top: 5px;\n      line-height: 24px;\n      text-align: center;\n      width: 24px;\n    }\n\n    .ns-dropdown-menu {\n      background-color: var(--header-bg);\n      border: 1px solid var(--primary-border);\n      border-bottom-left-radius: var(--border-radius);\n      border-bottom-right-radius: var(--border-radius);\n      color: var(--header-btn-text);\n      margin-top: -1px;\n      padding-bottom: 10px;\n      position: relative;\n      z-index: $dropdown-z-index;\n\n      .ns-options {\n        max-height: 50vh;\n        overflow-y: auto;\n\n        .ns-none {\n          color: var(--muted);\n          padding: 0 10px;\n        }\n      }\n\n      .ns-divider {\n        border-top: 1px solid var(--border);\n        cursor: default;\n        margin-top: 10px;\n        padding-bottom: 10px;\n      }\n\n      .ns-option {\n\n        &[disabled] {\n          cursor: default;\n        }\n\n        &:not([disabled]) {\n          &:focus {\n            background-color: var(--dropdown-hover-bg);\n            color: var(--dropdown-hover-text);\n          }\n          .ns-item {\n             &:hover, &:focus {\n              background-color: var(--dropdown-hover-bg);\n              color: var(--dropdown-hover-text);\n              cursor: pointer;\n\n              > i {\n                color: var(--dropdown-hover-text);\n              }\n            }\n          }\n\n          &.ns-selected {\n            &:hover,&:focus {\n              .ns-item {\n                > * {\n                  background-color: var(--dropdown-hover-bg);\n                  color: var(--dropdown-hover-text);\n                }\n              }\n            }\n          }\n\n          &.ns-selected:not(:hover) {\n            .ns-item {\n              > * {\n                color: var(--dropdown-hover-bg);\n              }\n            }\n\n            &:focus {\n              .ns-item {\n                > * {\n                  color: var(--dropdown-hover-text);\n                }\n              }\n            }\n          }\n        }\n\n        .ns-item {\n          align-items: center;\n          display: flex;\n          height: 24px;\n          line-height: 24px;\n          padding: 0 10px;\n\n          > i {\n            color: var(--muted);\n            margin: 0 5px;\n          }\n\n          > div {\n            flex: 1;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n          }\n\n        }\n\n        &.ns-single-match {\n          .ns-item {\n            background-color: var(--dropdown-hover-bg);\n            > * {\n              color: var(--dropdown-hover-text);\n            }\n          }\n        }\n      }\n    }\n\n    .ns-dropdown {\n      align-items: center;\n      display: flex;\n      border: 1px solid var(--header-border);\n      border-radius: var(--border-radius);\n      color: var(--header-btn-text);\n      cursor: pointer;\n      height: 40px;\n      padding: 0 10px;\n      position: relative;\n      z-index: $dropdown-z-index;\n\n      &.ns-open {\n        border-bottom-left-radius: 0;\n        border-bottom-right-radius: 0;\n        border-color: var(--primary-border);\n      }\n\n      > .ns-values {\n        flex: 1;\n      }\n\n      &:hover {\n        > i {\n          color: var(--primary);\n        }\n      }\n\n      > i {\n        height: $ns_dropdown_size;\n        width: $ns_dropdown_size;\n        cursor: pointer;\n        text-align: center;\n        line-height: $ns_dropdown_size;\n      }\n\n      .ns-more {\n        border: 1px solid var(--header-border);\n        border-radius: 5px;\n        padding: 2px 8px;\n        margin-left: 4px;\n      }\n\n      .ns-values {\n        display: flex;\n        overflow: hidden;\n\n        .ns-value {\n          align-items: center;\n          background-color: rgba(0,0,0,.05);\n          border: 1px solid var(--header-border);\n          border-radius: 5px;\n          color: var(--tag-text);\n          display: flex;\n          line-height: 20px;\n          padding: 2px 5px;\n          white-space: nowrap;\n\n          > i {\n            margin-left: 5px;\n\n            &:hover {\n              color: var(--primary);\n            };\n          }\n\n          // Spacing between tags\n          &:not(:last-child) {\n            margin-right: 5px;\n          }\n        }\n      }\n    }\n  }\n</style>\n<style lang=\"scss\">\n  .tooltip {\n    .ns-filter-tooltip {\n      background-color: var(--body-bg);\n      margin: -6px;\n      padding: 6px;\n\n      .ns-filter-tooltip-item {\n        > div {\n          background-color: rgba(0,0,0,.05);\n          border: 1px solid var(--header-border);\n          border-radius: 5px;\n          color: var(--tag-text);\n          display: inline-block;\n          line-height: 20px;\n          padding: 2px 5px;\n          white-space: nowrap;\n          margin: 4px 0;\n        }\n      }\n    }\n  }\n</style>\n"],"mappings":"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","ignoreList":[]}]}