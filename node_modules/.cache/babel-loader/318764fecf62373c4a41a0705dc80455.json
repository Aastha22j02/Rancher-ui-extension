{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/diagnostic.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/diagnostic.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["CAPI","MANAGEMENT","AsyncButton","PromptModal","downloadFile","filterOnlyKubernetesClusters","filterHiddenLocalCluster","sortBy","name","components","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","provClusters","readyClusters","clusterForCounts","finalCounts","promises","topFifteenForResponseTime","countsPerCluster","wrap","_callee$","_context","prev","next","$store","dispatch","type","RANCHER_CLUSTER","sent","filter","c","_c$mgmt","mgmt","isReady","forEach","cluster","i","_mgmtCluster$spec","_cluster$metadata","_cluster$metadata2","_cluster$mgmt","_cluster$mgmt2","mgmtCluster","getters","CLUSTER","metadata","push","id","spec","displayName","namespace","capiId","counts","isTableVisible","length","url","concat","Promise","all","clusterCount","index","_clusterCount$data","data","sanitizedCount","finalCount","Object","keys","key","_counts$key$summary","_counts$key$summary2","summary","count","resource","sortedCount","splice","item","stop","_window","_window2","_window4","_window6","_this$$store","_window$navigator","window","navigator","userAgent","userAgentData","language","cookieEnabled","hardwareConcurrency","deviceMemory","systemInformation","browser","label","t","value","system","jsMemory","platform","performance","memory","jsHeapSizeLimit","_window3","totalJSHeapSize","_window5","usedJSHeapSize","_window7","responseTimes","includeResponseTimes","storeMapping","_modules","root","state","computed","_this$finalCounts","methods","generateKey","randomize","Math","random","downloadData","btnCb","fileName","parseStoreData","resourceCounts","JSON","stringify","then","catch","setResourceResponseTiming","_this2","res","outcome","_cluster$counts","find","countIndex","findIndex","$set","durationMs","sumResourceCount","reduce","a","b","nodeCount","_counts$resource","toggleTable","area","itemIndex","gatherResponseTimes","_this3","_callee2","_callee2$","_context2","flatMap","map","Date","now","abrupt","rootStore","disallowedDataKeys","clearListsKeys","cleanRootStore","entries","_ref","_ref2","_slicedToArray","storeKey","store","includes","types","_objectSpread","_ref3","_ref4","entry","list","otherProps","_objectWithoutProperties","_excluded","promptDownload","component","componentProps"],"sources":["node_modules/@rancher/shell/pages/diagnostic.vue"],"sourcesContent":["<script>\nimport { CAPI, MANAGEMENT } from '@shell/config/types';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport PromptModal from '@shell/components/PromptModal';\nimport { downloadFile } from '@shell/utils/download';\nimport { filterOnlyKubernetesClusters, filterHiddenLocalCluster } from '@shell/utils/cluster';\nimport { sortBy } from '@shell/utils/sort';\n\nexport default {\n  name: 'Diagnostic',\n\n  components: { AsyncButton, PromptModal },\n\n  async fetch() {\n    const provClusters = await this.$store.dispatch('management/findAll', { type: CAPI.RANCHER_CLUSTER });\n    const readyClusters = provClusters.filter((c) => c.mgmt?.isReady);\n    const clusterForCounts = filterHiddenLocalCluster(filterOnlyKubernetesClusters(readyClusters, this.$store), this.$store);\n    const finalCounts = [];\n    const promises = [];\n    const topFifteenForResponseTime = [];\n\n    clusterForCounts.forEach((cluster, i) => {\n      // Necessary to retrieve the proper display name of the cluster\n      const mgmtCluster = this.$store.getters['management/byId'](MANAGEMENT.CLUSTER, cluster.metadata.name);\n\n      finalCounts.push({\n        id:             cluster.id,\n        name:           mgmtCluster?.spec?.displayName || cluster.metadata?.name,\n        namespace:      cluster.metadata?.namespace,\n        capiId:         cluster.mgmt?.id,\n        counts:         null,\n        isTableVisible: !!(i === 0 && clusterForCounts.length === 1)\n      });\n      promises.push(this.$store.dispatch('management/request', { url: `/k8s/clusters/${ cluster.mgmt?.id }/v1/counts` }));\n    });\n\n    const countsPerCluster = await Promise.all(promises);\n\n    countsPerCluster.forEach((clusterCount, index) => {\n      const counts = clusterCount.data?.[0]?.counts;\n\n      if (counts) {\n        const sanitizedCount = [];\n        let finalCount = [];\n\n        Object.keys(counts).forEach((key) => {\n          sanitizedCount[key] = counts[key].summary?.count;\n          sanitizedCount.push({\n            resource: key,\n            count:    counts[key].summary?.count || 0,\n          });\n        });\n\n        const sortedCount = sortBy(sanitizedCount, 'count:desc');\n\n        finalCount = finalCount.concat(sortedCount);\n        finalCount = sortBy(finalCount, 'count:desc');\n        finalCount = finalCount.splice(0, 15);\n\n        finalCount.forEach((item, i) => {\n          finalCount[i].id = finalCounts[index].id;\n          finalCount[i].capiId = finalCounts[index].capiId;\n        });\n\n        topFifteenForResponseTime.push(finalCount);\n\n        finalCounts[index].counts = sortedCount;\n      }\n    });\n\n    this.topFifteenForResponseTime = topFifteenForResponseTime;\n    this.finalCounts = finalCounts;\n  },\n\n  data() {\n    const {\n      userAgent,\n      userAgentData,\n      language,\n      cookieEnabled,\n      hardwareConcurrency,\n      deviceMemory\n    } = window?.navigator;\n\n    const systemInformation = {\n      browser: {\n        label: this.t('about.diagnostic.systemInformation.browser'),\n        value: this.t('about.diagnostic.systemInformation.browserInfo', {\n          userAgent, language, cookieEnabled\n        })\n      },\n      system: {\n        label: this.t('about.diagnostic.systemInformation.system'),\n        value: this.t('about.diagnostic.systemInformation.hardwareConcurrency', { hardwareConcurrency })\n      },\n      jsMemory: {\n        label: this.t('about.diagnostic.systemInformation.jsMemory'),\n        value: ''\n      }\n    };\n\n    if ( userAgentData?.platform ) {\n      systemInformation.system.value = systemInformation.system.value.concat(', ', this.t('about.diagnostic.systemInformation.os', { platform: userAgentData.platform }));\n    }\n\n    if ( deviceMemory ) {\n      systemInformation.system.value = systemInformation.system.value.concat(', ', this.t('about.diagnostic.systemInformation.deviceMemory', { deviceMemory }));\n    }\n\n    if ( window?.performance?.memory?.jsHeapSizeLimit ) {\n      systemInformation.jsMemory.value += this.t('about.diagnostic.systemInformation.memJsHeapLimit', { jsHeapSizeLimit: window?.performance?.memory?.jsHeapSizeLimit });\n    }\n\n    if ( window?.performance?.memory?.totalJSHeapSize ) {\n      systemInformation.jsMemory.value += `, ${ this.t('about.diagnostic.systemInformation.memTotalJsHeapSize', { totalJSHeapSize: window?.performance?.memory?.totalJSHeapSize }) }`;\n    }\n\n    if ( window?.performance?.memory?.usedJSHeapSize ) {\n      systemInformation.jsMemory.value += `, ${ this.t('about.diagnostic.systemInformation.memUsedJsHeapSize', { usedJSHeapSize: window?.performance?.memory?.usedJSHeapSize }) }`;\n    }\n\n    return {\n      systemInformation,\n      topFifteenForResponseTime: null,\n      responseTimes:             null,\n      finalCounts:               null,\n      includeResponseTimes:      true,\n      storeMapping:              this.$store?._modules?.root?.state,\n    };\n  },\n\n  computed: {\n    clusterCount() {\n      return this.finalCounts?.length;\n    }\n  },\n\n  methods: {\n    generateKey(data) {\n      const randomize = Math.random() * 10000;\n\n      return `key_${ randomize }_${ data }`;\n    },\n\n    downloadData(btnCb) {\n      // simplify filename due to e2e tests\n      const fileName = 'rancher-diagnostic-data.json';\n      const data = {\n        systemInformation: this.systemInformation,\n        storeMapping:      this.parseStoreData(this.storeMapping),\n        resourceCounts:    this.finalCounts,\n        responseTimes:     this.responseTimes\n      };\n\n      downloadFile(fileName, JSON.stringify(data), 'application/json')\n        .then(() => btnCb(true))\n        .catch(() => btnCb(false));\n    },\n\n    setResourceResponseTiming(responseTimes) {\n      responseTimes?.forEach((res) => {\n        if ( res.outcome === 'success' ) {\n          const cluster = this.finalCounts.find((c) => c.capiId === res.item.capiId);\n          const countIndex = cluster?.counts?.findIndex((c) => c.resource === res.item.resource);\n\n          if ( (countIndex && countIndex !== -1) || countIndex === 0 ) {\n            this.$set(cluster?.counts[countIndex], 'durationMs', res.durationMs);\n          }\n        }\n      });\n    },\n\n    sumResourceCount(counts) {\n      return counts.reduce((a, b) => (a + b.count), 0);\n    },\n\n    nodeCount(counts) {\n      const resource = counts.findIndex((c) => c.resource === 'node');\n\n      return counts[resource]?.count;\n    },\n\n    toggleTable(area) {\n      const itemIndex = this.finalCounts.findIndex((item) => item.id === area);\n\n      this.finalCounts[itemIndex].isTableVisible = !this.finalCounts[itemIndex].isTableVisible;\n    },\n\n    async gatherResponseTimes(btnCb) {\n      const promises = this.topFifteenForResponseTime.flatMap((cluster) => {\n        return cluster.map((item) => {\n          const t = Date.now();\n\n          return this.$store.dispatch('management/request', { url: `/k8s/clusters/${ item.capiId }/v1/${ item.resource }` })\n            .then(() => ({\n              outcome: 'success', item, durationMs: Date.now() - t\n            }))\n            .catch(() => ({\n              outcome: 'error', item, durationMs: Date.now() - t\n            }));\n        });\n      });\n\n      return await Promise.all(promises).then((responseTimes) => {\n        this.responseTimes = responseTimes;\n        this.setResourceResponseTiming(responseTimes);\n        btnCb(true);\n      }).catch(() => btnCb(false));\n    },\n\n    parseStoreData(rootStore) {\n      // clear potential sensitive data\n      const disallowedDataKeys = [\n        'aws',\n        'digitalocean',\n        'linode',\n        'targetRoute', // contains circular references, isn't useful (added later to store)\n        '$router', // also contains a circular reference to $store, not useful for diagnostics\n      ];\n\n      const clearListsKeys = [\n        'management',\n        'rancher',\n        'cluster',\n        'harvester',\n        'epinio',\n        'elemental',\n      ];\n\n      const cleanRootStore = {};\n\n      Object.entries(rootStore).forEach(([storeKey, store]) => {\n        if (disallowedDataKeys.includes(storeKey)) {\n          // Ignore any root store in the disallowed list\n          return;\n        }\n\n        // Remove all `list` keys, for example `management.types['management.cattle.io.cluster'].list`\n\n        if (!clearListsKeys.includes(storeKey)) {\n          // This is only done for some store namespaces, if not just save the raw entry\n          cleanRootStore[storeKey] = store;\n\n          return;\n        }\n\n        // if there's no types property to clear, just save the raw entry\n        if (!Object.keys(store.types || {}).length) {\n          cleanRootStore[storeKey] = store;\n\n          return;\n        }\n\n        // Save the root entry with empty types prop\n        cleanRootStore[storeKey] = {\n          ...store,\n          types: {},\n        };\n\n        // Save the root entries type's entries without the list property\n        Object.entries(store.types).forEach(([type, entry]) => {\n          const { list, ...otherProps } = entry;\n\n          cleanRootStore[storeKey].types[type] = {\n            ...otherProps,\n            count: list.length,\n          };\n        });\n      });\n\n      return cleanRootStore;\n    },\n\n    promptDownload(btnCb) {\n      if ( !this.responseTimes ) {\n        this.$store.dispatch('management/promptModal', {\n          component:      'DiagnosticTimingsDialog',\n          componentProps: {\n            downloadData:        this.downloadData,\n            gatherResponseTimes: this.gatherResponseTimes\n          }\n        })\n          .then(() => btnCb(true))\n          .catch(() => btnCb(false));\n      } else {\n        this.downloadData(btnCb);\n      }\n    }\n  },\n};\n</script>\n\n<template>\n  <div>\n    <div class=\"title-block mt-20 mb-40\">\n      <div>\n        <AsyncButton\n          mode=\"timing\"\n          class=\"mr-20\"\n          data-testid=\"diagnostics-generate-response-times\"\n          @click=\"gatherResponseTimes\"\n        />\n        <AsyncButton\n          mode=\"diagnostic\"\n          data-testid=\"diagnostics-download-diagnostic-package\"\n          @click=\"promptDownload\"\n        />\n      </div>\n    </div>\n\n    <!-- System info -->\n    <div class=\"mb-40\">\n      <h2 class=\"mb-20\">\n        {{ t('about.diagnostic.systemInformation.subtitle') }}\n      </h2>\n      <table class=\"full-width\">\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr\n            v-for=\"(item, objKey) in systemInformation\"\n            :key=\"objKey\"\n          >\n            <template v-if=\"item.value.length\">\n              <td>{{ item.label }}</td>\n              <td>{{ item.value }}</td>\n            </template>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Resources -->\n    <div class=\"mb-40\">\n      <h2 class=\"mb-20\">\n        {{ t('about.diagnostic.resourceCounts', { count: clusterCount }) }}\n      </h2>\n      <div class=\"resources-count-container\">\n        <table\n          v-for=\"cluster in finalCounts\"\n          :key=\"cluster.id\"\n          class=\"full-width\"\n        >\n          <thead @click=\"toggleTable(cluster.id)\">\n            <th colspan=\"4\">\n              <div class=\"cluster-row\">\n                <span>Cluster: <b>{{ cluster.name }}</b></span>\n                <span>Namespace: <b>{{ cluster.namespace }}</b></span>\n                <span>Total Resources: <b>{{ sumResourceCount(cluster.counts) }}</b></span>\n                <span>Nodes: <b>{{ nodeCount(cluster.counts) }}</b></span>\n                <i\n                  class=\"icon\"\n                  :class=\"{\n                    'icon-chevron-down': !cluster.isTableVisible,\n                    'icon-chevron-up': cluster.isTableVisible\n                  }\"\n                />\n              </div>\n            </th>\n          </thead>\n          <tbody v-show=\"cluster.isTableVisible\">\n            <tr>\n              <th>\n                Resource\n              </th>\n              <th>\n                Count\n              </th>\n              <th>\n                Resource Timing (ms)\n              </th>\n            </tr>\n\n            <tr\n              v-for=\"item in cluster.counts\"\n              :key=\"item.resource\"\n            >\n              <template v-if=\"item.count > 0\">\n                <td scope=\"row\">\n                  {{ item.resource }}\n                </td>\n                <td>{{ item.count }}</td>\n                <td>{{ item.durationMs || '-' }}</td>\n              </template>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <PromptModal />\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.title-block {\n  display: flex;\n  justify-content: right;\n  align-items: center;\n\n  h1 {\n    margin: 0 !important;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n  }\n}\n\ntable {\n  border-collapse: collapse;\n  overflow: hidden;\n  border-radius: var(--border-radius);\n\n  &.full-width {\n    border-radius: 0 !important;\n    min-width: 60%;\n\n    thead {\n      cursor: pointer;\n\n      th div {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n      }\n    }\n\n    tbody {\n      border-bottom: 1px solid var(--sortable-table-top-divider);\n    }\n  }\n\n  tr > td:first-of-type {\n    width: 20%;\n  }\n\n  th, td {\n    border: 1px solid var(--border);\n    padding: 8px 5px;\n    min-width: 150px;\n    text-align: left;\n  }\n\n  th {\n    background-color: var(--sortable-table-top-divider);\n    border-bottom: 1px solid var(--sortable-table-header-bg);\n  }\n\n  a {\n    cursor: pointer;\n  }\n\n  .os {\n    display: flex;\n    align-items: center;\n  }\n}\n\n.logs-container {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  background-color: #FFF;\n  border: 1px solid var(--body-text);\n  height: 300px;\n  overflow-x: hidden;\n  overflow-y: auto;\n\n  li {\n    font-family: $mono-font;\n    font-size: 12px;\n    margin: 0;\n    padding: 10px 20px;\n    border-bottom: 1px solid #ccc;\n\n    &.log {\n      color: #000;\n    }\n\n    &.warn {\n      background-color: LightGoldenRodYellow;\n      color: SaddleBrown;\n    }\n\n    &.info {\n      background-color: Azure;\n      color: blue;\n    }\n\n    &.error {\n      background-color: MistyRose;\n      color: red;\n    }\n\n    &:last-child {\n      border-bottom: none;\n    }\n\n    .log-entry-type {\n      font-weight: bold;\n    }\n  }\n}\n\n.resources-count-container {\n  .cluster-row {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr) 20px;\n    grid-template-rows: 1fr;\n    align-content: center;\n    font-weight: normal;\n  }\n\n  tbody tr, tbody tr th {\n    background-color: var(--sortable-table-header-bg);\n  }\n\n  tbody tr th {\n    border-bottom: 1px solid var(--sortable-table-top-divider);\n  }\n\n  tbody tr:hover {\n    background-color: var(--sortable-table-top-divider);\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}