{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/utils/auth.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/utils/auth.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Popup","popupWindowOptions","parse","parseUrl","addParam","BACK_TO","SPA","_EDIT","_FLAGGED","TIMED_OUT","MANAGEMENT","NORMAN","allHash","getProductFromRoute","getResourceFromRoute","NAME","EXPLORER","findBy","openAuthPopup","url","provider","popup","promise","Promise","resolve","reject","window","onAuthTest","error","code","Error","open","returnTo","opt","vm","_opt$route","route","$router","options","base","routerBase","concat","replace","returnToUrl","location","origin","parsed","href","query","spa","undefined","backTo","config","authProvidersInfo","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","store","rows","nonLocal","enabled","supportedNonLocal","enabledLocation","wrap","_callee$","_context","prev","next","dispatch","type","AUTH_CONFIG","sent","filter","x","name","id","length","params","mode","abrupt","stop","_x","apply","arguments","checkSchemasForFindAllHash","types","hash","_i","_Object$entries","Object","entries","_Object$entries$_i","_slicedToArray","key","value","schema","getters","inStoreType","validSchema","schemaValidator","checkPermissions","_loop","_Object$entries2$_i","_Object$entries2","_i2","resourceMethods","every","method","includes","collectionMethods","_ret","canViewResource","resource","inStore","schemaFor","validResource","setProduct","to","_store$getters$curren","_store$getters$curren2","product","matched","path","productNotFound","oldProduct","oldStore","commit","neuStore","validateResource","findMe","_x2","_findMe","_callee2","principals","me","_callee2$","_context2","PRINCIPAL","redirectUnauthorized","tryInitialSetup","_x3","_tryInitialSetup","_callee3","password","res","_args3","_callee3$","_context3","body","username","_status","t0","console","isLoggedIn","notLoggedIn","redirect","noAuth"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/utils/auth.js"],"sourcesContent":["import { Popup, popupWindowOptions } from '@shell/utils/window';\r\nimport { parse as parseUrl, addParam } from '@shell/utils/url';\r\nimport {\r\n  BACK_TO, SPA, _EDIT, _FLAGGED, TIMED_OUT\r\n} from '@shell/config/query-params';\r\nimport { MANAGEMENT, NORMAN } from '@shell/config/types';\r\nimport { allHash } from '@shell/utils/promise';\r\nimport { getProductFromRoute, getResourceFromRoute } from '@shell/utils/router';\r\nimport { NAME as EXPLORER } from '@shell/config/product/explorer';\r\nimport { findBy } from '@shell/utils/array';\r\n\r\nexport function openAuthPopup(url, provider) {\r\n  const popup = new Popup(() => {\r\n    popup.promise = new Promise((resolve, reject) => {\r\n      popup.resolve = resolve;\r\n      popup.reject = reject;\r\n    });\r\n\r\n    window.onAuthTest = (error, code) => {\r\n      if (error) {\r\n        popup.reject(error);\r\n      }\r\n\r\n      delete window.onAuthTest;\r\n      popup.resolve(code);\r\n    };\r\n  }, () => {\r\n    popup.reject(new Error('Access was not authorized'));\r\n  });\r\n\r\n  popup.open(url, 'auth-test', popupWindowOptions());\r\n\r\n  return popup.promise;\r\n}\r\n\r\nexport function returnTo(opt, vm) {\r\n  let { route = `/auth/verify` } = opt;\r\n\r\n  if ( vm.$router.options && vm.$router.options.base ) {\r\n    const routerBase = vm.$router.options.base;\r\n\r\n    if ( routerBase !== '/' ) {\r\n      route = `${ routerBase.replace(/\\/+$/, '') }/${ route.replace(/^\\/+/, '') }`;\r\n    }\r\n  }\r\n\r\n  let returnToUrl = `${ window.location.origin }${ route }`;\r\n\r\n  const parsed = parseUrl(window.location.href);\r\n\r\n  if ( parsed.query.spa !== undefined ) {\r\n    returnToUrl = addParam(returnToUrl, SPA, _FLAGGED);\r\n  }\r\n\r\n  if ( opt.backTo ) {\r\n    returnToUrl = addParam(returnToUrl, BACK_TO, opt.backTo);\r\n  }\r\n\r\n  if (opt.config) {\r\n    returnToUrl = addParam(returnToUrl, 'config', opt.config);\r\n  }\r\n\r\n  return returnToUrl;\r\n}\r\n\r\n/**\r\n * Determines common auth provider info as those that are available (non-local) and the location of the enabled provider\r\n */\r\nexport const authProvidersInfo = async(store) => {\r\n  const rows = await store.dispatch(`management/findAll`, { type: MANAGEMENT.AUTH_CONFIG });\r\n  const nonLocal = rows.filter((x) => x.name !== 'local');\r\n  const enabled = nonLocal.filter((x) => x.enabled === true );\r\n\r\n  const supportedNonLocal = nonLocal.filter((x) => x.id !== 'oidc');\r\n\r\n  const enabledLocation = enabled.length === 1 ? {\r\n    name:   'c-cluster-auth-config-id',\r\n    params: { id: enabled[0].id },\r\n    query:  { mode: _EDIT }\r\n  } : null;\r\n\r\n  return {\r\n    nonLocal: supportedNonLocal,\r\n    enabledLocation,\r\n    enabled\r\n  };\r\n};\r\n\r\nexport const checkSchemasForFindAllHash = (types, store) => {\r\n  const hash = {};\r\n\r\n  for (const [key, value] of Object.entries(types)) {\r\n    const schema = store.getters[`${ value.inStoreType }/schemaFor`](value.type);\r\n\r\n    // It could be that user has permissions for GET but not list\r\n    // e.g. Standard user with GitRepo permissions try to fetch list of fleetworkspaces\r\n    // user has ability to GET but not fleet workspaces\r\n    // so optionally define a function that require it to pass before /findAll\r\n    const validSchema = value.schemaValidator ? value.schemaValidator(schema) : !!schema;\r\n\r\n    if (validSchema) {\r\n      hash[key] = store.dispatch(`${ value.inStoreType }/findAll`, { type: value.type } );\r\n    }\r\n  }\r\n\r\n  return allHash(hash);\r\n};\r\n\r\nexport const checkPermissions = (types, getters) => {\r\n  const hash = {};\r\n\r\n  for (const [key, value] of Object.entries(types)) {\r\n    const schema = getters['management/schemaFor'](value.type);\r\n\r\n    if (!schema) {\r\n      hash[key] = false;\r\n\r\n      continue;\r\n    }\r\n\r\n    // It could be that user has permissions for GET but not list\r\n    // e.g. Standard user with GitRepo permissions try to fetch list of fleetworkspaces\r\n    // user has ability to GET but not fleet workspaces\r\n    // so optionally define a function that require it to pass before /findAll\r\n    if (value.schemaValidator) {\r\n      hash[key] = value.schemaValidator(schema);\r\n\r\n      continue;\r\n    }\r\n\r\n    if (value.resourceMethods && schema) {\r\n      hash[key] = value.resourceMethods.every((method) => {\r\n        return (schema.resourceMethods || []).includes(method);\r\n      });\r\n\r\n      continue;\r\n    }\r\n\r\n    if (value.collectionMethods && schema) {\r\n      hash[key] = value.collectionMethods.every((method) => {\r\n        return (schema.collectionMethods || []).includes(method);\r\n      });\r\n\r\n      continue;\r\n    }\r\n\r\n    hash[key] = !!schema;\r\n  }\r\n\r\n  return allHash(hash);\r\n};\r\n\r\nexport const canViewResource = (store, resource) => {\r\n  // Note - don't use the current products store... because products can override stores for resources with `typeStoreMap`\r\n  const inStore = store.getters['currentStore'](resource);\r\n  // There's a chance we're in an extension's product who's store could be anything, so confirm schemaFor exists\r\n  const schemaFor = store.getters[`${ inStore }/schemaFor`];\r\n\r\n  // In order to check a resource is valid we need these\r\n  if (!inStore || !schemaFor) {\r\n    return false;\r\n  }\r\n\r\n  // Resource is valid if a schema exists for it (standard resource, spoofed resource) or it's a virtual resource\r\n  const validResource = schemaFor(resource) || store.getters['type-map/isVirtual'](resource);\r\n\r\n  return !!validResource;\r\n};\r\n\r\n// ************************************************************\r\n//\r\n// BELOW ARE METHODS THAT ARE A PART OF THE AUTHENTICATED MIDDLEWARE REMOVAL. THIS IS A TEMPORARY HOME FOR THESE UTILS AND SHOULD BE REWRITTEN, MOVED OR DELETED.\r\n//\r\n// TODO: Remove and refactor everything below for more clarity and better organization. https://github.com/rancher/dashboard/issues/11111\r\n//\r\n// ************************************************************\r\n\r\n/**\r\n * Attempt to set the product in our datastore if the route matches a known product. Otherwise show an error page instead.\r\n */\r\nexport function setProduct(store, to) {\r\n  let product = getProductFromRoute(to);\r\n\r\n  // since all products are hardcoded as routes (ex: c-local-explorer), if we match the wildcard route it means that the product does not exist\r\n  if ((product && (!to.matched.length || (to.matched.length && to.matched[0].path === '/c/:cluster/:product'))) ||\r\n  // if the product grabbed from the route is not registered, then we don't have it!\r\n  (product && !store.getters['type-map/isProductRegistered'](product))) {\r\n    const error = new Error(store.getters['i18n/t']('nav.failWhale.productNotFound', { productNotFound: product }, true));\r\n\r\n    store.dispatch('loadingError', error);\r\n\r\n    throw new Error('loadingError', new Error(store.getters['i18n/t']('nav.failWhale.productNotFound', { productNotFound: product }, true)));\r\n  }\r\n\r\n  if ( !product ) {\r\n    product = EXPLORER;\r\n  }\r\n\r\n  const oldProduct = store.getters['productId'];\r\n  const oldStore = store.getters['currentProduct']?.inStore;\r\n\r\n  if ( product !== oldProduct ) {\r\n    store.commit('setProduct', product);\r\n  }\r\n\r\n  const neuStore = store.getters['currentProduct']?.inStore;\r\n\r\n  if ( neuStore !== oldStore ) {\r\n    // If the product store changes, clear the catalog.\r\n    // There might be management catalog items in it vs cluster.\r\n    store.commit('catalog/reset');\r\n  }\r\n}\r\n\r\n/**\r\n * Check that the resource is valid, if not redirect to fail whale\r\n *\r\n * This requires that\r\n * - product is set\r\n * - product's store is set and setup (so we can check schema's within it)\r\n * - product's store has the schemaFor getter (extension stores might not have it)\r\n * - there's a resource associated with route (meta or param)\r\n */\r\nexport function validateResource(store, to) {\r\n  const product = store.getters['currentProduct'];\r\n  const resource = getResourceFromRoute(to);\r\n\r\n  // In order to check a resource is valid we need these\r\n  if (!product || !resource) {\r\n    return false;\r\n  }\r\n\r\n  if (canViewResource(store, resource)) {\r\n    return false;\r\n  }\r\n\r\n  // Unknown resource, redirect to fail whale\r\n\r\n  const error = new Error(store.getters['i18n/t']('nav.failWhale.resourceNotFound', { resource }, true));\r\n\r\n  store.dispatch('loadingError', error);\r\n\r\n  throw error;\r\n}\r\n\r\n/**\r\n * Attempt to load the current user's principal\r\n */\r\nexport async function findMe(store) {\r\n  // First thing we do in loadManagement is fetch principals anyway.... so don't ?me=true here\r\n  const principals = await store.dispatch('rancher/findAll', {\r\n    type: NORMAN.PRINCIPAL,\r\n    opt:  {\r\n      url:                  '/v3/principals',\r\n      redirectUnauthorized: false,\r\n    }\r\n  });\r\n\r\n  const me = findBy(principals, 'me', true);\r\n\r\n  return me;\r\n}\r\n\r\n/**\r\n * Attempt to login with default credentials. Note: I think that this may actually be outdated since we don't use these default credentials anymore on setup.\r\n */\r\nexport async function tryInitialSetup(store, password = 'admin') {\r\n  try {\r\n    const res = await store.dispatch('auth/login', {\r\n      provider: 'local',\r\n      body:     {\r\n        username: 'admin',\r\n        password\r\n      },\r\n    });\r\n\r\n    return res._status === 200;\r\n  } catch (e) {\r\n    console.error('Error trying initial setup', e); // eslint-disable-line no-console\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Record in our state management that we're indeed logged in\r\n */\r\nexport function isLoggedIn(store, me) {\r\n  store.commit('auth/hasAuth', true);\r\n  store.commit('auth/loggedInAs', me.id);\r\n}\r\n\r\n/**\r\n * Record in our state management that we're not logged in and then redirect to the login page\r\n */\r\nexport function notLoggedIn(store, redirect, route) {\r\n  store.commit('auth/hasAuth', true);\r\n\r\n  if ( route.name === 'index' ) {\r\n    return redirect('/auth/login');\r\n  } else {\r\n    return redirect(`/auth/login?${ TIMED_OUT }`);\r\n  }\r\n}\r\n\r\n/**\r\n * Record in our state management that we don't have any auth providers\r\n */\r\nexport function noAuth(store) {\r\n  store.commit('auth/hasAuth', false);\r\n}\r\n"],"mappings":"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","ignoreList":[]}]}