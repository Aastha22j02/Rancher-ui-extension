{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/models/cloudcredential.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/models/cloudcredential.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["CAPI","fullFields","prefixFields","simplify","suffixFields","isEmpty","set","SECRET","escapeHtml","NormanModel","CloudCredential","_NormanModel","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","get","name","params","product","$rootGetters","cluster","id","replace","secretName","value","_getSecret","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$dispatch","type","root","stop","getSecret","apply","Object","keys","find","k","endsWith","_this$annotations","annotation","annotations","CREDENTIAL_DRIVER","configKey","out","setProvider","neu","_this","setAnnotation","forEach","toLowerCase","concat","setData","isMap","_typeof","_defineProperty","provider","_this$$rootGetters$pl","publicKey","publicMode","options","full","prefix","suffix","decodedData","mode","includes","val","_this$secret","secret","maxLength","Math","min","floor","length","substr","default"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/models/cloudcredential.js"],"sourcesContent":["import { CAPI } from '@shell/config/labels-annotations';\nimport { fullFields, prefixFields, simplify, suffixFields } from '@shell/store/plugins';\nimport { isEmpty, set } from '@shell/utils/object';\nimport { SECRET } from '@shell/config/types';\nimport { escapeHtml } from '@shell/utils/string';\nimport NormanModel from '@shell/plugins/steve/norman-class';\n\nexport default class CloudCredential extends NormanModel {\n  get hasSensitiveData() {\n    return true;\n  }\n\n  get canCustomEdit() {\n    return true;\n  }\n\n  get _detailLocation() {\n    return {\n      name:   `c-cluster-manager-cloudCredential-id`,\n      params: {\n        product: this.$rootGetters['productId'],\n        cluster: this.$rootGetters['clusterId'],\n        id:      this.id,\n      }\n    };\n  }\n\n  get parentLocationOverride() {\n    return {\n      name:   `c-cluster-manager-cloudCredential`,\n      params: { cluster: this.$rootGetters['clusterId'] }\n    };\n  }\n\n  get secretName() {\n    return this.id.replace(':', '/');\n  }\n\n  get secret() {\n    return this.$rootGetters['management/byId'](SECRET, this.secretName);\n  }\n\n  async getSecret() {\n    await this.$dispatch('management/find', { type: SECRET, id: this.secretName }, { root: true });\n  }\n\n  get configKey() {\n    return Object.keys(this).find( (k) => k.endsWith('credentialConfig'));\n  }\n\n  get provider() {\n    const annotation = this.annotations?.[CAPI.CREDENTIAL_DRIVER];\n\n    if ( annotation ) {\n      return annotation;\n    }\n\n    const configKey = this.configKey;\n\n    // Call [amazoneks,amazonec2] -> aws\n    if ( configKey ) {\n      const out = this.$rootGetters['plugins/credentialDriverFor'](configKey.replace(/credentialConfig$/, ''));\n\n      return out;\n    }\n\n    return null;\n  }\n\n  setProvider(neu) {\n    this.setAnnotation(CAPI.CREDENTIAL_DRIVER, neu);\n\n    Object.keys(this).forEach((k) => {\n      k = k.toLowerCase();\n\n      if ( k.endsWith('config') && k !== `${ neu }config` ) {\n        set(this, k, null);\n      }\n    });\n\n    if ( !this[`${ neu }credentialConfig`] ) {\n      set(this, `${ neu }credentialConfig`, {});\n    }\n  }\n\n  get decodedData() {\n    const k = this.configKey;\n\n    if ( k ) {\n      return this[k];\n    }\n\n    return {};\n  }\n\n  setData(key, value) { // or (mapOfNewData)\n    const isMap = key && typeof key === 'object';\n\n    if ( !this[this.configKey] || isMap ) {\n      set(this, this.configKey, {});\n    }\n\n    let neu;\n\n    if ( isMap ) {\n      neu = key;\n    } else {\n      neu = { [key]: value };\n    }\n\n    for ( const k in neu ) {\n      // The key is quoted so that keys like '.dockerconfigjson' that contain dot don't get parsed into an object path\n      set(this, `\"${ this.configKey }\".\"${ k }\"`, neu[k]);\n    }\n  }\n\n  get providerDisplay() {\n    const provider = (this.provider || '').toLowerCase();\n\n    return this.$rootGetters['i18n/withFallback'](`cluster.provider.\"${ provider }\"`, null, provider);\n  }\n\n  get publicData() {\n    let { publicKey, publicMode } = this.$rootGetters['plugins/credentialOptions'](this.provider);\n\n    const options = {\n      full:   fullFields,\n      prefix: prefixFields,\n      suffix: suffixFields,\n    };\n\n    if ( !publicKey ) {\n      for ( const k in this.decodedData || {} ) {\n        if ( publicKey ) {\n          break;\n        }\n\n        if ( isEmpty(this.decodedData[k]) ) {\n          continue;\n        }\n\n        for ( const mode in options ) {\n          if ( options[mode].includes( simplify(k) ) ) {\n            publicKey = k;\n            publicMode = mode;\n            break;\n          }\n        }\n      }\n    }\n\n    if ( !publicKey ) {\n      return null;\n    }\n\n    let val = this.decodedData[publicKey];\n\n    if ( !val ) {\n      val = this.secret?.decodedData?.[`${ this.provider }credentialConfig-${ publicKey }`];\n    }\n\n    if ( !val ) {\n      return null;\n    }\n\n    const maxLength = Math.min(8, Math.floor(val.length / 2));\n\n    if ( publicMode === 'prefix' ) {\n      return `${ escapeHtml(val.substr(0, maxLength)) }&hellip;`;\n    } else if ( publicMode === 'suffix' ) {\n      return `&hellip;${ escapeHtml(val.substr(-1 * maxLength)) }`;\n    } else {\n      return escapeHtml(val);\n    }\n  }\n\n  get doneRoute() {\n    return 'c-cluster-manager-secret';\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}