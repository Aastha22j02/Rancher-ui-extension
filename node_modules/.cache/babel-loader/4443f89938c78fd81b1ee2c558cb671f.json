{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/SelectCredential.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/SelectCredential.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Loading","LabeledSelect","NORMAN","DEFAULT_WORKSPACE","CreateEditView","CruResource","NameNsDescription","Banner","CAPI","clear","_NEW","_NONE","components","mixins","props","value","type","String","default","provider","cancel","Function","showingForm","Boolean","required","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","field","wrap","_callee$","_context","prev","next","$store","dispatch","CLOUD_CREDENTIAL","allCredentials","sent","getters","driverName","_defineProperty","metadata","namespace","annotations","CREDENTIAL_DRIVER","concat","newCredential","credentialId","filteredCredentials","length","id","stop","data","nodeComponent","createValidationPassed","originalId","computed","isNone","isNew","isPicked","driver","_this2","filter","x","options","_this3","duplicates","forEach","cred","nameDisplay","out","map","obj","label","find","unshift","replace","t","disabled","createComponent","validationPassed","watch","val","$emit","methods","save","btnCb","_this4","_callee2","_this4$$refs$create","res","_res","_callee2$","_context2","errors","$refs","create","test","abrupt","t0","name","generateName","t1","createValidationChanged","passed","backToExisting"],"sources":["node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/SelectCredential.vue"],"sourcesContent":["<script>\nimport Loading from '@shell/components/Loading';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { NORMAN, DEFAULT_WORKSPACE } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport CruResource from '@shell/components/CruResource';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport { Banner } from '@components/Banner';\nimport { CAPI } from '@shell/config/labels-annotations';\nimport { clear } from '@shell/utils/array';\n\nconst _NEW = '_NEW';\nconst _NONE = '_NONE';\n\nexport default {\n  components: {\n    Loading, LabeledSelect, CruResource, NameNsDescription, Banner\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    value: {\n      type:    String,\n      default: null,\n    },\n\n    provider: {\n      type:    String,\n      default: null,\n    },\n\n    cancel: {\n      type:    Function,\n      default: null\n    },\n\n    showingForm: {\n      type:     Boolean,\n      required: true,\n    }\n  },\n\n  async fetch() {\n    this.allCredentials = await this.$store.dispatch('rancher/findAll', { type: NORMAN.CLOUD_CREDENTIAL });\n\n    const field = this.$store.getters['plugins/credentialFieldForDriver'](this.driverName);\n\n    this.newCredential = await this.$store.dispatch('rancher/create', {\n      type:     NORMAN.CLOUD_CREDENTIAL,\n      metadata: {\n        namespace:   DEFAULT_WORKSPACE,\n        annotations: { [CAPI.CREDENTIAL_DRIVER]: this.driverName }\n      },\n      [`${ field }credentialConfig`]: {}\n    });\n\n    if ( this.value ) {\n      this.credentialId = this.value;\n    } else if ( this.filteredCredentials.length === 1 ) {\n      // Auto pick the first credential if there's only one\n      this.credentialId = this.filteredCredentials[0].id;\n    } else if ( !this.filteredCredentials.length ) {\n      this.credentialId = _NEW;\n    }\n  },\n\n  data() {\n    return {\n      allCredentials:         [],\n      nodeComponent:          null,\n      credentialId:           this.value || _NONE,\n      newCredential:          null,\n      createValidationPassed: false,\n      originalId:             this.value\n    };\n  },\n\n  computed: {\n    isNone() {\n      return this.credentialId === null || this.credentialId === _NONE;\n    },\n\n    isNew() {\n      return this.credentialId === _NEW;\n    },\n\n    isPicked() {\n      return !!this.credentialId && !this.isNone && !this.isNew;\n    },\n\n    driverName() {\n      let driver = this.provider;\n\n      // Map providers that share a common credential to one driver\n      driver = this.$store.getters['plugins/credentialDriverFor'](driver);\n\n      return driver;\n    },\n\n    filteredCredentials() {\n      return this.allCredentials.filter((x) => x.provider === this.driverName);\n    },\n\n    options() {\n      const duplicates = {};\n\n      this.filteredCredentials.forEach((cred) => {\n        duplicates[cred.nameDisplay] = duplicates[cred.nameDisplay] === null ? true : null;\n      });\n\n      const out = this.filteredCredentials.map((obj) => ({\n        // if credential name is duplicated we add the id to the label\n        label: duplicates[obj.nameDisplay] ? `${ obj.nameDisplay } (${ obj.id })` : obj.nameDisplay,\n        value: obj.id,\n      }));\n\n      if ( this.originalId && !out.find((x) => x.value === this.originalId) ) {\n        out.unshift({\n          label: `${ this.originalId.replace(/^cattle-global-data:/, '') } (current)`,\n          value: this.originalId\n        });\n      }\n\n      out.unshift({\n        label: this.t('cluster.credential.select.option.new'),\n        value: _NEW,\n      });\n\n      out.unshift({\n        label:    this.t('cluster.credential.select.option.none'),\n        value:    _NONE,\n        disabled: true,\n      });\n\n      return out;\n    },\n\n    createComponent() {\n      if (this.$store.getters['type-map/hasCustomCloudCredentialComponent'](this.driverName)) {\n        return this.$store.getters['type-map/importCloudCredential'](this.driverName);\n      }\n\n      return this.$store.getters['type-map/importCloudCredential']('generic');\n    },\n\n    validationPassed() {\n      if ( this.credentialId === _NONE ) {\n        return false;\n      }\n\n      if ( this.credentialId === _NEW ) {\n        return this.createValidationPassed;\n      }\n\n      return !!this.credentialId;\n    },\n  },\n\n  watch: {\n    credentialId(val) {\n      if ( val === _NEW || val === _NONE ) {\n        this.$emit('input', null);\n      } else {\n        this.$emit('input', val);\n      }\n    },\n  },\n\n  methods: {\n    async save(btnCb) {\n      if ( this.errors ) {\n        clear(this.errors);\n      }\n\n      if ( typeof this.$refs.create?.test === 'function' ) {\n        try {\n          const res = await this.$refs.create.test();\n\n          if ( !res ) {\n            this.errors = ['Authentication test failed, please check your credentials'];\n            btnCb(false);\n\n            return;\n          }\n        } catch (e) {\n          this.errors = [e];\n          btnCb(false);\n        }\n      }\n\n      if ( this.newCredential.metadata.name ) {\n        delete this.newCredential.metadata.generateName;\n      } else {\n        this.newCredential.metadata.generateName = 'cloud-credential-';\n      }\n\n      try {\n        const res = await this.newCredential.save();\n\n        this.credentialId = res.id;\n        btnCb(true);\n      } catch (e) {\n        this.errors = [e];\n        btnCb(false);\n      }\n    },\n\n    createValidationChanged(passed) {\n      this.createValidationPassed = passed;\n    },\n\n    backToExisting() {\n      this.credentialId = _NONE;\n    }\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <CruResource\n    v-else\n    :mode=\"mode\"\n    :validation-passed=\"validationPassed\"\n    :resource=\"newCredential\"\n    :can-yaml=\"false\"\n    :cancel-event=\"true\"\n    :errors=\"errors\"\n    finish-button-mode=\"continue\"\n    class=\"select-credentials\"\n    :class=\"{'select-credentials__showingForm': showingForm}\"\n    @finish=\"save\"\n    @cancel=\"cancel\"\n    @error=\"e=>errors = e\"\n  >\n    <div v-if=\"isNew\">\n      <Banner\n        :label=\"t('cluster.credential.banner.createCredential', {length: options.length}, true)\"\n        color=\"info\"\n      />\n\n      <NameNsDescription\n        v-model=\"newCredential\"\n        :namespaced=\"false\"\n        :description-hidden=\"true\"\n        name-key=\"name\"\n        name-label=\"cluster.credential.name.label\"\n        name-placeholder=\"cluster.credential.name.placeholder\"\n        :name-required=\"false\"\n        mode=\"create\"\n      />\n\n      <component\n        :is=\"createComponent\"\n        ref=\"create\"\n        v-model=\"newCredential\"\n        mode=\"create\"\n        :driver-name=\"driverName\"\n        @validationChanged=\"createValidationChanged\"\n      />\n    </div>\n    <div v-else>\n      <Banner\n        v-if=\"!credentialId\"\n        label=\"First you need to pick or create the cloud credential that will be used to create the nodes for the cluster...\"\n        color=\"info\"\n      />\n\n      <LabeledSelect\n        v-model=\"credentialId\"\n        :label=\"t('cluster.credential.label')\"\n        :options=\"options\"\n        option-key=\"value\"\n        :mode=\"mode\"\n        :selectable=\"option => !option.disabled\"\n        data-testid=\"cluster-prov-select-credential\"\n      />\n    </div>\n\n    <template\n      v-if=\"isNew && options.length\"\n      #footer-prefix\n    >\n      <button\n        class=\"btn role-secondary\"\n        @click=\"backToExisting()\"\n      >\n        {{ t('cluster.credential.selectExisting.label') }}\n      </button>\n    </template>\n\n    <template\n      v-if=\"isPicked\"\n      #form-footer\n    >\n      <div><!-- Hide the outer footer --></div>\n    </template>\n  </CruResource>\n</template>\n\n<style lang='scss' scoped>\n  .select-credentials {\n    flex-grow: 1; // Do grow when on own\n    &__showingForm {\n      flex-grow: 0; // Don't grow when in rke2 form\n    }\n  }\n</style>\n"],"mappings":"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","ignoreList":[]}]}