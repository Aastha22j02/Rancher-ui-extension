{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/list/provisioning.cattle.io.cluster.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/list/provisioning.cattle.io.cluster.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Banner","ResourceTable","Masthead","allHash","CAPI","MANAGEMENT","SNAPSHOT","NORMAN","MODE","_IMPORT","filterOnlyKubernetesClusters","filterHiddenLocalCluster","mapFeature","HARVESTER","HARVESTER_FEATURE","NAME","EXPLORER","ResourceFetch","BadgeState","components","mixins","props","loadIndeterminate","type","Boolean","default","incrementalLoadingIndicator","useQueryParamsForSimpleFiltering","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","hash","res","wrap","_callee$","_context","prev","next","$initializeFetchData","RANCHER_CLUSTER","rancherClusters","$fetchType","normanClusters","CLUSTER","mgmtClusters","$store","getters","etcdSnapshots","MACHINE","capiMachines","NODE","mgmtNodes","NODE_POOL","mgmtPools","NODE_TEMPLATE","mgmtTemplates","MACHINE_DEPLOYMENT","machineDeployments","RKE_TEMPLATE_REVISION","sent","stop","data","resource","schema","computed","filteredRows","harvesterEnabled","rows","hiddenHarvesterCount","product","isExplorer","name","length","createLocation","params","importLocation","query","_defineProperty","canImport","collectionMethods","find","x","toLowerCase","nonStandardNamespaces","some","c","metadata","namespace","$loadingResources","mounted","window"],"sources":["node_modules/@rancher/shell/list/provisioning.cattle.io.cluster.vue"],"sourcesContent":["<script>\nimport { Banner } from '@components/Banner';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport Masthead from '@shell/components/ResourceList/Masthead';\nimport { allHash } from '@shell/utils/promise';\nimport { CAPI, MANAGEMENT, SNAPSHOT, NORMAN } from '@shell/config/types';\nimport { MODE, _IMPORT } from '@shell/config/query-params';\nimport { filterOnlyKubernetesClusters, filterHiddenLocalCluster } from '@shell/utils/cluster';\nimport { mapFeature, HARVESTER as HARVESTER_FEATURE } from '@shell/store/features';\nimport { NAME as EXPLORER } from '@shell/config/product/explorer';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\nimport { BadgeState } from '@components/BadgeState';\n\nexport default {\n  components: {\n    Banner, ResourceTable, Masthead, BadgeState\n  },\n  mixins: [ResourceFetch],\n  props:  {\n    loadIndeterminate: {\n      type:    Boolean,\n      default: false\n    },\n\n    incrementalLoadingIndicator: {\n      type:    Boolean,\n      default: false\n    },\n\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  async fetch() {\n    this.$initializeFetchData(CAPI.RANCHER_CLUSTER);\n    const hash = {\n      rancherClusters: this.$fetchType(CAPI.RANCHER_CLUSTER),\n      normanClusters:  this.$fetchType(NORMAN.CLUSTER, [], 'rancher'),\n      mgmtClusters:    this.$fetchType(MANAGEMENT.CLUSTER),\n    };\n\n    if ( this.$store.getters['management/canList'](SNAPSHOT) ) {\n      hash.etcdSnapshots = this.$fetchType(SNAPSHOT);\n    }\n\n    if ( this.$store.getters['management/canList'](CAPI.MACHINE) ) {\n      hash.capiMachines = this.$fetchType(CAPI.MACHINE);\n    }\n\n    if ( this.$store.getters['management/canList'](MANAGEMENT.NODE) ) {\n      hash.mgmtNodes = this.$fetchType(MANAGEMENT.NODE);\n    }\n\n    if ( this.$store.getters['management/canList'](MANAGEMENT.NODE_POOL) ) {\n      hash.mgmtPools = this.$fetchType(MANAGEMENT.NODE_POOL);\n    }\n\n    if ( this.$store.getters['management/canList'](MANAGEMENT.NODE_TEMPLATE) ) {\n      hash.mgmtTemplates = this.$fetchType(MANAGEMENT.NODE_TEMPLATE);\n    }\n\n    if ( this.$store.getters['management/canList'](CAPI.MACHINE_DEPLOYMENT) ) {\n      hash.machineDeployments = this.$fetchType(CAPI.MACHINE_DEPLOYMENT);\n    }\n\n    // Fetch RKE template revisions so we can show when an updated template is available\n    // This request does not need to be blocking\n    if ( this.$store.getters['management/canList'](MANAGEMENT.RKE_TEMPLATE_REVISION) ) {\n      this.$fetchType(MANAGEMENT.RKE_TEMPLATE_REVISION);\n    }\n\n    const res = await allHash(hash);\n\n    this.mgmtClusters = res.mgmtClusters;\n  },\n\n  data() {\n    return {\n      resource:     CAPI.RANCHER_CLUSTER,\n      schema:       this.$store.getters['management/schemaFor'](CAPI.RANCHER_CLUSTER),\n      mgmtClusters: [],\n    };\n  },\n\n  computed: {\n    filteredRows() {\n      // If Harvester feature is enabled, hide Harvester Clusters\n      if (this.harvesterEnabled) {\n        return filterHiddenLocalCluster(filterOnlyKubernetesClusters(this.rows, this.$store), this.$store);\n      }\n\n      // Otherwise, show Harvester clusters - these will be shown with a warning\n      return filterHiddenLocalCluster(this.rows, this.$store);\n    },\n\n    hiddenHarvesterCount() {\n      const product = this.$store.getters['currentProduct'];\n      const isExplorer = product?.name === EXPLORER;\n\n      // Don't show Harvester banner message on the cluster management page or if Harvester if not enabled\n      if (!isExplorer || !this.harvesterEnabled) {\n        return 0;\n      }\n\n      return this.rows.length - filterOnlyKubernetesClusters(this.rows, this.$store).length;\n    },\n\n    createLocation() {\n      return {\n        name:   'c-cluster-product-resource-create',\n        params: {\n          product:  this.$store.getters['currentProduct'].name,\n          resource: this.resource\n        },\n      };\n    },\n\n    importLocation() {\n      return {\n        name:   'c-cluster-product-resource-create',\n        params: {\n          product:  this.$store.getters['currentProduct'].name,\n          resource: this.resource\n        },\n        query: { [MODE]: _IMPORT }\n      };\n    },\n\n    canImport() {\n      const schema = this.$store.getters['management/schemaFor'](CAPI.RANCHER_CLUSTER);\n\n      return !!schema?.collectionMethods.find((x) => x.toLowerCase() === 'post');\n    },\n\n    harvesterEnabled: mapFeature(HARVESTER_FEATURE),\n\n    nonStandardNamespaces() {\n      // Show the namespace grouping option if there's clusters with namespaces other than 'fleet-default' or 'fleet-local'\n      // This will be used when there's clusters from extension based provisioners\n      // We should re-visit this for scaling reasons\n      return this.filteredRows.some((c) => c.metadata.namespace !== 'fleet-local' && c.metadata.namespace !== 'fleet-default');\n    }\n  },\n\n  $loadingResources() {\n    // results are filtered so we wouldn't get the correct count on indicator...\n    return { loadIndeterminate: true };\n  },\n\n  mounted() {\n    window.c = this;\n  },\n};\n</script>\n\n<template>\n  <div>\n    <Banner\n      v-if=\"hiddenHarvesterCount\"\n      color=\"info\"\n      :label=\"t('cluster.harvester.clusterWarning', {count: hiddenHarvesterCount} )\"\n    />\n\n    <Masthead\n      :schema=\"schema\"\n      :resource=\"resource\"\n      :create-location=\"createLocation\"\n      component-testid=\"cluster-manager-list\"\n      :show-incremental-loading-indicator=\"incrementalLoadingIndicator\"\n      :load-resources=\"loadResources\"\n      :load-indeterminate=\"loadIndeterminate\"\n    >\n      <template\n        v-if=\"canImport\"\n        slot=\"extraActions\"\n      >\n        <n-link\n          :to=\"importLocation\"\n          class=\"btn role-primary mr-10\"\n          data-testid=\"cluster-manager-list-import\"\n        >\n          {{ t('cluster.importAction') }}\n        </n-link>\n      </template>\n    </Masthead>\n\n    <ResourceTable\n      :schema=\"schema\"\n      :rows=\"filteredRows\"\n      :namespaced=\"nonStandardNamespaces\"\n      :loading=\"loading\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :data-testid=\"'cluster-list'\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n    >\n      <!-- Why are state column and subrow overwritten here? -->\n      <!-- for rke1 clusters, where they try to use the mgmt cluster stateObj instead of prov cluster stateObj,  -->\n      <!-- updates were getting lost. This isn't performant as normal columns, but the list shouldn't grow -->\n      <!-- big enough for the performance to matter -->\n      <template #cell:state=\"{row}\">\n        <BadgeState\n          :color=\"row.stateBackground\"\n          :label=\"row.stateDisplay\"\n        />\n      </template>\n      <template #sub-row=\"{fullColspan, row, keyField, componentTestid, i, onRowMouseEnter, onRowMouseLeave}\">\n        <tr\n          v-if=\"row.stateDescription\"\n          :key=\"row[keyField] + '-description'\"\n          :data-testid=\"componentTestid + '-' + i + '-row-description'\"\n          class=\"state-description sub-row\"\n          @mouseenter=\"onRowMouseEnter\"\n          @mouseleave=\"onRowMouseLeave\"\n        >\n          <td>&nbsp;</td>\n          <td\n            :colspan=\"fullColspan - 1\"\n            :class=\"{ 'text-error' : row.stateObj.error }\"\n          >\n            {{ row.stateDescription }}\n          </td>\n        </tr>\n      </template>\n      <template #cell:summary=\"{row}\">\n        <span v-if=\"!row.stateParts.length\">{{ row.nodes.length }}</span>\n      </template>\n      <template #cell:explorer=\"{row}\">\n        <n-link\n          v-if=\"row.mgmt && row.mgmt.isReady && !row.hasError\"\n          data-testid=\"cluster-manager-list-explore-management\"\n          class=\"btn btn-sm role-secondary\"\n          :to=\"{name: 'c-cluster', params: {cluster: row.mgmt.id}}\"\n        >\n          {{ t('cluster.explore') }}\n        </n-link>\n        <button\n          v-else\n          data-testid=\"cluster-manager-list-explore\"\n          :disabled=\"true\"\n          class=\"btn btn-sm role-secondary\"\n        >\n          {{ t('cluster.explore') }}\n        </button>\n      </template>\n    </ResourceTable>\n  </div>\n</template>\n"],"mappings":"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","ignoreList":[]}]}