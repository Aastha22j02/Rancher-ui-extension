{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/c/_cluster/apps/charts/install.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/c/_cluster/apps/charts/install.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["jsyaml","merge","isEqual","mapPref","DIFF","mapFeature","MULTI_CLUSTER","LEGACY","mapGetters","Banner","ButtonGroup","ChartReadme","Checkbox","LabeledSelect","LabeledInput","LabeledTooltip","LazyImage","Loading","NameNsDescription","ResourceCancelModal","Questions","Tabbed","UnitInput","YamlEditor","EDITOR_MODES","Wizard","TypeDescription","ChartMixin","ChildHook","BEFORE_SAVE_HOOKS","AFTER_SAVE_HOOKS","CATALOG","MANAGEMENT","DEFAULT_WORKSPACE","CAPI","CHART","FROM_CLUSTER","FROM_TOOLS","HIDE_SIDE_NAV","NAMESPACE","REPO","REPO_TYPE","VERSION","_FLAGGED","CATALOG_ANNOTATIONS","PROJECT","exceptionToErrorsArray","clone","diff","get","set","ignoreVariables","findBy","insertAt","Vue","saferDump","LINUX","WINDOWS","VALUES_STATE","FORM","YAML","isPlainLayout","query","Object","keys","includes","name","layout","context","components","mixins","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$chart","_this$existing2","_this$existing","_this$chart2","ns","_ns$metadata$annotati","project","_this$versionInfo","_this$versionInfo2","_this$version","userValues","_this$existing$spec","_this$chartValues","_this$chartValues2","_this$chartValues3","_this$chartValues4","existingRegistry","wrap","_callee$","_context","prev","next","errors","fetchChart","t0","console","warn","fetchAutoInstallInfo","t1","showCustomRegistry","getClusterRegistry","clusterRegistry","sent","t2","getGlobalRegistry","globalRegistry","t3","defaultRegistrySetting","$store","dispatch","type","SETTING","id","serverUrlSetting","t4","error","existing","forceNamespace","metadata","namespace","nameDisabled","$route","chart","targetNamespace","appNamespace","deployedAsLegacy","t5","legacyApp","t6","deployedAsMultiCluster","t7","mcapp","t8","getters","spec","appName","value","t9","abrupt","targetName","description","customCmdOpts","annotations","replace","t10","versionName","version","loadValuesComponent","loadChartSteps","loadedVersion","key","showingYaml","applyYamlToValues","loadedVersionValues","chartValues","values","removeGlobalValuesFrom","versionInfo","global","systemDefaultRegistry","cattle","customRegistrySetting","showCustomRegistryInput","valuesYaml","originalYamlValues","updateStepOneReady","preFormYamlOption","valuesComponent","hasQuestions","migratedApp","MIGRATED","stop","data","defaultCmdOpts","cleanupOnFail","crds","hooks","force","resetValues","openApi","wait","timeout","historyMax","previousYamlValues","mode","_objectSpread","autoInstallInfo","formYamlOption","showDiff","showValuesComponent","showQuestions","showSlideIn","shownReadmeWindows","componentHasTabs","showCommandStep","isNamespaceNew","stepBasic","label","t","subtext","descriptionKey","ready","weight","stepClusterTplVersion","stepValues","stepCommands","customSteps","legacyDefs","legacy","mcm","computed","inStore","features","namespaceIsNew","_this$value","all","want","showProject","isRancher","projectOpts","cluster","currentCluster","projects","out","filter","x","clusterName","map","nameDisplay","unshift","concat","charts","_this$existing3","_this2","current","matchingChart","chartName","hidden","showHidden","deprecated","showDeprecated","last","i","length","repoName","kind","repoNameDisplay","disabled","showSelectVersionOrChart","showNameEditor","showVersions","_this$chart3","versions","_this$value2","editorMode","DIFF_CODE","EDIT_CODE","showingYamlDiff","formYamlOptions","options","push","labelKey","dump","yamlDiffModeOptions","stepperName","_this$existing4","_this$chart4","chartNameDisplay","stepperSubtext","currentVersion","targetVersion","readmeWindowName","_this$version2","showingReadmeWindow","diffMode","step1Description","steps","find","s","action","step2Description","step3Description","_this$version3","TYPE","_CLUSTER_TPL","_this$filteredVersion","filteredVersions","apply","_toConsumableArray","sort","a","b","cmdOptions","namespaceNewAllowed","legacyEnabled","legacyFeatureRoute","params","product","resource","legacyAppRoute","windowsIncompatible","_this$chart5","_this$versionInfo3","incompatibleVersion","PERMITTED_OS","_this$versionInfo4","_global$cattle","undefined","watch","$routeQuery","neu","old","$fetch","valueMetadataNamespace","_ns$metadata$annotati2","$refs","cancelModal","show","updateValue","requires","warnings","mounted","_this3","_callee2","_callee2$","_context2","window","scrollTop","beforeDestroy","_this4","forEach","root","methods","_this5","_callee3","hasPermissionToSeeProvCluster","_provCluster","_provCluster2","mgmCluster","provClusterId","provCluster","_provCluster$agentCon","_mgmCluster$spec","rke1Registries","defaultRegistry","_callee3$","_context3","RANCHER_CLUSTER","isRke2","agentConfig","isRke1","rancherKubernetesEngineConfig","privateRegistries","registry","isDefault","url","_this6","_callee4","_callee4$","_context4","yaml","_this7","_callee5","_this7$version","component","hasChartComponent","_loaded$default","loaded","_callee5$","_context5","COMPONENT","default","hasTabs","_this8","_callee6","_this8$version","_callee6$","_context6","Promise","cs","loadChartStep","customStep","_this9","_callee7","_loaded$default2","_loaded$default3","_loaded$default4","withFallBack","_callee7$","_context7","loading","selectChart","$router","applyQuery","_defineProperty","repoType","cancel","done","clusterToolsLocation","clustersLocation","chartLocation","appLocation","finish","btnCb","_this10","_callee8","isUpgrade","_this10$actionInput","input","res","operationId","_callee8$","_context8","applyHooks","actionInput","repo","doAction","operationNamespace","operationName","waitForOperation","OPERATION","operation","waitForLink","openLogs","addGlobalValuesTo","_projects$find","_this$serverUrlSettin","_cluster$spec","_cluster$spec2","systemProjectId","p","_p$spec","displayName","split","serverUrl","isWindows","workerOSs","pathPrefix","prefixPath","windowsPathPrefix","winPrefixPath","setIfNotSet","obj","val","_this$serverUrlSettin2","_cluster$spec3","_cluster$spec4","_values$global","_values$global2","_values$global3","deleteIfEqual","windows","load","err","_this$versionInfo5","_this$version4","_this$version5","fromChart","_this$applyYamlToValu","yamlErrors","form","JSON","parse","stringify","migratedAnnotations","releaseName","SOURCE_REPO_TYPE","SOURCE_REPO_NAME","noHooks","projectId","disableOpenAPIValidation","skipCRDs","more","auto","AUTO_INSTALL_GVK","reverse","_iterator","_createForOfIteratorHelper","_step","n","gvr","provider","e","f","_iterator2","_step2","allValues","crdValues","customizedCrdValues","crdValuesToInstall","RELEASE_NAME","_i","_more","dependency","tabChanged","okRequires","okChart","updateStepTwoReady","update","updateStep","getOptionLabel","opt","showReadmeWindow","icon","attrs","stepName","step","prop"],"sources":["node_modules/@rancher/shell/pages/c/_cluster/apps/charts/install.vue"],"sourcesContent":["<script>\nimport jsyaml from 'js-yaml';\nimport merge from 'lodash/merge';\nimport isEqual from 'lodash/isEqual';\nimport { mapPref, DIFF } from '@shell/store/prefs';\nimport { mapFeature, MULTI_CLUSTER, LEGACY } from '@shell/store/features';\nimport { mapGetters } from 'vuex';\nimport { Banner } from '@components/Banner';\nimport ButtonGroup from '@shell/components/ButtonGroup';\nimport ChartReadme from '@shell/components/ChartReadme';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { LabeledTooltip } from '@components/LabeledTooltip';\nimport LazyImage from '@shell/components/LazyImage';\nimport Loading from '@shell/components/Loading';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport ResourceCancelModal from '@shell/components/ResourceCancelModal';\nimport Questions from '@shell/components/Questions';\nimport Tabbed from '@shell/components/Tabbed';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport YamlEditor, { EDITOR_MODES } from '@shell/components/YamlEditor';\nimport Wizard from '@shell/components/Wizard';\nimport TypeDescription from '@shell/components/TypeDescription';\nimport ChartMixin from '@shell/mixins/chart';\nimport ChildHook, { BEFORE_SAVE_HOOKS, AFTER_SAVE_HOOKS } from '@shell/mixins/child-hook';\nimport { CATALOG, MANAGEMENT, DEFAULT_WORKSPACE, CAPI } from '@shell/config/types';\nimport {\n  CHART, FROM_CLUSTER, FROM_TOOLS, HIDE_SIDE_NAV, NAMESPACE, REPO, REPO_TYPE, VERSION, _FLAGGED\n} from '@shell/config/query-params';\nimport { CATALOG as CATALOG_ANNOTATIONS, PROJECT } from '@shell/config/labels-annotations';\n\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport { clone, diff, get, set } from '@shell/utils/object';\nimport { ignoreVariables } from './install.helpers';\nimport { findBy, insertAt } from '@shell/utils/array';\nimport Vue from 'vue';\nimport { saferDump } from '@shell/utils/create-yaml';\nimport { LINUX, WINDOWS } from '@shell/store/catalog';\n\nconst VALUES_STATE = {\n  FORM: 'FORM',\n  YAML: 'YAML',\n  DIFF: 'DIFF'\n};\n\nfunction isPlainLayout(query) {\n  return Object.keys(query).includes(HIDE_SIDE_NAV);\n}\n\nexport default {\n  name: 'Install',\n\n  layout(context) {\n    return isPlainLayout(context.query) ? 'plain' : '';\n  },\n\n  components: {\n    Banner,\n    ButtonGroup,\n    ChartReadme,\n    Checkbox,\n    LabeledInput,\n    LabeledSelect,\n    LabeledTooltip,\n    LazyImage,\n    Loading,\n    NameNsDescription,\n    ResourceCancelModal,\n    Questions,\n    Tabbed,\n    UnitInput,\n    YamlEditor,\n    Wizard,\n    TypeDescription\n  },\n\n  mixins: [\n    ChildHook,\n    ChartMixin\n  ],\n\n  async fetch() {\n    this.errors = [];\n    // IMPORTANT! Any exception thrown before this.value is set will result in an empty page\n\n    /*\n      fetchChart is defined in shell/mixins. It first checks the URL\n      query for an app name and namespace. It uses those values to check\n      for a catalog app resource. If found, it sets the form to edit\n      mode. If not, it sets the form to create mode.\n\n      If the app and app namespace are not provided in the query,\n      it checks for target name and namespace values defined in the\n      Helm chart itself.\n    */\n    try {\n      await this.fetchChart();\n    } catch (e) {\n      console.warn('Unable to fetch chart: ', e); // eslint-disable-line no-console\n    }\n\n    try {\n      await this.fetchAutoInstallInfo();\n    } catch (e) {\n      console.warn('Unable to determine if other charts require install: ', e); // eslint-disable-line no-console\n    }\n\n    // If the chart doesn't contain system `systemDefaultRegistry` properties there's no point applying them\n    if (this.showCustomRegistry) {\n      // Note: Cluster scoped registry is only supported for node driver clusters\n      try {\n        this.clusterRegistry = await this.getClusterRegistry();\n      } catch (e) {\n        console.warn('Unable to get cluster registry: ', e); // eslint-disable-line no-console\n      }\n\n      try {\n        this.globalRegistry = await this.getGlobalRegistry();\n      } catch (e) {\n        console.warn('Unable to get global registry: ', e); // eslint-disable-line no-console\n      }\n      this.defaultRegistrySetting = this.clusterRegistry || this.globalRegistry;\n    }\n\n    try {\n      this.serverUrlSetting = await this.$store.dispatch('management/find', {\n        type: MANAGEMENT.SETTING,\n        id:   'server-url'\n      });\n    } catch (e) {\n      console.error('Unable to fetch `server-url` setting: ', e); // eslint-disable-line no-console\n    }\n\n    /*\n      Figure out the namespace where the chart is\n      being installed or upgraded.\n    */\n    if ( this.existing ) {\n      /*\n      If the Helm chart is already installed,\n      use the existing namespace by default.\n    */\n\n      this.forceNamespace = this.existing.metadata.namespace;\n      this.nameDisabled = true;\n    } else if (this.$route.query[FROM_CLUSTER] === _FLAGGED) {\n      /* For Fleet, use the fleet-default namespace. */\n      this.forceNamespace = DEFAULT_WORKSPACE;\n    } else if ( this.chart?.targetNamespace ) {\n      /* If a target namespace is defined in the chart,\n      set the target namespace as default. */\n      this.forceNamespace = this.chart.targetNamespace;\n    } else if ( this.query.appNamespace ) {\n      /* If a namespace is defined in the URL query,\n       use that namespace as default. */\n      this.forceNamespace = this.query.appNamespace;\n    } else {\n      this.forceNamespace = null;\n    }\n\n    /* Check if the app is deprecated. */\n    try {\n      this.legacyApp = this.existing ? await this.existing.deployedAsLegacy() : false;\n    } catch (e) {\n      this.legacyApp = false;\n      console.warn('Unable to determine if existing install is a legacy app: ', e); // eslint-disable-line no-console\n    }\n\n    /* Check if the app is a multicluster deprecated app.\n    (Multicluster apps were replaced by Fleet.) */\n\n    try {\n      this.mcapp = this.existing ? await this.existing.deployedAsMultiCluster() : false;\n    } catch (e) {\n      this.mcapp = false;\n      console.warn('Unable to determine if existing install is a mc app: ', e); // eslint-disable-line no-console\n    }\n\n    /* The form state is intialized as a chartInstallAction resource. */\n    try {\n      this.value = await this.$store.dispatch('cluster/create', {\n        type:     'chartInstallAction',\n        metadata: {\n          namespace: this.forceNamespace || this.$store.getters['defaultNamespace'],\n          name:      this.existing?.spec?.name || this.query.appName || '',\n        }\n      });\n    } catch (e) {\n      console.error('Unable to create object of type `chartInstallAction`: ', e); // eslint-disable-line no-console\n\n      // Nothing's going to work without a `value`. See https://github.com/rancher/dashboard/issues/9452 to handle this and other catches.\n      return;\n    }\n\n    /* Logic for when the Helm chart is not already installed */\n    if ( !this.existing) {\n      /*\n        The target name is used for Git repos for Fleet.\n        The target name indicates the name of the cluster\n        group that the chart is meant to be installed in.\n      */\n      if ( this.chart?.targetName ) {\n        /*\n          Set the name of the chartInstallAction\n          to the name of the cluster group\n          where the chart should be installed.\n        */\n        this.value.metadata.name = this.chart.targetName;\n        this.nameDisabled = true;\n      } else if ( this.query.appName ) {\n        this.value.metadata.name = this.query.appName;\n      } else {\n        this.nameDisabled = false;\n      }\n\n      if ( this.query.description ) {\n        this.customCmdOpts.description = this.query.description;\n      }\n    } /* End of logic for when chart is already installed */\n\n    /*\n      Logic for what to do if the user is installing\n      the Helm chart for the first time and a default\n      namespace has been set.\n    */\n    if (this.forceNamespace && !this.existing) {\n      let ns;\n\n      /*\n        Before moving forward, check to make sure the\n        default namespace exists and the logged-in user\n        has permission to see it.\n      */\n      try {\n        ns = await this.$store.dispatch('cluster/find', { type: NAMESPACE, id: this.forceNamespace });\n        const project = ns.metadata.annotations?.[PROJECT];\n\n        if (project) {\n          this.project = project.replace(':', '/');\n        }\n      } catch {}\n    }\n\n    /* If no chart by the given app name and namespace\n     can be found, or if no version is found, do nothing. */\n    if ( !this.chart || !this.query.versionName) {\n      return;\n    }\n\n    if ( this.version ) {\n      /*\n        Check if the Helm chart has provided the name\n        of a Vue component to use for configuring\n        chart values. If so, load that component.\n\n        This will set this.valuesComponent,\n        this.componentHasTabs and this.showValuesComponent.\n      */\n      await this.loadValuesComponent();\n    }\n\n    /*\n      Check if the Helm chart has indicated\n      that the user should fill out the chart values\n      through a wizard-style workflow. If so, load\n      the chart steps.\n    */\n    await this.loadChartSteps();\n\n    /*\n      this.loadedVersion will only be true if you select a non-defalut\n      option from the \"Version\" dropdown menu in Apps & Marketplace\n      when updating a previously installed app.\n    */\n    if ( !this.loadedVersion || this.loadedVersion !== this.version.key ) {\n      let userValues;\n\n      /*\n        When you select a version, a new chart is loaded. Then\n        Rancher anticipates that you probably want to port all of your\n        previously customized, non-default values from the old chart\n        version to the new chart version, so it applies the previous\n        chart's customization to the new chart values before\n        you see the values form on the next page in the workflow.\n      */\n      if ( this.loadedVersion ) {\n        if ( this.showingYaml ) {\n          this.applyYamlToValues();\n        }\n        /*\n          this.loadedVersionValues is taken from versionInfo,\n          which contains everything there is to know about a specific\n          version of a Helm chart, including all chart values,\n          chart metadata, a short app README and a more\n          version-specific README called the chart README.\n\n          Here we assume that any difference between the values in\n          two different Helm chart versions is a \"user value,\" or\n          a user-selected customization.\n        */\n        userValues = diff(this.loadedVersionValues, this.chartValues);\n      } else if ( this.existing ) {\n        /* For an already installed app, use the values from the previous install. */\n        userValues = clone(this.existing.spec?.values || {});\n      } else {\n        /* For an new app, start empty. */\n        userValues = {};\n      }\n\n      /*\n        Remove global values if they are identical to\n        the currently available information about the cluster\n        and Rancher settings.\n\n        Immediately before the Helm chart is installed or\n        upgraded, the global values are re-added.\n      */\n      this.removeGlobalValuesFrom(userValues);\n\n      /*\n        The merge() method is used to merge two or more objects\n        starting with the left-most to the right-most to create a\n        parent mapping object. When two keys are the same, the\n        generated object will have value for the rightmost key.\n        In this case, any values in userValues override any\n        matching values in versionInfo.\n      */\n      this.chartValues = merge(merge({}, this.versionInfo?.values || {}), userValues);\n\n      if (this.showCustomRegistry) {\n        /**\n         * The input to configure the registry should never be\n         * shown for third-party charts, which don't have Rancher\n         * global values.\n         */\n        const existingRegistry = this.chartValues?.global?.systemDefaultRegistry || this.chartValues?.global?.cattle?.systemDefaultRegistry;\n\n        delete this.chartValues?.global?.systemDefaultRegistry;\n        delete this.chartValues?.global?.cattle?.systemDefaultRegistry;\n\n        this.customRegistrySetting = existingRegistry || this.defaultRegistrySetting;\n        this.showCustomRegistryInput = !!this.customRegistrySetting;\n      }\n\n      /* Serializes an object as a YAML document */\n      this.valuesYaml = saferDump(this.chartValues);\n\n      /* For YAML diff */\n      if ( !this.loadedVersion ) {\n        this.originalYamlValues = this.valuesYaml;\n      }\n\n      this.loadedVersionValues = this.versionInfo?.values || {};\n      this.loadedVersion = this.version?.key;\n    }\n\n    /* Check if chart exists and if required values exist */\n    this.updateStepOneReady();\n\n    this.preFormYamlOption = this.valuesComponent || this.hasQuestions ? VALUES_STATE.FORM : VALUES_STATE.YAML;\n\n    /* Look for annotation to say this app is a legacy migrated app (we look in either place for now) */\n    this.migratedApp = (this.existing?.spec?.chart?.metadata?.annotations?.[CATALOG_ANNOTATIONS.MIGRATED] === 'true');\n  },\n\n  data() {\n    /* Helm CLI options that are not persisted on the back end,\n    but are used for the final install/upgrade operation. */\n    const defaultCmdOpts = {\n      cleanupOnFail: false,\n      crds:          true,\n      hooks:         true,\n      force:         false,\n      resetValues:   false,\n      openApi:       true,\n      wait:          true,\n      timeout:       600,\n      historyMax:    5,\n    };\n\n    return {\n      defaultRegistrySetting: '',\n      customRegistrySetting:  '',\n      serverUrlSetting:       null,\n      chartValues:            null,\n      clusterRegistry:        '',\n      originalYamlValues:     null,\n      previousYamlValues:     null,\n      errors:                 null,\n      existing:               null,\n      globalRegistry:         '',\n      forceNamespace:         null,\n      loadedVersion:          null,\n      loadedVersionValues:    null,\n      legacyApp:              null,\n      mcapp:                  null,\n      mode:                   null,\n      value:                  null,\n      valuesComponent:        null,\n      valuesYaml:             '',\n      project:                null,\n      migratedApp:            false,\n      defaultCmdOpts,\n      customCmdOpts:          { ...defaultCmdOpts },\n      autoInstallInfo:        [],\n\n      nameDisabled: false,\n\n      preFormYamlOption:       VALUES_STATE.YAML,\n      formYamlOption:          VALUES_STATE.YAML,\n      showDiff:                false,\n      showValuesComponent:     true,\n      showQuestions:           true,\n      showSlideIn:             false,\n      shownReadmeWindows:      [],\n      componentHasTabs:        false,\n      showCommandStep:         false,\n      showCustomRegistryInput: false,\n      isNamespaceNew:          false,\n\n      stepBasic: {\n        name:           'basics',\n        label:          this.t('catalog.install.steps.basics.label'),\n        subtext:        this.t('catalog.install.steps.basics.subtext'),\n        descriptionKey: 'catalog.install.steps.basics.description',\n        ready:          true,\n        weight:         30\n      },\n      stepClusterTplVersion: {\n        name:           'clusterTplVersion',\n        label:          this.t('catalog.install.steps.clusterTplVersion.label'),\n        subtext:        this.t('catalog.install.steps.clusterTplVersion.subtext'),\n        descriptionKey: 'catalog.install.steps.helmValues.description',\n        ready:          true,\n        weight:         30\n      },\n      stepValues: {\n        name:           'helmValues',\n        label:          this.t('catalog.install.steps.helmValues.label'),\n        subtext:        this.t('catalog.install.steps.helmValues.subtext'),\n        descriptionKey: 'catalog.install.steps.helmValues.description',\n        ready:          true,\n        weight:         20\n      },\n      stepCommands: {\n        name:           'helmCli',\n        label:          this.t('catalog.install.steps.helmCli.label'),\n        subtext:        this.t('catalog.install.steps.helmCli.subtext'),\n        descriptionKey: 'catalog.install.steps.helmCli.description',\n        ready:          true,\n        weight:         10\n      },\n\n      customSteps: [\n\n      ],\n\n      isPlainLayout: isPlainLayout(this.$route.query),\n\n      legacyDefs: {\n        legacy: this.t('catalog.install.error.legacy.category.legacy'),\n        mcm:    this.t('catalog.install.error.legacy.category.mcm')\n      }\n    };\n  },\n\n  computed: {\n    ...mapGetters({ inStore: 'catalog/inStore', features: 'features/get' }),\n    mcm: mapFeature(MULTI_CLUSTER),\n\n    /**\n     * Return list of variables to filter chart questions\n     */\n    ignoreVariables() {\n      return ignoreVariables(this.versionInfo);\n    },\n\n    namespaceIsNew() {\n      const all = this.$store.getters['cluster/all'](NAMESPACE);\n      const want = this.value?.metadata?.namespace;\n\n      if ( !want ) {\n        return false;\n      }\n\n      return !findBy(all, 'id', want);\n    },\n\n    showProject() {\n      return this.isRancher && !this.existing && this.forceNamespace;\n    },\n\n    projectOpts() {\n      const cluster = this.currentCluster;\n      const projects = this.$store.getters['management/all'](MANAGEMENT.PROJECT);\n\n      const out = projects.filter((x) => x.spec.clusterName === cluster?.id).map((project) => {\n        return {\n          id:    project.id,\n          label: project.nameDisplay,\n          value: project.id\n        };\n      });\n\n      out.unshift({\n        id:    'none',\n        label: `(${ this.t('generic.none') })`,\n        value: '',\n      });\n\n      return out;\n    },\n\n    charts() {\n      const current = this.existing?.matchingChart(true);\n\n      const out = this.$store.getters['catalog/charts'].filter((x) => {\n        if ( x.key === current?.key || x.chartName === current?.chartName ) {\n          return true;\n        }\n\n        if ( x.hidden && !this.showHidden ) {\n          return false;\n        }\n\n        if ( x.deprecated && !this.showDeprecated ) {\n          return false;\n        }\n\n        return true;\n      });\n\n      let last = '';\n\n      for ( let i = 0 ; i < out.length ; i++ ) {\n        if ( out[i].repoName !== last ) {\n          last = out[i].repoName;\n          insertAt(out, i, {\n            kind:     'label',\n            label:    out[i].repoNameDisplay,\n            disabled: true\n          });\n          i++;\n        }\n      }\n\n      return out;\n    },\n\n    showSelectVersionOrChart() {\n      // Allow the user to choose a version if the app exists OR they've come from tools\n      return this.existing || (FROM_TOOLS in this.$route.query);\n    },\n\n    showNameEditor() {\n      return !this.nameDisabled || !this.forceNamespace;\n    },\n\n    showVersions() {\n      return this.chart?.versions.length > 1;\n    },\n\n    targetNamespace() {\n      if ( this.forceNamespace ) {\n        return this.forceNamespace;\n      } else if ( this.value?.metadata.namespace ) {\n        return this.value.metadata.namespace;\n      }\n\n      return 'default';\n    },\n\n    editorMode() {\n      if ( this.showDiff ) {\n        return EDITOR_MODES.DIFF_CODE;\n      }\n\n      return EDITOR_MODES.EDIT_CODE;\n    },\n\n    showingYaml() {\n      return this.formYamlOption === VALUES_STATE.YAML || ( !this.valuesComponent && !this.hasQuestions );\n    },\n\n    showingYamlDiff() {\n      return this.formYamlOption === VALUES_STATE.DIFF;\n    },\n\n    formYamlOptions() {\n      const options = [];\n\n      if (this.valuesComponent || this.hasQuestions) {\n        options.push({\n          labelKey: 'catalog.install.section.chartOptions',\n          value:    VALUES_STATE.FORM,\n        });\n      }\n      options.push({\n        labelKey: 'catalog.install.section.valuesYaml',\n        value:    VALUES_STATE.YAML,\n      }, {\n        labelKey: 'catalog.install.section.diff',\n        value:    VALUES_STATE.DIFF,\n        // === quite obviously shouldn't work, but has been and still does. When the magic breaks address with heavier stringify/jsyaml.dump\n        disabled: this.formYamlOption === VALUES_STATE.FORM ? this.originalYamlValues === jsyaml.dump(this.chartValues || {}) : this.originalYamlValues === this.valuesYaml,\n      });\n\n      return options;\n    },\n\n    yamlDiffModeOptions() {\n      return [{\n        labelKey: 'resourceYaml.buttons.unified',\n        value:    'unified',\n      }, {\n        labelKey: 'resourceYaml.buttons.split',\n        value:    'split',\n      }];\n    },\n\n    stepperName() {\n      return this.existing?.nameDisplay || this.chart?.chartNameDisplay;\n    },\n\n    stepperSubtext() {\n      return this.existing && this.currentVersion !== this.targetVersion ? `${ this.currentVersion } > ${ this.targetVersion }` : this.targetVersion;\n    },\n\n    readmeWindowName() {\n      // Version can change, so allow multiple WM tabs for different versions\n      return `${ this.stepperName }-${ this.version?.version }`;\n    },\n\n    showingReadmeWindow() {\n      return !!this.$store.getters['wm/byId'](this.readmeWindowName);\n    },\n\n    diffMode: mapPref(DIFF),\n\n    step1Description() {\n      const descriptionKey = this.steps.find((s) => s.name === 'basics').descriptionKey;\n\n      return this.$store.getters['i18n/withFallback'](descriptionKey, { action: this.action, existing: !!this.existing }, '');\n    },\n\n    step2Description() {\n      const descriptionKey = this.steps.find((s) => s.name === 'helmValues').descriptionKey;\n\n      return this.$store.getters['i18n/withFallback'](descriptionKey, { action: this.action, existing: !!this.existing }, '');\n    },\n\n    step3Description() {\n      const descriptionKey = this.steps.find((s) => s.name === 'helmCli').descriptionKey;\n\n      return this.$store.getters['i18n/withFallback'](descriptionKey, { action: this.action, existing: !!this.existing }, '');\n    },\n\n    steps() {\n      const steps = [];\n\n      const type = this.version?.annotations?.[CATALOG_ANNOTATIONS.TYPE];\n\n      if ( type === CATALOG_ANNOTATIONS._CLUSTER_TPL ) {\n        if (this.filteredVersions?.length > 1) {\n          steps.push(this.stepClusterTplVersion);\n        }\n        steps.push({\n          ...this.stepValues,\n          label:          this.t('catalog.install.steps.clusterTplValues.label'),\n          subtext:        this.t('catalog.install.steps.clusterTplValues.subtext'),\n          descriptionKey: 'catalog.install.steps.clusterTplValues.description',\n        });\n      } else {\n        steps.push(\n          this.stepBasic,\n          this.stepValues,\n          ...this.customSteps\n        );\n      }\n\n      if (this.showCommandStep) {\n        steps.push(this.stepCommands);\n      }\n\n      return steps.sort((a, b) => (b.weight || 0) - (a.weight || 0));\n    },\n\n    cmdOptions() {\n      return this.showCommandStep ? this.customCmdOpts : this.defaultCmdOpts;\n    },\n\n    namespaceNewAllowed() {\n      return !this.existing && !this.forceNamespace;\n    },\n\n    legacyEnabled() {\n      // Check for the legacy feature flag in the settings\n      return this.features(LEGACY);\n    },\n\n    legacyFeatureRoute() {\n      return {\n        name:   'c-cluster-product-resource',\n        params: { product: 'settings', resource: 'management.cattle.io.feature' }\n      };\n    },\n\n    legacyAppRoute() {\n      return { name: 'c-cluster-legacy-project' };\n    },\n\n    windowsIncompatible() {\n      if (this.chart?.windowsIncompatible) {\n        return this.t('catalog.charts.windowsIncompatible');\n      }\n      if (this.versionInfo) {\n        const incompatibleVersion = !(this.versionInfo?.chart?.annotations?.[CATALOG_ANNOTATIONS.PERMITTED_OS] || LINUX).includes('windows');\n\n        if (incompatibleVersion && !this.chart.windowsIncompatible) {\n          return this.t('catalog.charts.versionWindowsIncompatible');\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Check if the chart contains `systemDefaultRegistry` properties.\n     * If not we shouldn't apply the setting, because if the option\n     * is exposed for third-party Helm charts, it confuses users because\n     * it shows a private registry setting that is never used\n     * by the chart they are installing. If not hidden, the setting\n     * does nothing, and if the user changes it, it will look like\n     * there is a bug in the UI when it doesn't work, because UI is\n     * exposing a feature that the chart does not have.\n     */\n    showCustomRegistry() {\n      const global = this.versionInfo?.values?.global || {};\n\n      return global.systemDefaultRegistry !== undefined || global.cattle?.systemDefaultRegistry !== undefined;\n    },\n\n  },\n\n  watch: {\n    '$route.query'(neu, old) {\n      if ( !isEqual(neu, old) ) {\n        this.$fetch();\n        this.showSlideIn = false;\n      }\n    },\n\n    'value.metadata.namespace'(neu, old) {\n      if (neu) {\n        const ns = this.$store.getters['cluster/byId'](NAMESPACE, this.value.metadata.namespace);\n\n        const project = ns?.metadata.annotations?.[PROJECT];\n\n        if (project) {\n          this.project = project.replace(':', '/');\n        }\n      }\n    },\n\n    preFormYamlOption(neu, old) {\n      if (neu === VALUES_STATE.FORM && this.valuesYaml !== this.previousYamlValues && !!this.$refs.cancelModal) {\n        this.$refs.cancelModal.show();\n      } else {\n        this.formYamlOption = neu;\n      }\n    },\n\n    formYamlOption(neu, old) {\n      switch (neu) {\n      case VALUES_STATE.FORM:\n        // Return to form, reset everything back to starting point\n        this.valuesYaml = this.previousYamlValues;\n\n        this.showValuesComponent = true;\n        this.showQuestions = true;\n\n        this.showDiff = false;\n        break;\n      case VALUES_STATE.YAML:\n        // Show the YAML preview\n        if (old === VALUES_STATE.FORM) {\n          this.valuesYaml = jsyaml.dump(this.chartValues || {});\n          this.previousYamlValues = this.valuesYaml;\n        }\n\n        this.showValuesComponent = false;\n        this.showQuestions = false;\n\n        this.showDiff = false;\n        break;\n      case VALUES_STATE.DIFF:\n        // Show the YAML diff\n        if (old === VALUES_STATE.FORM) {\n          this.valuesYaml = jsyaml.dump(this.chartValues || {});\n          this.previousYamlValues = this.valuesYaml;\n        }\n\n        this.showValuesComponent = false;\n        this.showQuestions = false;\n\n        this.updateValue(this.valuesYaml);\n        this.showDiff = true;\n        break;\n      }\n    },\n\n    requires() {\n      this.updateStepOneReady();\n    },\n\n    warnings() {\n      this.updateStepOneReady();\n    },\n\n  },\n\n  async mounted() {\n    // Load a Vue component named in the Helm chart\n    // for editing values\n    await this.loadValuesComponent();\n\n    // Load Helm chart info used for showing\n    // wizard steps\n    await this.loadChartSteps();\n\n    window.scrollTop = 0;\n\n    this.preFormYamlOption = this.valuesComponent || this.hasQuestions ? VALUES_STATE.FORM : VALUES_STATE.YAML;\n  },\n\n  beforeDestroy() {\n    this.shownReadmeWindows.forEach((name) => this.$store.dispatch('wm/close', name, { root: true }));\n  },\n\n  methods: {\n    async getClusterRegistry() {\n      const hasPermissionToSeeProvCluster = this.$store.getters[`management/schemaFor`](CAPI.RANCHER_CLUSTER);\n\n      if (hasPermissionToSeeProvCluster) {\n        const mgmCluster = this.$store.getters['currentCluster'];\n        const provClusterId = mgmCluster?.provClusterId;\n        let provCluster;\n\n        try {\n          provCluster = provClusterId ? await this.$store.dispatch('management/find', {\n            type: CAPI.RANCHER_CLUSTER,\n            id:   provClusterId\n          }) : {};\n        } catch (e) {\n          console.error(`Unable to fetch prov cluster '${ provClusterId }': `, e); // eslint-disable-line no-console\n        }\n\n        if (provCluster?.isRke2) { // isRke2 returns true for both RKE2 and K3s clusters.\n          // If a cluster scoped registry exists,\n          // it should be used by default.\n          const clusterRegistry = provCluster.agentConfig?.['system-default-registry'] || '';\n\n          if (clusterRegistry) {\n            return clusterRegistry;\n          }\n        }\n\n        if (provCluster?.isRke1) {\n          // For RKE1 clusters, the cluster scoped private registry is on the management\n          // cluster, not the provisioning cluster.\n          const rke1Registries = mgmCluster?.spec?.rancherKubernetesEngineConfig?.privateRegistries;\n\n          if (rke1Registries?.length > 0) {\n            const defaultRegistry = rke1Registries.find((registry) => {\n              return registry.isDefault;\n            });\n\n            return defaultRegistry.url;\n          }\n        }\n      }\n    },\n\n    async getGlobalRegistry() {\n      // Use the global registry as a fallback.\n      // If it is an empty string, the container\n      // runtime will pull images from docker.io.\n      const globalRegistry = await this.$store.dispatch('management/find', {\n        type: MANAGEMENT.SETTING,\n        id:   'system-default-registry'\n      });\n\n      return globalRegistry.value;\n    },\n\n    updateValue(value) {\n      if (this.$refs.yaml) {\n        this.$refs.yaml.updateValue(value);\n      }\n    },\n\n    async loadValuesComponent() {\n      // The const component is a string, for example, 'monitoring'.\n      const component = this.version?.annotations?.[CATALOG_ANNOTATIONS.COMPONENT];\n\n      // Load a values component for the UI if it is named in the Helm chart.\n      if ( component ) {\n        const hasChartComponent = this.$store.getters['type-map/hasCustomChart'](component);\n\n        if ( hasChartComponent ) {\n          this.valuesComponent = this.$store.getters['type-map/importChart'](component);\n          const loaded = await this.valuesComponent();\n\n          this.showValuesComponent = true;\n          this.componentHasTabs = loaded?.default?.hasTabs || false;\n        } else {\n          this.valuesComponent = null;\n          this.componentHasTabs = false;\n          this.showValuesComponent = false;\n        }\n      } else {\n        this.valuesComponent = null;\n        this.componentHasTabs = false;\n        this.showValuesComponent = false;\n      }\n    },\n\n    async loadChartSteps() {\n      const component = this.version?.annotations?.[CATALOG_ANNOTATIONS.COMPONENT];\n\n      if ( component ) {\n        const steps = await this.$store.getters['catalog/chartSteps'](component);\n\n        this.customSteps = await Promise.all( steps.map((cs) => this.loadChartStep(cs)));\n      }\n    },\n\n    async loadChartStep(customStep) {\n      const loaded = await customStep.component();\n      const withFallBack = this.$store.getters['i18n/withFallback'];\n\n      return {\n        name:      customStep.name,\n        label:     withFallBack(loaded?.default?.label, null, customStep.name),\n        subtext:   withFallBack(loaded?.default?.subtext, null, ''),\n        weight:    loaded?.default?.weight,\n        ready:     false,\n        hidden:    true,\n        loading:   true,\n        component: customStep.component,\n      };\n    },\n\n    selectChart(chart) {\n      if ( !chart ) {\n        return;\n      }\n\n      this.$router.applyQuery({\n        [REPO]:      chart.repoName,\n        [REPO_TYPE]: chart.repoType,\n        [CHART]:     chart.chartName,\n        [VERSION]:   chart.versions[0].version\n      });\n    },\n\n    cancel() {\n      if ( this.existing ) {\n        this.done();\n      } else if (this.$route.query[FROM_TOOLS] === _FLAGGED) {\n        this.$router.replace(this.clusterToolsLocation());\n      } else if (this.$route.query[FROM_CLUSTER] === _FLAGGED) {\n        this.$router.replace(this.clustersLocation());\n      } else {\n        this.$router.replace(this.chartLocation(false));\n      }\n    },\n\n    done() {\n      if ( this.$route.query[FROM_TOOLS] === _FLAGGED ) {\n        this.$router.replace(this.clusterToolsLocation());\n      } else if (this.$route.query[FROM_CLUSTER] === _FLAGGED) {\n        this.$router.replace(this.clustersLocation());\n      } else {\n        // If the create app process fails helm validation then we still get here... so until this is fixed new apps will be taken to the\n        // generic apps list (existing apps will be taken to their detail page)\n        this.$router.replace(this.appLocation());\n      }\n    },\n\n    async finish(btnCb) {\n      try {\n        const isUpgrade = !!this.existing;\n\n        this.errors = [];\n\n        await this.applyHooks(BEFORE_SAVE_HOOKS);\n\n        const { errors, input } = this.actionInput(isUpgrade);\n\n        if ( errors?.length ) {\n          this.errors = errors;\n          btnCb(false);\n\n          return;\n        }\n\n        const res = await this.repo.doAction((isUpgrade ? 'upgrade' : 'install'), input);\n        const operationId = `${ res.operationNamespace }/${ res.operationName }`;\n\n        // Non-admins without a cluster won't be able to fetch operations immediately\n        await this.repo.waitForOperation(operationId);\n\n        // Dynamically use store decided when loading catalog (covers standard user case when there's not cluster)\n        this.operation = await this.$store.dispatch(`${ this.inStore }/find`, {\n          type: CATALOG.OPERATION,\n          id:   operationId\n        });\n\n        try {\n          await this.operation.waitForLink('logs');\n          this.operation.openLogs();\n        } catch (e) {\n          // The wait times out eventually, move on...\n        }\n\n        await this.applyHooks(AFTER_SAVE_HOOKS);\n\n        btnCb(true);\n        this.done();\n      } catch (err) {\n        this.errors = exceptionToErrorsArray(err);\n        btnCb(false);\n      }\n    },\n\n    addGlobalValuesTo(values) {\n      let global = values.global;\n\n      if ( !global ) {\n        global = {};\n        set(values, 'global', global);\n      }\n\n      let cattle = global.cattle;\n\n      if ( !cattle ) {\n        cattle = {};\n        set(values.global, 'cattle', cattle);\n      }\n\n      const cluster = this.currentCluster;\n      const projects = this.$store.getters['management/all'](MANAGEMENT.PROJECT);\n      const systemProjectId = projects.find((p) => p.spec?.displayName === 'System')?.id?.split('/')?.[1] || '';\n\n      const serverUrl = this.serverUrlSetting?.value || '';\n      const isWindows = (cluster?.workerOSs || []).includes(WINDOWS);\n      const pathPrefix = cluster?.spec?.rancherKubernetesEngineConfig?.prefixPath || '';\n      const windowsPathPrefix = cluster?.spec?.rancherKubernetesEngineConfig?.winPrefixPath || '';\n\n      setIfNotSet(cattle, 'clusterId', cluster?.id);\n      setIfNotSet(cattle, 'clusterName', cluster?.nameDisplay);\n\n      if (this.showCustomRegistry) {\n        set(cattle, 'systemDefaultRegistry', this.customRegistrySetting);\n        set(global, 'systemDefaultRegistry', this.customRegistrySetting);\n      }\n\n      setIfNotSet(global, 'cattle.systemProjectId', systemProjectId);\n      setIfNotSet(cattle, 'url', serverUrl);\n      setIfNotSet(cattle, 'rkePathPrefix', pathPrefix);\n      setIfNotSet(cattle, 'rkeWindowsPathPrefix', windowsPathPrefix);\n\n      if ( isWindows ) {\n        setIfNotSet(cattle, 'windows.enabled', true);\n      }\n\n      return values;\n\n      function setIfNotSet(obj, key, val) {\n        if ( typeof get(obj, key) === 'undefined' ) {\n          set(obj, key, val);\n        }\n      }\n    },\n\n    removeGlobalValuesFrom(values) {\n      if ( !values ) {\n        return;\n      }\n\n      const cluster = this.$store.getters['currentCluster'];\n      const serverUrl = this.serverUrlSetting?.value || '';\n      const isWindows = (cluster?.workerOSs || []).includes(WINDOWS);\n      const pathPrefix = cluster?.spec?.rancherKubernetesEngineConfig?.prefixPath || '';\n      const windowsPathPrefix = cluster?.spec?.rancherKubernetesEngineConfig?.winPrefixPath || '';\n\n      if ( values.global?.cattle ) {\n        deleteIfEqual(values.global.cattle, 'clusterId', cluster?.id);\n        deleteIfEqual(values.global.cattle, 'clusterName', cluster?.nameDisplay);\n        deleteIfEqual(values.global.cattle, 'url', serverUrl);\n        deleteIfEqual(values.global.cattle, 'rkePathPrefix', pathPrefix);\n        deleteIfEqual(values.global.cattle, 'rkeWindowsPathPrefix', windowsPathPrefix);\n\n        if ( isWindows ) {\n          deleteIfEqual(values.global.cattle.windows, 'enabled', true);\n        }\n      }\n\n      if ( values.global?.cattle?.windows && !Object.keys(values.global.cattle.windows).length ) {\n        delete values.global.cattle.windows;\n      }\n\n      if ( values.global?.cattle && !Object.keys(values.global.cattle).length ) {\n        delete values.global.cattle;\n      }\n\n      if ( !Object.keys(values.global || {}).length ) {\n        delete values.global;\n      }\n\n      return values;\n\n      function deleteIfEqual(obj, key, val) {\n        if ( get(obj, key) === val ) {\n          delete obj[key];\n        }\n      }\n    },\n\n    applyYamlToValues() {\n      try {\n        this.chartValues = jsyaml.load(this.valuesYaml);\n      } catch (err) {\n        return { errors: exceptionToErrorsArray(err) };\n      }\n\n      return { errors: [] };\n    },\n\n    /*\n      actionInput determines what values Rancher finally sends\n      to the backend when installing or upgrading the app. It\n      injects Rancher-specific values into the chart values.\n    */\n    actionInput(isUpgrade) {\n      /* Default values defined in the Helm chart itself */\n      const fromChart = this.versionInfo?.values || {};\n\n      const errors = [];\n\n      if ( this.showingYaml || this.showingYamlDiff ) {\n        const { errors: yamlErrors } = this.applyYamlToValues();\n\n        errors.push(...yamlErrors);\n      }\n\n      /*\n        Only save the values that differ from the chart's standard values.yaml.\n        chartValues is created by applying the user's customized onto\n        the default chart values.\n      */\n      const values = diff(fromChart, this.chartValues);\n\n      /*\n        Refer to the developer docs at docs/developer/helm-chart-apps.md\n        for details on what values are injected and where they come from.\n      */\n\n      this.addGlobalValuesTo(values);\n\n      const form = JSON.parse(JSON.stringify(this.value));\n\n      /*\n        Migrated annotations are required to allow a deprecated legacy app to be\n        upgraded.\n      */\n      const migratedAnnotations = this.migratedApp ? { [CATALOG_ANNOTATIONS.MIGRATED]: 'true' } : {};\n\n      const chart = {\n        chartName:   this.chart.chartName,\n        version:     this.version?.version || this.query.versionName,\n        releaseName: form.metadata.name,\n        description: this.customCmdOpts.description,\n        annotations: {\n          ...migratedAnnotations,\n          [CATALOG_ANNOTATIONS.SOURCE_REPO_TYPE]: this.chart.repoType,\n          [CATALOG_ANNOTATIONS.SOURCE_REPO_NAME]: this.chart.repoName\n        },\n        values,\n      };\n\n      if ( isUpgrade ) {\n        chart.resetValues = this.cmdOptions.resetValues;\n      }\n\n      /*\n        Configure Helm CLI options for doing the install or\n        upgrade operation.\n      */\n      const out = {\n        charts:    [chart],\n        noHooks:   this.cmdOptions.hooks === false,\n        timeout:   this.cmdOptions.timeout > 0 ? `${ this.cmdOptions.timeout }s` : null,\n        wait:      this.cmdOptions.wait === true,\n        namespace: form.metadata.namespace,\n        projectId: this.project,\n      };\n\n      /*\n        Configure Helm CLI options that are specific to\n        installs or specific to upgrades.\n      */\n      if ( isUpgrade ) {\n        out.force = this.cmdOptions.force === true;\n        out.historyMax = this.cmdOptions.historyMax;\n        out.cleanupOnFail = this.cmdOptions.cleanupOnFail;\n      } else {\n        out.disableOpenAPIValidation = this.cmdOptions.openApi === false;\n        out.skipCRDs = this.cmdOptions.crds === false;\n      }\n\n      const more = [];\n\n      const auto = (this.version?.annotations?.[CATALOG_ANNOTATIONS.AUTO_INSTALL_GVK] || '').split(/\\s*,\\s*/).filter((x) => !!x).reverse();\n\n      for ( const gvr of auto ) {\n        const provider = this.$store.getters['catalog/versionProviding']({\n          gvr,\n          repoName: this.chart.repoName,\n          repoType: this.chart.repoType\n        });\n\n        if ( provider ) {\n          more.push(provider);\n        } else {\n          errors.push(`This chart requires another chart that provides ${ gvr }, but none was was found`);\n        }\n      }\n\n      /* Chart custom UI components have the ability to edit CRD chart values eg gatekeeper-crd has values.enableRuntimeDefaultSeccompProfile\n        like the main chart, only CRD values that differ from defaults should be sent on install/upgrade\n        CRDs should be installed with the same global values as the main chart\n      */\n      for (const versionInfo of this.autoInstallInfo) {\n        // allValues are the values potentially changed in the installation ui: any previously customized values + defaults\n        // values are default values from the chart\n        const { allValues, values: crdValues } = versionInfo;\n\n        // only save crd values that differ from the defaults defined in chart values.yaml\n        const customizedCrdValues = diff(crdValues, allValues);\n\n        // CRD globals should be overwritten by main chart globals\n        // we want to avoid including globals present on crd values and not main chart values\n        // that covers the scenario where a global value was customized on a previous install (and so is present in crd global vals) and the user has reverted it to default on this update (no longer present in main chart global vals)\n        const crdValuesToInstall = { ...customizedCrdValues, global: values.global };\n\n        out.charts.unshift({\n          chartName:   versionInfo.chart.name,\n          version:     versionInfo.chart.version,\n          releaseName: versionInfo.chart.annotations[CATALOG_ANNOTATIONS.RELEASE_NAME] || chart.name,\n          projectId:   this.project,\n          values:      crdValuesToInstall\n        });\n      }\n      /*\n        'more' contains additional\n        charts that may not be CRD charts but are also meant to be installed at\n        the same time.\n      */\n      for ( const dependency of more ) {\n        out.charts.unshift({\n          chartName:   dependency.name,\n          version:     dependency.version,\n          releaseName: dependency.annotations[CATALOG_ANNOTATIONS.RELEASE_NAME] || dependency.name,\n          projectId:   this.project,\n          values:      this.addGlobalValuesTo({ global: values.global }),\n          annotations: {\n            ...migratedAnnotations,\n            [CATALOG_ANNOTATIONS.SOURCE_REPO_TYPE]: dependency.repoType,\n            [CATALOG_ANNOTATIONS.SOURCE_REPO_NAME]: dependency.repoName\n          },\n        });\n      }\n\n      return { errors, input: out };\n    },\n\n    tabChanged() {\n      window.scrollTop = 0;\n    },\n\n    updateStepOneReady() {\n      const okRequires = !this.requires.length;\n      const okChart = !!this.chart;\n\n      this.steps[0].ready = okRequires && okChart;\n    },\n\n    updateStepTwoReady(update) {\n      this.updateStep('helmValues', { ready: update });\n    },\n\n    getOptionLabel(opt) {\n      return opt?.chartNameDisplay;\n    },\n\n    showReadmeWindow() {\n      this.$store.dispatch('wm/open', {\n        id:        this.readmeWindowName,\n        label:     this.readmeWindowName,\n        icon:      'file',\n        component: 'ChartReadme',\n        attrs:     { versionInfo: this.versionInfo }\n      }, { root: true });\n      this.shownReadmeWindows.push(this.readmeWindowName);\n    },\n\n    updateStep(stepName, update) {\n      const step = this.steps.find((step) => step.name === stepName);\n\n      if (step) {\n        for (const prop in update) {\n          Vue.set(step, prop, update[prop]);\n        }\n      }\n    }\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div\n    v-else-if=\"!legacyApp && !mcapp\"\n    class=\"install-steps pt-20\"\n    :class=\"{ 'isPlainLayout': isPlainLayout}\"\n  >\n    <TypeDescription resource=\"chart\" />\n    <Wizard\n      v-if=\"value\"\n      :steps=\"steps\"\n      :errors=\"errors\"\n      :edit-first-step=\"true\"\n      :banner-title=\"stepperName\"\n      :banner-title-subtext=\"stepperSubtext\"\n      :finish-mode=\"action\"\n      class=\"wizard\"\n      :class=\"{'windowsIncompatible': windowsIncompatible}\"\n      @cancel=\"cancel\"\n      @finish=\"finish\"\n    >\n      <template\n        v-for=\"customStep of customSteps\"\n        v-slot:[customStep.name]\n      >\n        <component\n          :is=\"customStep.component\"\n          :key=\"customStep.name\"\n          @update=\"updateStep(customStep.name, $event)\"\n          @errors=\"e=>errors.push(...e)\"\n        />\n      </template>\n      <template #bannerTitleImage>\n        <div>\n          <div class=\"logo-bg\">\n            <LazyImage\n              :src=\"chart ? chart.icon : ''\"\n              class=\"logo\"\n            />\n          </div>\n          <label\n            v-if=\"windowsIncompatible\"\n            class=\"os-label\"\n          >\n            {{ windowsIncompatible }}\n          </label>\n        </div>\n      </template>\n      <template #basics>\n        <div class=\"step__basic\">\n          <Banner\n            v-if=\"step1Description\"\n            color=\"info\"\n            class=\"description\"\n          >\n            <div>\n              <span>{{ step1Description }}</span>\n              <span\n                v-if=\"namespaceNewAllowed\"\n                class=\"mt-10\"\n              >\n                {{ t('catalog.install.steps.basics.nsCreationDescription', {}, true) }}\n              </span>\n            </div>\n          </Banner>\n          <div\n            v-if=\"requires.length || warnings.length\"\n            class=\"mb-15\"\n          >\n            <Banner\n              v-for=\"msg in requires\"\n              :key=\"msg\"\n              color=\"error\"\n            >\n              <span v-clean-html=\"msg\" />\n            </Banner>\n\n            <Banner\n              v-for=\"msg in warnings\"\n              :key=\"msg\"\n              color=\"warning\"\n            >\n              <span v-clean-html=\"msg\" />\n            </Banner>\n          </div>\n          <div\n            v-if=\"showSelectVersionOrChart\"\n            class=\"row mb-20\"\n          >\n            <div class=\"col span-4\">\n              <!-- We have a chart for the app, let the user select a new version -->\n              <LabeledSelect\n                v-if=\"chart\"\n                :label=\"t('catalog.install.version')\"\n                :value=\"query.versionName\"\n                :options=\"filteredVersions\"\n                :selectable=\"version => !version.disabled\"\n                @input=\"selectVersion\"\n              />\n              <!-- Can't find the chart for the app, let the user try to select one -->\n              <LabeledSelect\n                v-else\n                :label=\"t('catalog.install.chart')\"\n                :value=\"chart\"\n                :options=\"charts\"\n                :selectable=\"option => !option.disabled\"\n                :get-option-label=\"opt => getOptionLabel(opt)\"\n                option-key=\"key\"\n                @input=\"selectChart($event)\"\n              >\n                <template v-slot:option=\"opt\">\n                  <template v-if=\"opt.kind === 'divider'\">\n                    <hr>\n                  </template>\n                  <template v-else-if=\"opt.kind === 'label'\">\n                    <b style=\"position: relative; left: -2.5px;\">{{ opt.label }}</b>\n                  </template>\n                </template>\n              </LabeledSelect>\n            </div>\n          </div>\n          <NameNsDescription\n            v-model=\"value\"\n            :description-hidden=\"true\"\n            :mode=\"mode\"\n            :name-disabled=\"nameDisabled\"\n            :name-required=\"false\"\n            :name-ns-hidden=\"!showNameEditor\"\n            :force-namespace=\"forceNamespace\"\n            :namespace-new-allowed=\"namespaceNewAllowed\"\n            :extra-columns=\"showProject ? ['project'] : []\"\n            :show-spacer=\"false\"\n            :horizontal=\"false\"\n            @isNamespaceNew=\"isNamespaceNew = $event\"\n          >\n            <template\n              v-if=\"showProject\"\n              #project\n            >\n              <LabeledSelect\n                v-model=\"project\"\n                :disabled=\"!namespaceIsNew\"\n                :label=\"t('catalog.install.project')\"\n                option-key=\"id\"\n                :options=\"projectOpts\"\n                :tooltip=\"!namespaceIsNew ? t('catalog.install.namespaceIsInProject', {namespace: value.metadata.namespace}, true) : ''\"\n                :hover-tooltip=\"!namespaceIsNew\"\n                :status=\"'info'\"\n              />\n            </template>\n          </NameNsDescription>\n          <Checkbox\n            v-model=\"showCommandStep\"\n            class=\"mb-20\"\n            :label=\"t('catalog.install.steps.helmCli.checkbox', { action, existing: !!existing })\"\n          />\n\n          <Checkbox\n            v-if=\"showCustomRegistry\"\n            v-model=\"showCustomRegistryInput\"\n            class=\"mb-20\"\n            :label=\"t('catalog.chart.registry.custom.checkBoxLabel')\"\n            :tooltip=\"t('catalog.chart.registry.tooltip')\"\n          />\n          <div class=\"row\">\n            <div class=\"col span-6\">\n              <LabeledInput\n                v-if=\"showCustomRegistryInput\"\n                v-model=\"customRegistrySetting\"\n                label-key=\"catalog.chart.registry.custom.inputLabel\"\n                placeholder-key=\"catalog.chart.registry.custom.placeholder\"\n                :min-height=\"30\"\n              />\n            </div>\n          </div>\n          <div\n            class=\"step__values__controls--spacer\"\n            style=\"flex:1\"\n          >\n&nbsp;\n          </div>\n          <Banner\n            v-if=\"isNamespaceNew && value.metadata.namespace.length\"\n            color=\"info\"\n          >\n            <div v-clean-html=\"t('catalog.install.steps.basics.createNamespace', {namespace: value.metadata.namespace}, true) \" />\n          </Banner>\n        </div>\n      </template>\n      <template #clusterTplVersion>\n        <Banner\n          color=\"info\"\n          class=\"description\"\n        >\n          {{ t('catalog.install.steps.clusterTplVersion.description') }}\n        </Banner>\n        <div class=\"row mb-20\">\n          <div class=\"col span-4\">\n            <LabeledSelect\n              v-if=\"chart\"\n              :label=\"t('catalog.install.version')\"\n              :value=\"query.versionName\"\n              :options=\"filteredVersions\"\n              :selectable=\"version => !version.disabled\"\n              @input=\"selectVersion\"\n            />\n          </div>\n          <div class=\"step__values__controls--spacer\">\n&nbsp;\n          </div>\n          <div class=\"btn-group\">\n            <button\n              type=\"button\"\n              class=\"btn bg-primary btn-sm\"\n              :disabled=\"!hasReadme || showingReadmeWindow\"\n              @click=\"showSlideIn = !showSlideIn\"\n            >\n              {{ t('catalog.install.steps.helmValues.chartInfo.button') }}\n            </button>\n          </div>\n        </div>\n      </template>\n      <template #helmValues>\n        <Banner\n          v-if=\"step2Description\"\n          color=\"info\"\n          class=\"description\"\n        >\n          {{ step2Description }}\n        </Banner>\n        <div class=\"step__values__controls\">\n          <ButtonGroup\n            v-model=\"preFormYamlOption\"\n            data-testid=\"btn-group-options-view\"\n            :options=\"formYamlOptions\"\n            inactive-class=\"bg-disabled btn-sm\"\n            active-class=\"bg-primary btn-sm\"\n            :disabled=\"preFormYamlOption != formYamlOption\"\n          />\n          <div class=\"step__values__controls--spacer\">\n&nbsp;\n          </div>\n          <ButtonGroup\n            v-if=\"showDiff\"\n            v-model=\"diffMode\"\n            :options=\"yamlDiffModeOptions\"\n            inactive-class=\"bg-disabled btn-sm\"\n            active-class=\"bg-primary btn-sm\"\n          />\n          <div\n            v-if=\"hasReadme && !showingReadmeWindow\"\n            class=\"btn-group\"\n          >\n            <button\n              type=\"button\"\n              class=\"btn bg-primary btn-sm\"\n              @click=\"showSlideIn = !showSlideIn\"\n            >\n              {{ t('catalog.install.steps.helmValues.chartInfo.button') }}\n            </button>\n          </div>\n        </div>\n\n        <div class=\"scroll__container\">\n          <div class=\"scroll__content\">\n            <!-- Values (as Custom Component in ./shell/charts/) -->\n            <template v-if=\"valuesComponent && showValuesComponent\">\n              <Tabbed\n                v-if=\"componentHasTabs\"\n                ref=\"tabs\"\n                :side-tabs=\"true\"\n                :hide-single-tab=\"true\"\n                :class=\"{'with-name': showNameEditor}\"\n                class=\"step__values__content\"\n                @changed=\"tabChanged($event)\"\n              >\n                <component\n                  :is=\"valuesComponent\"\n                  v-model=\"chartValues\"\n                  :mode=\"mode\"\n                  :chart=\"chart\"\n                  class=\"step__values__content\"\n                  :existing=\"existing\"\n                  :version=\"version\"\n                  :version-info=\"versionInfo\"\n                  :auto-install-info=\"autoInstallInfo\"\n                  @warn=\"e=>errors.push(e)\"\n                  @register-before-hook=\"registerBeforeHook\"\n                  @register-after-hook=\"registerAfterHook\"\n                  @valid=\"updateStepTwoReady($event)\"\n                />\n              </Tabbed>\n              <template v-else>\n                <component\n                  :is=\"valuesComponent\"\n                  v-if=\"valuesComponent\"\n                  v-model=\"chartValues\"\n                  :mode=\"mode\"\n                  :chart=\"chart\"\n                  class=\"step__values__content\"\n                  :existing=\"existing\"\n                  :version=\"version\"\n                  :version-info=\"versionInfo\"\n                  :auto-install-info=\"autoInstallInfo\"\n                  @warn=\"e=>errors.push(e)\"\n                  @register-before-hook=\"registerBeforeHook\"\n                  @register-after-hook=\"registerAfterHook\"\n                />\n              </template>\n            </template>\n\n            <!-- Values (as Questions, abstracted component based on question.yaml configuration from repositories)  -->\n            <Tabbed\n              v-else-if=\"hasQuestions && showQuestions\"\n              ref=\"tabs\"\n              :side-tabs=\"true\"\n              :hide-single-tab=\"true\"\n              :class=\"{'with-name': showNameEditor}\"\n              class=\"step__values__content\"\n              @changed=\"tabChanged($event)\"\n            >\n              <Questions\n                v-model=\"chartValues\"\n                :in-store=\"inStore\"\n                :mode=\"mode\"\n                :source=\"versionInfo\"\n                :ignore-variables=\"ignoreVariables\"\n                tabbed=\"multiple\"\n                :target-namespace=\"targetNamespace\"\n              />\n            </Tabbed>\n            <!-- Values (as YAML) -->\n            <template v-else>\n              <YamlEditor\n                ref=\"yaml\"\n                v-model=\"valuesYaml\"\n                class=\"step__values__content\"\n                :scrolling=\"true\"\n                :initial-yaml-values=\"originalYamlValues\"\n                :editor-mode=\"editorMode\"\n                :hide-preview-buttons=\"true\"\n              />\n            </template>\n          </div>\n        </div>\n\n        <!-- Confirm loss of changes on toggle from yaml/preview to form -->\n        <ResourceCancelModal\n          ref=\"cancelModal\"\n          :is-cancel-modal=\"false\"\n          :is-form=\"true\"\n          @cancel-cancel=\"preFormYamlOption=formYamlOption\"\n          @confirm-cancel=\"formYamlOption = preFormYamlOption;\"\n        />\n      </template>\n      <template #helmCli>\n        <Banner\n          v-if=\"step3Description\"\n          color=\"info\"\n          class=\"description\"\n        >\n          {{ step3Description }}\n        </Banner>\n        <div>\n          <Checkbox\n            v-if=\"existing\"\n            v-model=\"customCmdOpts.cleanupOnFail\"\n            :label=\"t('catalog.install.helm.cleanupOnFail')\"\n          />\n        </div>\n        <div>\n          <Checkbox\n            v-if=\"!existing\"\n            v-model=\"customCmdOpts.crds\"\n            :label=\"t('catalog.install.helm.crds')\"\n          />\n        </div>\n        <div>\n          <Checkbox\n            v-model=\"customCmdOpts.hooks\"\n            :label=\"t('catalog.install.helm.hooks')\"\n          />\n        </div>\n        <div>\n          <Checkbox\n            v-if=\"existing\"\n            v-model=\"customCmdOpts.force\"\n            :label=\"t('catalog.install.helm.force')\"\n          />\n        </div>\n        <div>\n          <Checkbox\n            v-if=\"existing\"\n            v-model=\"customCmdOpts.resetValues\"\n            :label=\"t('catalog.install.helm.resetValues')\"\n          />\n        </div>\n        <div>\n          <Checkbox\n            v-if=\"!existing\"\n            v-model=\"customCmdOpts.openApi\"\n            :label=\"t('catalog.install.helm.openapi')\"\n          />\n        </div>\n        <div>\n          <Checkbox\n            v-model=\"customCmdOpts.wait\"\n            :label=\"t('catalog.install.helm.wait')\"\n          />\n        </div>\n        <div\n          style=\"display: block; max-width: 400px;\"\n          class=\"mt-10\"\n        >\n          <UnitInput\n            v-model.number=\"customCmdOpts.timeout\"\n            :label=\"t('catalog.install.helm.timeout.label')\"\n            :suffix=\"t('catalog.install.helm.timeout.unit', {value: customCmdOpts.timeout})\"\n          />\n        </div>\n        <div\n          style=\"display: block; max-width: 400px;\"\n          class=\"mt-10\"\n        >\n          <UnitInput\n            v-if=\"existing\"\n            v-model.number=\"customCmdOpts.historyMax\"\n            :label=\"t('catalog.install.helm.historyMax.label')\"\n            :suffix=\"t('catalog.install.helm.historyMax.unit', {value: customCmdOpts.historyMax})\"\n          />\n        </div>\n        <div\n          style=\"display: block; max-width: 400px;\"\n          class=\"mt-10\"\n        >\n          <LabeledInput\n            v-model=\"customCmdOpts.description\"\n            label-key=\"catalog.install.helm.description.label\"\n            placeholder-key=\"catalog.install.helm.description.placeholder\"\n            :min-height=\"30\"\n          />\n        </div>\n      </template>\n    </Wizard>\n    <div\n      class=\"slideIn\"\n      :class=\"{'hide': false, 'slideIn__show': showSlideIn}\"\n    >\n      <h2 class=\"slideIn__header\">\n        {{ t('catalog.install.steps.helmValues.chartInfo.label') }}\n        <div class=\"slideIn__header__buttons\">\n          <div\n            v-clean-tooltip=\"t('catalog.install.slideIn.dock')\"\n            class=\"slideIn__header__button\"\n            @click=\"showSlideIn = false; showReadmeWindow()\"\n          >\n            <i class=\"icon icon-dock\" />\n          </div>\n          <div\n            class=\"slideIn__header__button\"\n            @click=\"showSlideIn = false\"\n          >\n            <i class=\"icon icon-close\" />\n          </div>\n        </div>\n      </h2>\n      <ChartReadme\n        v-if=\"hasReadme\"\n        :version-info=\"versionInfo\"\n        class=\"chart-content__tabs\"\n      />\n    </div>\n  </div>\n\n  <!-- App is deployed as a Legacy or MultiCluster app, don't let user update from here -->\n  <div\n    v-else\n    class=\"install-steps\"\n    :class=\"{ 'isPlainLayout': isPlainLayout}\"\n  >\n    <div class=\"outer-container\">\n      <div class=\"header mb-20\">\n        <div class=\"title\">\n          <div class=\"top choice-banner\">\n            <div class=\"title\">\n              <!-- Logo -->\n              <slot name=\"bannerTitleImage\">\n                <div class=\"round-image\">\n                  <LazyImage\n                    :src=\"chart ? chart.icon : ''\"\n                    class=\"logo\"\n                  />\n                </div>\n              </slot>\n              <!-- Title with subtext -->\n              <div class=\"subtitle\">\n                <h2 v-if=\"stepperName\">\n                  {{ stepperName }}\n                </h2>\n                <span\n                  v-if=\"stepperSubtext\"\n                  class=\"subtext\"\n                >{{ stepperSubtext }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Banner\n        color=\"warning\"\n        class=\"description\"\n      >\n        <span v-if=\"!mcapp\">\n          {{ t('catalog.install.error.legacy.label', { legacyType: mcapp ? legacyDefs.mcm : legacyDefs.legacy }, true) }}\n        </span>\n        <template v-if=\"!legacyEnabled\">\n          <span v-clean-html=\"t('catalog.install.error.legacy.enableLegacy.prompt', true)\" />\n          <nuxt-link :to=\"legacyFeatureRoute\">\n            {{ t('catalog.install.error.legacy.enableLegacy.goto') }}\n          </nuxt-link>\n        </template>\n        <template v-else-if=\"mcapp\">\n          <span v-clean-html=\"t('catalog.install.error.legacy.mcmNotSupported')\" />\n        </template>\n        <template v-else>\n          <nuxt-link :to=\"legacyAppRoute\">\n            <span v-clean-html=\"t('catalog.install.error.legacy.navigate')\" />\n          </nuxt-link>\n        </template>\n      </Banner>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  $title-height: 50px;\n  $padding: 5px;\n  $slideout-width: 35%;\n\n  .install-steps {\n    padding-top: 0;\n    height: 0;\n    position: relative;\n    overflow: hidden;\n\n    &.isPlainLayout {\n      padding: 20px;\n    }\n\n    .description {\n      display: flex;\n      flex-direction: column;\n      margin-top: 0;\n    }\n  }\n\n  .wizard {\n    .logo-bg {\n      margin-right: 10px;\n      height: $title-height;\n      width: $title-height;\n      background-color: white;\n      border: $padding solid white;\n      border-radius: calc( 3 * var(--border-radius));\n      position: relative;\n    }\n\n    .logo {\n      max-height: $title-height - 2 * $padding;\n      max-width: $title-height - 2 * $padding;\n      position: absolute;\n      width: auto;\n      height: auto;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      margin: auto;\n    }\n\n    // Hack - We're adding an absolute tag under the logo that we want to consume space without breaking vertical alignment of row.\n    // W  ith the slots available this isn't possible without adding tag specific styles to the root wizard classes\n    &.windowsIncompatible {\n      ::v-deep .header {\n        padding-bottom: 15px;\n      }\n    }\n\n    .os-label {\n      position: absolute;\n      background-color: var(--warning-banner-bg);\n      color:var(--warning);\n      margin-top: 5px;\n    }\n\n  }\n\n  .step {\n    &__basic {\n      display: flex;\n      flex-direction: column;\n      flex: 1;\n\n      .spacer {\n        line-height: 2;\n      }\n    }\n    &__values {\n      &__controls {\n        display: flex;\n        margin-bottom: 15px;\n\n        & > *:not(:last-of-type) {\n          margin-right: $padding * 2;\n        }\n\n        &--spacer {\n          flex: 1\n        }\n\n      }\n\n      &__content {\n        flex: 1;\n\n        ::v-deep .tab-container {\n          overflow: auto;\n        }\n      }\n\n    }\n  }\n\n  .slideIn {\n    $slideout-width: 35%;\n\n    border-left: var(--header-border-size) solid var(--header-border);\n    position: absolute;\n    top: 0;\n    right: -$slideout-width;\n    height: 100%;\n    background-color: var(--topmenu-bg);\n    width: $slideout-width;\n    z-index: 10;\n    display: flex;\n    flex-direction: column;\n\n    padding: 10px;\n\n    transition: right .5s ease;\n\n    &__header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n\n      &__buttons {\n        display: flex;\n      }\n\n      &__button {\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 2px;\n        > i {\n          font-size: 20px;\n          opacity: 0.5;\n        }\n        &:hover {\n          background-color: var(--wm-closer-hover-bg);\n        }\n      }\n    }\n\n    .chart-content__tabs {\n      display: flex;\n      flex-direction: column;\n      flex: 1;\n\n      height: 0;\n\n      padding-bottom: 10px;\n\n      ::v-deep .chart-readmes {\n        flex: 1;\n        overflow: auto;\n      }\n    }\n\n    &__show {\n      right: 0;\n    }\n\n  }\n\n  .scroll {\n    &__container {\n      $yaml-height: 200px;\n      min-height: $yaml-height;\n      margin-bottom: 60px;\n      overflow: auto;\n      display: flex;\n      flex: 1;\n    }\n    &__content {\n      display: flex;\n      flex: 1;\n      overflow: auto;\n    }\n  }\n\n  ::v-deep .yaml-editor {\n    flex: 1\n  }\n\n.outer-container {\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  overflow: auto;\n}\n\n.header {\n  display: flex;\n  align-content: space-between;\n  align-items: center;\n\n  border-bottom: var(--header-border-size) solid var(--header-border);\n\n  & > .title {\n    flex: 1;\n    min-height: 75px;\n  }\n\n  .choice-banner {\n\n    flex-basis: 40%;\n    display: flex;\n    align-items: center;\n\n    &.top {\n\n      H2 {\n        margin: 0px;\n      }\n\n      .title{\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n\n        & > .subtitle {\n          margin: 0 20px;\n        }\n      }\n\n      .subtitle{\n        display: flex;\n        flex-direction: column;\n        & .subtext {\n          color: var(--input-label);\n        }\n      }\n\n    }\n\n    &:not(.top){\n      box-shadow: 0px 0px 12px 3px var(--box-bg);\n      flex-direction: row;\n      align-items: center;\n      justify-content: start;\n      &:hover{\n        outline: var(--outline-width) solid var(--outline);\n        cursor: pointer;\n      }\n    }\n\n    & .round-image {\n      min-width: 50px;\n      height: 50px;\n      margin: 10px 10px 10px 0;\n      border-radius: 50%;\n      overflow: hidden;\n      .logo {\n        min-width: 50px;\n        height: 50px;\n      }\n    }\n  }\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]}]}