{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/list/node.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/list/node.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ResourceTable","Tag","Banner","STATE","NAME","ROLES","VERSION","INTERNAL_EXTERNAL_IP","CPU","RAM","PODS","AGE","KUBE_NODE_OS","metricPoller","CAPI","MANAGEMENT","METRIC","NODE","NORMAN","POD","allHash","GROUP_RESOURCES","mapPref","COLUMN_BREAKPOINTS","ResourceFetch","name","components","mixins","props","resource","type","String","required","schema","Object","useQueryParamsForSimpleFiltering","Boolean","default","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","hash","wrap","_callee$","_context","prev","next","$initializeFetchData","kubeNodes","$fetchType","canViewPods","$store","getters","normanNodes","mgmtNodes","MACHINE","machines","stop","data","beforeDestroy","dispatch","computed","hasWindowsNodes","rows","some","node","status","nodeInfo","operatingSystem","tableGroup","parsedRows","forEach","row","displayTaintsAndLabels","spec","taints","length","customLabelCount","headers","_objectSpread","breakpoint","LAPTOP","getValue","_row$status","cpuUsagePercentage","ramUsagePercentage","push","DESKTOP","podConsumedUsage","methods","loadMetrics","_this2","_callee2","_callee2$","_context2","opt","force","$forceUpdate","toggleLabels","$set","displayLabels"],"sources":["node_modules/@rancher/shell/list/node.vue"],"sourcesContent":["<script>\nimport ResourceTable from '@shell/components/ResourceTable';\nimport Tag from '@shell/components/Tag';\nimport { Banner } from '@components/Banner';\nimport {\n  STATE, NAME, ROLES, VERSION, INTERNAL_EXTERNAL_IP, CPU, RAM, PODS, AGE, KUBE_NODE_OS\n} from '@shell/config/table-headers';\nimport metricPoller from '@shell/mixins/metric-poller';\n\nimport {\n  CAPI,\n  MANAGEMENT, METRIC, NODE, NORMAN, POD\n} from '@shell/config/types';\nimport { allHash } from '@shell/utils/promise';\nimport { GROUP_RESOURCES, mapPref } from '@shell/store/prefs';\nimport { COLUMN_BREAKPOINTS } from '@shell/components/SortableTable/index.vue';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\nexport default {\n  name:       'ListNode',\n  components: {\n    ResourceTable,\n    Tag,\n    Banner\n  },\n  mixins: [metricPoller, ResourceFetch],\n\n  props: {\n    resource: {\n      type:     String,\n      required: true,\n    },\n    schema: {\n      type:     Object,\n      required: true,\n    },\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  async fetch() {\n    this.$initializeFetchData(this.resource);\n\n    const hash = { kubeNodes: this.$fetchType(this.resource) };\n\n    this.canViewPods = this.$store.getters[`cluster/schemaFor`](POD);\n\n    if (this.$store.getters[`management/schemaFor`](MANAGEMENT.NODE)) {\n      // Required for Drain/Cordon action\n      hash.normanNodes = this.$fetchType(NORMAN.NODE, [], 'rancher');\n    }\n\n    if (this.$store.getters[`rancher/schemaFor`](NORMAN.NODE)) {\n      hash.mgmtNodes = this.$fetchType(MANAGEMENT.NODE, [], 'management');\n    }\n\n    if (this.$store.getters[`management/schemaFor`](CAPI.MACHINE)) {\n      // Required for ssh / download key actions\n      hash.machines = this.$fetchType(CAPI.MACHINE, [], 'management');\n    }\n\n    if (this.canViewPods) {\n      // Used for running pods metrics - we don't need to block on this to show the list of nodes\n      this.$fetchType(POD);\n    }\n\n    await allHash(hash);\n  },\n\n  data() {\n    return { canViewPods: false };\n  },\n\n  beforeDestroy() {\n    // Stop watching pods, nodes and node metrics\n    this.$store.dispatch('cluster/forgetType', POD);\n    this.$store.dispatch('cluster/forgetType', NODE);\n    this.$store.dispatch('cluster/forgetType', METRIC.NODE);\n  },\n\n  computed: {\n    hasWindowsNodes() {\n      return (this.rows || []).some((node) => node.status.nodeInfo.operatingSystem === 'windows');\n    },\n\n    tableGroup: mapPref(GROUP_RESOURCES),\n\n    parsedRows() {\n      this.rows.forEach((row) => {\n        row.displayTaintsAndLabels = (row.spec.taints && row.spec.taints.length) || !!row.customLabelCount;\n      });\n\n      return this.rows;\n    },\n\n    headers() {\n      const headers = [\n        STATE,\n        NAME,\n        ROLES,\n        VERSION,\n        INTERNAL_EXTERNAL_IP,\n        {\n          ...KUBE_NODE_OS,\n          breakpoint: COLUMN_BREAKPOINTS.LAPTOP,\n          getValue:   (row) => row.status?.nodeInfo?.operatingSystem\n        },\n        {\n          ...CPU,\n          breakpoint: COLUMN_BREAKPOINTS.LAPTOP,\n          getValue:   (row) => row.cpuUsagePercentage\n        }, {\n          ...RAM,\n          breakpoint: COLUMN_BREAKPOINTS.LAPTOP,\n          getValue:   (row) => row.ramUsagePercentage\n        }];\n\n      if (this.canViewPods) {\n        headers.push({\n          ...PODS,\n          breakpoint: COLUMN_BREAKPOINTS.DESKTOP,\n          getValue:   (row) => row.podConsumedUsage\n        });\n      }\n      headers.push(AGE);\n\n      return headers;\n    },\n  },\n\n  methods: {\n    async loadMetrics() {\n      const schema = this.$store.getters['cluster/schemaFor'](METRIC.NODE);\n\n      if (schema) {\n        await this.$store.dispatch('cluster/findAll', {\n          type: METRIC.NODE,\n          opt:  { force: true }\n        });\n\n        this.$forceUpdate();\n      }\n    },\n\n    toggleLabels(row) {\n      this.$set(row, 'displayLabels', !row.displayLabels);\n    },\n  }\n\n};\n</script>\n\n<template>\n  <div>\n    <Banner\n      v-if=\"hasWindowsNodes\"\n      color=\"info\"\n      :label=\"t('cluster.custom.registrationCommand.windowsWarning')\"\n    />\n    <ResourceTable\n      v-bind=\"$attrs\"\n      :schema=\"schema\"\n      :headers=\"headers\"\n      :rows=\"parsedRows\"\n      :sub-rows=\"true\"\n      :loading=\"loading\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n      data-testid=\"cluster-node-list\"\n      v-on=\"$listeners\"\n    >\n      <template #sub-row=\"{fullColspan, row, onRowMouseEnter, onRowMouseLeave}\">\n        <tr\n          class=\"taints sub-row\"\n          :class=\"{'empty-taints': ! row.displayTaintsAndLabels}\"\n          @mouseenter=\"onRowMouseEnter\"\n          @mouseleave=\"onRowMouseLeave\"\n        >\n          <template v-if=\"row.displayTaintsAndLabels\">\n            <td>&nbsp;</td>\n            <td>&nbsp;</td>\n            <td :colspan=\"fullColspan-2\">\n              <span v-if=\"row.spec.taints && row.spec.taints.length\">\n                {{ t('node.list.nodeTaint') }}:\n                <Tag\n                  v-for=\"taint in row.spec.taints\"\n                  :key=\"taint.key + taint.value + taint.effect\"\n                  class=\"mr-5 mt-2\"\n                >\n                  {{ taint.key }}={{ taint.value }}:{{ taint.effect }}\n                </Tag>\n              </span>\n              <span\n                v-if=\"!!row.customLabelCount\"\n                class=\"mt-5\"\n              > {{ t('node.list.nodeLabels') }}:\n                <span\n                  v-for=\"(label, i) in row.customLabels\"\n                  :key=\"i\"\n                  class=\"mt-5 labels\"\n                >\n                  <Tag\n                    v-if=\"i < 7\"\n                    class=\"mr-2 label\"\n                  >\n                    {{ label }}\n                  </Tag>\n                  <Tag\n                    v-else-if=\"i > 6 && row.displayLabels\"\n                    class=\"mr-2 label\"\n                  >\n                    {{ label }}\n                  </Tag>\n                </span>\n                <a\n                  v-if=\"row.customLabelCount > 7\"\n                  href=\"#\"\n                  @click.prevent=\"toggleLabels(row)\"\n                >\n                  {{ t(`node.list.${row.displayLabels? 'hideLabels' : 'showLabels'}`) }}\n                </a>\n              </span>\n            </td>\n          </template>\n          <td\n            v-else\n            :colspan=\"fullColspan\"\n          >\n&nbsp;\n          </td>\n        </tr>\n      </template>\n    </ResourceTable>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n\n.labels {\n    display: inline;\n    flex-wrap: wrap;\n\n    .label {\n      display: inline-block;\n      margin-top: 2px;\n    }\n\n}\n.taints {\n  td {\n    padding-top:0;\n    .tag {\n      margin-right: 5px;\n      display: inline-block;\n      margin-top: 2px;\n    }\n  }\n  &.empty-taints {\n    // No taints... so hide sub-row (but not bottom-border)\n    height: 0;\n    line-height: 0;\n    td {\n      padding: 0;\n    }\n  }\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]}]}