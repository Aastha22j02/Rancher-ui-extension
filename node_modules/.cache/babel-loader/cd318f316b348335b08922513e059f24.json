{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/detail/cis.cattle.io.clusterscan.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/detail/cis.cattle.io.clusterscan.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Date","SortableTable","Banner","LabeledSelect","Loading","day","DATE_FORMAT","TIME_FORMAT","escapeHtml","randomStr","CIS","STATE","get","allHash","fetchSpecsScheduledScanConfig","components","props","value","type","Object","default","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","inStore","schema","hash","wrap","_callee$","_context","prev","next","$store","getters","concat","clusterReports","getReports","hasScheduledScanConfig","sent","stop","data","clusterReport","computed","parsedReport","_this$clusterReport","canBeScheduled","reportNodes","_this$clusterReport2","nodes","results","_this2","aggregatedTests","map","check","testStateSort","state","testIdSort","node_type","nodeRows","reduce","forEach","name","push","id","nodeState","details","_this3","out","label","t","status","lastRunScanProfileName","to","params","_objectSpread","$route","resource","CLUSTER_SCAN_PROFILE","total","pass","warn","skip","fail","notApplicable","lastRunTimestamp","component","filter","each","reportCheckHeaders","formatterOpts","arbitrary","sort","width","nodeTableHeaders","watch","neu","_this4","then","reports","_unused","methods","reportLabel","report","arguments","length","undefined","creationTimestamp","metadata","dateFormat","timeFormat","replace","format","node","includes","SORT_ORDER","other","mixed","test","_test$id","split","n","join","remediationDisplay","row","remediation"],"sources":["node_modules/@rancher/shell/detail/cis.cattle.io.clusterscan.vue"],"sourcesContent":["<script>\nimport Date from '@shell/components/formatter/Date';\nimport SortableTable from '@shell/components/SortableTable';\nimport { Banner } from '@components/Banner';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport Loading from '@shell/components/Loading';\nimport day from 'dayjs';\nimport { DATE_FORMAT, TIME_FORMAT } from '@shell/store/prefs';\nimport { escapeHtml, randomStr } from '@shell/utils/string';\nimport { CIS } from '@shell/config/types';\nimport { STATE } from '@shell/config/table-headers';\nimport { get } from '@shell/utils/object';\nimport { allHash } from '@shell/utils/promise';\nimport { fetchSpecsScheduledScanConfig } from '@shell/models/cis.cattle.io.clusterscan';\n\nexport default {\n  components: {\n    Date,\n    SortableTable,\n    Banner,\n    LabeledSelect,\n    Loading,\n  },\n\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n\n  async fetch() {\n    const inStore = this.$store.getters['currentProduct'].inStore;\n    const schema = this.$store.getters[`${ inStore }/schemaFor`](this.value);\n\n    const hash = await allHash({\n      clusterReports:         this.value.getReports(),\n      // Ensure the clusterscan model has everything it needs\n      hasScheduledScanConfig: fetchSpecsScheduledScanConfig(schema),\n    });\n\n    this.clusterReports = hash.clusterReports;\n  },\n\n  data() {\n    return { clusterReports: [], clusterReport: null };\n  },\n\n  computed: {\n    parsedReport() {\n      return this.clusterReport?.parsedReport || null;\n    },\n\n    canBeScheduled() {\n      return this.value.canBeScheduled();\n    },\n\n    reportNodes() {\n      return this.clusterReport?.nodes || null;\n    },\n\n    results() {\n      if (!this.clusterReport || !this.clusterReport.aggregatedTests) {\n        return [];\n      }\n\n      return this.clusterReport.aggregatedTests.map((check) => {\n        check.testStateSort = this.testStateSort(check.state);\n        check.testIdSort = this.testIdSort(check);\n        if (!!check.node_type) {\n          const nodeRows = check.node_type.reduce((nodes, type) => {\n            if (this.reportNodes[type]) {\n              this.reportNodes[type].forEach((name) => nodes.push({\n                type, name, id: randomStr(4), state: this.nodeState(check, name, check.nodes), testStateSort: this.testStateSort(this.nodeState(check, name, check.nodes))\n              })\n              );\n            }\n\n            return nodes;\n          }, []);\n\n          check.nodeRows = nodeRows;\n        }\n\n        return check;\n      });\n    },\n\n    details() {\n      if (!this.parsedReport) {\n        return [];\n      }\n\n      const out = [\n        {\n          label: this.t('cis.profile'),\n          value: this.value.status.lastRunScanProfileName,\n          to:    {\n            name:   'c-cluster-product-resource-id',\n            params: {\n              ...this.$route.params,\n              resource: CIS.CLUSTER_SCAN_PROFILE,\n              id:       this.value.status.lastRunScanProfileName\n            }\n          }\n        },\n        {\n          label: this.t('cis.scan.total'),\n          value: this.parsedReport.total\n        },\n        {\n          label: this.t('cis.scan.pass'),\n          value: this.parsedReport.pass\n        },\n        {\n          label: this.t('cis.scan.warn'),\n          value: this.parsedReport.warn\n        },\n        {\n          label: this.t('cis.scan.skip'),\n          value: this.parsedReport.skip\n        },\n        {\n          label: this.t('cis.scan.fail'),\n          value: this.parsedReport.fail\n        },\n        {\n          label: this.t('cis.scan.notApplicable'),\n          value: this.parsedReport.notApplicable\n        },\n        {\n          label:     this.canBeScheduled ? this.t('cis.scan.lastScanTime') : this.t('cis.scan.scanDate'),\n          value:     this.value.status.lastRunTimestamp,\n          component: 'Date'\n        },\n      ];\n\n      if (!this.canBeScheduled) {\n        return out.filter((each) => each.label !== this.t('cis.scan.warn'));\n      }\n\n      return out;\n    },\n\n    reportCheckHeaders() {\n      return [\n        {\n          ...STATE,\n          value:         'state',\n          formatterOpts: { arbitrary: true },\n          sort:          ['testStateSort', 'testIdSort']\n        },\n        {\n          name:  'number',\n          label: this.t('cis.scan.number'),\n          value: 'id',\n          sort:  'testIdSort',\n          width: 100\n        },\n        {\n          name:  'description',\n          label: this.t('cis.scan.description'),\n          value: 'description',\n        }\n      ];\n    },\n\n    nodeTableHeaders() {\n      return [\n        {\n          ...STATE,\n          value:         'state',\n          formatterOpts: { arbitrary: true },\n          sort:          'testStateSort'\n        },\n        {\n          name:  'node',\n          label: this.t('tableHeaders.name'),\n          value: 'name',\n        },\n        {\n          name:  'type',\n          label: this.t('tableHeaders.type'),\n          value: 'type',\n        },\n      ];\n    },\n  },\n\n  watch: {\n    value(neu) {\n      try {\n        neu.getReports().then((reports) => {\n          this.clusterReports = reports;\n        });\n      } catch {}\n    },\n\n    clusterReports(neu) {\n      if (!this.clusterReport) {\n        this.clusterReport = neu[0];\n      }\n    }\n  },\n\n  methods: {\n    reportLabel(report = {}) {\n      const { creationTimestamp } = report.metadata;\n      const dateFormat = escapeHtml( this.$store.getters['prefs/get'](DATE_FORMAT));\n      const timeFormat = escapeHtml( this.$store.getters['prefs/get'](TIME_FORMAT));\n\n      const name = report.id.replace(/^scan-report-/, '');\n\n      return `${ name } ${ day(creationTimestamp).format(`${ dateFormat } ${ timeFormat }`) }`;\n    },\n\n    nodeState(check, node, nodes = []) {\n      if (check.state === 'mixed') {\n        return nodes.includes(node) ? 'fail' : 'pass';\n      }\n\n      return check.state;\n    },\n\n    testStateSort(state) {\n      const SORT_ORDER = {\n        other:         7,\n        notApplicable: 6,\n        skip:          5,\n        pass:          4,\n        warn:          3,\n        mixed:         2,\n        fail:          1,\n      };\n\n      return `${ SORT_ORDER[state] || SORT_ORDER['other'] } ${ state }`;\n    },\n\n    testIdSort(test) {\n      const { id = '' } = test;\n\n      return id.split('.').map((n) => +n + 1000).join('.');\n    },\n\n    remediationDisplay(row) {\n      const { remediation } = row;\n\n      if (!remediation) {\n\n      } else {\n        return `${ this.t('cis.scan.remediation') }: ${ remediation }`;\n      }\n    },\n    get\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <div class=\"detail mb-20\">\n      <div\n        v-for=\"item in details\"\n        :key=\"item.label\"\n      >\n        <span class=\"text-label\">{{ item.label }}</span>:\n        <component\n          :is=\"item.component\"\n          v-if=\"item.component\"\n          :value=\"item.value\"\n        />\n        <router-link\n          v-else-if=\"item.to\"\n          :to=\"item.to\"\n        >\n          {{ item.value }}\n        </router-link>\n        <span v-else>{{ item.value }}</span>\n      </div>\n    </div>\n    <div\n      v-if=\"clusterReports.length > 1\"\n      class=\"table-header row mb-20\"\n    >\n      <div class=\"col span-8\">\n        <h3>\n          {{ t('cis.scan.scanReport') }}\n        </h3>\n      </div>\n      <div class=\"col span-4\">\n        <LabeledSelect\n          v-model=\"clusterReport\"\n          :label=\"t('cis.reports')\"\n          :options=\"clusterReports\"\n          :get-option-label=\"reportLabel\"\n          :get-option-key=\"report=>report.id\"\n        />\n      </div>\n    </div>\n    <div v-if=\"results && !!get(value, 'status.summary')\">\n      <SortableTable\n        no-rows-key=\"cis.noReportFound\"\n        default-sort-by=\"state\"\n        :search=\"false\"\n        :row-actions=\"false\"\n        :table-actions=\"false\"\n        :rows=\"results\"\n        :sub-rows=\"true\"\n        :sub-expandable=\"true\"\n        :sub-expand-column=\"true\"\n        :headers=\"reportCheckHeaders\"\n        key-field=\"id\"\n      >\n        <template #sub-row=\"{row, fullColspan, onRowMouseEnter, onRowMouseLeave}\">\n          <tr\n            class=\"sub-row\"\n            @mouseenter=\"onRowMouseEnter\"\n            @mouseleave=\"onRowMouseLeave\"\n          >\n            <td :colspan=\"fullColspan\">\n              <Banner\n                v-if=\"(row.state==='fail' || row.state==='warn')&& row.remediation\"\n                class=\"sub-banner\"\n                :label=\"remediationDisplay(row)\"\n                color=\"warning\"\n              />\n              <SortableTable\n                class=\"sub-table\"\n                :rows=\"row.nodeRows\"\n                :headers=\"nodeTableHeaders\"\n                :search=\"false\"\n                :row-actions=\"false\"\n                :table-actions=\"false\"\n                key-field=\"id\"\n              />\n            </td>\n          </tr>\n        </template>\n      </SortableTable>\n    </div>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n.detail {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px;\n    border-bottom: 1px solid var(--border);\n\n    & .div {\n        padding: 0px 10px 0px 10px;\n    }\n}\n\n.sub-table {\n  padding: 0px 40px 0px 40px;\n}\n\n.sub-banner{\n  margin: 0px 40px 0px 40px;\n  width: auto;\n}\n\n.table-header {\n  align-items: flex-end;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}