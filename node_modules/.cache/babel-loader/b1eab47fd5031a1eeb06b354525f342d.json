{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/c/_cluster/settings/performance.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/c/_cluster/settings/performance.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Checkbox","Loading","AsyncButton","Banner","LabeledInput","MANAGEMENT","DEFAULT_PERF_SETTING","SETTING","_EDIT","_VIEW","UnitInput","incompatible","incrementalLoading","manualRefresh","forceNsFilterV2","l10n","components","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$uiPerfSetting","sValue","wrap","_callee$","_context","prev","next","$store","dispatch","type","id","UI_PERFORMANCE","uiPerfSetting","sent","t0","root","value","JSON","stringify","metadata","name","AUTH_USER_SESSION_TTL_MINUTES","authUserTTL","t1","_objectSpread","parse","gcStartedEnabled","garbageCollection","enabled","stop","data","bannerVal","errors","isInactivityThresholdValid","computed","mode","_schema$resourceMetho","schema","getters","resourceMethods","includes","canSave","inactivity","methods","validateInactivityThreshold","_this$authUserTTL","_this$authUserTTL2","parseInt","t","current","save","btnCB","_this2","_callee2","_callee2$","_context2","previouslyEnabled","newPreferences","push","compatibleWarning","property","_this3","every","p","component","componentProps","applyMode","applyAction","buttonDone","forEach","title","body","concat"],"sources":["node_modules/@rancher/shell/pages/c/_cluster/settings/performance.vue"],"sourcesContent":["<script>\nimport { Checkbox } from '@components/Form/Checkbox';\nimport Loading from '@shell/components/Loading';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { Banner } from '@components/Banner';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { MANAGEMENT } from '@shell/config/types';\nimport { DEFAULT_PERF_SETTING, SETTING } from '@shell/config/settings';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport UnitInput from '@shell/components/form/UnitInput';\n\nconst incompatible = {\n  incrementalLoading: ['forceNsFilterV2'],\n  manualRefresh:      ['forceNsFilterV2'],\n  forceNsFilterV2:    ['incrementalLoading', 'manualRefresh'],\n};\n\nconst l10n = {\n  incrementalLoading: 'incrementalLoad',\n  manualRefresh:      'manualRefresh',\n  forceNsFilterV2:    'nsFiltering',\n};\n\nexport default {\n  components: {\n    Checkbox,\n    Loading,\n    AsyncButton,\n    Banner,\n    LabeledInput,\n    UnitInput\n  },\n\n  async fetch() {\n    try {\n      this.uiPerfSetting = await this.$store.dispatch('management/find', { type: MANAGEMENT.SETTING, id: SETTING.UI_PERFORMANCE });\n    } catch {\n      this.uiPerfSetting = await this.$store.dispatch('management/create', { type: MANAGEMENT.SETTING }, { root: true });\n      // Setting does not exist - create a new one\n      this.uiPerfSetting.value = JSON.stringify(DEFAULT_PERF_SETTING);\n      this.uiPerfSetting.metadata = { name: SETTING.UI_PERFORMANCE };\n    }\n\n    try {\n      this.authUserTTL = await this.$store.dispatch(`management/find`, { type: MANAGEMENT.SETTING, id: SETTING.AUTH_USER_SESSION_TTL_MINUTES });\n    } catch {}\n\n    const sValue = this.uiPerfSetting?.value || JSON.stringify(DEFAULT_PERF_SETTING);\n\n    this.value = {\n      ...DEFAULT_PERF_SETTING,\n      ...JSON.parse(sValue),\n    };\n\n    this.gcStartedEnabled = this.value.garbageCollection.enabled;\n  },\n\n  data() {\n    return {\n      uiPerfSetting:              DEFAULT_PERF_SETTING,\n      authUserTTL:                null,\n      bannerVal:                  {},\n      value:                      {},\n      errors:                     [],\n      gcStartedEnabled:           null,\n      isInactivityThresholdValid: false,\n    };\n  },\n\n  computed: {\n    mode() {\n      const schema = this.$store.getters[`management/schemaFor`](MANAGEMENT.SETTING);\n\n      return schema?.resourceMethods?.includes('PUT') ? _EDIT : _VIEW;\n    },\n\n    canSave() {\n      return this.value.inactivity.enabled ? this.isInactivityThresholdValid : true;\n    }\n  },\n\n  methods: {\n    validateInactivityThreshold(value) {\n      if (!this.authUserTTL?.value) {\n        this.isInactivityThresholdValid = true;\n\n        return;\n      }\n\n      if (parseInt(value) > parseInt(this.authUserTTL?.value)) {\n        this.isInactivityThresholdValid = false;\n\n        return this.t('performance.inactivity.authUserTTL', { current: this.authUserTTL.value });\n      }\n      this.isInactivityThresholdValid = true;\n    },\n\n    async save(btnCB) {\n      this.uiPerfSetting.value = JSON.stringify(this.value);\n      this.errors = [];\n\n      try {\n        await this.uiPerfSetting.save();\n\n        this.$store.dispatch('gcPreferencesUpdated', {\n          previouslyEnabled: this.gcStartedEnabled,\n          newPreferences:    this.value.garbageCollection\n        }, { root: true });\n\n        this.gcStartedEnabled = this.value.garbageCollection.enabled;\n        btnCB(true);\n      } catch (err) {\n        this.errors.push(err);\n        btnCB(false);\n      }\n    },\n\n    compatibleWarning(property, enabled) {\n      if (!enabled) {\n        // Disabling a preference won't automatically turn on an incompatible one, so just set and exit\n        this.value[property].enabled = false;\n\n        return;\n      }\n\n      // We're enabling a preference. Are there any incomaptible preferences?\n      if ((incompatible[property] || []).every((p) => !this.value[p].enabled)) {\n        // No, just set and exit\n        this.value[property].enabled = true;\n\n        return;\n      }\n\n      // Incompatible preferences found, so confirm with user before applying\n      this.$store.dispatch('cluster/promptModal', {\n        component:      'GenericPrompt',\n        componentProps: {\n          applyMode:   'enable',\n          applyAction: (buttonDone) => {\n            this.value[property].enabled = true;\n            (incompatible[property] || []).forEach((incompatible) => {\n              this.value[incompatible].enabled = false;\n            });\n            buttonDone(true);\n          },\n          title: this.t('promptRemove.title', {}, true),\n          body:  this.t(`performance.${ l10n[property] }.incompatibleDescription`, {}, true),\n        },\n      });\n    }\n  },\n};\n</script>\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <h1 class=\"mb-20\">\n      {{ t('performance.label') }}\n    </h1>\n    <div>\n      <div class=\"ui-perf-setting\">\n        <!-- Inactivity -->\n        <div class=\"mt-20\">\n          <h2>{{ t('performance.inactivity.title') }}</h2>\n          <p>{{ t('performance.inactivity.description') }}</p>\n          <Checkbox\n            v-model=\"value.inactivity.enabled\"\n            :mode=\"mode\"\n            :label=\"t('performance.inactivity.checkboxLabel')\"\n            class=\"mt-10 mb-20\"\n            :primary=\"true\"\n          />\n          <div class=\"ml-20\">\n            <LabeledInput\n              v-model=\"value.inactivity.threshold\"\n              data-testid=\"inactivity-threshold\"\n              :mode=\"mode\"\n              :label=\"t('performance.inactivity.inputLabel')\"\n              :disabled=\"!value.inactivity.enabled\"\n              class=\"input mb-10\"\n              type=\"number\"\n              min=\"0\"\n              :rules=\"[validateInactivityThreshold]\"\n            />\n            <span\n              v-clean-html=\"t('performance.inactivity.information', {}, true)\"\n              :class=\"{ 'text-muted': !value.incrementalLoading.enabled }\"\n            />\n          </div>\n        </div>\n        <!-- Websocket Notifications -->\n        <div class=\"mt-40\">\n          <h2>{{ t('performance.websocketNotification.label') }}</h2>\n          <p>{{ t('performance.websocketNotification.description') }}</p>\n          <Checkbox\n            v-model=\"value.disableWebsocketNotification\"\n            :mode=\"mode\"\n            :label=\"t('performance.websocketNotification.checkboxLabel')\"\n            class=\"mt-10 mb-20\"\n            :primary=\"true\"\n          />\n        </div>\n        <!-- Incremental Loading -->\n        <div class=\"mt-40\">\n          <h2>{{ t('performance.incrementalLoad.label') }}</h2>\n          <p>{{ t('performance.incrementalLoad.description') }}</p>\n          <Checkbox\n            :value=\"value.incrementalLoading.enabled\"\n            :mode=\"mode\"\n            :label=\"t('performance.incrementalLoad.checkboxLabel')\"\n            class=\"mt-10 mb-20\"\n            :primary=\"true\"\n            @input=\"compatibleWarning('incrementalLoading', $event)\"\n          />\n          <div class=\"ml-20\">\n            <p :class=\"{ 'text-muted': !value.incrementalLoading.enabled }\">\n              {{ t('performance.incrementalLoad.setting') }}\n            </p>\n            <LabeledInput\n              v-model=\"value.incrementalLoading.threshold\"\n              :mode=\"mode\"\n              :label=\"t('performance.incrementalLoad.inputLabel')\"\n              :disabled=\"!value.incrementalLoading.enabled\"\n              class=\"input\"\n              type=\"number\"\n              min=\"0\"\n            />\n          </div>\n        </div>\n        <!-- Enable manual refresh list views -->\n        <div class=\"mt-40\">\n          <h2 v-t=\"'performance.manualRefresh.label'\" />\n          <p>{{ t('performance.manualRefresh.description') }}</p>\n          <Banner\n            color=\"error\"\n            label-key=\"performance.experimental\"\n          />\n          <Checkbox\n            :value=\"value.manualRefresh.enabled\"\n            :mode=\"mode\"\n            :label=\"t('performance.manualRefresh.checkboxLabel')\"\n            class=\"mt-10 mb-20\"\n            :primary=\"true\"\n            @input=\"compatibleWarning('manualRefresh', $event)\"\n          />\n          <div class=\"ml-20\">\n            <p :class=\"{ 'text-muted': !value.manualRefresh.enabled }\">\n              {{ t('performance.manualRefresh.setting') }}\n            </p>\n            <LabeledInput\n              v-model.number=\"value.manualRefresh.threshold\"\n              :mode=\"mode\"\n              :label=\"t('performance.manualRefresh.inputLabel')\"\n              :disabled=\"!value.manualRefresh.enabled\"\n              class=\"input\"\n              type=\"number\"\n              min=\"0\"\n            />\n          </div>\n        </div>\n        <!-- Enable GC of resources from store -->\n        <div class=\"mt-40\">\n          <h2 v-t=\"'performance.gc.label'\" />\n          <p>{{ t('performance.gc.description') }}</p>\n          <Banner\n            color=\"error\"\n            label-key=\"performance.experimental\"\n          />\n          <Checkbox\n            v-model=\"value.garbageCollection.enabled\"\n            :mode=\"mode\"\n            :label=\"t('performance.gc.checkboxLabel')\"\n            class=\"mt-10 mb-20\"\n            :primary=\"true\"\n          />\n          <div class=\"ml-20\">\n            <h3>{{ t('performance.gc.whenRun.description') }}</h3>\n            <div class=\"ml-20 mb-10\">\n              <Checkbox\n                v-model=\"value.garbageCollection.enabledInterval\"\n                :mode=\"mode\"\n                :class=\"{ 'text-muted': !value.garbageCollection.enabled }\"\n                :label=\"t('performance.gc.whenRun.intervalCheckBox.label')\"\n                class=\"mt-10 mb-10\"\n                :disabled=\"!value.garbageCollection.enabled\"\n                :primary=\"true\"\n              />\n              <div class=\"ml-20\">\n                <UnitInput\n                  v-model=\"value.garbageCollection.interval\"\n                  :mode=\"mode\"\n                  :suffix=\"t('suffix.seconds', { count: value.garbageCollection.interval })\"\n                  :label=\"t('performance.gc.whenRun.interval.inputLabel')\"\n                  :disabled=\"!value.garbageCollection.enabled || !value.garbageCollection.enabledInterval\"\n                  min=\"30\"\n                  class=\"input\"\n                />\n              </div>\n              <Checkbox\n                v-model=\"value.garbageCollection.enabledOnNavigate\"\n                :mode=\"mode\"\n                :class=\"{ 'text-muted': !value.garbageCollection.enabled }\"\n                :label=\"t('performance.gc.whenRun.route.description')\"\n                class=\"mt-20 mb-10\"\n                :disabled=\"!value.garbageCollection.enabled\"\n                :primary=\"true\"\n              />\n            </div>\n            <h3>{{ t('performance.gc.howRun.description') }}</h3>\n            <div class=\"ml-20\">\n              <p :class=\"{ 'text-muted': !value.garbageCollection.enabled }\">\n                {{ t('performance.gc.howRun.age.description', {}, true) }}\n              </p>\n              <UnitInput\n                v-model=\"value.garbageCollection.ageThreshold\"\n                :mode=\"mode\"\n                :suffix=\"t('suffix.seconds', { count: value.garbageCollection.ageThreshold })\"\n                :label=\"t('performance.gc.howRun.age.inputLabel')\"\n                :disabled=\"!value.garbageCollection.enabled\"\n                min=\"30\"\n                class=\"input\"\n              />\n              <p\n                class=\"mt-20\"\n                :class=\"{ 'text-muted': !value.garbageCollection.enabled }\"\n              >\n                {{ t('performance.gc.howRun.count.description') }}\n              </p>\n              <LabeledInput\n                v-model.number=\"value.garbageCollection.countThreshold\"\n                :mode=\"mode\"\n                :label=\"t('performance.gc.howRun.count.inputLabel')\"\n                :disabled=\"!value.garbageCollection.enabled\"\n                class=\"input\"\n                type=\"number\"\n                min=\"0\"\n              />\n            </div>\n          </div>\n        </div>\n        <!-- Force NS filter -->\n        <div class=\"mt-40\">\n          <h2>{{ t('performance.nsFiltering.label') }}</h2>\n          <p>{{ t('performance.nsFiltering.description') }}</p>\n          <Banner\n            color=\"error\"\n            label-key=\"performance.experimental\"\n          />\n          <Checkbox\n            :value=\"value.forceNsFilterV2.enabled\"\n            :mode=\"mode\"\n            :label=\"t('performance.nsFiltering.checkboxLabel')\"\n            class=\"mt-10 mb-20\"\n            :primary=\"true\"\n            @input=\"compatibleWarning('forceNsFilterV2', $event)\"\n          />\n        </div>\n        <!-- Advanced Websocket Worker -->\n        <div class=\"mt-40\">\n          <h2>{{ t('performance.advancedWorker.label') }}</h2>\n          <p>{{ t('performance.advancedWorker.description') }}</p>\n          <Banner\n            color=\"error\"\n            label-key=\"performance.experimental\"\n          />\n          <Checkbox\n            v-model=\"value.advancedWorker.enabled\"\n            :mode=\"mode\"\n            :label=\"t('performance.advancedWorker.checkboxLabel')\"\n            class=\"mt-10 mb-20\"\n            :primary=\"true\"\n          />\n        </div>\n      </div>\n    </div>\n    <template v-for=\"err in errors\">\n      <Banner\n        :key=\"err\"\n        color=\"error\"\n        :label=\"err\"\n      />\n    </template>\n    <div v-if=\"mode === 'edit'\">\n      <AsyncButton\n        data-testid=\"performance__save-btn\"\n        class=\"pull-right mt-20\"\n        mode=\"apply\"\n        :disabled=\"!canSave\"\n        @click=\"save\"\n      />\n    </div>\n  </div>\n</template>\n<style scoped lang='scss'>\n.overlay {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: var(--overlay-bg);\n  z-index: 1;\n}\n  .ui-perf-setting {\n    P {\n      line-height: 1.25;\n      margin-bottom: 10px;\n    }\n\n    .underline {\n      text-decoration: underline;\n    }\n  }\n  .input {\n    max-width: 25%;\n  }\n</style>\n"],"mappings":"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","ignoreList":[]}]}