{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/management.cattle.io.roletemplate.js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/management.cattle.io.roletemplate.js","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Vue","get","DESCRIPTION","NORMAN","SteveDescriptionModel","AS","MODE","_CLONE","_UNFLAG","CATTLE_API_GROUP","SUBTYPE_MAPPING","GLOBAL","key","type","defaultKey","id","labelKey","CLUSTER","context","NAMESPACE","RBAC_ROLE","RBAC_CLUSTER_ROLE","VERBS","CREATE_VERBS","Set","RoleTemplate","_SteveDescriptionMode","_classCallCheck","_callSuper","arguments","_inherits","_createClass","path","validators","concat","nullable","_this$metadata","out","_details","unshift","label","t","content","metadata","annotations","_this$metadata2","locked","state","name","_subtype","value","updateSubtype","subtype","set","_SUBTYPE_MAPPING$this","updateDefault","hash","_objectSpread","_detailLocation","listLocation","$dispatch","ROLE_TEMPLATE","root","displayName","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","norman","wrap","_callee$","_context","prev","next","basicNorman","sent","rules","clusterCreatorDefault","projectCreatorDefault","description","roleTemplateIds","roleTemplateNames","abrupt","stop","schema","$getters","resourceMethods","find","verb","has","goToClone","moreQuery","length","undefined","location","detailLocation","query","_defineProperty","currentRouter","push","_save","_callee2","_iterator","_step","rule","_callee2$","_context2","_createForOfIteratorHelper","s","n","done","nonResourceURLs","resources","apiGroups","err","e","f","save","apply","_remove","_callee3","_callee3$","_context3","remove","default"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/management.cattle.io.roletemplate.js"],"sourcesContent":["import Vue from 'vue';\nimport { get } from '@shell/utils/object';\nimport { DESCRIPTION } from '@shell/config/labels-annotations';\nimport { NORMAN } from '@shell/config/types';\nimport SteveDescriptionModel from '@shell/plugins/steve/steve-description-class';\nimport { AS, MODE, _CLONE, _UNFLAG } from '@shell/config/query-params';\n\nexport const CATTLE_API_GROUP = '.cattle.io';\n\nexport const SUBTYPE_MAPPING = {\n  GLOBAL: {\n    key:        'GLOBAL',\n    type:       'management.cattle.io.globalrole',\n    defaultKey: 'newUserDefault',\n    id:         'GLOBAL',\n    labelKey:   'rbac.roletemplate.subtypes.GLOBAL.label',\n  },\n  CLUSTER: {\n    key:        'CLUSTER',\n    type:       'management.cattle.io.roletemplate',\n    context:    'cluster',\n    defaultKey: 'clusterCreatorDefault',\n    id:         'CLUSTER',\n    labelKey:   'rbac.roletemplate.subtypes.CLUSTER.label',\n  },\n  NAMESPACE: {\n    key:        'NAMESPACE',\n    type:       'management.cattle.io.roletemplate',\n    context:    'project',\n    defaultKey: 'projectCreatorDefault',\n    id:         'NAMESPACE',\n    labelKey:   'rbac.roletemplate.subtypes.NAMESPACE.label',\n  },\n  RBAC_ROLE: {\n    key:      'RBAC_ROLE',\n    type:     'rbac.authorization.k8s.io.role',\n    id:       'RBAC_ROLE',\n    labelKey: 'rbac.roletemplate.subtypes.RBAC_ROLE.label',\n  },\n  RBAC_CLUSTER_ROLE: {\n    key:      'RBAC_CLUSTER_ROLE',\n    type:     'rbac.authorization.k8s.io.clusterrole',\n    id:       'RBAC_CLUSTER_ROLE',\n    labelKey: 'rbac.roletemplate.subtypes.RBAC_CLUSTER_ROLE.label',\n  }\n};\n\nexport const VERBS = [\n  'create',\n  'delete',\n  'get',\n  'list',\n  'patch',\n  'update',\n  'watch',\n];\n\nexport const CREATE_VERBS = new Set(['PUT', 'blocked-PUT']);\n\nexport default class RoleTemplate extends SteveDescriptionModel {\n  get customValidationRules() {\n    return [\n      {\n        path:       'rules',\n        validators: [`roleTemplateRules:${ this.type }`],\n        nullable:   false,\n        type:       'array',\n      },\n    ];\n  }\n\n  get details() {\n    const out = this._details;\n\n    out.unshift({\n      label:   this.t('resourceDetail.detailTop.name'),\n      content: get(this, 'name')\n    },\n    // API returns a blank description property, this overrides our own link to the description\n    {\n      label:   this.t('resourceDetail.detailTop.description'),\n      content: this.metadata?.annotations?.[DESCRIPTION]\n    });\n\n    return out;\n  }\n\n  get state() {\n    return this.locked ? 'locked' : this.metadata?.state?.name || 'unknown';\n  }\n\n  get subtype() {\n    if (this._subtype) {\n      return this._subtype;\n    }\n\n    if (this.type === SUBTYPE_MAPPING.CLUSTER.type && this.context === SUBTYPE_MAPPING.CLUSTER.context) {\n      return SUBTYPE_MAPPING.CLUSTER.key;\n    }\n\n    if (this.type === SUBTYPE_MAPPING.NAMESPACE.type && this.context === SUBTYPE_MAPPING.NAMESPACE.context) {\n      return SUBTYPE_MAPPING.NAMESPACE.key;\n    }\n\n    return null;\n  }\n\n  updateSubtype(subtype) {\n    Vue.set(this, '_subtype', subtype);\n    this.context = SUBTYPE_MAPPING[subtype].context;\n  }\n\n  get default() {\n    const defaultKey = SUBTYPE_MAPPING[this.subtype]?.defaultKey;\n\n    return !!this[defaultKey];\n  }\n\n  updateDefault(value) {\n    const defaultKey = SUBTYPE_MAPPING[this.subtype].defaultKey;\n\n    Vue.set(this, defaultKey, value);\n  }\n\n  get listLocation() {\n    return {\n      name: `c-cluster-auth-roles`,\n      hash: `#${ this.subtype }`\n    };\n  }\n\n  get detailLocation() {\n    return {\n      ...this._detailLocation,\n      name: `c-cluster-auth-roles-resource-id`,\n    };\n  }\n\n  get doneOverride() {\n    return this.listLocation;\n  }\n\n  get parentLocationOverride() {\n    return this.listLocation;\n  }\n\n  get basicNorman() {\n    if (this.id) {\n      return this.$dispatch(`rancher/find`, { id: this.id, type: NORMAN.ROLE_TEMPLATE }, { root: true });\n    }\n\n    return this.$dispatch(`rancher/create`, { type: NORMAN.ROLE_TEMPLATE, name: this.displayName }, { root: true });\n  }\n\n  get norman() {\n    return (async() => {\n      const norman = await this.basicNorman;\n\n      norman.rules = this.rules;\n      norman.locked = this.locked;\n      norman.clusterCreatorDefault = this.clusterCreatorDefault || false;\n      norman.projectCreatorDefault = this.projectCreatorDefault || false;\n      norman.context = this.context;\n      norman.description = this.description;\n      norman.roleTemplateIds = this.roleTemplateNames;\n\n      return norman;\n    })();\n  }\n\n  get canCreate() {\n    const schema = this.$getters['schemaFor'](this.type);\n\n    return schema?.resourceMethods.find((verb) => CREATE_VERBS.has(verb));\n  }\n\n  goToClone(moreQuery = {}) {\n    const location = this.detailLocation;\n\n    location.query = {\n      ...location.query,\n      [MODE]:      _CLONE,\n      [AS]:        _UNFLAG,\n      roleContext: this.subtype,\n      ...moreQuery\n    };\n\n    this.currentRouter().push(location);\n  }\n\n  async save() {\n    const norman = await this.norman;\n\n    for (const rule of norman.rules) {\n      if (rule.nonResourceURLs && rule.nonResourceURLs.length) {\n        delete rule.resources;\n        delete rule.apiGroups;\n      } else {\n        delete rule.nonResourceURLs;\n      }\n    }\n\n    return norman.save();\n  }\n\n  async remove() {\n    const norman = await this.norman;\n\n    await norman.remove();\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}