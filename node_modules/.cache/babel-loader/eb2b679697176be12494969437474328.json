{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/ExplorerProjectsNamespaces.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/ExplorerProjectsNamespaces.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapGetters","ResourceTable","defaultTableSortGenerationFn","STATE","AGE","NAME","uniq","MANAGEMENT","NAMESPACE","VIRTUAL_TYPES","PROJECT_ID","FLAT_VIEW","PanelLocation","ExtensionPoint","ExtensionPanel","Masthead","mapPref","GROUP_RESOURCES","ALL_NAMESPACES","MoveModal","NAMESPACE_FILTER_ALL_ORPHANS","ResourceFetch","DOMPurify","name","components","mixins","props","createProjectLocationOverride","type","Object","default","createNamespaceLocationOverride","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","inStore","wrap","_callee$","_context","prev","next","$store","getters","schema","concat","projectSchema","PROJECT","abrupt","$fetchType","dispatch","opt","force","projects","sent","stop","data","loadResources","loadIndeterminate","extensionType","PANEL","extensionLocation","RESOURCE_LIST","defaultCreateProjectLocation","params","product","resource","computed","_objectSpread","namespaces","loading","currentCluster","length","$fetchState","pending","showIncrementalLoadingIndicator","_this$perfConfig","perfConfig","incrementalLoading","enabled","isNamespaceCreatable","_this$schema","collectionMethods","includes","headers","project","label","t","value","sort","groupPreference","filter","h","projectIdsWithNamespaces","ids","rows","map","row","projectId","id","clusterProjects","_this$currentProduct","_this$currentProduct2","clusterId","projectsInAllClusters","currentProduct","customNamespaceFilter","clustersInProjects","spec","clusterName","projectsWithoutNamespaces","_this2","activeProjects","find","item","_project$id","endsWith","rowsWithFakeNamespaces","fakeRows","_project$spec","groupByLabel","isFake","mainRowKey","nameDisplay","displayName","availableActions","showMockNotInProjectGroup","push","_toConsumableArray","createProjectLocation","activeNamespaceFilters","activeProjectFilters","_iterator","_createForOfIteratorHelper","_step","s","n","done","_filter$split","split","_filter$split2","_slicedToArray","err","e","f","_this3","namespaceFilters","keys","userIsFilteringForSpecificNamespaceOrProject","projectData","activeNamespaces","namespaceData","metadata","filteredRows","_this4","namespace","_this4$currentProduct","isSettingSystemNamespace","systemNS","isSystem","isFleetManaged","hideSystemResources","canSeeProjectlessNamespaces","canUpdate","someNamespacesAreNotInProject","some","usingSpecificFilter","notInProjectKey","showCreateNsButton","methods","getPsaTooltip","dictionary","psaTooltipsDescription","list","values","text","join","title","activeFilters","i","filterType","slotName","createNamespaceLocation","group","location","query","_defineProperty","createNamespaceLocationFlatList","_this$$store$getters$","showProjectAction","event","commit","resources","elem","target","showProjectActionButton","projectLabel","_row$project","sanitize","ALLOWED_TAGS","projectDescription","description","clearSelection","$refs","table","sortGenerationFn","base"],"sources":["node_modules/@rancher/shell/components/ExplorerProjectsNamespaces.vue"],"sourcesContent":["<script>\r\nimport { mapGetters } from 'vuex';\r\nimport ResourceTable, { defaultTableSortGenerationFn } from '@shell/components/ResourceTable';\r\nimport { STATE, AGE, NAME } from '@shell/config/table-headers';\r\nimport { uniq } from '@shell/utils/array';\r\nimport { MANAGEMENT, NAMESPACE, VIRTUAL_TYPES } from '@shell/config/types';\r\nimport { PROJECT_ID, FLAT_VIEW } from '@shell/config/query-params';\r\nimport { PanelLocation, ExtensionPoint } from '@shell/core/types';\r\nimport ExtensionPanel from '@shell/components/ExtensionPanel';\r\nimport Masthead from '@shell/components/ResourceList/Masthead';\r\nimport { mapPref, GROUP_RESOURCES, ALL_NAMESPACES } from '@shell/store/prefs';\r\nimport MoveModal from '@shell/components/MoveModal';\r\n\r\nimport { NAMESPACE_FILTER_ALL_ORPHANS } from '@shell/utils/namespace-filter';\r\nimport ResourceFetch from '@shell/mixins/resource-fetch';\r\nimport DOMPurify from 'dompurify';\r\n\r\nexport default {\r\n  name:       'ListProjectNamespace',\r\n  components: {\r\n    ExtensionPanel, Masthead, MoveModal, ResourceTable\r\n  },\r\n  mixins: [ResourceFetch],\r\n\r\n  props: {\r\n    createProjectLocationOverride: {\r\n      type:    Object,\r\n      default: () => null\r\n    },\r\n\r\n    createNamespaceLocationOverride: {\r\n      type:    Object,\r\n      default: () => null\r\n    }\r\n  },\r\n\r\n  async fetch() {\r\n    const inStore = this.$store.getters['currentStore'](NAMESPACE);\r\n\r\n    this.schema = this.$store.getters[`${ inStore }/schemaFor`](NAMESPACE);\r\n    this.projectSchema = this.$store.getters[`management/schemaFor`](MANAGEMENT.PROJECT);\r\n\r\n    if ( !this.schema ) {\r\n      // clusterReady:   When switching routes, it will cause clusterReady to change, causing itself to repeat rendering。\r\n      // this.$store.dispatch('loadingError', `Type ${ NAMESPACE } not found`);\r\n\r\n      return;\r\n    }\r\n\r\n    await this.$fetchType(NAMESPACE);\r\n    this.projects = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.PROJECT, opt: { force: true } });\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      loadResources:                [NAMESPACE],\r\n      loadIndeterminate:            true,\r\n      schema:                       null,\r\n      projects:                     [],\r\n      projectSchema:                null,\r\n      extensionType:                ExtensionPoint.PANEL,\r\n      extensionLocation:            PanelLocation.RESOURCE_LIST,\r\n      MANAGEMENT,\r\n      VIRTUAL_TYPES,\r\n      defaultCreateProjectLocation: {\r\n        name:   'c-cluster-product-resource-create',\r\n        params: {\r\n          product:  this.$store.getters['currentProduct'].name,\r\n          resource: MANAGEMENT.PROJECT\r\n        },\r\n      }\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters(['currentCluster', 'currentProduct']),\r\n    namespaces() {\r\n      const inStore = this.$store.getters['currentStore'](NAMESPACE);\r\n\r\n      return this.$store.getters[`${ inStore }/all`](NAMESPACE);\r\n    },\r\n    loading() {\r\n      return !this.currentCluster || this.namespaces.length ? false : this.$fetchState.pending;\r\n    },\r\n    showIncrementalLoadingIndicator() {\r\n      return this.perfConfig?.incrementalLoading?.enabled;\r\n    },\r\n    isNamespaceCreatable() {\r\n      return (this.schema?.collectionMethods || []).includes('POST');\r\n    },\r\n    headers() {\r\n      const project = {\r\n        name:  'project',\r\n        label: this.t('tableHeaders.project'),\r\n        value: 'project.nameDisplay',\r\n        sort:  ['projectNameSort', 'nameSort'],\r\n      };\r\n\r\n      return [\r\n        STATE,\r\n        NAME,\r\n        this.groupPreference === 'none' ? project : null,\r\n        AGE\r\n      ].filter((h) => h);\r\n    },\r\n    projectIdsWithNamespaces() {\r\n      const ids = this.rows\r\n        .map((row) => row.projectId)\r\n        .filter((id) => id);\r\n\r\n      return uniq(ids);\r\n    },\r\n    clusterProjects() {\r\n      const clusterId = this.currentCluster.id;\r\n\r\n      // Get the list of projects from the store so that the list\r\n      // is updated if a new project is created or removed.\r\n      const projectsInAllClusters = this.$store.getters['management/all'](MANAGEMENT.PROJECT);\r\n\r\n      if (this.currentProduct?.customNamespaceFilter && this.currentProduct?.inStore && this.$store.getters[`${ this.currentProduct.inStore }/filterProject`]) {\r\n        return this.$store.getters[`${ this.currentProduct.inStore }/filterProject`];\r\n      }\r\n\r\n      const clustersInProjects = projectsInAllClusters.filter((project) => project.spec.clusterName === clusterId);\r\n\r\n      return clustersInProjects;\r\n    },\r\n    projectsWithoutNamespaces() {\r\n      return this.activeProjects.filter((project) => {\r\n        return !this.projectIdsWithNamespaces.find((item) => project?.id?.endsWith(`/${ item }`));\r\n      });\r\n    },\r\n    // We're using this because we need to show projects as groups even if the project doesn't have any namespaces.\r\n    rowsWithFakeNamespaces() {\r\n      const fakeRows = this.projectsWithoutNamespaces.map((project) => {\r\n        return {\r\n          groupByLabel:     `${ ('resourceTable.groupLabel.notInAProject') }-${ project.id }`,\r\n          isFake:           true,\r\n          mainRowKey:       project.id,\r\n          nameDisplay:      project.spec?.displayName, // Enable filtering by the project name\r\n          project,\r\n          availableActions: []\r\n        };\r\n      });\r\n\r\n      if (this.showMockNotInProjectGroup) {\r\n        fakeRows.push( {\r\n          groupByLabel: this.t('resourceTable.groupLabel.notInAProject'), // Same as the groupByLabel for the namespace model\r\n          mainRowKey:   'fake-empty',\r\n        });\r\n      }\r\n\r\n      return [...this.rows, ...fakeRows];\r\n    },\r\n    createProjectLocation() {\r\n      return this.createProjectLocationOverride || this.defaultCreateProjectLocation;\r\n    },\r\n    groupPreference: mapPref(GROUP_RESOURCES),\r\n    activeNamespaceFilters() {\r\n      return this.$store.getters['activeNamespaceFilters'];\r\n    },\r\n    activeProjectFilters() {\r\n      const activeProjects = {};\r\n\r\n      for (const filter of this.activeNamespaceFilters) {\r\n        const [type, id] = filter.split('://', 2);\r\n\r\n        if (type === 'project') {\r\n          activeProjects[id] = true;\r\n        }\r\n      }\r\n\r\n      return activeProjects;\r\n    },\r\n    activeProjects() {\r\n      const namespaceFilters = this.$store.getters['activeNamespaceFilters'];\r\n\r\n      if (namespaceFilters.includes(NAMESPACE_FILTER_ALL_ORPHANS) && Object.keys(this.activeProjectFilters).length === 0) {\r\n        // If the user wants to only see namespaces that are not\r\n        // in a project, don't show any projects.\r\n        return [];\r\n      }\r\n\r\n      // If the user is not filtering by any projects or namespaces, return\r\n      // all projects in the cluster.\r\n      if (!this.userIsFilteringForSpecificNamespaceOrProject()) {\r\n        return this.clusterProjects;\r\n      }\r\n\r\n      // Filter out projects that are not selected in the top nav.\r\n      return this.clusterProjects.filter((projectData) => {\r\n        const projectId = projectData.id.split('/')[1];\r\n\r\n        return !!this.activeProjectFilters[projectId];\r\n      });\r\n    },\r\n    activeNamespaces() {\r\n      // Apply namespace filters from the top nav.\r\n      const activeNamespaces = this.$store.getters['namespaces']();\r\n\r\n      return this.namespaces.filter((namespaceData) => {\r\n        return !!activeNamespaces[namespaceData.metadata.name];\r\n      });\r\n    },\r\n    filteredRows() {\r\n      return this.groupPreference === 'none' ? this.rows : this.rowsWithFakeNamespaces;\r\n    },\r\n    rows() {\r\n      if (this.$store.getters['prefs/get'](ALL_NAMESPACES)) {\r\n        // If all namespaces options are turned on in the user preferences,\r\n        // return all namespaces including system namespaces and RBAC\r\n        // management namespaces.\r\n        return this.activeNamespaces;\r\n      }\r\n\r\n      return this.activeNamespaces.filter((namespace) => {\r\n        const isSettingSystemNamespace = this.$store.getters['systemNamespaces'].includes(namespace.metadata.name);\r\n        const systemNS = namespace.isSystem || namespace.isFleetManaged || isSettingSystemNamespace;\r\n\r\n        return this.currentProduct?.hideSystemResources ? !systemNS : true;\r\n      });\r\n    },\r\n\r\n    canSeeProjectlessNamespaces() {\r\n      return this.currentCluster.canUpdate;\r\n    },\r\n\r\n    showMockNotInProjectGroup() {\r\n      if (!this.canSeeProjectlessNamespaces) {\r\n        return false;\r\n      }\r\n\r\n      const someNamespacesAreNotInProject = !this.rows.some((row) => !row.project);\r\n\r\n      // Hide the \"Not in a Project\" group if the user is filtering\r\n      // for specific namespaces or projects.\r\n      const usingSpecificFilter = this.userIsFilteringForSpecificNamespaceOrProject();\r\n\r\n      return !usingSpecificFilter && someNamespacesAreNotInProject;\r\n    },\r\n\r\n    notInProjectKey() {\r\n      return this.$store.getters['i18n/t']('resourceTable.groupLabel.notInAProject');\r\n    },\r\n    showCreateNsButton() {\r\n      return this.groupPreference !== 'namespace';\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * Get PSA HTML to be displayed in the tooltips\r\n     */\r\n    getPsaTooltip(row) {\r\n      const dictionary = row.psaTooltipsDescription;\r\n      const list = Object.values(dictionary)\r\n        .sort()\r\n        .map((text) => `<li>${ text }</li>`).join('');\r\n      const title = `<p>${ this.t('podSecurityAdmission.name') }: </p>`;\r\n\r\n      return `${ title }<ul class=\"psa-tooltip\">${ list }</ul>`;\r\n    },\r\n\r\n    userIsFilteringForSpecificNamespaceOrProject() {\r\n      const activeFilters = this.$store.getters['namespaceFilters'];\r\n\r\n      for (let i = 0; i < activeFilters.length; i++) {\r\n        const filter = activeFilters[i];\r\n        const filterType = filter.split('://')[0];\r\n\r\n        if (filterType === 'ns' || filterType === 'project') {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n    slotName(project) {\r\n      return `main-row:${ project.id }`;\r\n    },\r\n    createNamespaceLocation(group) {\r\n      const project = group.rows[0].project;\r\n\r\n      const location = this.createNamespaceLocationOverride ? { ...this.createNamespaceLocationOverride } : {\r\n        name:   'c-cluster-product-resource-create',\r\n        params: {\r\n          product:  this.$store.getters['currentProduct'].name,\r\n          resource: NAMESPACE\r\n        },\r\n      };\r\n\r\n      location.query = { [PROJECT_ID]: project?.metadata.name };\r\n\r\n      return location;\r\n    },\r\n\r\n    createNamespaceLocationFlatList() {\r\n      const location = this.createNamespaceLocationOverride ? { ...this.createNamespaceLocationOverride } : {\r\n        name:   'c-cluster-product-resource-create',\r\n        params: {\r\n          product:  this.$store.getters['currentProduct']?.name,\r\n          resource: NAMESPACE\r\n        },\r\n      };\r\n\r\n      location.query = { [FLAT_VIEW]: true };\r\n\r\n      return location;\r\n    },\r\n\r\n    showProjectAction(event, group) {\r\n      const project = group.rows[0].project;\r\n\r\n      this.$store.commit(`action-menu/show`, {\r\n        resources: [project],\r\n        elem:      event.target\r\n      });\r\n    },\r\n    showProjectActionButton(group) {\r\n      const project = group.rows[0].project;\r\n\r\n      return !!project;\r\n    },\r\n    projectLabel(group) {\r\n      const row = group.rows[0];\r\n\r\n      if (row.isFake) {\r\n        return DOMPurify.sanitize(\r\n          this.t('resourceTable.groupLabel.project', { name: row.project?.nameDisplay }, true),\r\n          { ALLOWED_TAGS: ['span'] }\r\n        );\r\n      }\r\n\r\n      return row.groupByLabel;\r\n    },\r\n\r\n    projectDescription(group) {\r\n      const project = group.rows[0].project;\r\n\r\n      return project?.description;\r\n    },\r\n\r\n    clearSelection() {\r\n      this.$refs.table.clearSelection();\r\n    },\r\n\r\n    sortGenerationFn() {\r\n      // The sort generation function creates a unique value and is used to create a key including sort details.\r\n      // The unique key determines if the list is redrawn or a cached version is shown.\r\n      // Because we ensure the 'not in a project' group is there via a row, and timing issues, the unqiue key doesn't change\r\n      // after a namespace is removed... so the list won't update... so we need to inject a string to ensure the key is fresh\r\n      const base = defaultTableSortGenerationFn(this.schema, this.$store);\r\n\r\n      return base + (this.showMockNotInProjectGroup ? '-mock' : '');\r\n    },\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"project-namespaces\">\r\n    <Masthead\r\n      :schema=\"projectSchema\"\r\n      :type-display=\"t('projectNamespaces.label')\"\r\n      :resource=\"MANAGEMENT.PROJECT\"\r\n      :favorite-resource=\"VIRTUAL_TYPES.PROJECT_NAMESPACES\"\r\n      :create-location=\"createProjectLocation\"\r\n      :create-button-label=\"t('projectNamespaces.createProject')\"\r\n      :show-incremental-loading-indicator=\"showIncrementalLoadingIndicator\"\r\n      :load-resources=\"loadResources\"\r\n      :load-indeterminate=\"loadIndeterminate\"\r\n    >\r\n      <template\r\n        v-if=\"showCreateNsButton\"\r\n        slot=\"extraActions\"\r\n      >\r\n        <router-link\r\n          :to=\"createNamespaceLocationFlatList()\"\r\n          class=\"btn role-primary mr-10\"\r\n          data-testid=\"create_project_namespaces\"\r\n        >\r\n          {{ t('projectNamespaces.createNamespace') }}\r\n        </router-link>\r\n      </template>\r\n    </Masthead>\r\n    <!-- Extensions area -->\r\n    <ExtensionPanel\r\n      :resource=\"{}\"\r\n      :type=\"extensionType\"\r\n      :location=\"extensionLocation\"\r\n    />\r\n    <ResourceTable\r\n      ref=\"table\"\r\n      class=\"table project-namespaces-table\"\r\n      v-bind=\"$attrs\"\r\n      :schema=\"schema\"\r\n      :headers=\"headers\"\r\n      :rows=\"filteredRows\"\r\n      :groupable=\"true\"\r\n      :sort-generation-fn=\"sortGenerationFn\"\r\n      :loading=\"loading\"\r\n      group-tooltip=\"resourceTable.groupBy.project\"\r\n      key-field=\"_key\"\r\n      v-on=\"$listeners\"\r\n    >\r\n      <template #group-by=\"group\">\r\n        <div\r\n          class=\"project-bar\"\r\n          :class=\"{'has-description': projectDescription(group.group)}\"\r\n        >\r\n          <div\r\n            v-trim-whitespace\r\n            class=\"group-tab\"\r\n          >\r\n            <div\r\n              v-clean-html=\"projectLabel(group.group)\"\r\n              class=\"project-name\"\r\n            />\r\n            <div\r\n              v-if=\"projectDescription(group.group)\"\r\n              class=\"description text-muted text-small\"\r\n            >\r\n              {{ projectDescription(group.group) }}\r\n            </div>\r\n          </div>\r\n          <div class=\"right\">\r\n            <router-link\r\n              v-if=\"isNamespaceCreatable && (canSeeProjectlessNamespaces || group.group.key !== notInProjectKey)\"\r\n              class=\"create-namespace btn btn-sm role-secondary mr-5\"\r\n              :to=\"createNamespaceLocation(group.group)\"\r\n            >\r\n              {{ t('projectNamespaces.createNamespace') }}\r\n            </router-link>\r\n            <button\r\n              type=\"button\"\r\n              class=\"project-action btn btn-sm role-multi-action actions mr-10\"\r\n              :class=\"{invisible: !showProjectActionButton(group.group)}\"\r\n              @click=\"showProjectAction($event, group.group)\"\r\n            >\r\n              <i class=\"icon icon-actions\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <template #cell:project=\"{row}\">\r\n        <span v-if=\"row.project\">{{ row.project.nameDisplay }}</span>\r\n        <span\r\n          v-else\r\n          class=\"text-muted\"\r\n        >&ndash;</span>\r\n      </template>\r\n      <template #cell:name=\"{row}\">\r\n        <div class=\"namespace-name\">\r\n          <router-link\r\n            v-if=\"row.detailLocation && !row.hideDetailLocation\"\r\n            :to=\"row.detailLocation\"\r\n          >\r\n            {{ row.name }}\r\n          </router-link>\r\n          <span v-else>\r\n            {{ row.name }}\r\n          </span>\r\n          <i\r\n            v-if=\"row.injectionEnabled\"\r\n            v-clean-tooltip=\"t('projectNamespaces.isIstioInjectionEnabled')\"\r\n            class=\"icon icon-istio ml-5\"\r\n          />\r\n          <i\r\n            v-if=\"row.hasSystemLabels\"\r\n            v-clean-tooltip=\"getPsaTooltip(row)\"\r\n            class=\"icon icon-lock ml-5\"\r\n          />\r\n        </div>\r\n      </template>\r\n      <template\r\n        v-for=\"project in projectsWithoutNamespaces\"\r\n        v-slot:[slotName(project)]\r\n      >\r\n        <tr\r\n          :key=\"project.id\"\r\n          class=\"main-row\"\r\n        >\r\n          <td\r\n            class=\"empty text-center\"\r\n            colspan=\"5\"\r\n          >\r\n            {{ t('projectNamespaces.noNamespaces') }}\r\n          </td>\r\n        </tr>\r\n      </template>\r\n      <template #main-row:fake-empty>\r\n        <tr class=\"main-row\">\r\n          <td\r\n            class=\"empty text-center\"\r\n            colspan=\"5\"\r\n          >\r\n            {{ t('projectNamespaces.noProjectNoNamespaces') }}\r\n          </td>\r\n        </tr>\r\n      </template>\r\n    </ResourceTable>\r\n    <MoveModal @moving=\"clearSelection\" />\r\n  </div>\r\n</template>\r\n<style lang=\"scss\" scoped>\r\n.project-namespaces {\r\n  & ::v-deep {\r\n    .project-namespaces-table table {\r\n      table-layout: fixed;\r\n    }\r\n\r\n    .project-name {\r\n      line-height: 30px;\r\n    }\r\n\r\n    .project-bar {\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n\r\n      .group-tab {\r\n        max-width: calc(100% - 230px);\r\n      }\r\n\r\n      .project-name {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n\r\n        span:first-child {\r\n          padding-right: 8px;\r\n        }\r\n\r\n        span:last-child {\r\n          text-overflow: ellipsis;\r\n          overflow: hidden;\r\n          white-space: nowrap;\r\n        }\r\n      }\r\n\r\n      &.has-description {\r\n        .right {\r\n          margin-top: 5px;\r\n        }\r\n        .group-tab {\r\n          &, &::after {\r\n              height: 50px;\r\n          }\r\n\r\n          &::after {\r\n              right: -20px;\r\n          }\r\n\r\n          .description {\r\n              margin-top: -20px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .namespace-name {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      .icon-istio {\r\n        color: var(--primary);\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n<style lang=\"scss\">\r\n  .psa-tooltip {\r\n    // These could pop up a lot as the mouse moves around, keep them as small and unintrusive as possible\r\n    // (easier to test with v-clean-tooltip=\"{ content: getPSA(row), autoHide: false, show: true }\")\r\n    margin: 3px 0;\r\n    padding: 0 8px 0 22px;\r\n  }\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}