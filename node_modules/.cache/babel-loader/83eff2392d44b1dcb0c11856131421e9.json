{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/tabs/AgentConfiguration.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/tabs/AgentConfiguration.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Banner","GroupPanel","PodAffinity","NodeAffinity","ContainerResourceLimit","Tolerations","cleanUp","fetchSetting","RadioGroup","DEFAULT","CUSTOM","components","props","value","type","Object","default","_default","mode","String","required","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","settingId","setting","parsed","wrap","_callee$","_context","prev","next","concat","$store","sent","JSON","parse","defaultAffinity","e","console","error","stop","data","_this$value","_this$value2","_this$value3","nodeAffinity","overrideAffinity","podAffinity","podAntiAffinity","hasAffinityPopulated","keys","length","affinitySetting","created","ensureValue","computed","flatResources","get","_ref","overrideResourceRequirements","_ref$limits","limits","_ref$requests","requests","limitsCpu","cpu","limitsMemory","memory","requestsCpu","requestsMemory","set","neu","_this$value4","existing","out","_objectSpread","$set","affinityOptions","label","t","canEditAffinity","watch","methods","_this$value5","appendTolerations","affinitySettingChange","parsedDefaultAffinites","stringify","updateNodeAffinity","val"],"sources":["node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/tabs/AgentConfiguration.vue"],"sourcesContent":["<script>\nimport { Banner } from '@components/Banner';\nimport GroupPanel from '@shell/components/GroupPanel';\nimport PodAffinity from '@shell/components/form/PodAffinity';\nimport NodeAffinity from '@shell/components/form/NodeAffinity';\nimport ContainerResourceLimit from '@shell/components/ContainerResourceLimit';\nimport Tolerations from '@shell/components/form/Tolerations';\nimport { cleanUp } from '@shell/utils/object';\nimport { fetchSetting } from '@shell/utils/settings';\nimport { RadioGroup } from '@components/Form/Radio';\n\n// Affinity radio button choices\nconst DEFAULT = 'default';\nconst CUSTOM = 'custom';\n\n// This is the form for Agent Configuration\n// Used for both Cluster Agent and Fleet Agent configuration\nexport default {\n  components: {\n    Banner,\n    ContainerResourceLimit,\n    GroupPanel,\n    PodAffinity,\n    NodeAffinity,\n    RadioGroup,\n    Tolerations,\n  },\n  props: {\n    value: {\n      type:    Object,\n      default: () => {},\n    },\n\n    mode: {\n      type:     String,\n      required: true,\n    },\n\n    type: {\n      type:     String,\n      required: true,\n    }\n  },\n\n  async fetch() {\n    // Default affinity\n    const settingId = `${ this.type }-agent-default-affinity`;\n    const setting = await fetchSetting(this.$store, settingId);\n\n    if (setting) {\n      try {\n        const parsed = JSON.parse(setting.value || setting.default);\n\n        this.defaultAffinity = parsed || {};\n      } catch (e) {\n        console.error('Could not parse agent default setting', e); // eslint-disable-line no-console\n        this.defaultAffinity = {};\n      }\n    }\n  },\n\n  data() {\n    const nodeAffinity = this.value?.overrideAffinity?.nodeAffinity;\n    const podAffinity = this.value?.overrideAffinity?.podAffinity;\n    const podAntiAffinity = this.value?.overrideAffinity?.podAntiAffinity;\n\n    let hasAffinityPopulated = false;\n\n    if ((nodeAffinity && Object.keys(nodeAffinity).length) ||\n      (podAffinity && Object.keys(podAffinity).length) ||\n      (podAntiAffinity && Object.keys(podAntiAffinity).length)) {\n      hasAffinityPopulated = true;\n    }\n\n    return {\n      defaultAffinity: {},\n      affinitySetting: hasAffinityPopulated ? CUSTOM : DEFAULT,\n      nodeAffinity:    {}\n    };\n  },\n\n  created() {\n    this.ensureValue();\n  },\n\n  computed: {\n    flatResources: {\n      get() {\n        const { limits = {}, requests = {} } = this.value.overrideResourceRequirements || {};\n        const {\n          cpu: limitsCpu,\n          memory: limitsMemory,\n        } = limits;\n        const { cpu: requestsCpu, memory: requestsMemory } = requests;\n\n        return {\n          limitsCpu,\n          limitsMemory,\n          requestsCpu,\n          requestsMemory,\n        };\n      },\n      set(neu) {\n        const {\n          limitsCpu,\n          limitsMemory,\n          requestsCpu,\n          requestsMemory,\n        } = neu;\n\n        const existing = this.value?.overrideResourceRequirements || {};\n\n        delete existing.requests;\n        delete existing.limits;\n\n        const out = {\n          ...existing,\n          requests: {\n            cpu:    requestsCpu,\n            memory: requestsMemory,\n          },\n          limits: {\n            cpu:    limitsCpu,\n            memory: limitsMemory,\n          },\n        };\n\n        this.$set(this.value, 'overrideResourceRequirements', cleanUp(out));\n      },\n    },\n\n    affinityOptions() {\n      return [{\n        label: this.t('cluster.agentConfig.affinity.default'),\n        value: DEFAULT,\n      }, {\n        label: this.t('cluster.agentConfig.affinity.custom'),\n        value: CUSTOM,\n      }];\n    },\n\n    canEditAffinity() {\n      return this.affinitySetting === CUSTOM;\n    }\n  },\n\n  watch: {\n    value() {\n      this.ensureValue();\n    }\n  },\n\n  methods: {\n    ensureValue() {\n      // Ensure we have the model structure needed for the form controls\n      if (this.value) {\n        this.value.overrideAffinity = this.value.overrideAffinity || {};\n        this.value.appendTolerations = this.value.appendTolerations || [];\n        this.value.overrideResourceRequirements = this.value.overrideResourceRequirements || {};\n\n        this.nodeAffinity = this.value?.overrideAffinity?.nodeAffinity || {};\n      }\n    },\n\n    affinitySettingChange() {\n      if (this.affinitySetting === CUSTOM) {\n        const parsedDefaultAffinites = JSON.parse(JSON.stringify(this.defaultAffinity));\n\n        // Copy the default so that the user can edit it\n        // this will cover the pod affinities\n        this.$set(this.value, 'overrideAffinity', parsedDefaultAffinites);\n\n        // in order not to break the node affinity component, let's go for a slightly different way of handling the logic here\n        if (parsedDefaultAffinites.nodeAffinity) {\n          this.nodeAffinity = parsedDefaultAffinites.nodeAffinity;\n        }\n      } else {\n        this.$set(this.value, 'overrideAffinity', {});\n      }\n    },\n    updateNodeAffinity(val) {\n      this.$set(this.value.overrideAffinity, 'nodeAffinity', val);\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <Banner\n      :closable=\"false\"\n      color=\"info\"\n      label-key=\"cluster.agentConfig.banners.advanced\"\n    />\n\n    <GroupPanel\n      label-key=\"cluster.agentConfig.groups.podRequestsAndLimits\"\n      class=\"mt-20\"\n    >\n      <Banner\n        :closable=\"false\"\n        color=\"info\"\n        label-key=\"cluster.agentConfig.banners.limits\"\n      />\n      <ContainerResourceLimit\n        v-model=\"flatResources\"\n        :mode=\"mode\"\n        :show-tip=\"false\"\n        :handle-gpu-limit=\"false\"\n        class=\"mt-10\"\n      />\n    </GroupPanel>\n\n    <GroupPanel\n      label-key=\"cluster.agentConfig.groups.podTolerations\"\n      class=\"mt-20\"\n    >\n      <Banner\n        :closable=\"false\"\n        color=\"info\"\n        label-key=\"cluster.agentConfig.banners.tolerations\"\n      />\n      <Tolerations\n        v-model=\"value.appendTolerations\"\n        :mode=\"mode\"\n        class=\"mt-10\"\n      />\n    </GroupPanel>\n\n    <GroupPanel\n      label-key=\"cluster.agentConfig.groups.podAffinity\"\n      class=\"mt-20\"\n    >\n      <RadioGroup\n        v-model=\"affinitySetting\"\n        name=\"affinity-override\"\n        :mode=\"mode\"\n        :options=\"affinityOptions\"\n        class=\"mt-10\"\n        data-testid=\"affinity-options\"\n        @input=\"affinitySettingChange\"\n      />\n\n      <Banner\n        v-if=\"canEditAffinity\"\n        :closable=\"false\"\n        color=\"warning\"\n      >\n        <p v-clean-html=\"t('cluster.agentConfig.banners.windowsCompatibility', {}, true)\" />\n      </Banner>\n\n      <h4 v-if=\"canEditAffinity\">\n        {{ t('cluster.agentConfig.subGroups.podAffinityAnti') }}\n      </h4>\n\n      <PodAffinity\n        v-if=\"canEditAffinity\"\n        v-model=\"value\"\n        field=\"overrideAffinity\"\n        :mode=\"mode\"\n        class=\"mt-0 mb-20\"\n        :all-namespaces-option-available=\"true\"\n        :force-input-namespace-selection=\"true\"\n        :remove-labeled-input-namespace-label=\"true\"\n        data-testid=\"pod-affinity\"\n      />\n\n      <div\n        v-if=\"canEditAffinity\"\n        class=\"separator\"\n      />\n      <h4\n        v-if=\"canEditAffinity\"\n        class=\"mt-20\"\n      >\n        {{ t('cluster.agentConfig.subGroups.nodeAffinity') }}\n      </h4>\n\n      <NodeAffinity\n        v-if=\"canEditAffinity\"\n        v-model=\"nodeAffinity\"\n        :matching-selector-display=\"true\"\n        :mode=\"mode\"\n        class=\"mt-0\"\n        data-testid=\"node-affinity\"\n        @input=\"updateNodeAffinity\"\n      />\n    </GroupPanel>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.separator {\n  width: 100%;\n  border-top: 1px solid var(--border);\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}