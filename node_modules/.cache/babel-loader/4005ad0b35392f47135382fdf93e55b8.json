{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/auth/verify.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/auth/verify.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICIvaG9tZS91YnVudHUvc3VzZWNvbi0yMDI0LWV4dC1kZW1vL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvci9pbmRleC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0IHsgR0lUSFVCX0NPREUsIEdJVEhVQl9OT05DRSwgQkFDS19UTyB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKaW1wb3J0IHsgZ2V0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL29iamVjdCc7CmltcG9ydCB7IGJhc2U2NERlY29kZSB9IGZyb20gJ0BzaGVsbC91dGlscy9jcnlwdG8nOwppbXBvcnQgbG9hZFBsdWdpbnMgZnJvbSAnQHNoZWxsL3BsdWdpbnMvcGx1Z2luJzsKdmFyIHNhbWxQcm92aWRlcnMgPSBbJ3BpbmcnLCAnYWRmcycsICdrZXljbG9haycsICdva3RhJywgJ3NoaWJib2xldGgnXTsKZnVuY3Rpb24gcmVwbHkoZXJyLCBjb2RlKSB7CiAgdHJ5IHsKICAgIHdpbmRvdy5vcGVuZXIud2luZG93Lm9uQXV0aFRlc3QoZXJyLCBjb2RlKTsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICB3aW5kb3cuY2xvc2UoKTsKICAgIH0sIDI1MCk7CiAgfSBjYXRjaCAoZSkgewogICAgd2luZG93LmNsb3NlKCk7CiAgfQp9CmZ1bmN0aW9uIGlzU2FtbCgkcm91dGUpIHsKICB2YXIgcXVlcnkgPSAkcm91dGUucXVlcnk7CiAgdmFyIGNvbmZpZ1F1ZXJ5ID0gZ2V0KHF1ZXJ5LCAnY29uZmlnJyk7CiAgcmV0dXJuIHNhbWxQcm92aWRlcnMuaW5jbHVkZXMoY29uZmlnUXVlcnkpOwp9CmV4cG9ydCBkZWZhdWx0IHsKICBmZXRjaDogZnVuY3Rpb24gZmV0Y2goX3JlZikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBzdG9yZSwgcm91dGUsIHJlZGlyZWN0LCBjb2RlLCBzdGF0ZVN0ciwgX3JvdXRlJHF1ZXJ5LCBlcnJvciwgZXJyb3JEZXNjcmlwdGlvbiwgZXJyb3JDb2RlLCBlcnJvck1zZywgb3V0LCBwYXJzZWQsIF9vdXQsIF9wYXJzZWQsIHRlc3QsIHByb3ZpZGVyLCBub25jZSwgcmVzLCBiYWNrVG87CiAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBzdG9yZSA9IF9yZWYuc3RvcmUsIHJvdXRlID0gX3JlZi5yb3V0ZSwgcmVkaXJlY3QgPSBfcmVmLnJlZGlyZWN0OwogICAgICAgICAgICBjb2RlID0gcm91dGUucXVlcnlbR0lUSFVCX0NPREVdOwogICAgICAgICAgICBzdGF0ZVN0ciA9IHJvdXRlLnF1ZXJ5W0dJVEhVQl9OT05DRV07CiAgICAgICAgICAgIF9yb3V0ZSRxdWVyeSA9IHJvdXRlLnF1ZXJ5LCBlcnJvciA9IF9yb3V0ZSRxdWVyeS5lcnJvciwgZXJyb3JEZXNjcmlwdGlvbiA9IF9yb3V0ZSRxdWVyeS5lcnJvcl9kZXNjcmlwdGlvbiwgZXJyb3JDb2RlID0gX3JvdXRlJHF1ZXJ5LmVycm9yQ29kZSwgZXJyb3JNc2cgPSBfcm91dGUkcXVlcnkuZXJyb3JNc2c7CiAgICAgICAgICAgIGlmICghKGVycm9yIHx8IGVycm9yRGVzY3JpcHRpb24gfHwgZXJyb3JDb2RlIHx8IGVycm9yTXNnKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIG91dCA9IGVycm9yRGVzY3JpcHRpb24gfHwgZXJyb3IgfHwgZXJyb3JDb2RlOwogICAgICAgICAgICBpZiAoZXJyb3JNc2cpIHsKICAgICAgICAgICAgICBvdXQgPSBzdG9yZS5nZXR0ZXJzWydpMThuL3dpdGhGYWxsYmFjayddKCJsb2dpbi5zZXJ2ZXJFcnJvci4iLmNvbmNhdChlcnJvck1zZyksIG51bGwsIGVycm9yTXNnKTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZWRpcmVjdCgiL2F1dGgvbG9naW4/ZXJyPSIuY29uY2F0KGVzY2FwZShvdXQpKSk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gOTsKICAgICAgICAgICAgcGFyc2VkID0gSlNPTi5wYXJzZShiYXNlNjREZWNvZGUoc3RhdGVTdHIpKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIxOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMzsKICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSg5KTsKICAgICAgICAgICAgaWYgKCFpc1NhbWwocm91dGUpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE3OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgX291dCA9IHN0b3JlLmdldHRlcnNbJ2kxOG4vdCddKCJsb2dpbi5lcnJvciIpOwogICAgICAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gcGFyc2Ugbm9uY2UnLCBzdGF0ZVN0ciwgX2NvbnRleHQudDApOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGUKCiAgICAgICAgICAgIHJlZGlyZWN0KCIvYXV0aC9sb2dpbj9lcnI9Ii5jb25jYXQoZXNjYXBlKF9vdXQpKSk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgY2FzZSAyMToKICAgICAgICAgICAgX3BhcnNlZCA9IHBhcnNlZCwgdGVzdCA9IF9wYXJzZWQudGVzdCwgcHJvdmlkZXIgPSBfcGFyc2VkLnByb3ZpZGVyLCBub25jZSA9IF9wYXJzZWQubm9uY2U7CiAgICAgICAgICAgIGlmICghdGVzdCkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyNDsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKICAgICAgICAgIGNhc2UgMjQ6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyNDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI3OwogICAgICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2goJ2F1dGgvdmVyaWZ5T0F1dGgnLCB7CiAgICAgICAgICAgICAgY29kZTogY29kZSwKICAgICAgICAgICAgICBub25jZTogbm9uY2UsCiAgICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyCiAgICAgICAgICAgIH0pOwogICAgICAgICAgY2FzZSAyNzoKICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgaWYgKCEocmVzLl9zdGF0dXMgPT09IDIwMCkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzU7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYmFja1RvID0gcm91dGUucXVlcnlbQkFDS19UT10gfHwgJy8nOyAvLyBMb2FkIHBsdWdpbnMKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDMyOwogICAgICAgICAgICByZXR1cm4gbG9hZFBsdWdpbnMoewogICAgICAgICAgICAgIGFwcDogc3RvcmUuYXBwLAogICAgICAgICAgICAgIHN0b3JlOiBzdG9yZSwKICAgICAgICAgICAgICAkcGx1Z2luOiBzdG9yZS4kcGx1Z2luCiAgICAgICAgICAgIH0pOwogICAgICAgICAgY2FzZSAzMjoKICAgICAgICAgICAgcmVkaXJlY3QoYmFja1RvKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM2OwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgMzU6CiAgICAgICAgICAgIHJlZGlyZWN0KCIvYXV0aC9sb2dpbj9lcnI9Ii5jb25jYXQoZXNjYXBlKHJlcykpKTsKICAgICAgICAgIGNhc2UgMzY6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0MTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIDM4OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMzg7CiAgICAgICAgICAgIF9jb250ZXh0LnQxID0gX2NvbnRleHRbImNhdGNoIl0oMjQpOwogICAgICAgICAgICByZWRpcmVjdCgiL2F1dGgvbG9naW4/ZXJyPSIuY29uY2F0KGVzY2FwZShfY29udGV4dC50MSkpKTsKICAgICAgICAgIGNhc2UgNDE6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1s5LCAxM10sIFsyNCwgMzhdXSk7CiAgICB9KSkoKTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICB2YXIgc3RhdGVKU09OID0gdGhpcy4kcm91dGUucXVlcnlbR0lUSFVCX05PTkNFXSB8fCAnJzsKICAgIHZhciBwYXJzZWQgPSB7fTsKICAgIHRyeSB7CiAgICAgIHBhcnNlZCA9IEpTT04ucGFyc2UoYmFzZTY0RGVjb2RlKHN0YXRlSlNPTikpOwogICAgfSBjYXRjaCAoX3VudXNlZCkge30KICAgIHZhciBfcGFyc2VkMiA9IHBhcnNlZCwKICAgICAgdGVzdCA9IF9wYXJzZWQyLnRlc3Q7CiAgICByZXR1cm4gewogICAgICB0ZXN0aW5nOiB0ZXN0CiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLnRlc3RpbmcpIHsKICAgICAgdHJ5IHsKICAgICAgICB2YXIgX3RoaXMkJHJvdXRlJHF1ZXJ5ID0gdGhpcy4kcm91dGUucXVlcnksCiAgICAgICAgICByZXNwRXJyb3IgPSBfdGhpcyQkcm91dGUkcXVlcnkuZXJyb3IsCiAgICAgICAgICByZXNwRXJyb3JEZXNjcmlwdGlvbiA9IF90aGlzJCRyb3V0ZSRxdWVyeS5lcnJvcl9kZXNjcmlwdGlvbiwKICAgICAgICAgIGNvZGUgPSBfdGhpcyQkcm91dGUkcXVlcnlbR0lUSFVCX0NPREVdLAogICAgICAgICAgZXJyb3JNc2cgPSBfdGhpcyQkcm91dGUkcXVlcnkuZXJyb3JNc2c7CiAgICAgICAgdmFyIGVycm9yID0gcmVzcEVycm9yRGVzY3JpcHRpb24gfHwgcmVzcEVycm9yIHx8ICghY29kZSA/ICdObyBjb2RlIHN1cHBsaWVkIGJ5IGF1dGggcHJvdmlkZXInIDogbnVsbCk7CiAgICAgICAgaWYgKGVycm9yTXNnKSB7CiAgICAgICAgICBlcnJvciA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2kxOG4vd2l0aEZhbGxiYWNrJ10oImxvZ2luLnNlcnZlckVycm9yLiIuY29uY2F0KGVycm9yTXNnKSwgbnVsbCwgZXJyb3JNc2cpOwogICAgICAgIH0KICAgICAgICByZXBseShlcnJvciwgY29kZSk7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICB3aW5kb3cuY2xvc2UoKTsKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgaWYgKHdpbmRvdy5vcGVuZXIpIHsKICAgICAgICBpZiAoaXNTYW1sKHRoaXMuJHJvdXRlKSkgewogICAgICAgICAgaWYgKHdpbmRvdy5vcGVuZXIud2luZG93Lm9uQXV0aFRlc3QpIHsKICAgICAgICAgICAgcmVwbHkobnVsbCwgbnVsbCk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXBseSh7CiAgICAgICAgICAgICAgZXJyOiAnZmFpbHVyZScKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["GITHUB_CODE","GITHUB_NONCE","BACK_TO","get","base64Decode","loadPlugins","samlProviders","reply","err","code","window","opener","onAuthTest","setTimeout","close","e","isSaml","$route","query","configQuery","includes","fetch","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","store","route","redirect","stateStr","_route$query","error","errorDescription","errorCode","errorMsg","out","parsed","_out","_parsed","test","provider","nonce","res","backTo","wrap","_callee$","_context","prev","next","error_description","getters","concat","escape","abrupt","JSON","parse","t0","console","dispatch","sent","_status","app","$plugin","t1","stop","data","stateJSON","_unused","_parsed2","testing","mounted","_this$$route$query","respError","respErrorDescription","$store"],"sources":["node_modules/@rancher/shell/pages/auth/verify.vue"],"sourcesContent":["<script>\nimport { GITHUB_CODE, GITHUB_NONCE, BACK_TO } from '@shell/config/query-params';\nimport { get } from '@shell/utils/object';\nimport { base64Decode } from '@shell/utils/crypto';\nimport loadPlugins from '@shell/plugins/plugin';\n\nconst samlProviders = ['ping', 'adfs', 'keycloak', 'okta', 'shibboleth'];\n\nfunction reply(err, code) {\n  try {\n    window.opener.window.onAuthTest(err, code);\n    setTimeout(() => {\n      window.close();\n    }, 250);\n  } catch (e) {\n    window.close();\n  }\n}\n\nfunction isSaml($route) {\n  const { query } = $route;\n  const configQuery = get(query, 'config');\n\n  return samlProviders.includes(configQuery);\n}\n\nexport default {\n  async fetch({ store, route, redirect }) {\n    const code = route.query[GITHUB_CODE];\n    const stateStr = route.query[GITHUB_NONCE];\n    const {\n      error, error_description: errorDescription, errorCode, errorMsg\n    } = route.query;\n\n    if (error || errorDescription || errorCode || errorMsg) {\n      let out = errorDescription || error || errorCode;\n\n      if (errorMsg) {\n        out = store.getters['i18n/withFallback'](`login.serverError.${ errorMsg }`, null, errorMsg);\n      }\n\n      redirect(`/auth/login?err=${ escape(out) }`);\n\n      return;\n    }\n    let parsed;\n\n    try {\n      parsed = JSON.parse(base64Decode((stateStr)));\n    } catch (err) {\n      if (isSaml(route)) {\n        // This is an ok failure. SAML has no state string so a failure is fine (see similar check in mounted).\n        // This whole file could be re-written with that in mind, but this change keeps things simple and fixes a breaking addition\n        return;\n      }\n      const out = store.getters['i18n/t'](`login.error`);\n\n      console.error('Failed to parse nonce', stateStr, err); // eslint-disable-line no-console\n\n      redirect(`/auth/login?err=${ escape(out) }`);\n\n      return;\n    }\n\n    const { test, provider, nonce } = parsed;\n\n    if (test) {\n      return;\n    }\n\n    try {\n      const res = await store.dispatch('auth/verifyOAuth', {\n        code,\n        nonce,\n        provider\n      });\n\n      if ( res._status === 200) {\n        const backTo = route.query[BACK_TO] || '/';\n\n        // Load plugins\n        await loadPlugins({\n          app:     store.app,\n          store,\n          $plugin: store.$plugin\n        });\n\n        redirect(backTo);\n      } else {\n        redirect(`/auth/login?err=${ escape(res) }`);\n      }\n    } catch (err) {\n      redirect(`/auth/login?err=${ escape(err) }`);\n    }\n  },\n\n  data() {\n    const stateJSON = this.$route.query[GITHUB_NONCE] || '';\n\n    let parsed = {};\n\n    try {\n      parsed = JSON.parse(base64Decode(stateJSON));\n    } catch {\n    }\n\n    const { test } = parsed;\n\n    return { testing: test };\n  },\n\n  mounted() {\n    if ( this.testing ) {\n      try {\n        const {\n          error: respError, error_description: respErrorDescription, [GITHUB_CODE]: code, errorMsg\n        } = this.$route.query;\n\n        let error = respErrorDescription || respError || (!code ? 'No code supplied by auth provider' : null);\n\n        if (errorMsg) {\n          error = this.$store.getters['i18n/withFallback'](`login.serverError.${ errorMsg }`, null, errorMsg);\n        }\n\n        reply(error, code );\n      } catch (e) {\n        window.close();\n      }\n    } else {\n      if ( window.opener ) {\n        if (isSaml(this.$route)) {\n          if ( window.opener.window.onAuthTest ) {\n            reply(null, null);\n          } else {\n            reply({ err: 'failure' });\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <main class=\"main-layout\">\n    <h1 class=\"text-center mt-50\">\n      <span v-if=\"testing\">\n        Testing Configuration&hellip;\n      </span>\n      <span v-else>\n        Logging In&hellip;\n      </span>\n    </h1>\n  </main>\n</template>\n"],"mappings":";;;;;;AACA,SAAAA,WAAA,EAAAC,YAAA,EAAAC,OAAA;AACA,SAAAC,GAAA;AACA,SAAAC,YAAA;AACA,OAAAC,WAAA;AAEA,IAAAC,aAAA;AAEA,SAAAC,MAAAC,GAAA,EAAAC,IAAA;EACA;IACAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAE,UAAA,CAAAJ,GAAA,EAAAC,IAAA;IACAI,UAAA;MACAH,MAAA,CAAAI,KAAA;IACA;EACA,SAAAC,CAAA;IACAL,MAAA,CAAAI,KAAA;EACA;AACA;AAEA,SAAAE,OAAAC,MAAA;EACA,IAAAC,KAAA,GAAAD,MAAA,CAAAC,KAAA;EACA,IAAAC,WAAA,GAAAhB,GAAA,CAAAe,KAAA;EAEA,OAAAZ,aAAA,CAAAc,QAAA,CAAAD,WAAA;AACA;AAEA;EACAE,KAAA,WAAAA,MAAAC,IAAA;IAAA,OAAAC,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,UAAAC,QAAA;MAAA,IAAAC,KAAA,EAAAC,KAAA,EAAAC,QAAA,EAAApB,IAAA,EAAAqB,QAAA,EAAAC,YAAA,EAAAC,KAAA,EAAAC,gBAAA,EAAAC,SAAA,EAAAC,QAAA,EAAAC,GAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,GAAA,EAAAC,MAAA;MAAA,OAAApB,mBAAA,CAAAqB,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAtB,KAAA,GAAAL,IAAA,CAAAK,KAAA,EAAAC,KAAA,GAAAN,IAAA,CAAAM,KAAA,EAAAC,QAAA,GAAAP,IAAA,CAAAO,QAAA;YACApB,IAAA,GAAAmB,KAAA,CAAAV,KAAA,CAAAlB,WAAA;YACA8B,QAAA,GAAAF,KAAA,CAAAV,KAAA,CAAAjB,YAAA;YAAA8B,YAAA,GAGAH,KAAA,CAAAV,KAAA,EADAc,KAAA,GAAAD,YAAA,CAAAC,KAAA,EAAAC,gBAAA,GAAAF,YAAA,CAAAmB,iBAAA,EAAAhB,SAAA,GAAAH,YAAA,CAAAG,SAAA,EAAAC,QAAA,GAAAJ,YAAA,CAAAI,QAAA;YAAA,MAGAH,KAAA,IAAAC,gBAAA,IAAAC,SAAA,IAAAC,QAAA;cAAAY,QAAA,CAAAE,IAAA;cAAA;YAAA;YACAb,GAAA,GAAAH,gBAAA,IAAAD,KAAA,IAAAE,SAAA;YAEA,IAAAC,QAAA;cACAC,GAAA,GAAAT,KAAA,CAAAwB,OAAA,2CAAAC,MAAA,CAAAjB,QAAA,SAAAA,QAAA;YACA;YAEAN,QAAA,oBAAAuB,MAAA,CAAAC,MAAA,CAAAjB,GAAA;YAAA,OAAAW,QAAA,CAAAO,MAAA;UAAA;YAAAP,QAAA,CAAAC,IAAA;YAOAX,MAAA,GAAAkB,IAAA,CAAAC,KAAA,CAAApD,YAAA,CAAA0B,QAAA;YAAAiB,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAU,EAAA,GAAAV,QAAA;YAAA,KAEA/B,MAAA,CAAAY,KAAA;cAAAmB,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAA,OAAAF,QAAA,CAAAO,MAAA;UAAA;YAKAlB,IAAA,GAAAT,KAAA,CAAAwB,OAAA;YAEAO,OAAA,CAAA1B,KAAA,0BAAAF,QAAA,EAAAiB,QAAA,CAAAU,EAAA;;YAEA5B,QAAA,oBAAAuB,MAAA,CAAAC,MAAA,CAAAjB,IAAA;YAAA,OAAAW,QAAA,CAAAO,MAAA;UAAA;YAAAf,OAAA,GAKAF,MAAA,EAAAG,IAAA,GAAAD,OAAA,CAAAC,IAAA,EAAAC,QAAA,GAAAF,OAAA,CAAAE,QAAA,EAAAC,KAAA,GAAAH,OAAA,CAAAG,KAAA;YAAA,KAEAF,IAAA;cAAAO,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAA,OAAAF,QAAA,CAAAO,MAAA;UAAA;YAAAP,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAE,IAAA;YAAA,OAKAtB,KAAA,CAAAgC,QAAA;cACAlD,IAAA,EAAAA,IAAA;cACAiC,KAAA,EAAAA,KAAA;cACAD,QAAA,EAAAA;YACA;UAAA;YAJAE,GAAA,GAAAI,QAAA,CAAAa,IAAA;YAAA,MAMAjB,GAAA,CAAAkB,OAAA;cAAAd,QAAA,CAAAE,IAAA;cAAA;YAAA;YACAL,MAAA,GAAAhB,KAAA,CAAAV,KAAA,CAAAhB,OAAA,UAEA;YAAA6C,QAAA,CAAAE,IAAA;YAAA,OACA5C,WAAA;cACAyD,GAAA,EAAAnC,KAAA,CAAAmC,GAAA;cACAnC,KAAA,EAAAA,KAAA;cACAoC,OAAA,EAAApC,KAAA,CAAAoC;YACA;UAAA;YAEAlC,QAAA,CAAAe,MAAA;YAAAG,QAAA,CAAAE,IAAA;YAAA;UAAA;YAEApB,QAAA,oBAAAuB,MAAA,CAAAC,MAAA,CAAAV,GAAA;UAAA;YAAAI,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAiB,EAAA,GAAAjB,QAAA;YAGAlB,QAAA,oBAAAuB,MAAA,CAAAC,MAAA,CAAAN,QAAA,CAAAiB,EAAA;UAAA;UAAA;YAAA,OAAAjB,QAAA,CAAAkB,IAAA;QAAA;MAAA,GAAAvC,OAAA;IAAA;EAEA;EAEAwC,IAAA,WAAAA,KAAA;IACA,IAAAC,SAAA,QAAAlD,MAAA,CAAAC,KAAA,CAAAjB,YAAA;IAEA,IAAAoC,MAAA;IAEA;MACAA,MAAA,GAAAkB,IAAA,CAAAC,KAAA,CAAApD,YAAA,CAAA+D,SAAA;IACA,SAAAC,OAAA,GACA;IAEA,IAAAC,QAAA,GAAAhC,MAAA;MAAAG,IAAA,GAAA6B,QAAA,CAAA7B,IAAA;IAEA;MAAA8B,OAAA,EAAA9B;IAAA;EACA;EAEA+B,OAAA,WAAAA,QAAA;IACA,SAAAD,OAAA;MACA;QACA,IAAAE,kBAAA,GAEA,KAAAvD,MAAA,CAAAC,KAAA;UADAuD,SAAA,GAAAD,kBAAA,CAAAxC,KAAA;UAAA0C,oBAAA,GAAAF,kBAAA,CAAAtB,iBAAA;UAAAzC,IAAA,GAAA+D,kBAAA,CAAAxE,WAAA;UAAAmC,QAAA,GAAAqC,kBAAA,CAAArC,QAAA;QAGA,IAAAH,KAAA,GAAA0C,oBAAA,IAAAD,SAAA,MAAAhE,IAAA;QAEA,IAAA0B,QAAA;UACAH,KAAA,QAAA2C,MAAA,CAAAxB,OAAA,2CAAAC,MAAA,CAAAjB,QAAA,SAAAA,QAAA;QACA;QAEA5B,KAAA,CAAAyB,KAAA,EAAAvB,IAAA;MACA,SAAAM,CAAA;QACAL,MAAA,CAAAI,KAAA;MACA;IACA;MACA,IAAAJ,MAAA,CAAAC,MAAA;QACA,IAAAK,MAAA,MAAAC,MAAA;UACA,IAAAP,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAE,UAAA;YACAL,KAAA;UACA;YACAA,KAAA;cAAAC,GAAA;YAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]}]}