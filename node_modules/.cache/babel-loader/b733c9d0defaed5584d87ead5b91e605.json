{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/store/plugins.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/store/plugins.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["removeObjects","simplify","key","toLowerCase","replace","credentialOptions","aws","publicKey","publicMode","keys","digitalocean","azure","linode","rke1Supports","driverMap","aks","amazonec2","amazoneks","amazonelasticcontainerservice","azurekubernetesservice","google","googlekubernetesengine","huaweicontainercloudengine","linodekubernetesengine","oci","opentelekomcloudcontainerengine","oraclecontainerengine","driverToFieldMap","gcp","oracle","likelyFields","map","x","iffyFields","fullFields","prefixFields","suffixFields","driverToCloudProviderMap","harvester","vmwarevsphere","ovhcloudpubliccloud","custom","undefined","configureCredential","name","opt","mapDriver","to","state","getters","credentialDriverFor","credentialFieldForDriver","clusterDrivers","schemaForDriver","rootState","rootGetters","id","concat","schema","fieldNamesForDriver","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","out","wrap","_callee$","_context","prev","next","fetchResourceFields","console","error","abrupt","Object","resourceFields","stop","_x","apply","arguments","fieldsForDriver","_ref2","_callee2","names","_iterator","_step","n","_callee2$","_context2","sent","_createForOfIteratorHelper","s","done","value","err","e","f","_x2","cloudProviderForDriver"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/store/plugins.js"],"sourcesContent":["import { removeObjects } from '@shell/utils/array';\n\nexport function simplify(key) {\n  return key.toLowerCase().replace(/[^a-z0-9]/ig, '');\n}\n\nconst credentialOptions = {\n  aws: {\n    publicKey:  'accessKey',\n    publicMode: 'full',\n    keys:       ['region', 'accessKey', 'secretKey']\n  },\n  digitalocean: {\n    publicKey:  'accessToken',\n    publicMode: 'prefix',\n    keys:       'accessToken'\n  },\n  azure: {\n    publicKey:  'clientId',\n    publicMode: 'full',\n    keys:       ['subscriptionId', 'tenantId', 'clientId', 'clientSecret']\n  },\n  linode: {\n    publicKey:  'token',\n    publicMode: 'prefix',\n    keys:       'token'\n  }\n};\n\n// Credential drivers that rke1 supports\nexport const rke1Supports = [\n  'aws',\n  'azure',\n  'digitalocean',\n  'gcp',\n  'harvester',\n  'linode',\n  'oracle',\n  'pnap',\n  'vmwarevsphere'\n];\n\n// Map a credential driver name to a component name\n// e.g. ec2 and eks both use the 'aws' driver to share the same pool of creds.\nconst driverMap = {\n  aks:                             'azure',\n  amazonec2:                       'aws',\n  amazoneks:                       'aws',\n  amazonelasticcontainerservice:   'aws',\n  azurekubernetesservice:          'azure',\n  google:                          'gcp',\n  googlekubernetesengine:          'gcp',\n  huaweicontainercloudengine:      'huawei',\n  linodekubernetesengine:          'linode',\n  oci:                             'oracle',\n  opentelekomcloudcontainerengine: 'otc',\n  oraclecontainerengine:           'oracle',\n};\n\n// Map a driver component back to the cloud credential field name their data has to be stored in\nconst driverToFieldMap = {\n  aws:    'amazonec2',\n  gcp:    'google',\n  oracle: 'oci',\n};\n\n// Machine driver fields that are probably a credential field\nexport const likelyFields = [\n  'username', 'password',\n  'accesskey', 'secretkey',\n  'accesskeyid', 'secretkeyid', 'accesskeysecret',\n  'token', 'apikey',\n  'secret',\n  'clientid', 'clientsecret', 'subscriptionid', 'tenantid',\n].map((x) => simplify(x));\n\n// Machine driver fields that are maaaaybe a credential field\nexport const iffyFields = [\n  'location', 'region',\n].map((x) => simplify(x));\n\n// Machine driver fields that are safe to display the whole value\nexport const fullFields = [\n  'username',\n  'accesskey',\n  'accesskeyid',\n  'clientid'\n].map((x) => simplify(x));\n\n// Machine driver fields that are safe to display the beginning of\nexport const prefixFields = [\n  'token',\n  'apikey',\n  'secret',\n].map((x) => simplify(x));\n\n// Machine driver fields that are safe to display the end of\nexport const suffixFields = [\n].map((x) => simplify(x));\n\n// Machine driver to cloud provider mapping\nconst driverToCloudProviderMap = {\n  amazonec2:           'aws',\n  azure:               'azure',\n  digitalocean:        '', // Show restricted options\n  harvester:           'harvester',\n  linode:              '', // Show restricted options\n  vmwarevsphere:       'rancher-vsphere',\n  ovhcloudpubliccloud: '',\n\n  custom: undefined // Show all options\n};\n\n// Dynamically loaded drivers can call this eventually to register their options\nexport function configureCredential(name, opt) {\n  credentialOptions[name] = opt;\n}\n\n// Map a driver to a different credential name, e.g. amazonec2 and amazoneks both use the 'aws' credential type.\nexport function mapDriver(name, to) {\n  driverMap[name] = to;\n}\n\nexport const state = function() {\n  return {};\n};\n\nexport const getters = {\n  credentialOptions() {\n    return (name) => {\n      name = (name || '').toLowerCase();\n\n      return credentialOptions[name] || {};\n    };\n  },\n\n  credentialDriverFor() {\n    return (name) => {\n      name = (name || '').toLowerCase();\n\n      return driverMap[name] || name;\n    };\n  },\n\n  credentialFieldForDriver() {\n    return (name) => {\n      name = (name || '').toLowerCase();\n\n      return driverToFieldMap[name] || name;\n    };\n  },\n\n  clusterDrivers() {\n    // The subset of drivers supported by Vue components\n    return [];\n  },\n\n  schemaForDriver(state, getters, rootState, rootGetters) {\n    return (name) => {\n      const id = `rke-machine-config.cattle.io.${ name }config`;\n      const schema = rootGetters['management/schemaFor'](id);\n\n      return schema;\n    };\n  },\n\n  fieldNamesForDriver(state, getters) {\n    return async(name) => {\n      const schema = getters.schemaForDriver(name);\n\n      await schema.fetchResourceFields();\n\n      if ( !schema ) {\n        // eslint-disable-next-line no-console\n        console.error(`Machine Driver Config schema not found for ${ name }`);\n\n        return [];\n      }\n      // This is used in places where `createPopulated` has been called, which has called fetchResourceFields to populate resourceFields\n      const out = Object.keys(schema?.resourceFields || {});\n\n      removeObjects(out, ['apiVersion', 'dockerPort', 'kind', 'metadata']);\n\n      return out;\n    };\n  },\n\n  fieldsForDriver(state, getters) {\n    return async(name) => {\n      const schema = getters.schemaForDriver(name);\n\n      await schema.fetchResourceFields();\n      const names = await getters.fieldNamesForDriver(name);\n\n      const out = {};\n\n      for ( const n of names ) {\n        out[n] = schema.resourceFields[n];\n      }\n\n      return out;\n    };\n  },\n\n  cloudProviderForDriver() {\n    return (name) => {\n      return driverToCloudProviderMap[name];\n    };\n  },\n};\n"],"mappings":"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","ignoreList":[]}]}