{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/namespace.js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/namespace.js","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["SYSTEM_NAMESPACES","PROJECT","SYSTEM_NAMESPACE","ISTIO","ISTIO_LABELS","FLEET","RESOURCE_QUOTA","MANAGEMENT","get","set","escapeHtml","insertAt","isArray","SteveModel","Vue","HARVESTER_NAME","HARVESTER","hasPSALabels","getPSATooltipsDescription","getPSALabels","PSAIconsDisplay","PSALabelsNamespaceVersion","OBSCURE_NAMESPACE_PREFIX","Namespace","_SteveModel","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","applyDefaults","out","_get","_getPrototypeOf","prototype","divider","istioInstalled","action","label","t","bulkable","bulkAction","enabled","injectionEnabled","icon","weight","$rootGetters","move","resources","length","undefined","$dispatch","_this$metadata","metadata","annotations","includes","name","startsWith","endsWith","project","isSystem","concat","MANAGED","_this","some","prefix","_this$metadata2","projectAnnotation","split","_this$$rootGetters$cu","projectId","clusterId","id","_this$project","nameDisplay","_this$project2","nameSort","schema","GATEWAY","labels","AUTO_INJECTION","enableAutoInjection","namespaces","enable","forEach","ns","_ns$metadata","save","disableAutoInjection","listLocation","inStore","replace","params","resource","_detailLocation","JSON","parse","stringify","psaTooltipsDescription","Object","entries","reduce","res","_ref","_ref2","_slicedToArray","cleanForNew","_this$metadata3","call","hideNamespaceLocation","default"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/namespace.js"],"sourcesContent":["import SYSTEM_NAMESPACES from '@shell/config/system-namespaces';\nimport {\n  PROJECT, SYSTEM_NAMESPACE, ISTIO as ISTIO_LABELS, FLEET, RESOURCE_QUOTA\n} from '@shell/config/labels-annotations';\nimport { ISTIO, MANAGEMENT } from '@shell/config/types';\n\nimport { get, set } from '@shell/utils/object';\nimport { escapeHtml } from '@shell/utils/string';\nimport { insertAt, isArray } from '@shell/utils/array';\nimport SteveModel from '@shell/plugins/steve/steve-class';\nimport Vue from 'vue';\nimport { HARVESTER_NAME as HARVESTER } from '@shell/config/features';\nimport { hasPSALabels, getPSATooltipsDescription, getPSALabels } from '@shell/utils/pod-security-admission';\nimport { PSAIconsDisplay, PSALabelsNamespaceVersion } from '@shell/config/pod-security-admission';\n\nconst OBSCURE_NAMESPACE_PREFIX = [\n  'c-', // cluster namespace\n\n  // Project namespace. When a user creates a project, Rancher creates\n  // namespaces in the local cluster with the 'p-' prefix which are\n  // used to manage RBAC for the project. If these namespaces are deleted,\n  // role bindings can be lost and Rancher may need to be restored from\n  // backup. Therefore we hide these namespaces unless the developer setting\n  // is turned on from the user preferences.\n  'p-',\n\n  'user-', // user namespace\n  'local', // local namespace\n];\n\nexport default class Namespace extends SteveModel {\n  applyDefaults() {\n    set(this, 'disableOpenApiValidation', false);\n  }\n\n  get _availableActions() {\n    const out = super._availableActions;\n\n    insertAt(out, 0, { divider: true });\n    if (this.istioInstalled) {\n      insertAt(out, 0, {\n        action:     'enableAutoInjection',\n        label:      this.t('namespace.enableAutoInjection'),\n        bulkable:   true,\n        bulkAction: 'enableAutoInjection',\n        enabled:    !this.injectionEnabled,\n        icon:       'icon icon-plus',\n        weight:     2\n\n      });\n      insertAt(out, 0, {\n        action:     'disableAutoInjection',\n        label:      this.t('namespace.disableAutoInjection'),\n        bulkable:   true,\n        bulkAction: 'disableAutoInjection',\n        enabled:    this.injectionEnabled,\n        icon:       'icon icon-minus',\n        weight:     1,\n      });\n    }\n\n    if (this.$rootGetters['isRancher'] && !this.$rootGetters['isSingleProduct']) {\n      insertAt(out, 0, {\n        action:     'move',\n        label:      this.t('namespace.move'),\n        bulkable:   true,\n        bulkAction: 'move',\n        enabled:    true,\n        icon:       'icon icon-fork',\n        weight:     3,\n      });\n    }\n\n    return out;\n  }\n\n  move(resources = this) {\n    this.$dispatch('promptMove', resources);\n  }\n\n  get isSystem() {\n    if ( this.metadata?.annotations?.[SYSTEM_NAMESPACE] === 'true' ) {\n      return true;\n    }\n\n    if ( SYSTEM_NAMESPACES.includes(this.metadata.name) ) {\n      return true;\n    }\n\n    if ( this.metadata.name.startsWith('cattle-') && this.metadata.name.endsWith('-system') ) {\n      return true;\n    }\n\n    if ( this.project ) {\n      return this.project.isSystem;\n    }\n\n    return false;\n  }\n\n  get isFleetManaged() {\n    return get(this, `metadata.labels.\"${ FLEET.MANAGED }\"`) === 'true';\n  }\n\n  // These are namespaces that are created by rancher to serve purposes in the background but the user shouldn't have\n  // to worry themselves about them.\n  get isObscure() {\n    return OBSCURE_NAMESPACE_PREFIX.some((prefix) => this.metadata.name.startsWith(prefix)) && this.isSystem;\n  }\n\n  get projectId() {\n    const projectAnnotation = this.metadata?.annotations?.[PROJECT] || '';\n\n    return projectAnnotation.split(':')[1] || null;\n  }\n\n  get project() {\n    if ( !this.projectId || !this.$rootGetters['isRancher'] ) {\n      return null;\n    }\n\n    const clusterId = this.$rootGetters['currentCluster']?.id;\n    const project = this.$rootGetters['management/byId'](MANAGEMENT.PROJECT, `${ clusterId }/${ this.projectId }`);\n\n    return project;\n  }\n\n  get groupByLabel() {\n    const name = this.project?.nameDisplay;\n\n    if ( name ) {\n      return this.$rootGetters['i18n/t']('resourceTable.groupLabel.project', { name: escapeHtml(name) });\n    } else {\n      return this.$rootGetters['i18n/t']('resourceTable.groupLabel.notInAProject');\n    }\n  }\n\n  get projectNameSort() {\n    return this.project?.nameSort || '';\n  }\n\n  get istioInstalled() {\n    const schema = this.$rootGetters['cluster/schemaFor'](ISTIO.GATEWAY);\n\n    return !!schema;\n  }\n\n  get injectionEnabled() {\n    return this.labels[ISTIO_LABELS.AUTO_INJECTION] === 'enabled';\n  }\n\n  enableAutoInjection(namespaces = this, enable = true) {\n    if (!isArray(namespaces)) {\n      namespaces = [namespaces];\n    }\n    namespaces.forEach((ns) => {\n      if (!enable && ns?.metadata?.labels) {\n        delete ns.metadata.labels[ISTIO_LABELS.AUTO_INJECTION];\n      } else {\n        if (!ns.metadata.labels) {\n          ns.metadata.labels = {};\n        }\n        ns.metadata.labels[ISTIO_LABELS.AUTO_INJECTION] = 'enabled';\n      }\n      ns.save();\n    });\n  }\n\n  disableAutoInjection(namespaces = this) {\n    this.enableAutoInjection(namespaces, false);\n  }\n\n  get confirmRemove() {\n    return true;\n  }\n\n  get listLocation() {\n    const listLocation = { name: this.$rootGetters['isRancher'] ? 'c-cluster-product-projectsnamespaces' : 'c-cluster-product-resource' };\n\n    // Harvester uses these resource directly... but has different routes. listLocation covers routes leading back to route\n    if (this.$rootGetters['currentProduct'].inStore === HARVESTER) {\n      listLocation.name = `${ HARVESTER }-${ listLocation.name }`.replace('-product', '');\n      listLocation.params = { resource: 'namespace' };\n    }\n\n    return listLocation;\n  }\n\n  get _detailLocation() {\n    const _detailLocation = super._detailLocation;\n\n    return _detailLocation;\n  }\n\n  get parentLocationOverride() {\n    return this.listLocation;\n  }\n\n  get doneOverride() {\n    return this.listLocation;\n  }\n\n  get resourceQuota() {\n    return JSON.parse(this.metadata.annotations[RESOURCE_QUOTA] || `{\"limit\":{}}`);\n  }\n\n  set resourceQuota(value) {\n    Vue.set(this.metadata.annotations, RESOURCE_QUOTA, JSON.stringify(value));\n  }\n\n  get detailTopTooltips() {\n    return this.psaTooltipsDescription;\n  }\n\n  get detailTopIcons() {\n    return PSAIconsDisplay;\n  }\n\n  /**\n   * Check if resource contains PSA labels\n   */\n  get hasSystemLabels() {\n    return hasPSALabels(this);\n  }\n\n  get filteredSystemLabels() {\n    return Object.entries(this.labels).reduce((res, [key, value]) => {\n      if (!PSALabelsNamespaceVersion.includes(key)) {\n        res[key] = value;\n      }\n\n      return res;\n    }, {});\n  }\n\n  /**\n   * Generate list of present keys which can be filtered based on existing label keys and system keys\n   */\n  get systemLabels() {\n    return getPSALabels(this);\n  }\n\n  get psaTooltipsDescription() {\n    return getPSATooltipsDescription(this);\n  }\n\n  // Preserve the project label - ensures we preserve project when cloning a namespace\n  cleanForNew() {\n    const project = this.metadata?.labels?.[PROJECT];\n\n    super.cleanForNew();\n\n    if (project) {\n      this.metadata = this.metadata || {};\n      this.metadata.labels = this.metadata.labels || {};\n      this.metadata.labels[PROJECT] = project;\n    }\n  }\n\n  get hideDetailLocation() {\n    return !!this.$rootGetters['currentProduct'].hideNamespaceLocation;\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}