{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/helm.cattle.io.projecthelmchart.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/helm.cattle.io.projecthelmchart.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Tabbed","createEditView","CruResource","Questions","CONFIG_MAP","NAMESPACE","LabeledSelect","LabeledInput","Loading","jsyaml","components","mixins","props","value","type","Object","required","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_federatorSystemNames","inStore","federatorSystemNamespacesConfigMap","wrap","_callee$","_context","prev","next","$store","dispatch","getters","concat","getConfigMap","sent","systemNamespaces","JSON","parse","data","namespaces","filter","namespaceFilter","map","namespaceMapper","loading","stop","spec","values","$set","computed","selectedNamespaceQuestions","_this$currentNamespac","_this$$store$getters","_jsyaml$load","configMapRelationship","currentNamespace","metadata","relationships","find","relationship","toType","questionsYaml","toId","load","questions","_this2","namespace","_this2$value","id","methods","getNamespaceConfigMapId","_this$currentNamespac2","_this3","_callee2","_callee2$","_context2","abrupt","_this$systemNamespace","_this$systemNamespace2","_namespace$metadata","excludeProjects","_toConsumableArray","systemProjectLabelValues","projectReleaseLabelValue","project","labels","includes","projectId","_namespace$project","_objectSpread","configMapId","label","displayName"],"sources":["node_modules/@rancher/shell/edit/helm.cattle.io.projecthelmchart.vue"],"sourcesContent":["<script>\nimport Tabbed from '@shell/components/Tabbed';\nimport createEditView from '@shell/mixins/create-edit-view';\nimport CruResource from '@shell/components/CruResource';\nimport Questions from '@shell/components/Questions';\nimport { CONFIG_MAP, NAMESPACE } from '@shell/config/types';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport Loading from '@shell/components/Loading';\nimport jsyaml from 'js-yaml';\n\nexport default {\n  components: {\n    CruResource,\n    LabeledSelect,\n    LabeledInput,\n    Tabbed,\n    Questions,\n    Loading\n  },\n\n  mixins: [createEditView],\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n  },\n\n  async fetch() {\n    await this.$store.dispatch('catalog/load');\n    const inStore = this.$store.getters['currentStore'](NAMESPACE);\n\n    // this seems excessive but if we're gonna pull up specific configMaps we need then we need the configmaps to be in the store.\n    // ToDo: try to find a better way of loading these or just load the ones we need\n    await this.$store.dispatch(`${ inStore }/findAll`, { type: CONFIG_MAP });\n\n    const federatorSystemNamespacesConfigMap = await this.getConfigMap('cattle-monitoring-system/prometheus-federator-system-namespaces');\n\n    this.systemNamespaces = JSON.parse(federatorSystemNamespacesConfigMap?.data?.['system-namespaces.json']);\n\n    this.namespaces = this.$store.getters[`${ inStore }/all`](NAMESPACE)\n      .filter(this.namespaceFilter)\n      .map(this.namespaceMapper);\n\n    this.loading = false;\n  },\n\n  data() {\n    if (!this.value.spec.values) {\n      this.$set(this.value.spec, 'values', {});\n    }\n\n    return {\n      systemNamespaces: null,\n      namespaces:       [],\n      loading:          true\n    };\n  },\n\n  computed: {\n    selectedNamespaceQuestions() {\n      const inStore = this.$store.getters['currentStore']();\n\n      const configMapRelationship = this.currentNamespace?.metadata?.relationships.find((relationship) => relationship?.toType === 'configmap');\n\n      const questionsYaml = this.$store.getters[`${ inStore }/byId`](configMapRelationship?.toType, configMapRelationship?.toId)?.data?.['questions.yaml'];\n\n      return jsyaml.load(questionsYaml)?.questions;\n    },\n    currentNamespace() {\n      return this.namespaces.find((namespace) => namespace.id === this.value?.metadata?.namespace);\n    }\n  },\n\n  methods: {\n    getNamespaceConfigMapId(namespace) {\n      return this.currentNamespace?.metadata?.relationships.find((relationship) => relationship?.toType === 'configmap')?.toId;\n    },\n    async getConfigMap(id) {\n      return await this.$store.dispatch('cluster/find', { type: CONFIG_MAP, id });\n    },\n    namespaceFilter(namespace) {\n      const excludeProjects = [...this.systemNamespaces?.systemProjectLabelValues || [], this.systemNamespaces?.projectReleaseLabelValue];\n\n      return namespace?.project && namespace?.metadata?.labels?.['helm.cattle.io/helm-project-operated'] && !excludeProjects.includes(namespace.projectId);\n    },\n    namespaceMapper(namespace) {\n      return {\n        ...namespace,\n        configMapId: this.getNamespaceConfigMapId(namespace),\n        label:       namespace?.project?.spec?.displayName,\n        value:       namespace?.id,\n      };\n    }\n  }\n};\n</script>\n\n<template>\n  <CruResource\n    v-if=\"!loading\"\n    :done-route=\"doneRoute\"\n    :resource=\"value\"\n    :mode=\"mode\"\n    :errors=\"errors\"\n    :apply-hooks=\"applyHooks\"\n    @finish=\"save\"\n  >\n    <div class=\"row\">\n      <div class=\"col span-6\">\n        <LabeledSelect\n          v-model=\"value.metadata.namespace\"\n          :label=\"t('namespace.project.label')\"\n          :options=\"namespaces\"\n          required\n        />\n      </div>\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.metadata.description\"\n          :label=\"t('nameNsDescription.description.label')\"\n        />\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col span-12\">\n        <Tabbed\n          v-if=\"!!currentNamespace && selectedNamespaceQuestions\"\n          ref=\"tabs\"\n          :side-tabs=\"true\"\n        >\n          <Questions\n            v-model=\"value.spec.values\"\n            tabbed=\"multiple\"\n            :target-namespace=\"value.metadata.namespace\"\n            :source=\"selectedNamespaceQuestions\"\n          />\n        </Tabbed>\n      </div>\n    </div>\n  </CruResource>\n  <Loading v-else />\n</template>\n\n<style lang=\"scss\" scoped>\n.row {\n  margin-bottom: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}