{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--17-0!/home/ubuntu/suseconf/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/utils/settings.ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/utils/settings.ts","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["MANAGEMENT","DEFAULT_PERF_SETTING","SETTING","pluralize","_MULTI","fetchOrCreateSetting","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","store","id","val","save","setting","schema","url","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","dispatch","type","sent","t0","getters","linkFor","metadata","name","value","default","abrupt","stop","_x","_x2","_x3","apply","fetchSetting","_ref2","_callee2","all","_callee2$","_context2","find","_x4","_x5","fetchInitialSettings","_ref3","_callee3","generation","header","authed","_callee3$","_context3","concat","opt","load","redirectUnauthorized","_x6","setSetting","_ref4","_callee4","_callee4$","_context4","_x7","_x8","_x9","getPerformanceSetting","rootGetters","perfSettingResource","UI_PERFORMANCE","perfSetting","JSON","parse","e","console","warn","Object","assign"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/utils/settings.ts"],"sourcesContent":["import { MANAGEMENT } from '@shell/config/types';\nimport { Store } from 'vuex';\nimport { DEFAULT_PERF_SETTING, PerfSettings, SETTING } from '@shell/config/settings';\nimport { pluralize } from '@shell/utils/string';\nimport { _MULTI } from '@shell/plugins/dashboard-store/actions';\n\nexport const fetchOrCreateSetting = async(store: Store<any>, id: string, val: string, save = true): Promise<any> => {\n  let setting;\n\n  try {\n    setting = await store.dispatch('management/find', { type: MANAGEMENT.SETTING, id });\n  } catch {\n    const schema = store.getters['management/schemaFor'](MANAGEMENT.SETTING);\n    const url = schema.linkFor('collection');\n\n    setting = await store.dispatch('management/create', {\n      type: MANAGEMENT.SETTING, metadata: { name: id }, value: val, default: val || ''\n    });\n    if ( save ) {\n      await setting.save({ url });\n    }\n  }\n\n  return setting;\n};\n\n/**\n  * Fetch a specific setting that might not exist\n  * We fetch all settings - reality is Rancher will have done this already, so there's no overhead in doing\n  * this - but if we fetch a specific setting that does not exist, we will get a 404, which we don't want\n  */\nexport const fetchSetting = async(store: Store<any>, id: string): Promise<any> => {\n  const all = await store.dispatch('management/findAll', { type: MANAGEMENT.SETTING });\n  const setting = (all || []).find((setting: any) => setting.id === id);\n\n  return setting;\n};\n\n/**\n * Carefully fetch mgmt settings\n *\n * Ensures that\n * - Concurrent calls to this function will only result in a single http request\n * - Subsequent calls, when either logged in or logged out, will only result in a single http request\n * - Logged out call will fetch partial settings, after logging in another call will fetch all settings\n *\n * Will be used in many places, particularly multiple times when loading the dashboard\n *\n * Note - We need to specify the url for cases where it can't be determined (i.e. we haven't fetched schemas)\n */\nexport const fetchInitialSettings = async(store: Store<any>): Promise<any> => {\n  const generation = store.getters['management/generation'](MANAGEMENT.SETTING);\n  // We use this as it copies the previous mechanism this was based on (in findAll)\n  // There is the getter `auth/loggedInAs` (which is set given `fromHeader`), but that's initialised after the first call to here (see `authenticated`)\n  const header = store.getters['auth/fromHeader'];\n  const authed = `${ header }` === 'true' || `${ header }` === 'none';\n\n  if (authed) {\n    // We're authed, we will always get the full list\n    return await store.dispatch('management/findAll', {\n      type: MANAGEMENT.SETTING,\n      opt:  { url: `/v1/${ pluralize(MANAGEMENT.SETTING) }` }\n    } );\n  }\n\n  if (!generation) {\n    // We're not authed, and haven't previously fetched settings (no generation)\n    // Fetch settings, put them in the store, but don't say we've got all yet (so subsequent calls will run)\n    return await store.dispatch('management/findAll', {\n      type: MANAGEMENT.SETTING,\n      opt:  {\n        url:                  `/v1/${ pluralize(MANAGEMENT.SETTING) }`,\n        load:                 _MULTI,\n        redirectUnauthorized: false\n      }\n    });\n  }\n\n  // We're not authed, but have a previous value, no need to make a http request to fetch again\n  return store.getters['management/all'](MANAGEMENT.SETTING);\n};\n\nexport const setSetting = async(store: Store<any>, id: string, val: string): Promise<any> => {\n  const setting = await fetchOrCreateSetting(store, id, val, false);\n\n  setting.value = val;\n  await setting.save();\n\n  return setting;\n};\n\nexport const getPerformanceSetting = (rootGetters: Record<string, (arg0: string, arg1: string) => any>): PerfSettings => {\n  const perfSettingResource = rootGetters['management/byId'](MANAGEMENT.SETTING, SETTING.UI_PERFORMANCE);\n  let perfSetting = {};\n\n  if (perfSettingResource?.value) {\n    try {\n      perfSetting = JSON.parse(perfSettingResource.value);\n    } catch (e) {\n      console.warn('ui-performance setting contains invalid data'); // eslint-disable-line no-console\n    }\n  }\n\n  // Start with the default and overwrite the values from the setting - ensures we have defaults for newly added options\n  return Object.assign(DEFAULT_PERF_SETTING, perfSetting || {});\n};\n"],"mappings":"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","ignoreList":[]}]}