{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/machine-config/azure.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/machine-config/azure.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Loading","CreateEditView","FormValidation","stringify","exceptionToErrorsArray","Banner","merge","isEmpty","LabeledSelect","LabeledInput","Checkbox","ArrayList","randomStr","addParam","addParams","KeyValue","RadioGroup","_CREATE","_EDIT","azureEnvironments","value","defaultConfig","acceleratedNetworking","availabilitySet","clientId","clientSecret","customData","diskSize","dns","environment","faultDomainCount","image","location","managedDisks","noPublicIp","nsg","privateIpAddress","resourceGroup","size","sshUser","staticPublicIp","storageType","subnet","subnetPrefix","subscriptionId","tenantId","updateDomainCount","usePrivateIp","vnet","openPort","tags","storageTypes","name","DEFAULT_REGION","components","mixins","props","credentialId","type","String","required","mode","default","uuid","disabled","Boolean","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$credential","_this$value","_ref","key","wrap","_callee$","_context","prev","next","errors","initTags","credential","decodedData","$store","dispatch","url","method","locationOptions","sent","undefined","$set","cloudCredentialId","region","vmSizes","useAvailabilitySet","t0","stop","data","loading","valueCopy","watch","$fetch","valueAvailabilityZone","neu","enablePublicIpStandardSku","$emit","computed","locationOptionsInDropdown","locationOptionsCopy","_toConsumableArray","sort","a","b","map","option","displayName","concat","vmsWithAcceleratedNetworking","filter","vmData","AcceleratedNetworkingSupported","vmsWithoutAcceleratedNetworking","selectedVmSizeSupportsAN","_this2","selectedSizeIsValid","find","Name","vmSizeAcceleratedNetworkingWarning","t","vmsWithAvailabilityZones","AvailabilityZones","length","vmSizeAvailabilityWarning","_this3","selectedVmIsAvailableInSelectedRegion","selectedVmSizeHasZones","_this4","dataForSelectedSize","vmAvailabilityZoneWarning","vmSizeOptionsForDropdown","out","kind","label","selectedVmSizeExistsInSelectedRegion","push","_this5","availableZones","_this6","created","methods","getVmSizeOptionLabel","handleVmSizeInput","$event","getVmSizes","_this7","_callee2","_callee2$","_context2","setLocation","parts","split","i","trim","updateTags","ary","k","join","handleAzChange"],"sources":["node_modules/@rancher/shell/machine-config/azure.vue"],"sourcesContent":["<script>\nimport Loading from '@shell/components/Loading';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport FormValidation from '@shell/mixins/form-validation';\nimport { stringify, exceptionToErrorsArray } from '@shell/utils/error';\nimport { Banner } from '@components/Banner';\nimport merge from 'lodash/merge';\nimport isEmpty from 'lodash/isEmpty';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport ArrayList from '@shell/components/form/ArrayList';\nimport { randomStr } from '@shell/utils/string';\nimport { addParam, addParams } from '@shell/utils/url';\nimport KeyValue from '@shell/components/form/KeyValue';\nimport { RadioGroup } from '@components/Form/Radio';\nimport { _CREATE, _EDIT } from '@shell/config/query-params';\n\nexport const azureEnvironments = [\n  { value: 'AzurePublicCloud' },\n  { value: 'AzureGermanCloud' },\n  { value: 'AzureChinaCloud' },\n  { value: 'AzureUSGovernmentCloud' },\n];\n\nconst defaultConfig = {\n  acceleratedNetworking: false,\n  availabilitySet:       'docker-machine',\n  clientId:              '',\n  clientSecret:          '',\n  customData:            '',\n  diskSize:              '30',\n  dns:                   '',\n  environment:           'AzurePublicCloud',\n  faultDomainCount:      '3',\n  image:                 'canonical:UbuntuServer:18.04-LTS:latest',\n  location:              'westus',\n  managedDisks:          false,\n  noPublicIp:            false,\n  nsg:                   null,\n  privateIpAddress:      null,\n  resourceGroup:         'docker-machine',\n  size:                  'Standard_D2_v2',\n  sshUser:               'docker-user',\n  staticPublicIp:        false,\n  storageType:           'Standard_LRS',\n  subnet:                'docker-machine',\n  subnetPrefix:          '192.168.0.0/16',\n  subscriptionId:        '',\n  tenantId:              '',\n  updateDomainCount:     '5',\n  usePrivateIp:          false,\n  vnet:                  'docker-machine-vnet',\n  openPort:              [\n    '6443/tcp',\n    '2379/tcp',\n    '2380/tcp',\n    '8472/udp',\n    '4789/udp',\n    '9796/tcp',\n    '10256/tcp',\n    '10250/tcp',\n    '10251/tcp',\n    '10252/tcp',\n  ],\n  tags: null\n};\n\nconst storageTypes = [\n  {\n    name:  'Standard LRS',\n    value: 'Standard_LRS',\n  },\n  {\n    name:  'Standard ZRS',\n    value: 'Standard_ZRS',\n  },\n  {\n    name:  'Standard GRS',\n    value: 'Standard_GRS',\n  },\n  {\n    name:  'Standard RAGRS',\n    value: 'Standard_RAGRS',\n  },\n  {\n    name:  'Premium LRS',\n    value: 'Premium_LRS',\n  },\n  {\n    name:  'Standard SSD LRS',\n    value: 'StandardSSD_LRS'\n  }\n];\nconst DEFAULT_REGION = 'westus';\n\nexport default {\n  components: {\n    ArrayList,\n    Banner,\n    Checkbox,\n    KeyValue,\n    LabeledInput,\n    LabeledSelect,\n    Loading,\n    RadioGroup\n  },\n\n  mixins: [CreateEditView, FormValidation],\n\n  props: {\n    credentialId: {\n      type:     String,\n      required: true,\n    },\n    mode: {\n      type:    String,\n      default: 'create',\n    },\n    uuid: {\n      type:     String,\n      required: true,\n    },\n    disabled: {\n      type:    Boolean,\n      default: false\n    },\n  },\n\n  async fetch() {\n    this.errors = [];\n    this.initTags();\n\n    try {\n      const {\n        clientId,\n        clientSecret,\n        environment,\n        subscriptionId,\n        tenantId,\n      } = (this.credential?.decodedData || {});\n\n      if (!isEmpty(clientId)) {\n        this.value.clientId = clientId;\n      }\n      if (!isEmpty(clientSecret)) {\n        this.value.clientSecret = clientSecret;\n      }\n      if (!isEmpty(environment)) {\n        this.value.environment = environment;\n      }\n      if (!isEmpty(subscriptionId)) {\n        this.value.subscriptionId = subscriptionId;\n      }\n      if (!isEmpty(tenantId)) {\n        this.value.tenantId = tenantId;\n      }\n\n      this.locationOptions = await this.$store.dispatch('management/request', {\n        url:    addParam('/meta/aksLocations', 'cloudCredentialId', this.credentialId),\n        method: 'GET',\n      });\n\n      if (this.mode === _CREATE) {\n        this.value.location = DEFAULT_REGION;\n\n      // when you edit an Azure cluster and add a new machine pool (edit)\n      // the location field doesn't come populated which causes the vmSizes request\n      // to return 200 but with a null response (also a bunch of other fields are undefined...)\n      // so let's prefill them with the defaults\n      } else if (this.mode === _EDIT && !this.value?.location) {\n        for (const key in this.defaultConfig) {\n          if (this.value[key] === undefined) {\n            this.$set(this.value, key, this.defaultConfig[key]);\n          }\n        }\n      }\n\n      this.vmSizes = await this.$store.dispatch('management/request', {\n        url: addParams('/meta/aksVMSizesV2', {\n          cloudCredentialId: this.credentialId,\n          region:            this.value.location\n        }),\n        method: 'GET',\n      });\n\n      // set correct option for useAvailabilitySet (will consider correct state for UI form based on availabilitySet)\n      if (this.mode === _CREATE) {\n        this.useAvailabilitySet = true;\n      } else {\n        this.useAvailabilitySet = !!this.value.availabilitySet;\n      }\n    } catch (e) {\n      this.errors = exceptionToErrorsArray(e);\n    }\n  },\n\n  data() {\n    return {\n      azureEnvironments,\n      defaultConfig,\n      storageTypes,\n      credential:         null,\n      locationOptions:    [],\n      loading:            false,\n      useAvailabilitySet: false,\n      vmSizes:            [],\n      valueCopy:          this.value,\n    };\n  },\n\n  watch: {\n    credentialId() {\n      this.$fetch();\n    },\n\n    'value.availabilityZone'(neu) {\n      if (neu && (!this.value.managedDisks || !this.value.enablePublicIpStandardSku || !this.value.staticPublicIp)) {\n        this.$emit('expandAdvanced');\n      }\n    }\n  },\n\n  computed: {\n    locationOptionsInDropdown() {\n      const locationOptionsCopy = [...this.locationOptions];\n\n      return locationOptionsCopy.sort((a, b) => {\n        // Hopefully it's easier to find a region if the list is in\n        // alphabetical order.\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (a.name < b.name) {\n          return -1;\n        }\n\n        return 0;\n      } )\n        .map((option) => {\n          return {\n            displayName: `${ option.displayName } (${ option.name })`,\n            name:        option.name,\n          };\n        });\n    },\n    vmsWithAcceleratedNetworking() {\n      return this.vmSizes.filter((vmData) => {\n        return vmData.AcceleratedNetworkingSupported;\n      });\n    },\n    vmsWithoutAcceleratedNetworking() {\n      return this.vmSizes.filter((vmData) => {\n        return !vmData.AcceleratedNetworkingSupported;\n      });\n    },\n    selectedVmSizeSupportsAN() {\n      const selectedSizeIsValid = !!this.vmsWithAcceleratedNetworking.find((vmData) => {\n        return this.value.size === vmData.Name;\n      });\n\n      return selectedSizeIsValid;\n    },\n    vmSizeAcceleratedNetworkingWarning() {\n      if (!this.selectedVmSizeSupportsAN && this.value.acceleratedNetworking) {\n        return this.t('cluster.machineConfig.azure.size.selectedSizeAcceleratedNetworkingWarning');\n      }\n\n      return '';\n    },\n    vmsWithAvailabilityZones() {\n      return this.vmSizes.filter((vmData) => {\n        return vmData.AvailabilityZones.length > 0;\n      });\n    },\n    vmSizeAvailabilityWarning() {\n      const selectedVmIsAvailableInSelectedRegion = this.vmSizes.filter((vmData) => {\n        return vmData.Name === this.value.size;\n      }).length > 0;\n\n      if (!selectedVmIsAvailableInSelectedRegion) {\n        return this.t('cluster.machineConfig.azure.size.availabilityWarning');\n      }\n\n      return '';\n    },\n    selectedVmSizeHasZones() {\n      const dataForSelectedSize = this.vmsWithAvailabilityZones.filter((vmData) => {\n        const { Name } = vmData;\n\n        return Name === this.value.size;\n      });\n\n      if (dataForSelectedSize.length > 0) {\n        return dataForSelectedSize[0].AvailabilityZones.length > 0;\n      }\n\n      return false;\n    },\n    vmAvailabilityZoneWarning() {\n      if (this.useAvailabilitySet) {\n        return '';\n      }\n      if (this.vmsWithAvailabilityZones.length === 0) {\n        /**\n         * Show UI warning: Availability zones are not supported in the selected\n         * region. Please select a different region or use an\n         * availability set instead.\n         */\n        return this.t('cluster.machineConfig.azure.size.regionDoesNotSupportAzs');\n      }\n\n      if (this.vmsWithAvailabilityZones.length > 0 && !this.selectedVmSizeHasZones) {\n        /**\n         * Show UI warning: The selected region does not support availability\n         * zones for the selected VM size. Please select a\n         * different region or VM size.\n         */\n        return this.t('cluster.machineConfig.azure.size.regionSupportsAzsButNotThisSize');\n      }\n\n      return '';\n    },\n    vmSizeOptionsForDropdown() {\n      // example vmSize option from backend:\n      // {\n      //   AcceleratedNetworkingSupported: false,\n      //   AvailabilityZones: [],\n      //   Name: \"Basic_A0\"\n      // }\n\n      const out = [\n        { kind: 'group', label: this.t('cluster.machineConfig.azure.size.supportsAcceleratedNetworking') },\n        ...this.vmsWithAcceleratedNetworking,\n        { kind: 'group', label: this.t('cluster.machineConfig.azure.size.doesNotSupportAcceleratedNetworking') },\n        ...this.vmsWithoutAcceleratedNetworking,\n      ];\n\n      if (!this.selectedVmSizeExistsInSelectedRegion) {\n        out.push({\n          Name:     this.value.size,\n          disabled: true\n        });\n      }\n\n      return out.map((vmData) => {\n        const { Name } = vmData;\n\n        if (vmData.kind === 'group') {\n          return vmData;\n        }\n\n        return {\n          label:    Name,\n          value:    Name,\n          disabled: vmData.disabled || false,\n        };\n      });\n    },\n    selectedVmSizeExistsInSelectedRegion() {\n      // If the user selects a region and then a VM size\n      // that does not exist in the region, the list of VM\n      // sizes will update, causing the selected VM size\n      // to disappear. A disappearing VM size seems like a\n      // bad UX, so this value allows the value to be\n      // added to the VM size dropdown, while an error message\n      // indicates that the size is invalid.\n      if (this.vmSizes.find((size) => {\n        return size.Name === this.value.size;\n      })) {\n        return true;\n      }\n\n      return false;\n    },\n    availableZones() {\n      const data = this.vmSizes.filter((vmData) => {\n        return vmData.Name === this.value.size;\n      });\n\n      if (data.length > 0) {\n        return data[0].AvailabilityZones.sort((a, b) => {\n          return a - b;\n        });\n      }\n\n      return [];\n    },\n  },\n\n  created() {\n    if (this.mode === 'create') {\n      for (const key in this.defaultConfig) {\n        if (this.value[key] === undefined) {\n          this.$set(this.value, key, this.defaultConfig[key]);\n        }\n      }\n      merge(this.value, this.defaultConfig);\n\n      this.value.nsg = `rancher-managed-${ randomStr(8) }`;\n    }\n  },\n\n  methods: {\n    getVmSizeOptionLabel(vmData) {\n      return vmData.label;\n    },\n    handleVmSizeInput($event) {\n      if (this.vmSizeAcceleratedNetworkingWarning) {\n        this.$emit('error', this.vmSizeAcceleratedNetworkingWarning);\n      }\n    },\n    stringify,\n    async getVmSizes() {\n      this.loading = true;\n      // The list of VM sizes should update when the\n      // selected region is changed because different\n      // VMs are supported in different regions.\n\n      // Example vmSize option from backend:\n      // {\n      //   AcceleratedNetworkingSupported: false,\n      //   AvailabilityZones: [],\n      //   Name: \"Basic_A0\"\n      // }\n      try {\n        this.vmSizes = await this.$store.dispatch('management/request', {\n          url: addParams('/meta/aksVMSizesV2', {\n            cloudCredentialId: this.credentialId,\n            region:            this.value.location\n          }),\n          method: 'GET',\n        });\n      } catch (e) {\n        this.errors = exceptionToErrorsArray(e);\n      }\n      this.loading = false;\n    },\n    setLocation(location) {\n      this.value.location = location?.name;\n      this.getVmSizes();\n    },\n    initTags() {\n      const parts = (this.value.tags || '').split(/,/);\n      const out = {};\n\n      let i = 0;\n\n      while ( i + 1 < parts.length ) {\n        const key = `${ parts[i] }`.trim();\n        const value = `${ parts[i + 1] }`.trim();\n\n        if ( key ) {\n          out[key] = value;\n        }\n\n        i += 2;\n      }\n\n      this.tags = out;\n    },\n\n    updateTags(tags) {\n      const ary = [];\n\n      for ( const k in tags ) {\n        ary.push(k, tags[k]);\n      }\n\n      this.$set(this.value, 'tags', ary.join(','));\n    },\n    handleAzChange() {\n      if (this.value.availabilitySet) {\n      // If an availability set exists, clear it out when\n      // an availability zone is selected. Otherwise the\n      // set will take precedent and the zone will not be saved.\n        this.value.availabilitySet = null;\n      }\n    }\n  },\n};\n</script>\n\n<template>\n  <Loading\n    v-if=\"$fetchState.pending\"\n    :delayed=\"true\"\n  />\n  <div v-else-if=\"errors.length\">\n    <div\n      v-for=\"(err, idx) in errors\"\n      :key=\"idx\"\n    >\n      <Banner\n        color=\"error\"\n        :label=\"stringify(err)\"\n      />\n    </div>\n  </div>\n  <div v-else>\n    <div class=\"row mt-20\">\n      <div class=\"col span-6\">\n        <LabeledSelect\n          v-model=\"value.environment\"\n          :mode=\"mode\"\n          :options=\"azureEnvironments\"\n          option-key=\"value\"\n          option-label=\"value\"\n          :searchable=\"false\"\n          :required=\"true\"\n          :label=\"t('cluster.machineConfig.azure.environment.label')\"\n          :disabled=\"disabled\"\n        />\n      </div>\n      <div class=\"col span-6\">\n        <LabeledSelect\n          :value=\"value.location\"\n          :mode=\"mode\"\n          :options=\"locationOptionsInDropdown\"\n          option-key=\"name\"\n          option-label=\"displayName\"\n          :searchable=\"true\"\n          :required=\"true\"\n          :label=\"t('cluster.machineConfig.azure.location.label')\"\n          :disabled=\"disabled\"\n          @input=\"setLocation\"\n        />\n      </div>\n    </div>\n    <div class=\"row mt-20\">\n      <div class=\"col span-4\">\n        <LabeledInput\n          v-model=\"value.resourceGroup\"\n          :mode=\"mode\"\n          :label=\"t('cluster.machineConfig.azure.resourceGroup.label')\"\n          :disabled=\"disabled\"\n        />\n      </div>\n\n      <div\n        v-if=\"useAvailabilitySet\"\n        class=\"col span-4\"\n      >\n        <LabeledInput\n          v-model=\"value.availabilitySet\"\n          :mode=\"mode\"\n          :label=\"t('cluster.machineConfig.azure.availabilitySet.label')\"\n          :tooltip=\"t('cluster.machineConfig.azure.availabilitySet.description')\"\n          :disabled=\"disabled\"\n        />\n      </div>\n      <div\n        v-if=\"!useAvailabilitySet\"\n        class=\"col span-4\"\n      >\n        <i\n          v-if=\"loading\"\n          class=\"icon icon-spinner delayed-loader\"\n        />\n        <LabeledSelect\n          v-else\n          v-model=\"value.availabilityZone\"\n          :mode=\"mode\"\n          :options=\"availableZones\"\n          :label=\"t('cluster.machineConfig.azure.availabilityZone.label')\"\n          :tooltip=\"t('cluster.machineConfig.azure.availabilityZone.description')\"\n          :disabled=\"disabled || !!vmAvailabilityZoneWarning\"\n          @input=\"handleAzChange\"\n        />\n        <Banner\n          v-if=\"vmAvailabilityZoneWarning\"\n          color=\"error\"\n          :label=\"vmAvailabilityZoneWarning\"\n        />\n      </div>\n      <div class=\"col span-4\">\n        <RadioGroup\n          v-model=\"useAvailabilitySet\"\n          name=\"etcd-s3\"\n          :options=\"[true, false]\"\n          :labels=\"[t('cluster.machineConfig.azure.availabilitySet.label'),t('cluster.machineConfig.azure.availabilityZone.label')]\"\n          :mode=\"mode\"\n        />\n      </div>\n    </div>\n    <hr class=\"mt-20\">\n    <div class=\"row mt-20\">\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.image\"\n          :mode=\"mode\"\n          :label=\"t('cluster.machineConfig.azure.image.label')\"\n          :tooltip=\"t('cluster.machineConfig.azure.image.help')\"\n          :disabled=\"disabled\"\n        />\n      </div>\n      <div class=\"col span-6\">\n        <i\n          v-if=\"loading\"\n          class=\"icon icon-spinner delayed-loader\"\n        />\n        <LabeledSelect\n          v-else\n          v-model=\"value.size\"\n          :mode=\"mode\"\n          :options=\"vmSizeOptionsForDropdown\"\n          :get-option-label=\"getVmSizeOptionLabel\"\n          :searchable=\"true\"\n          :required=\"true\"\n          :label=\"t('cluster.machineConfig.azure.size.label')\"\n          :tooltip=\"value.acceleratedNetworking ? t('cluster.machineConfig.azure.size.tooltip') : ''\"\n          :disabled=\"disabled\"\n          @selecting=\"handleVmSizeInput\"\n        />\n        <Banner\n          v-if=\"vmSizeAcceleratedNetworkingWarning\"\n          color=\"error\"\n          :label=\"vmSizeAcceleratedNetworkingWarning\"\n        />\n        <Banner\n          v-else-if=\"vmSizeAvailabilityWarning\"\n          color=\"error\"\n          :label=\"vmSizeAvailabilityWarning\"\n        />\n      </div>\n    </div>\n\n    <portal :to=\"'advanced-' + uuid\">\n      <div v-if=\"useAvailabilitySet\">\n        <h2>{{ t('cluster.machineConfig.azure.sections.availabilitySetConfiguration') }}</h2>\n        <div class=\"row mt-20\">\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"value.faultDomainCount\"\n              :mode=\"mode\"\n              :label=\"t('cluster.machineConfig.azure.faultDomainCount.label')\"\n              :tooltip=\"t('cluster.machineConfig.azure.faultDomainCount.help')\"\n              :disabled=\"disabled\"\n            />\n          </div>\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"value.updateDomainCount\"\n              :mode=\"mode\"\n              :label=\"t('cluster.machineConfig.azure.updateDomainCount.label')\"\n              :tooltip=\"t('cluster.machineConfig.azure.updateDomainCount.help')\"\n              :disabled=\"disabled\"\n            />\n          </div>\n        </div>\n      </div>\n      <hr class=\"mt-20 mb-20\">\n      <h2>{{ t('cluster.machineConfig.azure.sections.purchasePlan') }}</h2>\n      <div class=\"row mt-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"value.plan\"\n            :mode=\"mode\"\n            :label=\"t('cluster.machineConfig.azure.plan.label')\"\n            :placeholder=\"t('cluster.machineConfig.azure.plan.placeholder')\"\n            :disabled=\"disabled\"\n          />\n        </div>\n      </div>\n      <hr class=\"mt-20\">\n      <h2>{{ t('cluster.machineConfig.azure.sections.network') }}</h2>\n      <div class=\"row mt-20 mb-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"value.subnet\"\n            :mode=\"mode\"\n            :label=\"t('cluster.machineConfig.azure.subnet.label')\"\n            :disabled=\"disabled\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"value.subnetPrefix\"\n            :mode=\"mode\"\n            :label=\"t('cluster.machineConfig.azure.subnetPrefix.label')\"\n            :disabled=\"disabled\"\n          />\n        </div>\n      </div>\n      <div class=\"row mt-20\">\n        <div class=\"col span-6\">\n          <Checkbox\n            v-model=\"value.acceleratedNetworking\"\n            :disabled=\"(!value.acceleratedNetworking && !selectedVmSizeSupportsAN)\"\n            :mode=\"mode\"\n            :label=\"t('cluster.machineConfig.azure.acceleratedNetworking.label')\"\n          />\n          <Banner\n            v-if=\"!selectedVmSizeSupportsAN && value.acceleratedNetworking\"\n            color=\"error\"\n            :label=\"t('cluster.machineConfig.azure.size.selectedSizeAcceleratedNetworkingWarning')\"\n          />\n        </div>\n      </div>\n      <div class=\"row mt-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"value.vnet\"\n            :mode=\"mode\"\n            :label=\"t('cluster.machineConfig.azure.vnet.label')\"\n            :placeholder=\"t('cluster.machineConfig.azure.vnet.placeholder')\"\n            :disabled=\"disabled\"\n          />\n        </div>\n        <div class=\"col span-6 inline-banner-container\">\n          <h3><t k=\"cluster.machineConfig.azure.publicIpOptions.header\" /></h3>\n          <Checkbox\n            v-model=\"value.noPublicIp\"\n            :mode=\"mode\"\n            :label=\"t('cluster.machineConfig.azure.publicIpOptions.noPublic.label')\"\n          />\n          <Checkbox\n            v-model=\"value.staticPublicIp\"\n            :mode=\"mode\"\n            :label=\"t('cluster.machineConfig.azure.publicIpOptions.staticPublicIp.label')\"\n          />\n          <Checkbox\n            v-model=\"value.enablePublicIpStandardSku\"\n            :mode=\"mode\"\n            :label=\"t('cluster.machineConfig.azure.publicIpOptions.standardSKU.label')\"\n          />\n          <div\n            v-if=\"value.availabilityZone && (!value.staticPublicIp || !value.enablePublicIpStandardSku)\"\n            class=\"inline-error-banner\"\n          >\n            <Banner\n              v-if=\"!value.staticPublicIp && !value.enablePublicIpStandardSku\"\n              color=\"error\"\n              :label=\"t('cluster.machineConfig.azure.availabilityZone.publicIpAndSKUWarning')\"\n            />\n            <Banner\n              v-else-if=\"!value.staticPublicIp\"\n              color=\"error\"\n              :label=\"t('cluster.machineConfig.azure.availabilityZone.publicIpWarning')\"\n            />\n            <Banner\n              v-else\n              color=\"error\"\n              :label=\"t('cluster.machineConfig.azure.availabilityZone.standardSKUWarning')\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"row mt-20\">\n        <div class=\"col span-6\">\n          <Checkbox\n            v-model=\"value.usePrivateIp\"\n            :mode=\"mode\"\n            :label=\"t('cluster.machineConfig.azure.usePrivateIp.label')\"\n          />\n          <LabeledInput\n            v-model=\"value.privateIpAddress\"\n            :mode=\"mode\"\n            class=\"mt-10\"\n            :label=\"t('cluster.machineConfig.azure.privateIp.label')\"\n            :disabled=\"!value.usePrivateIp\"\n          />\n        </div>\n      </div>\n      <div class=\"row mt-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"value.nsg\"\n            :mode=\"mode\"\n            class=\"mt-10\"\n            :label=\"t('cluster.machineConfig.azure.nsg.label')\"\n            :tooltip=\"t('cluster.machineConfig.azure.nsg.help')\"\n            :disabled=\"disabled\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"value.dns\"\n            :mode=\"mode\"\n            class=\"mt-10\"\n            :label=\"t('cluster.machineConfig.azure.dns.label')\"\n            :tooltip=\"t('cluster.machineConfig.azure.dns.help')\"\n            :disabled=\"disabled\"\n          />\n        </div>\n      </div>\n      <hr class=\"mt-20 mb-20\">\n      <h2>{{ t('cluster.machineConfig.azure.sections.disks') }}</h2>\n      <div class=\"row mt-20 mb-20\">\n        <div class=\"col span-6\">\n          <LabeledSelect\n            v-model=\"value.storageType\"\n            :mode=\"mode\"\n            :options=\"storageTypes\"\n            :searchable=\"false\"\n            :required=\"true\"\n            :label=\"t('cluster.machineConfig.azure.storageType.label')\"\n            :disabled=\"disabled\"\n            option-key=\"value\"\n            option-label=\"name\"\n          />\n          <Banner\n            v-if=\"value.storageType === 'StandardSSD_LRS' && !value.managedDisks\"\n            color=\"error\"\n            :label=\"t('cluster.machineConfig.azure.storageType.warning')\"\n          />\n        </div>\n        <div class=\"col span-6 inline-banner-container\">\n          <Checkbox\n            v-model=\"value.managedDisks\"\n            :mode=\"mode\"\n            :label=\"t('cluster.machineConfig.azure.managedDisks.label')\"\n            :disabled=\"disabled\"\n          />\n          <Banner\n            v-if=\"value.availabilityZone && !value.managedDisks\"\n            color=\"error\"\n            :label=\"t('cluster.machineConfig.azure.availabilityZone.managedDisksWarning')\"\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"value.diskSize\"\n            :mode=\"mode\"\n            :label=\"t('cluster.machineConfig.azure.managedDisksSize.label')\"\n            :disabled=\"disabled\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"value.sshUser\"\n            :mode=\"mode\"\n            :label=\"t('cluster.machineConfig.azure.sshUser.label')\"\n            :disabled=\"disabled\"\n          />\n        </div>\n      </div>\n      <div class=\"row mt-20\">\n        <div class=\"col span-6\">\n          <ArrayList\n            v-model=\"value.openPort\"\n            table-class=\"fixed\"\n            :mode=\"mode\"\n            :title=\"t('cluster.machineConfig.azure.openPort.label')\"\n            :add-label=\"t('cluster.machineConfig.azure.openPort.add')\"\n            :show-protip=\"true\"\n            :protip=\"t('cluster.machineConfig.azure.openPort.help')\"\n            :disabled=\"disabled\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row mt-20\">\n        <div class=\"col span-12\">\n          <h3><t k=\"cluster.machineConfig.azure.tags.label\" /></h3>\n          <KeyValue\n            :value=\"tags\"\n            :mode=\"mode\"\n            :read-allowed=\"false\"\n            :label=\"t('cluster.machineConfig.amazonEc2.tagTitle')\"\n            :add-label=\"t('labels.addTag')\"\n            :initial-empty-row=\"true\"\n            :disabled=\"disabled\"\n            @input=\"updateTags\"\n          />\n        </div>\n      </div>\n    </portal>\n  </div>\n</template>\n\n<style scoped>\n.inline-banner-container{\n  position: relative;\n}\n.inline-error-banner {\n  position: absolute;\n  width:100%\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}