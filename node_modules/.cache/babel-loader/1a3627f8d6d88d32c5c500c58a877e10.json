{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--17-0!/home/ubuntu/suseconf/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/detail/__tests__/service.test.ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/detail/__tests__/service.test.ts","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwpmdW5jdGlvbiBvd25LZXlzKGUsIHIpIHsgdmFyIHQgPSBPYmplY3Qua2V5cyhlKTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIG8gPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpOyByICYmIChvID0gby5maWx0ZXIoZnVuY3Rpb24gKHIpIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSwgcikuZW51bWVyYWJsZTsgfSkpLCB0LnB1c2guYXBwbHkodCwgbyk7IH0gcmV0dXJuIHQ7IH0KZnVuY3Rpb24gX29iamVjdFNwcmVhZChlKSB7IGZvciAodmFyIHIgPSAxOyByIDwgYXJndW1lbnRzLmxlbmd0aDsgcisrKSB7IHZhciB0ID0gbnVsbCAhPSBhcmd1bWVudHNbcl0gPyBhcmd1bWVudHNbcl0gOiB7fTsgciAlIDIgPyBvd25LZXlzKE9iamVjdCh0KSwgITApLmZvckVhY2goZnVuY3Rpb24gKHIpIHsgX2RlZmluZVByb3BlcnR5KGUsIHIsIHRbcl0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnModCkpIDogb3duS2V5cyhPYmplY3QodCkpLmZvckVhY2goZnVuY3Rpb24gKHIpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIHIsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCwgcikpOyB9KTsgfSByZXR1cm4gZTsgfQppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgc2VydmljZSBmcm9tICdAc2hlbGwvZGV0YWlsL3NlcnZpY2UudnVlJzsKaW1wb3J0IHsgc2hhbGxvd01vdW50IH0gZnJvbSAnQHZ1ZS90ZXN0LXV0aWxzJzsKZGVzY3JpYmUoJ3ZpZXc6IHNlcnZpY2UnLCBmdW5jdGlvbiAoKSB7CiAgdmFyIG1vY2tTdG9yZSA9IHsKICAgIGdldHRlcnM6IHsKICAgICAgJ2NsdXN0ZXIvc2NoZW1hRm9yJzogZnVuY3Rpb24gY2x1c3Rlcl9zY2hlbWFGb3IoKSB7fSwKICAgICAgJ3R5cGUtbWFwL2hlYWRlcnNGb3InOiBqZXN0LmZuKCksCiAgICAgICdpMThuL3QnOiBmdW5jdGlvbiBpMThuX3QodGV4dCkgewogICAgICAgIHJldHVybiB0ZXh0OwogICAgICB9CiAgICB9CiAgfTsKICB2YXIgbW9ja3MgPSB7CiAgICAkc3RvcmU6IG1vY2tTdG9yZQogIH07CiAgaXQoJ3Nob3VsZCByZXR1cm4gZGVmYXVsdCBlbXB0eSBhcnJheSBvZiBwb3J0cyBpZiB0aGUgcG9ydHMgYXJlIG5vdCBjb25maWd1cmVkJywgZnVuY3Rpb24gKCkgewogICAgdmFyIHdyYXBwZXIgPSBzaGFsbG93TW91bnQoc2VydmljZSwgewogICAgICBtb2NrczogbW9ja3MsCiAgICAgIHByb3BzRGF0YTogewogICAgICAgIHZhbHVlOiB7CiAgICAgICAgICBzcGVjOiB7fSwKICAgICAgICAgIG1ldGFkYXRhOiB7fSwKICAgICAgICAgIHBvZHM6IFtdCiAgICAgICAgfQogICAgICB9CiAgICB9KTsKICAgIGV4cGVjdCh3cmFwcGVyLnZtLnBvcnRzKS50b1N0cmljdEVxdWFsKFtdKTsKICB9KTsKICBpdCgnc2hvdWxkIHJldHVybiBlbXB0eSBhcnJheSBvZiBwb3J0cyBpZiBwb3J0cyBhcmUgc2V0IHRvIGVtcHR5IGFycmF5JywgZnVuY3Rpb24gKCkgewogICAgdmFyIHdyYXBwZXIgPSBzaGFsbG93TW91bnQoc2VydmljZSwgewogICAgICBtb2NrczogbW9ja3MsCiAgICAgIHByb3BzRGF0YTogewogICAgICAgIHZhbHVlOiB7CiAgICAgICAgICBzcGVjOiB7CiAgICAgICAgICAgIHBvcnRzOiBbXQogICAgICAgICAgfSwKICAgICAgICAgIG1ldGFkYXRhOiB7fSwKICAgICAgICAgIHBvZHM6IFtdCiAgICAgICAgfQogICAgICB9CiAgICB9KTsKICAgIGV4cGVjdCh3cmFwcGVyLnZtLnBvcnRzKS50b1N0cmljdEVxdWFsKFtdKTsKICB9KTsKICBpdCgnc2hvdWxkIHJldHVybiB0aGUgY29ycmVjdCBhcnJheSBvZiBwb3J0cyBpZiB0aGUgcG9ydHMgYXJlIGNvbmZpZ3VyZWQnLCBmdW5jdGlvbiAoKSB7CiAgICB2YXIgcG9ydHMgPSBbewogICAgICBuYW1lOiAndGVzdDEnLAogICAgICBwb3J0OiA4MCwKICAgICAgcHJvdG9jb2w6ICdUQ1AnLAogICAgICB0YXJnZXRQb3J0OiA4MAogICAgfSwgewogICAgICBuYW1lOiAndGVzdDInLAogICAgICBwb3J0OiA4MSwKICAgICAgcHJvdG9jb2w6ICdUQ1AnLAogICAgICB0YXJnZXRQb3J0OiA4MQogICAgfV07CiAgICB2YXIgd3JhcHBlciA9IHNoYWxsb3dNb3VudChzZXJ2aWNlLCB7CiAgICAgIG1vY2tzOiBtb2NrcywKICAgICAgcHJvcHNEYXRhOiB7CiAgICAgICAgdmFsdWU6IHsKICAgICAgICAgIHNwZWM6IHsKICAgICAgICAgICAgcG9ydHM6IHBvcnRzCiAgICAgICAgICB9LAogICAgICAgICAgbWV0YWRhdGE6IHt9LAogICAgICAgICAgcG9kczogW10KICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogICAgZXhwZWN0KHdyYXBwZXIudm0ucG9ydHMpLnRvU3RyaWN0RXF1YWwocG9ydHMubWFwKGZ1bmN0aW9uIChwKSB7CiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHApLCB7fSwgewogICAgICAgIHB1YmxpY1BvcnRzOiBbXQogICAgICB9KTsKICAgIH0pKTsKICB9KTsKfSk7"},{"version":3,"names":["service","shallowMount","describe","mockStore","getters","cluster_schemaFor","jest","fn","i18n_t","text","mocks","$store","it","wrapper","propsData","value","spec","metadata","pods","expect","vm","ports","toStrictEqual","name","port","protocol","targetPort","map","p","_objectSpread","publicPorts"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/detail/__tests__/service.test.ts"],"sourcesContent":["import service from '@shell/detail/service.vue';\nimport { shallowMount } from '@vue/test-utils';\n\ndescribe('view: service', () => {\n  const mockStore = {\n    getters: {\n      'cluster/schemaFor':   () => {},\n      'type-map/headersFor': jest.fn(),\n      'i18n/t':              (text: string) => text,\n    },\n  };\n\n  const mocks = { $store: mockStore };\n\n  it('should return default empty array of ports if the ports are not configured', () => {\n    const wrapper = shallowMount(service, {\n      mocks,\n      propsData: {\n        value: {\n          spec: {}, metadata: {}, pods: []\n        }\n      },\n    });\n\n    expect(wrapper.vm.ports).toStrictEqual([]);\n  });\n\n  it('should return empty array of ports if ports are set to empty array', () => {\n    const wrapper = shallowMount(service, {\n      mocks,\n      propsData: {\n        value: {\n          spec: { ports: [] }, metadata: {}, pods: []\n        }\n      },\n    });\n\n    expect(wrapper.vm.ports).toStrictEqual([]);\n  });\n\n  it('should return the correct array of ports if the ports are configured', () => {\n    const ports = [\n      {\n        name: 'test1', port: 80, protocol: 'TCP', targetPort: 80\n      },\n      {\n        name: 'test2', port: 81, protocol: 'TCP', targetPort: 81\n      }\n    ];\n\n    const wrapper = shallowMount(service, {\n      mocks,\n      propsData: {\n        value: {\n          spec: { ports }, metadata: {}, pods: []\n        }\n      },\n    });\n\n    expect(wrapper.vm.ports).toStrictEqual(ports.map((p) => ({ ...p, publicPorts: [] })));\n  });\n});\n"],"mappings":";;;;;;;;;;;AAAA,OAAOA,OAAO,MAAM,2BAA2B;AAC/C,SAASC,YAAY,QAAQ,iBAAiB;AAE9CC,QAAQ,CAAC,eAAe,EAAE,YAAK;EAC7B,IAAMC,SAAS,GAAG;IAChBC,OAAO,EAAE;MACP,mBAAmB,EAAI,SAAvBC,iBAAmBA,CAAA,EAAS,CAAE,CAAC;MAC/B,qBAAqB,EAAEC,IAAI,CAACC,EAAE,EAAE;MAChC,QAAQ,EAAe,SAAvBC,MAAQA,CAAgBC,IAAY;QAAA,OAAKA,IAAI;MAAA;;GAEhD;EAED,IAAMC,KAAK,GAAG;IAAEC,MAAM,EAAER;EAAS,CAAE;EAEnCS,EAAE,CAAC,4EAA4E,EAAE,YAAK;IACpF,IAAMC,OAAO,GAAGZ,YAAY,CAACD,OAAO,EAAE;MACpCU,KAAK,EAALA,KAAK;MACLI,SAAS,EAAE;QACTC,KAAK,EAAE;UACLC,IAAI,EAAE,EAAE;UAAEC,QAAQ,EAAE,EAAE;UAAEC,IAAI,EAAE;;;KAGnC,CAAC;IAEFC,MAAM,CAACN,OAAO,CAACO,EAAE,CAACC,KAAK,CAAC,CAACC,aAAa,CAAC,EAAE,CAAC;EAC5C,CAAC,CAAC;EAEFV,EAAE,CAAC,oEAAoE,EAAE,YAAK;IAC5E,IAAMC,OAAO,GAAGZ,YAAY,CAACD,OAAO,EAAE;MACpCU,KAAK,EAALA,KAAK;MACLI,SAAS,EAAE;QACTC,KAAK,EAAE;UACLC,IAAI,EAAE;YAAEK,KAAK,EAAE;UAAE,CAAE;UAAEJ,QAAQ,EAAE,EAAE;UAAEC,IAAI,EAAE;;;KAG9C,CAAC;IAEFC,MAAM,CAACN,OAAO,CAACO,EAAE,CAACC,KAAK,CAAC,CAACC,aAAa,CAAC,EAAE,CAAC;EAC5C,CAAC,CAAC;EAEFV,EAAE,CAAC,sEAAsE,EAAE,YAAK;IAC9E,IAAMS,KAAK,GAAG,CACZ;MACEE,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE,KAAK;MAAEC,UAAU,EAAE;KACvD,EACD;MACEH,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE,KAAK;MAAEC,UAAU,EAAE;KACvD,CACF;IAED,IAAMb,OAAO,GAAGZ,YAAY,CAACD,OAAO,EAAE;MACpCU,KAAK,EAALA,KAAK;MACLI,SAAS,EAAE;QACTC,KAAK,EAAE;UACLC,IAAI,EAAE;YAAEK,KAAK,EAALA;UAAK,CAAE;UAAEJ,QAAQ,EAAE,EAAE;UAAEC,IAAI,EAAE;;;KAG1C,CAAC;IAEFC,MAAM,CAACN,OAAO,CAACO,EAAE,CAACC,KAAK,CAAC,CAACC,aAAa,CAACD,KAAK,CAACM,GAAG,CAAC,UAACC,CAAC;MAAA,OAAAC,aAAA,CAAAA,aAAA,KAAWD,CAAC;QAAEE,WAAW,EAAE;MAAE;IAAA,CAAG,CAAC,CAAC;EACvF,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}]}