{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/list/fleet.cattle.io.bundle.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/list/fleet.cattle.io.bundle.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICIvaG9tZS91YnVudHUvc3VzZWNvbmYvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgeyBGTEVFVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgeyBCYW5uZXIgfSBmcm9tICdAY29tcG9uZW50cy9CYW5uZXInOwppbXBvcnQgUmVzb3VyY2VUYWJsZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9SZXNvdXJjZVRhYmxlJzsKaW1wb3J0IFJlc291cmNlRmV0Y2ggZnJvbSAnQHNoZWxsL21peGlucy9yZXNvdXJjZS1mZXRjaCc7CmltcG9ydCB7IEFHRSwgU1RBVEUsIE5BTUUgfSBmcm9tICdAc2hlbGwvY29uZmlnL3RhYmxlLWhlYWRlcnMnOwppbXBvcnQgeyBpc0hhcnZlc3RlckNsdXN0ZXIgfSBmcm9tICdAc2hlbGwvdXRpbHMvY2x1c3Rlcic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTGlzdEJ1bmRsZScsCiAgY29tcG9uZW50czogewogICAgQmFubmVyOiBCYW5uZXIsCiAgICBSZXNvdXJjZVRhYmxlOiBSZXNvdXJjZVRhYmxlCiAgfSwKICBtaXhpbnM6IFtSZXNvdXJjZUZldGNoXSwKICBwcm9wczogewogICAgcmVzb3VyY2U6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHNjaGVtYTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgdXNlUXVlcnlQYXJhbXNGb3JTaW1wbGVGaWx0ZXJpbmc6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIGZldGNoOiBmdW5jdGlvbiBmZXRjaCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy4kZmV0Y2hUeXBlKF90aGlzLnJlc291cmNlKTsKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgaWYgKCFfdGhpcy4kc3RvcmUuZ2V0dGVyc1snbWFuYWdlbWVudC9zY2hlbWFGb3InXShGTEVFVC5DTFVTVEVSKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICByZXR1cm4gX3RoaXMuJHN0b3JlLmdldHRlcnNbJ21hbmFnZW1lbnQvYWxsJ10oRkxFRVQuQ0xVU1RFUik7CiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIF90aGlzLmFsbEZsZWV0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFsbEZsZWV0OiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBoYXJ2ZXN0ZXJDbHVzdGVyczogZnVuY3Rpb24gaGFydmVzdGVyQ2x1c3RlcnMoKSB7CiAgICAgIHZhciBoYXJ2ZXN0ZXIgPSB7fTsKICAgICAgdGhpcy5hbGxGbGVldC5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7CiAgICAgICAgaWYgKGlzSGFydmVzdGVyQ2x1c3RlcihjKSkgewogICAgICAgICAgaGFydmVzdGVyW2MubWV0YWRhdGEubmFtZV0gPSBjOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiBoYXJ2ZXN0ZXI7CiAgICB9LAogICAgYnVuZGxlczogZnVuY3Rpb24gYnVuZGxlcygpIHsKICAgICAgdmFyIGhhcnZlc3RlciA9IHRoaXMuaGFydmVzdGVyQ2x1c3RlcnM7CiAgICAgIHJldHVybiB0aGlzLnJvd3MuZmlsdGVyKGZ1bmN0aW9uIChidW5kbGUpIHsKICAgICAgICB2YXIgX2J1bmRsZSRzcGVjOwogICAgICAgIHZhciB0YXJnZXRzID0gKChfYnVuZGxlJHNwZWMgPSBidW5kbGUuc3BlYykgPT09IG51bGwgfHwgX2J1bmRsZSRzcGVjID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYnVuZGxlJHNwZWMudGFyZ2V0cykgfHwgW107CgogICAgICAgIC8vIEZpbHRlciBvdXQgYW55IGJ1bmRsZSB0aGF0IGhhcyBvbmUgdGFyZ2V0IHdob3NlIGNsdXN0ZXIgaXMgYSBoYXJ2ZXN0ZXIgY2x1c3RlcgogICAgICAgIGlmICh0YXJnZXRzLmxlbmd0aCA9PT0gMSkgewogICAgICAgICAgcmV0dXJuICFoYXJ2ZXN0ZXJbdGFyZ2V0c1swXS5jbHVzdGVyTmFtZV07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9KTsKICAgIH0sCiAgICBoaWRkZW46IGZ1bmN0aW9uIGhpZGRlbigpIHsKICAgICAgcmV0dXJuIHRoaXMucm93cy5sZW5ndGggLSB0aGlzLmJ1bmRsZXMubGVuZ3RoOwogICAgfSwKICAgIGhlYWRlcnM6IGZ1bmN0aW9uIGhlYWRlcnMoKSB7CiAgICAgIHZhciBvdXQgPSBbU1RBVEUsIE5BTUUsIHsKICAgICAgICBuYW1lOiAnZGVwbG95bWVudHNSZWFkeScsCiAgICAgICAgbGFiZWxLZXk6ICd0YWJsZUhlYWRlcnMuYnVuZGxlRGVwbG95bWVudHNSZWFkeScsCiAgICAgICAgdmFsdWU6ICdzdGF0dXMuZGlzcGxheS5yZWFkeUNsdXN0ZXJzJywKICAgICAgICBzb3J0OiAnc3RhdHVzLmRpc3BsYXkucmVhZHlDbHVzdGVycycsCiAgICAgICAgc2VhcmNoOiBbJ3N0YXR1cy5zdW1tYXJ5LnJlYWR5JywgJ3N0YXR1cy5zdW1tYXJ5LmRlc2lyZWRSZWFkeSddCiAgICAgIH0sIEFHRV07CiAgICAgIHJldHVybiBvdXQ7CiAgICB9CiAgfSwKICAvLyBvdmVycmlkZSB3aXRoIHJlbGV2YW50IGluZm8gZm9yIHRoZSBsb2FkaW5nIGluZGljYXRvciBzaW5jZSB0aGlzIGRvZXNuJ3QgdXNlIGl0J3Mgb3duIG1hc3RoZWFkCiAgJGxvYWRpbmdSZXNvdXJjZXM6IGZ1bmN0aW9uICRsb2FkaW5nUmVzb3VyY2VzKCkgewogICAgLy8gcmVzdWx0cyBhcmUgZmlsdGVyZWQgc28gd2Ugd291bGRuJ3QgZ2V0IHRoZSBjb3JyZWN0IGNvdW50IG9uIGluZGljYXRvci4uLgogICAgcmV0dXJuIHsKICAgICAgbG9hZEluZGV0ZXJtaW5hdGU6IHRydWUKICAgIH07CiAgfQp9Ow=="},{"version":3,"names":["FLEET","Banner","ResourceTable","ResourceFetch","AGE","STATE","NAME","isHarvesterCluster","name","components","mixins","props","resource","type","String","required","schema","Object","useQueryParamsForSimpleFiltering","Boolean","default","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$fetchType","$store","getters","CLUSTER","allFleet","sent","stop","data","computed","harvesterClusters","harvester","forEach","c","metadata","bundles","rows","filter","bundle","_bundle$spec","targets","spec","length","clusterName","hidden","headers","out","labelKey","value","sort","search","$loadingResources","loadIndeterminate"],"sources":["node_modules/@rancher/shell/list/fleet.cattle.io.bundle.vue"],"sourcesContent":["<script>\nimport { FLEET } from '@shell/config/types';\nimport { Banner } from '@components/Banner';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\nimport {\n  AGE,\n  STATE,\n  NAME,\n} from '@shell/config/table-headers';\nimport { isHarvesterCluster } from '@shell/utils/cluster';\n\nexport default {\n  name:       'ListBundle',\n  components: { Banner, ResourceTable },\n  mixins:     [ResourceFetch],\n  props:      {\n    resource: {\n      type:     String,\n      required: true,\n    },\n    schema: {\n      type:     Object,\n      required: true,\n    },\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  async fetch() {\n    await this.$fetchType(this.resource);\n    if (this.$store.getters['management/schemaFor']( FLEET.CLUSTER )) {\n      this.allFleet = await this.$store.getters['management/all'](FLEET.CLUSTER);\n    }\n  },\n\n  data() {\n    return { allFleet: [] };\n  },\n\n  computed: {\n    harvesterClusters() {\n      const harvester = {};\n\n      this.allFleet.forEach((c) => {\n        if (isHarvesterCluster(c)) {\n          harvester[c.metadata.name] = c;\n        }\n      });\n\n      return harvester;\n    },\n\n    bundles() {\n      const harvester = this.harvesterClusters;\n\n      return this.rows.filter((bundle) => {\n        const targets = bundle.spec?.targets || [];\n\n        // Filter out any bundle that has one target whose cluster is a harvester cluster\n        if (targets.length === 1) {\n          return !harvester[targets[0].clusterName];\n        }\n\n        return true;\n      });\n    },\n\n    hidden() {\n      return this.rows.length - this.bundles.length;\n    },\n\n    headers() {\n      const out = [\n        STATE,\n        NAME,\n        {\n          name:     'deploymentsReady',\n          labelKey: 'tableHeaders.bundleDeploymentsReady',\n          value:    'status.display.readyClusters',\n          sort:     'status.display.readyClusters',\n          search:   ['status.summary.ready', 'status.summary.desiredReady'],\n        },\n        AGE\n      ];\n\n      return out;\n    },\n  },\n\n  // override with relevant info for the loading indicator since this doesn't use it's own masthead\n  $loadingResources() {\n    // results are filtered so we wouldn't get the correct count on indicator...\n    return { loadIndeterminate: true };\n  },\n};\n</script>\n\n<template>\n  <div>\n    <Banner\n      v-if=\"hidden\"\n      color=\"info\"\n      :label=\"t('fleet.bundles.harvester', {count: hidden} )\"\n    />\n    <ResourceTable\n      :schema=\"schema\"\n      :headers=\"headers\"\n      :rows=\"bundles\"\n      :loading=\"loading\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n    >\n      <template #cell:deploymentsReady=\"{row}\">\n        <span\n          v-if=\"row.status && (row.status.summary.desiredReady !== row.status.summary.ready)\"\n          class=\"text-warning\"\n        >\n          {{ row.status.summary.ready }}/{{ row.status.summary.desiredReady }}</span>\n        <span v-else-if=\"row.status\">{{ row.status.summary.desiredReady }}</span>\n        <span v-else>-</span>\n      </template>\n    </ResourceTable>\n  </div>\n</template>\n"],"mappings":";;;;;;;AACA,SAAAA,KAAA;AACA,SAAAC,MAAA;AACA,OAAAC,aAAA;AACA,OAAAC,aAAA;AACA,SACAC,GAAA,EACAC,KAAA,EACAC,IAAA,QACA;AACA,SAAAC,kBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAR,MAAA,EAAAA,MAAA;IAAAC,aAAA,EAAAA;EAAA;EACAQ,MAAA,GAAAP,aAAA;EACAQ,KAAA;IACAC,QAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,MAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,QAAA;IACA;IACAG,gCAAA;MACAL,IAAA,EAAAM,OAAA;MACAC,OAAA;IACA;EACA;EAEAC,KAAA,WAAAA,MAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAAC,QAAA;MAAA,OAAAF,mBAAA,CAAAG,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OACAT,KAAA,CAAAU,UAAA,CAAAV,KAAA,CAAAV,QAAA;UAAA;YAAA,KACAU,KAAA,CAAAW,MAAA,CAAAC,OAAA,yBAAAlC,KAAA,CAAAmC,OAAA;cAAAN,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OACAT,KAAA,CAAAW,MAAA,CAAAC,OAAA,mBAAAlC,KAAA,CAAAmC,OAAA;UAAA;YAAAb,KAAA,CAAAc,QAAA,GAAAP,QAAA,CAAAQ,IAAA;UAAA;UAAA;YAAA,OAAAR,QAAA,CAAAS,IAAA;QAAA;MAAA,GAAAZ,OAAA;IAAA;EAEA;EAEAa,IAAA,WAAAA,KAAA;IACA;MAAAH,QAAA;IAAA;EACA;EAEAI,QAAA;IACAC,iBAAA,WAAAA,kBAAA;MACA,IAAAC,SAAA;MAEA,KAAAN,QAAA,CAAAO,OAAA,WAAAC,CAAA;QACA,IAAArC,kBAAA,CAAAqC,CAAA;UACAF,SAAA,CAAAE,CAAA,CAAAC,QAAA,CAAArC,IAAA,IAAAoC,CAAA;QACA;MACA;MAEA,OAAAF,SAAA;IACA;IAEAI,OAAA,WAAAA,QAAA;MACA,IAAAJ,SAAA,QAAAD,iBAAA;MAEA,YAAAM,IAAA,CAAAC,MAAA,WAAAC,MAAA;QAAA,IAAAC,YAAA;QACA,IAAAC,OAAA,KAAAD,YAAA,GAAAD,MAAA,CAAAG,IAAA,cAAAF,YAAA,uBAAAA,YAAA,CAAAC,OAAA;;QAEA;QACA,IAAAA,OAAA,CAAAE,MAAA;UACA,QAAAX,SAAA,CAAAS,OAAA,IAAAG,WAAA;QACA;QAEA;MACA;IACA;IAEAC,MAAA,WAAAA,OAAA;MACA,YAAAR,IAAA,CAAAM,MAAA,QAAAP,OAAA,CAAAO,MAAA;IACA;IAEAG,OAAA,WAAAA,QAAA;MACA,IAAAC,GAAA,IACApD,KAAA,EACAC,IAAA,EACA;QACAE,IAAA;QACAkD,QAAA;QACAC,KAAA;QACAC,IAAA;QACAC,MAAA;MACA,GACAzD,GAAA,CACA;MAEA,OAAAqD,GAAA;IACA;EACA;EAEA;EACAK,iBAAA,WAAAA,kBAAA;IACA;IACA;MAAAC,iBAAA;IAAA;EACA;AACA","ignoreList":[]}]}