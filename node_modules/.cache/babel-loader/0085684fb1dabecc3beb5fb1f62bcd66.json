{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/form/ArrayList.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/form/ArrayList.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfdHlwZW9mIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3R5cGVvZiI7CmZ1bmN0aW9uIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHIsIGUpIHsgdmFyIHQgPSAidW5kZWZpbmVkIiAhPSB0eXBlb2YgU3ltYm9sICYmIHJbU3ltYm9sLml0ZXJhdG9yXSB8fCByWyJAQGl0ZXJhdG9yIl07IGlmICghdCkgeyBpZiAoQXJyYXkuaXNBcnJheShyKSB8fCAodCA9IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShyKSkgfHwgZSAmJiByICYmICJudW1iZXIiID09IHR5cGVvZiByLmxlbmd0aCkgeyB0ICYmIChyID0gdCk7IHZhciBfbiA9IDAsIEYgPSBmdW5jdGlvbiBGKCkge307IHJldHVybiB7IHM6IEYsIG46IGZ1bmN0aW9uIG4oKSB7IHJldHVybiBfbiA+PSByLmxlbmd0aCA/IHsgZG9uZTogITAgfSA6IHsgZG9uZTogITEsIHZhbHVlOiByW19uKytdIH07IH0sIGU6IGZ1bmN0aW9uIGUocikgeyB0aHJvdyByOyB9LCBmOiBGIH07IH0gdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGl0ZXJhdGUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpOyB9IHZhciBvLCBhID0gITAsIHUgPSAhMTsgcmV0dXJuIHsgczogZnVuY3Rpb24gcygpIHsgdCA9IHQuY2FsbChyKTsgfSwgbjogZnVuY3Rpb24gbigpIHsgdmFyIHIgPSB0Lm5leHQoKTsgcmV0dXJuIGEgPSByLmRvbmUsIHI7IH0sIGU6IGZ1bmN0aW9uIGUocikgeyB1ID0gITAsIG8gPSByOyB9LCBmOiBmdW5jdGlvbiBmKCkgeyB0cnkgeyBhIHx8IG51bGwgPT0gdC5yZXR1cm4gfHwgdC5yZXR1cm4oKTsgfSBmaW5hbGx5IHsgaWYgKHUpIHRocm93IG87IH0gfSB9OyB9CmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShyLCBhKSB7IGlmIChyKSB7IGlmICgic3RyaW5nIiA9PSB0eXBlb2YgcikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KHIsIGEpOyB2YXIgdCA9IHt9LnRvU3RyaW5nLmNhbGwocikuc2xpY2UoOCwgLTEpOyByZXR1cm4gIk9iamVjdCIgPT09IHQgJiYgci5jb25zdHJ1Y3RvciAmJiAodCA9IHIuY29uc3RydWN0b3IubmFtZSksICJNYXAiID09PSB0IHx8ICJTZXQiID09PSB0ID8gQXJyYXkuZnJvbShyKSA6ICJBcmd1bWVudHMiID09PSB0IHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KHQpID8gX2FycmF5TGlrZVRvQXJyYXkociwgYSkgOiB2b2lkIDA7IH0gfQpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShyLCBhKSB7IChudWxsID09IGEgfHwgYSA+IHIubGVuZ3RoKSAmJiAoYSA9IHIubGVuZ3RoKTsgZm9yICh2YXIgZSA9IDAsIG4gPSBBcnJheShhKTsgZSA8IGE7IGUrKykgbltlXSA9IHJbZV07IHJldHVybiBuOyB9CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb20uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbS5qcyI7CmltcG9ydCBkZWJvdW5jZSBmcm9tICdsb2Rhc2gvZGVib3VuY2UnOwppbXBvcnQgeyBfRURJVCwgX1ZJRVcgfSBmcm9tICdAc2hlbGwvY29uZmlnL3F1ZXJ5LXBhcmFtcyc7CmltcG9ydCB7IHJlbW92ZUF0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2FycmF5JzsKaW1wb3J0IHsgVGV4dEFyZWFBdXRvR3JvdyB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vVGV4dEFyZWEnOwppbXBvcnQgeyBjbG9uZSB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwppbXBvcnQgeyBMYWJlbGVkSW5wdXQgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0xhYmVsZWRJbnB1dCc7CnZhciBERUZBVUxUX1BST1RJUCA9ICdUaXA6IFBhc3RlIGxpbmVzIGludG8gYW55IGxpc3QgZmllbGQgZm9yIGVhc3kgYnVsayBlbnRyeSc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBUZXh0QXJlYUF1dG9Hcm93OiBUZXh0QXJlYUF1dG9Hcm93LAogICAgTGFiZWxlZElucHV0OiBMYWJlbGVkSW5wdXQKICB9LAogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIG1vZGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBfRURJVAogICAgfSwKICAgIGluaXRpYWxFbXB0eVJvdzogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIHRpdGxlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBwcm90aXA6IHsKICAgICAgdHlwZTogW1N0cmluZywgQm9vbGVhbl0sCiAgICAgIGRlZmF1bHQ6IERFRkFVTFRfUFJPVElQCiAgICB9LAogICAgc2hvd0hlYWRlcjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIHZhbHVlTGFiZWw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnVmFsdWUnCiAgICB9LAogICAgdmFsdWVQbGFjZWhvbGRlcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdlLmcuIGJhcicKICAgIH0sCiAgICB2YWx1ZU11bHRpbGluZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGFkZExhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ2kxOG4vdCddKCdnZW5lcmljLmFkZCcpOwogICAgICB9CiAgICB9LAogICAgYWRkQWxsb3dlZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgcmVtb3ZlTGFiZWw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1snaTE4bi90J10oJ2dlbmVyaWMucmVtb3ZlJyk7CiAgICAgIH0KICAgIH0sCiAgICByZW1vdmVBbGxvd2VkOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICBkZWZhdWx0QWRkVmFsdWU6IHsKICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyLCBPYmplY3QsIEFycmF5XSwKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBsb2FkaW5nOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgZGlzYWJsZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBydWxlczogewogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0sCiAgICAgIHR5cGU6IEFycmF5LAogICAgICAvLyB3ZSBvbmx5IHdhbnQgZnVuY3Rpb25zIGluIHRoZSBydWxlcyBhcnJheQogICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uIHZhbGlkYXRvcihydWxlcykgewogICAgICAgIHJldHVybiBydWxlcy5ldmVyeShmdW5jdGlvbiAocnVsZSkgewogICAgICAgICAgcmV0dXJuIFsnZnVuY3Rpb24nXS5pbmNsdWRlcyhfdHlwZW9mKHJ1bGUpKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBpbnB1dCA9ICh0aGlzLnZhbHVlIHx8IFtdKS5zbGljZSgpOwogICAgdmFyIHJvd3MgPSBbXTsKICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihpbnB1dCksCiAgICAgIF9zdGVwOwogICAgdHJ5IHsKICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICB2YXIgX3ZhbHVlID0gX3N0ZXAudmFsdWU7CiAgICAgICAgcm93cy5wdXNoKHsKICAgICAgICAgIHZhbHVlOiBfdmFsdWUKICAgICAgICB9KTsKICAgICAgfQogICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICB9IGZpbmFsbHkgewogICAgICBfaXRlcmF0b3IuZigpOwogICAgfQogICAgaWYgKCFyb3dzLmxlbmd0aCAmJiB0aGlzLmluaXRpYWxFbXB0eVJvdykgewogICAgICB2YXIgdmFsdWUgPSB0aGlzLmRlZmF1bHRBZGRWYWx1ZSA/IGNsb25lKHRoaXMuZGVmYXVsdEFkZFZhbHVlKSA6ICcnOwogICAgICByb3dzLnB1c2goewogICAgICAgIHZhbHVlOiB2YWx1ZQogICAgICB9KTsKICAgIH0KICAgIHJldHVybiB7CiAgICAgIHJvd3M6IHJvd3MsCiAgICAgIGxhc3RVcGRhdGVXYXNGcm9tVmFsdWU6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlzVmlldzogZnVuY3Rpb24gaXNWaWV3KCkgewogICAgICByZXR1cm4gdGhpcy5tb2RlID09PSBfVklFVzsKICAgIH0sCiAgICBzaG93QWRkOiBmdW5jdGlvbiBzaG93QWRkKCkgewogICAgICByZXR1cm4gdGhpcy5hZGRBbGxvd2VkOwogICAgfSwKICAgIHNob3dSZW1vdmU6IGZ1bmN0aW9uIHNob3dSZW1vdmUoKSB7CiAgICAgIHJldHVybiB0aGlzLnJlbW92ZUFsbG93ZWQ7CiAgICB9LAogICAgaXNEZWZhdWx0UHJvdGlwOiBmdW5jdGlvbiBpc0RlZmF1bHRQcm90aXAoKSB7CiAgICAgIHJldHVybiB0aGlzLnByb3RpcCA9PT0gREVGQVVMVF9QUk9USVA7CiAgICB9LAogICAgc2hvd1Byb3RpcDogZnVuY3Rpb24gc2hvd1Byb3RpcCgpIHsKICAgICAgaWYgKHRoaXMucHJvdGlwICYmICF0aGlzLmlzRGVmYXVsdFByb3RpcCkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICAgIHJldHVybiAhdGhpcy52YWx1ZU11bHRpbGluZSAmJiB0aGlzLnByb3RpcDsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUoKSB7CiAgICAgIHRoaXMubGFzdFVwZGF0ZVdhc0Zyb21WYWx1ZSA9IHRydWU7CiAgICAgIHRoaXMucm93cyA9ICh0aGlzLnZhbHVlIHx8IFtdKS5tYXAoZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgdmFsdWU6IHYKICAgICAgICB9OwogICAgICB9KTsKICAgIH0sCiAgICByb3dzOiB7CiAgICAgIGRlZXA6IHRydWUsCiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIobmV3VmFsdWUsIG9sZFZhbHVlKSB7CiAgICAgICAgLy8gbGFzdFVwZGF0ZVdhc0Zyb21WYWx1ZSBpcyB1c2VkIHRvIGJyZWFrIGEgY3ljbGUgd2hlcmUgd2hlbiByb3dzIGFyZSB1cGRhdGVkCiAgICAgICAgLy8gdGhpcyB3YXMgY2FsbGVkIHdoaWNoIHRoZW4gZm9yY2VkIHJvd3MgdG8gdXBkYXRlZCBhZ2FpbgogICAgICAgIGlmICghdGhpcy5sYXN0VXBkYXRlV2FzRnJvbVZhbHVlKSB7CiAgICAgICAgICB0aGlzLnF1ZXVlVXBkYXRlKCk7CiAgICAgICAgfQogICAgICAgIHRoaXMubGFzdFVwZGF0ZVdhc0Zyb21WYWx1ZSA9IGZhbHNlOwogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5xdWV1ZVVwZGF0ZSA9IGRlYm91bmNlKHRoaXMudXBkYXRlLCA1MCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZGQ6IGZ1bmN0aW9uIGFkZCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgdGhpcy5yb3dzLnB1c2goewogICAgICAgIHZhbHVlOiBjbG9uZSh0aGlzLmRlZmF1bHRBZGRWYWx1ZSkKICAgICAgfSk7CiAgICAgIGlmICh0aGlzLmRlZmF1bHRBZGRWYWx1ZSkgewogICAgICAgIHRoaXMucXVldWVVcGRhdGUoKTsKICAgICAgfQogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGlucHV0cyA9IF90aGlzLiRyZWZzLnZhbHVlOwogICAgICAgIGlmIChpbnB1dHMgJiYgaW5wdXRzLmxlbmd0aCA+IDApIHsKICAgICAgICAgIGlucHV0c1tpbnB1dHMubGVuZ3RoIC0gMV0uZm9jdXMoKTsKICAgICAgICB9CiAgICAgICAgX3RoaXMuJGVtaXQoJ2FkZCcpOwogICAgICB9KTsKICAgIH0sCiAgICAvKioKICAgICAqIFJlbW92ZSBpdGVtIGFuZCBlbWl0cyByZW1vdmVkIHJvdyBhbmQgaXRzIG93biBpbmRleCB2YWx1ZQogICAgICovCiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShyb3csIGluZGV4KSB7CiAgICAgIHRoaXMuJGVtaXQoJ3JlbW92ZScsIHsKICAgICAgICByb3c6IHJvdywKICAgICAgICBpbmRleDogaW5kZXgKICAgICAgfSk7CiAgICAgIHJlbW92ZUF0KHRoaXMucm93cywgaW5kZXgpOwogICAgICB0aGlzLnF1ZXVlVXBkYXRlKCk7CiAgICB9LAogICAgLyoqCiAgICAgKiBDbGVhbnVwIHJvd3MgYW5kIGVtaXQgaW5wdXQKICAgICAqLwogICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7CiAgICAgIGlmICh0aGlzLmlzVmlldykgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB2YXIgb3V0ID0gW107CiAgICAgIHZhciBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5yb3dzKSwKICAgICAgICBfc3RlcDI7CiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IyLnMoKTsgIShfc3RlcDIgPSBfaXRlcmF0b3IyLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciByb3cgPSBfc3RlcDIudmFsdWU7CiAgICAgICAgICB2YXIgdHJpbSA9ICF0aGlzLnZhbHVlTXVsdGlsaW5lICYmIHR5cGVvZiByb3cudmFsdWUgPT09ICdzdHJpbmcnOwogICAgICAgICAgdmFyIHZhbHVlID0gdHJpbSA/IHJvdy52YWx1ZS50cmltKCkgOiByb3cudmFsdWU7CiAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAndW5kZWZpbmVkJykgewogICAgICAgICAgICBvdXQucHVzaCh2YWx1ZSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3IyLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IyLmYoKTsKICAgICAgfQogICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIG91dCk7CiAgICB9LAogICAgLyoqCiAgICAgKiBIYW5kbGUgcGFzdGUgZXZlbnQsIGUuZy4gc3BsaXQgbXVsdGlwbGUgbGluZXMgaW4gcm93cwogICAgICovCiAgICBvblBhc3RlOiBmdW5jdGlvbiBvblBhc3RlKGluZGV4LCBldmVudCkgewogICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB2YXIgdGV4dCA9IGV2ZW50LmNsaXBib2FyZERhdGEuZ2V0RGF0YSgndGV4dC9wbGFpbicpOwogICAgICBpZiAodGhpcy52YWx1ZU11bHRpbGluZSkgewogICAgICAgIC8vIEFsbG93IHRvIHBhc3RlIG11bHRpcGxlIGxpbmVzCiAgICAgICAgdGhpcy5yb3dzW2luZGV4XS52YWx1ZSA9IHRleHQ7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIF90aGlzJHJvd3M7CiAgICAgICAgLy8gUHJldmVudCB0byBwYXN0ZSB0aGUgdmFsdWUgYW5kIGVtaXQgdGV4dCBpbiBtdWx0aXBsZSByb3dzCiAgICAgICAgdmFyIHNwbGl0ID0gdGV4dC5zcGxpdCgnXG4nKS5tYXAoZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICB2YWx1ZTogdmFsdWUKICAgICAgICAgIH07CiAgICAgICAgfSk7CiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAoX3RoaXMkcm93cyA9IHRoaXMucm93cykuc3BsaWNlLmFwcGx5KF90aGlzJHJvd3MsIFtpbmRleCwgMV0uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShzcGxpdCkpKTsKICAgICAgfQogICAgICB0aGlzLnVwZGF0ZSgpOwogICAgfQogIH0KfTs="},{"version":3,"names":["debounce","_EDIT","_VIEW","removeAt","TextAreaAutoGrow","clone","LabeledInput","DEFAULT_PROTIP","components","props","value","type","Array","default","mode","String","initialEmptyRow","Boolean","title","protip","showHeader","valueLabel","valuePlaceholder","valueMultiline","addLabel","_default","$store","getters","addAllowed","removeLabel","removeAllowed","defaultAddValue","Number","Object","loading","disabled","rules","validator","every","rule","includes","_typeof","data","input","slice","rows","_iterator","_createForOfIteratorHelper","_step","s","n","done","push","err","e","f","length","lastUpdateWasFromValue","computed","isView","showAdd","showRemove","isDefaultProtip","showProtip","watch","map","v","deep","handler","newValue","oldValue","queueUpdate","created","update","methods","add","_this","$nextTick","inputs","$refs","focus","$emit","remove","row","index","out","_iterator2","_step2","trim","onPaste","event","preventDefault","text","clipboardData","getData","_this$rows","split","splice","apply","concat","_toConsumableArray"],"sources":["node_modules/@rancher/shell/components/form/ArrayList.vue"],"sourcesContent":["<script>\nimport debounce from 'lodash/debounce';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport { removeAt } from '@shell/utils/array';\nimport { TextAreaAutoGrow } from '@components/Form/TextArea';\nimport { clone } from '@shell/utils/object';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nconst DEFAULT_PROTIP = 'Tip: Paste lines into any list field for easy bulk entry';\n\nexport default {\n  components: { TextAreaAutoGrow, LabeledInput },\n  props:      {\n    value: {\n      type:    Array,\n      default: null,\n    },\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n    initialEmptyRow: {\n      type:    Boolean,\n      default: false,\n    },\n    title: {\n      type:    String,\n      default: ''\n    },\n    protip: {\n      type:    [String, Boolean],\n      default: DEFAULT_PROTIP,\n    },\n    showHeader: {\n      type:    Boolean,\n      default: false,\n    },\n    valueLabel: {\n      type:    String,\n      default: 'Value',\n    },\n    valuePlaceholder: {\n      type:    String,\n      default: 'e.g. bar'\n    },\n    valueMultiline: {\n      type:    Boolean,\n      default: false,\n    },\n    addLabel: {\n      type: String,\n      default() {\n        return this.$store.getters['i18n/t']('generic.add');\n      },\n    },\n    addAllowed: {\n      type:    Boolean,\n      default: true,\n    },\n    removeLabel: {\n      type: String,\n      default() {\n        return this.$store.getters['i18n/t']('generic.remove');\n      },\n    },\n    removeAllowed: {\n      type:    Boolean,\n      default: true,\n    },\n    defaultAddValue: {\n      type:    [String, Number, Object, Array],\n      default: ''\n    },\n    loading: {\n      type:    Boolean,\n      default: false\n    },\n    disabled: {\n      type:    Boolean,\n      default: false,\n    },\n    rules: {\n      default:   () => [],\n      type:      Array,\n      // we only want functions in the rules array\n      validator: (rules) => rules.every((rule) => ['function'].includes(typeof rule))\n    }\n  },\n  data() {\n    const input = (this.value || []).slice();\n    const rows = [];\n\n    for ( const value of input ) {\n      rows.push({ value });\n    }\n    if ( !rows.length && this.initialEmptyRow ) {\n      const value = this.defaultAddValue ? clone(this.defaultAddValue) : '';\n\n      rows.push({ value });\n    }\n\n    return { rows, lastUpdateWasFromValue: false };\n  },\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    },\n    showAdd() {\n      return this.addAllowed;\n    },\n    showRemove() {\n      return this.removeAllowed;\n    },\n    isDefaultProtip() {\n      return this.protip === DEFAULT_PROTIP;\n    },\n    showProtip() {\n      if (this.protip && !this.isDefaultProtip) {\n        return true;\n      }\n\n      return !this.valueMultiline && this.protip;\n    }\n  },\n  watch: {\n    value() {\n      this.lastUpdateWasFromValue = true;\n      this.rows = (this.value || []).map((v) => ({ value: v }));\n    },\n    rows: {\n      deep: true,\n      handler(newValue, oldValue) {\n        // lastUpdateWasFromValue is used to break a cycle where when rows are updated\n        // this was called which then forced rows to updated again\n        if (!this.lastUpdateWasFromValue) {\n          this.queueUpdate();\n        }\n        this.lastUpdateWasFromValue = false;\n      }\n    }\n  },\n  created() {\n    this.queueUpdate = debounce(this.update, 50);\n  },\n  methods: {\n    add() {\n      this.rows.push({ value: clone(this.defaultAddValue) });\n      if (this.defaultAddValue) {\n        this.queueUpdate();\n      }\n      this.$nextTick(() => {\n        const inputs = this.$refs.value;\n\n        if ( inputs && inputs.length > 0 ) {\n          inputs[inputs.length - 1].focus();\n        }\n        this.$emit('add');\n      });\n    },\n    /**\n     * Remove item and emits removed row and its own index value\n     */\n    remove(row, index) {\n      this.$emit('remove', { row, index });\n      removeAt(this.rows, index);\n      this.queueUpdate();\n    },\n\n    /**\n     * Cleanup rows and emit input\n     */\n    update() {\n      if ( this.isView ) {\n        return;\n      }\n      const out = [];\n\n      for ( const row of this.rows ) {\n        const trim = !this.valueMultiline && (typeof row.value === 'string');\n        const value = trim ? row.value.trim() : row.value;\n\n        if ( typeof value !== 'undefined' ) {\n          out.push(value);\n        }\n      }\n      this.$emit('input', out);\n    },\n\n    /**\n     * Handle paste event, e.g. split multiple lines in rows\n     */\n    onPaste(index, event) {\n      event.preventDefault();\n      const text = event.clipboardData.getData('text/plain');\n\n      if (this.valueMultiline) {\n        // Allow to paste multiple lines\n        this.rows[index].value = text;\n      } else {\n        // Prevent to paste the value and emit text in multiple rows\n        const split = text.split('\\n').map((value) => ({ value }));\n\n        event.preventDefault();\n        this.rows.splice(index, 1, ...split);\n      }\n\n      this.update();\n    }\n  },\n};\n</script>\n\n<template>\n  <div>\n    <div\n      v-if=\"title\"\n      class=\"clearfix\"\n    >\n      <slot name=\"title\">\n        <h3>\n          {{ title }}\n          <i\n            v-if=\"showProtip\"\n            v-clean-tooltip=\"protip\"\n            class=\"icon icon-info\"\n          />\n        </h3>\n      </slot>\n    </div>\n\n    <template v-if=\"rows.length\">\n      <div v-if=\"showHeader\">\n        <slot name=\"column-headers\">\n          <label class=\"value text-label mb-10\">\n            {{ valueLabel }}\n          </label>\n        </slot>\n      </div>\n      <div\n        v-for=\"(row, idx) in rows\"\n        :key=\"idx\"\n        :data-testid=\"`array-list-box${ idx }`\"\n        class=\"box\"\n      >\n        <slot\n          name=\"columns\"\n          :queueUpdate=\"queueUpdate\"\n          :i=\"idx\"\n          :rows=\"rows\"\n          :row=\"row\"\n          :mode=\"mode\"\n          :isView=\"isView\"\n        >\n          <div class=\"value\">\n            <slot\n              name=\"value\"\n              :row=\"row\"\n              :mode=\"mode\"\n              :isView=\"isView\"\n              :queue-update=\"queueUpdate\"\n            >\n              <TextAreaAutoGrow\n                v-if=\"valueMultiline\"\n                ref=\"value\"\n                v-model=\"row.value\"\n                :data-testid=\"`textarea-${idx}`\"\n                :placeholder=\"valuePlaceholder\"\n                :mode=\"mode\"\n                :disabled=\"disabled\"\n                @paste=\"onPaste(idx, $event)\"\n                @input=\"queueUpdate\"\n              />\n              <LabeledInput\n                v-else-if=\"rules.length > 0\"\n                ref=\"value\"\n                v-model=\"row.value\"\n                :data-testid=\"`labeled-input-${idx}`\"\n                :placeholder=\"valuePlaceholder\"\n                :disabled=\"isView || disabled\"\n                :rules=\"rules\"\n                :compact=\"false\"\n                @paste=\"onPaste(idx, $event)\"\n                @input=\"queueUpdate\"\n              />\n              <input\n                v-else\n                ref=\"value\"\n                v-model=\"row.value\"\n                :data-testid=\"`input-${idx}`\"\n                :placeholder=\"valuePlaceholder\"\n                :disabled=\"isView || disabled\"\n                @paste=\"onPaste(idx, $event)\"\n                @input=\"queueUpdate\"\n              >\n            </slot>\n          </div>\n        </slot>\n        <div\n          v-if=\"showRemove\"\n          class=\"remove\"\n        >\n          <slot\n            name=\"remove-button\"\n            :remove=\"() => remove(row, idx)\"\n            :i=\"idx\"\n            :row=\"row\"\n          >\n            <button\n              type=\"button\"\n              :disabled=\"isView\"\n              class=\"btn role-link\"\n              :data-testid=\"`remove-item-${idx}`\"\n              @click=\"remove(row, idx)\"\n            >\n              {{ removeLabel }}\n            </button>\n          </slot>\n        </div>\n      </div>\n    </template>\n    <div\n      v-else-if=\"mode==='view'\"\n      class=\"text-muted\"\n    >\n      &mdash;\n    </div>\n    <div v-else>\n      <slot name=\"empty\" />\n    </div>\n    <div\n      v-if=\"showAdd && !isView\"\n      class=\"footer\"\n    >\n      <slot\n        v-if=\"showAdd\"\n        name=\"add\"\n        :add=\"add\"\n      >\n        <button\n          type=\"button\"\n          class=\"btn role-tertiary add\"\n          :disabled=\"loading\"\n          data-testid=\"array-list-button\"\n          @click=\"add()\"\n        >\n          <i\n            v-if=\"loading\"\n            class=\"mr-5 icon icon-spinner icon-spin icon-lg\"\n          />\n          {{ addLabel }}\n        </button>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .title {\n    margin-bottom: 10px;\n  }\n  .box {\n    display: grid;\n    grid-template-columns: auto $array-list-remove-margin;\n    align-items: center;\n    margin-bottom: 10px;\n    .value {\n      flex: 1;\n      INPUT {\n        height: $input-height;\n      }\n    }\n  }\n  .remove {\n    text-align: right;\n  }\n  .footer {\n    .protip {\n      float: right;\n      padding: 5px 0;\n    }\n  }\n</style>\n"],"mappings":"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","ignoreList":[]}]}