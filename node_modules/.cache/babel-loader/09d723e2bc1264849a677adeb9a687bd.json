{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/management.cattle.io.user.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/management.cattle.io.user.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["MANAGEMENT","NORMAN","CreateEditView","GlobalRoleBindings","ChangePassword","LabeledInput","CruResource","exceptionToErrorsArray","_CREATE","_EDIT","Loading","wait","components","mixins","data","showGlobalRoles","$store","getters","GLOBAL_ROLE","form","username","value","description","displayName","password","userChangeOnLogin","validation","roles","rolesChanged","computed","valid","credentialsValid","rolesValid","isCreate","isEdit","credentialsChanged","mustChangePassword","mode","mounted","_this","$nextTick","$refs","name","focus","methods","save","buttonDone","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","wrap","_callee$","_context","prev","next","errors","createUser","sent","updateRoles","id","editUser","$router","replace","doneRoute","t0","stop","_this3","_callee2","users","newNormanUser","_callee2$","_context2","dispatch","type","USER","find","u","Error","t","enabled","abrupt","_this4","_callee3","normanUser","_callee3$","_context3","changePassword","_name","opt","force","userId","_this5","_callee4","_callee4$","_context4","grb"],"sources":["node_modules/@rancher/shell/edit/management.cattle.io.user.vue"],"sourcesContent":["<script>\nimport { MANAGEMENT, NORMAN } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport GlobalRoleBindings from '@shell/components/GlobalRoleBindings.vue';\nimport ChangePassword from '@shell/components/form/ChangePassword';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport CruResource from '@shell/components/CruResource';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport { _CREATE, _EDIT } from '@shell/config/query-params';\nimport Loading from '@shell/components/Loading';\nimport { wait } from '@shell/utils/async';\n\nexport default {\n  components: {\n    ChangePassword, GlobalRoleBindings, CruResource, LabeledInput, Loading\n  },\n  mixins: [\n    CreateEditView\n  ],\n\n  data() {\n    const showGlobalRoles = !!this.$store.getters[`management/schemaFor`](MANAGEMENT.GLOBAL_ROLE);\n\n    return {\n      showGlobalRoles,\n      form: {\n        username:    this.value.username,\n        description: this.value.description,\n        displayName: this.value.displayName,\n        password:    {\n          password:          '',\n          userChangeOnLogin: false,\n        }\n      },\n      validation: {\n        password:     false,\n        roles:        !showGlobalRoles,\n        rolesChanged: false,\n      },\n    };\n  },\n\n  computed: {\n    valid() {\n      const valid = this.credentialsValid && this.rolesValid;\n\n      if (this.isCreate) {\n        return valid;\n      }\n      if (this.isEdit) {\n        return valid && (this.credentialsChanged || this.validation.rolesChanged);\n      }\n\n      return false;\n    },\n    credentialsValid() {\n      if (this.isCreate) {\n        // Username must be supplied, password valid\n        return !!this.form.username && this.validation.password;\n      }\n      if (this.isEdit) {\n        // Password must be valid (though password field doesn't have to exist)\n        return this.validation.password;\n      }\n\n      return false;\n    },\n    credentialsChanged() {\n      if (this.isCreate) {\n        return true; // Covered by valid\n      }\n      if (this.isEdit) {\n        return !!this.form.password.password ||\n          this.form.description !== this.value.description ||\n          this.form.displayName !== this.value.displayName ||\n          this.form.password.userChangeOnLogin !== this.value.mustChangePassword;\n      }\n\n      return false;\n    },\n    rolesValid() {\n      return this.validation.roles;\n    },\n    isCreate() {\n      return this.mode === _CREATE;\n    },\n    isEdit() {\n      return this.mode === _EDIT;\n    }\n  },\n\n  mounted() {\n    this.$nextTick(() => {\n      if (this.$refs.name) {\n        this.$refs.name.focus();\n      }\n    });\n  },\n  methods: {\n    async save(buttonDone) {\n      this.errors = [];\n      try {\n        if (this.isCreate) {\n          const user = await this.createUser();\n\n          await this.updateRoles(user.id);\n        } else {\n          await this.editUser();\n          await this.updateRoles();\n        }\n\n        this.$router.replace({ name: this.doneRoute });\n        buttonDone(true);\n      } catch (err) {\n        this.errors = exceptionToErrorsArray(err);\n        buttonDone(false);\n      }\n    },\n\n    async createUser() {\n      // Ensure username is unique (this does not happen in the backend)\n      const users = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.USER });\n\n      if (users.find((u) => u.username === this.form.username)) {\n        throw new Error(this.t('user.edit.credentials.username.exists'));\n      }\n\n      const user = await this.$store.dispatch('rancher/create', {\n        type:               NORMAN.USER,\n        description:        this.form.description,\n        enabled:            true,\n        mustChangePassword: this.form.password.userChangeOnLogin,\n        name:               this.form.displayName,\n        password:           this.form.password.password,\n        username:           this.form.username\n      });\n\n      const newNormanUser = await user.save();\n\n      return this.$store.dispatch('management/find', { type: MANAGEMENT.USER, id: newNormanUser.id });\n    },\n\n    async editUser() {\n      if (!this.credentialsChanged) {\n        return;\n      }\n\n      const normanUser = await this.$store.dispatch('rancher/find', {\n        type: NORMAN.USER,\n        id:   this.value.id,\n      });\n\n      // Save change of password\n      // - Password must be changed before editing mustChangePassword (setpassword action sets this to false)\n      if (this.form.password.password) {\n        await this.$refs.changePassword.save(normanUser);\n\n        // Why the wait? Without these the user updates below are ignored\n        // - The update request succeeds and shows the correct values in it's response.\n        // - Fetching the norman user again sometimes shows the correct value, sometimes not\n        // - Even if the fetched norman user shows the correct value, it doesn't show up in the steve user\n        //   - Looks like we re-request the stale version via socket?\n        await wait(5000);\n      }\n\n      // Save user updates\n      normanUser.description = this.form.description;\n      normanUser._name = this.form.displayName;\n      normanUser.mustChangePassword = this.form.password.userChangeOnLogin;\n\n      await normanUser.save();\n\n      return await this.$store.dispatch('management/find', {\n        type: MANAGEMENT.USER,\n        id:   this.value.id,\n        opt:  { force: true }\n      });\n    },\n\n    async updateRoles(userId) {\n      if (this.$refs.grb) {\n        await this.$refs.grb.save(userId);\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"!value\" />\n  <CruResource\n    v-else\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :validation-passed=\"valid\"\n    :errors=\"errors\"\n    :can-yaml=\"false\"\n    class=\"create-edit\"\n    @finish=\"save\"\n  >\n    <div class=\"credentials\">\n      <h2> {{ t(\"user.edit.credentials.label\") }}</h2>\n      <div class=\"row\">\n        <div class=\"col span-4\">\n          <LabeledInput\n            ref=\"name\"\n            v-model=\"form.username\"\n            label-key=\"user.edit.credentials.username.label\"\n            placeholder-key=\"user.edit.credentials.username.placeholder\"\n            :required=\"isCreate\"\n            :readonly=\"isEdit\"\n            :disabled=\"isView || isEdit\"\n            :ignore-password-managers=\"!isCreate\"\n          />\n        </div>\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model=\"form.displayName\"\n            label-key=\"user.edit.credentials.displayName.label\"\n            placeholder-key=\"user.edit.credentials.displayName.placeholder\"\n            :disabled=\"isView\"\n          />\n        </div>\n      </div>\n      <div class=\"row mt-20 mb-10\">\n        <div class=\"col span-8\">\n          <LabeledInput\n            v-model=\"form.description\"\n            label-key=\"user.edit.credentials.userDescription.label\"\n            placeholder-key=\"user.edit.credentials.userDescription.placeholder\"\n            :disabled=\"isView\"\n          />\n        </div>\n      </div>\n\n      <ChangePassword\n        v-if=\"!isView\"\n        ref=\"changePassword\"\n        v-model=\"form.password\"\n        :mode=\"mode\"\n        :must-change-password=\"value.mustChangePassword\"\n        @valid=\"validation.password = $event\"\n      />\n    </div>\n    <div\n      v-if=\"showGlobalRoles\"\n      class=\"global-permissions\"\n    >\n      <GlobalRoleBindings\n        ref=\"grb\"\n        :user-id=\"value.id || liveValue.id\"\n        :mode=\"mode\"\n        :real-mode=\"realMode\"\n        type=\"user\"\n        @hasChanges=\"validation.rolesChanged = $event\"\n        @canLogIn=\"validation.roles = $event\"\n      />\n    </div>\n  </CruResource>\n</template>\n"],"mappings":"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","ignoreList":[]}]}