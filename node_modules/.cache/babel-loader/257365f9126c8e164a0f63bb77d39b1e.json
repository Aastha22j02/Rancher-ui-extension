{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/ExplorerMembers.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/ExplorerMembers.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKZnVuY3Rpb24gb3duS2V5cyhlLCByKSB7IHZhciB0ID0gT2JqZWN0LmtleXMoZSk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBvID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTsgciAmJiAobyA9IG8uZmlsdGVyKGZ1bmN0aW9uIChyKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIHIpLmVudW1lcmFibGU7IH0pKSwgdC5wdXNoLmFwcGx5KHQsIG8pOyB9IHJldHVybiB0OyB9CmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQoZSkgeyBmb3IgKHZhciByID0gMTsgciA8IGFyZ3VtZW50cy5sZW5ndGg7IHIrKykgeyB2YXIgdCA9IG51bGwgIT0gYXJndW1lbnRzW3JdID8gYXJndW1lbnRzW3JdIDoge307IHIgJSAyID8gb3duS2V5cyhPYmplY3QodCksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChyKSB7IF9kZWZpbmVQcm9wZXJ0eShlLCByLCB0W3JdKTsgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHQpKSA6IG93bktleXMoT2JqZWN0KHQpKS5mb3JFYWNoKGZ1bmN0aW9uIChyKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCByLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsIHIpKTsgfSk7IH0gcmV0dXJuIGU7IH0KaW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL2hvbWUvdWJ1bnR1L3N1c2Vjb25mL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvci9pbmRleC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudmFsdWVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucHJvbWlzZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCB7IE1BTkFHRU1FTlQsIE5PUk1BTiwgVklSVFVBTF9UWVBFUyB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgUmVzb3VyY2VUYWJsZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9SZXNvdXJjZVRhYmxlJzsKaW1wb3J0IE1hc3RoZWFkIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1Jlc291cmNlTGlzdC9NYXN0aGVhZCc7CmltcG9ydCB7IEFHRSwgUk9MRSwgU1RBVEUsIFBSSU5DSVBBTCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdGFibGUtaGVhZGVycyc7CmltcG9ydCB7IGNhblZpZXdDbHVzdGVyUGVybWlzc2lvbnNFZGl0b3IgfSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL01lbWJlcnMvQ2x1c3RlclBlcm1pc3Npb25zRWRpdG9yLnZ1ZSc7CmltcG9ydCBCYW5uZXIgZnJvbSAnQGNvbXBvbmVudHMvQmFubmVyL0Jhbm5lci52dWUnOwppbXBvcnQgVGFiYmVkIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1RhYmJlZC9pbmRleC52dWUnOwppbXBvcnQgVGFiIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1RhYmJlZC9UYWIudnVlJzsKaW1wb3J0IFNvcnRhYmxlVGFibGUgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvU29ydGFibGVUYWJsZSc7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgY2FuVmlld1Byb2plY3RNZW1iZXJzaGlwRWRpdG9yIH0gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9NZW1iZXJzL1Byb2plY3RNZW1iZXJzaGlwRWRpdG9yLnZ1ZSc7CmltcG9ydCB7IGFsbEhhc2ggfSBmcm9tICdAc2hlbGwvdXRpbHMvcHJvbWlzZSc7CgovKioKICogRXhwbG9yZXIgbWVtYmVycyBwYWdlLgogKiBSb3V0ZTogL2MvbG9jYWwvZXhwbG9yZXIvbWVtYmVycwogKi8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdFeHBsb3Jlck1lbWJlcnMnLAogIGNvbXBvbmVudHM6IHsKICAgIEJhbm5lcjogQmFubmVyLAogICAgTWFzdGhlYWQ6IE1hc3RoZWFkLAogICAgUmVzb3VyY2VUYWJsZTogUmVzb3VyY2VUYWJsZSwKICAgIFRhYmJlZDogVGFiYmVkLAogICAgVGFiOiBUYWIsCiAgICBTb3J0YWJsZVRhYmxlOiBTb3J0YWJsZVRhYmxlCiAgfSwKICBwcm9wczogewogICAgLy8gQ2x1c3RlciB0b2xlIHRlbXBsYXRlIGJpbmRpbmcgY3JlYXRlIHJvdXRlIC0gZGVmYXVsdHMgdG8gdGhlIGV4cGxvcmVyIHJvdXRlCiAgICBjcmVhdGVMb2NhdGlvbk92ZXJyaWRlOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIG5hbWU6ICdjLWNsdXN0ZXItcHJvZHVjdC1yZXNvdXJjZS1jcmVhdGUnLAogICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgIHJlc291cmNlOiBNQU5BR0VNRU5ULkNMVVNURVJfUk9MRV9URU1QTEFURV9CSU5ESU5HCiAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgfQogICAgfQogIH0sCiAgZmV0Y2g6IGZ1bmN0aW9uIGZldGNoKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBjbHVzdGVyUm9sZVRlbXBsYXRlQmluZGluZ1NjaGVtYSwgcHJvamVjdFJvbGVUZW1wbGF0ZUJpbmRpbmdTY2hlbWEsIGh5ZHJhdGlvbjsKICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNsdXN0ZXJSb2xlVGVtcGxhdGVCaW5kaW5nU2NoZW1hID0gX3RoaXMuJHN0b3JlLmdldHRlcnNbInJhbmNoZXIvc2NoZW1hRm9yIl0oTk9STUFOLkNMVVNURVJfUk9MRV9URU1QTEFURV9CSU5ESU5HKTsKICAgICAgICAgICAgcHJvamVjdFJvbGVUZW1wbGF0ZUJpbmRpbmdTY2hlbWEgPSBfdGhpcy4kc3RvcmUuZ2V0dGVyc1sncmFuY2hlci9zY2hlbWFGb3InXShOT1JNQU4uUFJPSkVDVF9ST0xFX1RFTVBMQVRFX0JJTkRJTkcpOwogICAgICAgICAgICBfdGhpcy4kc2V0KF90aGlzLCAnbm9ybWFuQ2x1c3RlclJUQlNjaGVtYScsIGNsdXN0ZXJSb2xlVGVtcGxhdGVCaW5kaW5nU2NoZW1hKTsKICAgICAgICAgICAgX3RoaXMuJHNldChfdGhpcywgJ25vcm1hblByb2plY3RSVEJTY2hlbWEnLCBwcm9qZWN0Um9sZVRlbXBsYXRlQmluZGluZ1NjaGVtYSk7CiAgICAgICAgICAgIGlmIChjbHVzdGVyUm9sZVRlbXBsYXRlQmluZGluZ1NjaGVtYSkgewogICAgICAgICAgICAgIFByb21pc2UuYWxsKFtfdGhpcy4kc3RvcmUuZGlzcGF0Y2goInJhbmNoZXIvZmluZEFsbCIsIHsKICAgICAgICAgICAgICAgIHR5cGU6IE5PUk1BTi5DTFVTVEVSX1JPTEVfVEVNUExBVEVfQklORElORwogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KSwgX3RoaXMuJHN0b3JlLmRpc3BhdGNoKCJtYW5hZ2VtZW50L2ZpbmRBbGwiLCB7CiAgICAgICAgICAgICAgICB0eXBlOiBNQU5BR0VNRU5ULkNMVVNURVJfUk9MRV9URU1QTEFURV9CSU5ESU5HCiAgICAgICAgICAgICAgfSldKS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgICAgICAgICB2YXIgX3JlZjIgPSBfc2xpY2VkVG9BcnJheShfcmVmLCAxKSwKICAgICAgICAgICAgICAgICAgbm9ybWFuQmluZGluZ3MgPSBfcmVmMlswXTsKICAgICAgICAgICAgICAgIF90aGlzLiRzZXQoX3RoaXMsICdub3JtYW5DbHVzdGVyUm9sZVRlbXBsYXRlQmluZGluZ3MnLCBub3JtYW5CaW5kaW5ncyk7CiAgICAgICAgICAgICAgICBfdGhpcy5sb2FkaW5nQ2x1c3RlckJpbmRpbmdzID0gZmFsc2U7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHByb2plY3RSb2xlVGVtcGxhdGVCaW5kaW5nU2NoZW1hKSB7CiAgICAgICAgICAgICAgX3RoaXMuJHN0b3JlLmRpc3BhdGNoKCdyYW5jaGVyL2ZpbmRBbGwnLCB7CiAgICAgICAgICAgICAgICB0eXBlOiBOT1JNQU4uUFJPSkVDVF9ST0xFX1RFTVBMQVRFX0JJTkRJTkcKICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoYmluZGluZ3MpIHsKICAgICAgICAgICAgICAgIF90aGlzLiRzZXQoX3RoaXMsICdwcm9qZWN0Um9sZVRlbXBsYXRlQmluZGluZ3MnLCBiaW5kaW5ncyk7CiAgICAgICAgICAgICAgICBfdGhpcy5sb2FkaW5nUHJvamVjdEJpbmRpbmdzID0gZmFsc2U7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgX3RoaXMuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2ZpbmRBbGwnLCB7CiAgICAgICAgICAgICAgdHlwZTogTUFOQUdFTUVOVC5QUk9KRUNUCiAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHByb2plY3RzKSB7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRzZXQoX3RoaXMsICdwcm9qZWN0cycsIHByb2plY3RzKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGh5ZHJhdGlvbiA9IHsKICAgICAgICAgICAgICBub3JtYW5QcmluY2lwYWxzOiBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3JhbmNoZXIvZmluZEFsbCcsIHsKICAgICAgICAgICAgICAgIHR5cGU6IE5PUk1BTi5QUklOQ0lQQUwKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBtZ210OiBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goIm1hbmFnZW1lbnQvZmluZEFsbCIsIHsKICAgICAgICAgICAgICAgIHR5cGU6IE1BTkFHRU1FTlQuVVNFUgogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIG1nbXRSb2xlVGVtcGxhdGVzOiBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goIm1hbmFnZW1lbnQvZmluZEFsbCIsIHsKICAgICAgICAgICAgICAgIHR5cGU6IE1BTkFHRU1FTlQuUk9MRV9URU1QTEFURQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDsKICAgICAgICAgICAgcmV0dXJuIGFsbEhhc2goaHlkcmF0aW9uKTsKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzY2hlbWE6IHRoaXMuJHN0b3JlLmdldHRlcnNbIm1hbmFnZW1lbnQvc2NoZW1hRm9yIl0oTUFOQUdFTUVOVC5DTFVTVEVSX1JPTEVfVEVNUExBVEVfQklORElORyksCiAgICAgIGhlYWRlcnM6IFtTVEFURSwgUFJJTkNJUEFMLCBST0xFLCBBR0VdLAogICAgICBjcmVhdGVMb2NhdGlvbjogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0aGlzLmNyZWF0ZUxvY2F0aW9uT3ZlcnJpZGUpLCB7fSwgewogICAgICAgIHBhcmFtczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0aGlzLmNyZWF0ZUxvY2F0aW9uT3ZlcnJpZGUucGFyYW1zKSwge30sIHsKICAgICAgICAgIGNsdXN0ZXI6IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2N1cnJlbnRDbHVzdGVyJ10uaWQKICAgICAgICB9KQogICAgICB9KSwKICAgICAgcmVzb3VyY2U6IE1BTkFHRU1FTlQuQ0xVU1RFUl9ST0xFX1RFTVBMQVRFX0JJTkRJTkcsCiAgICAgIG5vcm1hbkNsdXN0ZXJSVEJTY2hlbWE6IG51bGwsCiAgICAgIG5vcm1hblByb2plY3RSVEJTY2hlbWE6IG51bGwsCiAgICAgIG5vcm1hbkNsdXN0ZXJSb2xlVGVtcGxhdGVCaW5kaW5nczogW10sCiAgICAgIHByb2plY3RSb2xlVGVtcGxhdGVCaW5kaW5nczogW10sCiAgICAgIHByb2plY3RzOiBbXSwKICAgICAgVklSVFVBTF9UWVBFUzogVklSVFVBTF9UWVBFUywKICAgICAgcHJvamVjdFJvbGVUZW1wbGF0ZUNvbHVtbnM6IFtTVEFURSwgewogICAgICAgIG5hbWU6ICdtZW1iZXInLAogICAgICAgIGxhYmVLZXk6ICdnZW5lcmljLm5hbWUnLAogICAgICAgIHZhbHVlOiAncHJpbmNpcGFsSWQnLAogICAgICAgIGZvcm1hdHRlcjogJ1ByaW5jaXBhbCcKICAgICAgfSwgewogICAgICAgIG5hbWU6ICdyb2xlJywKICAgICAgICBsYWJlbEtleTogJ3RhYmxlSGVhZGVycy5yb2xlJywKICAgICAgICB2YWx1ZTogJ3JvbGVUZW1wbGF0ZS5uYW1lRGlzcGxheScKICAgICAgfV0sCiAgICAgIGxvYWRpbmdQcm9qZWN0QmluZGluZ3M6IHRydWUsCiAgICAgIGxvYWRpbmdDbHVzdGVyQmluZGluZ3M6IHRydWUKICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKFsnY3VycmVudENsdXN0ZXInXSkpLCB7fSwgewogICAgY2x1c3RlclJvbGVUZW1wbGF0ZUJpbmRpbmdzOiBmdW5jdGlvbiBjbHVzdGVyUm9sZVRlbXBsYXRlQmluZGluZ3MoKSB7CiAgICAgIHJldHVybiB0aGlzLm5vcm1hbkNsdXN0ZXJSb2xlVGVtcGxhdGVCaW5kaW5ncy5tYXAoZnVuY3Rpb24gKGIpIHsKICAgICAgICByZXR1cm4gYi5jbHVzdGVycm9sZXRlbXBsYXRlYmluZGluZzsKICAgICAgfSk7CiAgICB9LAogICAgZmlsdGVyZWRDbHVzdGVyUm9sZVRlbXBsYXRlQmluZGluZ3M6IGZ1bmN0aW9uIGZpbHRlcmVkQ2x1c3RlclJvbGVUZW1wbGF0ZUJpbmRpbmdzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgcmV0dXJuIHRoaXMuY2x1c3RlclJvbGVUZW1wbGF0ZUJpbmRpbmdzLmZpbHRlcihmdW5jdGlvbiAoYikgewogICAgICAgIHJldHVybiAoYiA9PT0gbnVsbCB8fCBiID09PSB2b2lkIDAgPyB2b2lkIDAgOiBiLmNsdXN0ZXJOYW1lKSA9PT0gX3RoaXMyLiRzdG9yZS5nZXR0ZXJzWydjdXJyZW50Q2x1c3RlciddLmlkOwogICAgICB9KTsKICAgIH0sCiAgICBmaWx0ZXJlZFByb2plY3RzOiBmdW5jdGlvbiBmaWx0ZXJlZFByb2plY3RzKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKICAgICAgcmV0dXJuIHRoaXMucHJvamVjdHMucmVkdWNlKGZ1bmN0aW9uIChhbGwsIHApIHsKICAgICAgICB2YXIgX3Akc3BlYzsKICAgICAgICBpZiAoKHAgPT09IG51bGwgfHwgcCA9PT0gdm9pZCAwIHx8IChfcCRzcGVjID0gcC5zcGVjKSA9PT0gbnVsbCB8fCBfcCRzcGVjID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcCRzcGVjLmNsdXN0ZXJOYW1lKSA9PT0gX3RoaXMzLmN1cnJlbnRDbHVzdGVyLmlkKSB7CiAgICAgICAgICBhbGxbcC5pZF0gPSBwOwogICAgICAgIH0KICAgICAgICByZXR1cm4gYWxsOwogICAgICB9LCB7fSk7CiAgICB9LAogICAgZmlsdGVyZWRQcm9qZWN0Um9sZVRlbXBsYXRlQmluZGluZ3M6IGZ1bmN0aW9uIGZpbHRlcmVkUHJvamVjdFJvbGVUZW1wbGF0ZUJpbmRpbmdzKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKICAgICAgdmFyIG91dCA9IHRoaXMucHJvamVjdFJvbGVUZW1wbGF0ZUJpbmRpbmdzLmZpbHRlcihmdW5jdGlvbiAocmIpIHsKICAgICAgICB2YXIgcHJvamVjdElkID0gcmIucHJvamVjdElkLnJlcGxhY2UoJzonLCAnLycpOwogICAgICAgIHJldHVybiAhIV90aGlzNC5maWx0ZXJlZFByb2plY3RzW3Byb2plY3RJZF07CiAgICAgIH0pOwogICAgICByZXR1cm4gb3V0OwogICAgfSwKICAgIHByb2plY3RzV2l0aG91dFJvbGVzOiBmdW5jdGlvbiBwcm9qZWN0c1dpdGhvdXRSb2xlcygpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CiAgICAgIHZhciBpblVzZSA9IHRoaXMuZmlsdGVyZWRQcm9qZWN0Um9sZVRlbXBsYXRlQmluZGluZ3MucmVkdWNlKGZ1bmN0aW9uIChwcm9qZWN0cywgYmluZGluZykgewogICAgICAgIHZhciB0aGlzUHJvamVjdElkID0gKGJpbmRpbmcucHJvamVjdElkIHx8ICcnKS5yZXBsYWNlKCc6JywgJy8nKTsKICAgICAgICBpZiAoIXByb2plY3RzLmluY2x1ZGVzKHRoaXNQcm9qZWN0SWQpKSB7CiAgICAgICAgICBwcm9qZWN0cy5wdXNoKHRoaXNQcm9qZWN0SWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gcHJvamVjdHM7CiAgICAgIH0sIFtdKTsKICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuZmlsdGVyZWRQcm9qZWN0cykucmVkdWNlKGZ1bmN0aW9uIChhbGwsIHByb2plY3RJZCkgewogICAgICAgIHZhciBwcm9qZWN0ID0gX3RoaXM1LmZpbHRlcmVkUHJvamVjdHNbcHJvamVjdElkXTsKICAgICAgICBpZiAoIWluVXNlLmluY2x1ZGVzKHByb2plY3RJZCkpIHsKICAgICAgICAgIGFsbC5wdXNoKHByb2plY3QpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gYWxsOwogICAgICB9LCBbXSk7CiAgICB9LAogICAgLy8gV2UncmUgdXNpbmcgdGhpcyBiZWNhdXNlIHdlIG5lZWQgdG8gc2hvdyBwcm9qZWN0cyBhcyBncm91cHMgZXZlbiBpZiB0aGUgcHJvamVjdCBkb2Vzbid0IGhhdmUgYW55IHJvbGUgYmluZGluZ3MKICAgIHJvd3NXaXRoRmFrZVByb2plY3RzOiBmdW5jdGlvbiByb3dzV2l0aEZha2VQcm9qZWN0cygpIHsKICAgICAgdmFyIGZha2VSb3dzID0gdGhpcy5wcm9qZWN0c1dpdGhvdXRSb2xlcy5tYXAoZnVuY3Rpb24gKHByb2plY3QpIHsKICAgICAgICB2YXIgX3Byb2plY3Qkc3BlYzsKICAgICAgICByZXR1cm4gewogICAgICAgICAgZ3JvdXBCeUxhYmVsOiAncmVzb3VyY2VUYWJsZS5ncm91cExhYmVsLm5vdEluQVByb2plY3QnLmNvbmNhdCgiLSIsIHByb2plY3QuaWQpLAogICAgICAgICAgaXNGYWtlOiB0cnVlLAogICAgICAgICAgbWFpblJvd0tleTogcHJvamVjdC5pZCwKICAgICAgICAgIG5hbWVEaXNwbGF5OiAoX3Byb2plY3Qkc3BlYyA9IHByb2plY3Quc3BlYykgPT09IG51bGwgfHwgX3Byb2plY3Qkc3BlYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3Byb2plY3Qkc3BlYy5kaXNwbGF5TmFtZSwKICAgICAgICAgIC8vIEVuYWJsZSBmaWx0ZXJpbmcgYnkgdGhlIHByb2plY3QgbmFtZQogICAgICAgICAgcHJvamVjdDogcHJvamVjdCwKICAgICAgICAgIGF2YWlsYWJsZUFjdGlvbnM6IFtdLAogICAgICAgICAgcHJvamVjdElkOiBwcm9qZWN0LmlkCiAgICAgICAgfTsKICAgICAgfSk7CgogICAgICAvLyBXZSBuZWVkIHRvIGdyb3VwIGVhY2ggb2YgdGhlIFRlbXBsYXRlUm9sZUJpbmRpbmdzIGJ5IHRoZSB1c2VyICsgcHJvamVjdAogICAgICB2YXIgdXNlclJvbGVzID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShmYWtlUm93cyksIF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmZpbHRlcmVkUHJvamVjdFJvbGVUZW1wbGF0ZUJpbmRpbmdzKSkucmVkdWNlKGZ1bmN0aW9uIChyb3dzLCBjdXJyKSB7CiAgICAgICAgdmFyIHVzZXJJZCA9IGN1cnIudXNlcklkLAogICAgICAgICAgZ3JvdXBQcmluY2lwYWxJZCA9IGN1cnIuZ3JvdXBQcmluY2lwYWxJZCwKICAgICAgICAgIHJvbGVUZW1wbGF0ZSA9IGN1cnIucm9sZVRlbXBsYXRlLAogICAgICAgICAgcHJvamVjdElkID0gY3Vyci5wcm9qZWN0SWQ7CiAgICAgICAgdmFyIHVzZXJPckdyb3VwID0gdXNlcklkIHx8IGdyb3VwUHJpbmNpcGFsSWQ7CiAgICAgICAgaWYgKCF1c2VyT3JHcm91cCkgewogICAgICAgICAgcmV0dXJuIHJvd3M7CiAgICAgICAgfQogICAgICAgIHZhciB1c2VyT3JHcm91cEtleSA9IHVzZXJPckdyb3VwICsgcHJvamVjdElkOwogICAgICAgIGlmICghcm93c1t1c2VyT3JHcm91cEtleV0pIHsKICAgICAgICAgIHJvd3NbdXNlck9yR3JvdXBLZXldID0gY3VycjsKICAgICAgICAgIHJvd3NbdXNlck9yR3JvdXBLZXldLmFsbFJvbGVzID0gW107CiAgICAgICAgfQogICAgICAgIGlmIChyb2xlVGVtcGxhdGUpIHsKICAgICAgICAgIHJvd3NbdXNlck9yR3JvdXBLZXldLmFsbFJvbGVzLnB1c2goY3Vyci5yb2xlVGVtcGxhdGUpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gcm93czsKICAgICAgfSwge30pOwogICAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyh1c2VyUm9sZXMpOwogICAgfSwKICAgIGNhbk1hbmFnZU1lbWJlcnM6IGZ1bmN0aW9uIGNhbk1hbmFnZU1lbWJlcnMoKSB7CiAgICAgIHJldHVybiBjYW5WaWV3Q2x1c3RlclBlcm1pc3Npb25zRWRpdG9yKHRoaXMuJHN0b3JlKTsKICAgIH0sCiAgICBjYW5NYW5hZ2VQcm9qZWN0TWVtYmVyczogZnVuY3Rpb24gY2FuTWFuYWdlUHJvamVjdE1lbWJlcnMoKSB7CiAgICAgIHJldHVybiBjYW5WaWV3UHJvamVjdE1lbWJlcnNoaXBFZGl0b3IodGhpcy4kc3RvcmUpOwogICAgfSwKICAgIGlzTG9jYWw6IGZ1bmN0aW9uIGlzTG9jYWwoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjdXJyZW50Q2x1c3RlciddLmlzTG9jYWw7CiAgICB9LAogICAgY2FuRWRpdFByb2plY3RNZW1iZXJzOiBmdW5jdGlvbiBjYW5FZGl0UHJvamVjdE1lbWJlcnMoKSB7CiAgICAgIHZhciBfdGhpcyRub3JtYW5Qcm9qZWN0UlQ7CiAgICAgIHJldHVybiAoX3RoaXMkbm9ybWFuUHJvamVjdFJUID0gdGhpcy5ub3JtYW5Qcm9qZWN0UlRCU2NoZW1hKSA9PT0gbnVsbCB8fCBfdGhpcyRub3JtYW5Qcm9qZWN0UlQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJG5vcm1hblByb2plY3RSVC5jb2xsZWN0aW9uTWV0aG9kcy5maW5kKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgcmV0dXJuIHgudG9Mb3dlckNhc2UoKSA9PT0gJ3Bvc3QnOwogICAgICB9KTsKICAgIH0sCiAgICBjYW5FZGl0Q2x1c3Rlck1lbWJlcnM6IGZ1bmN0aW9uIGNhbkVkaXRDbHVzdGVyTWVtYmVycygpIHsKICAgICAgdmFyIF90aGlzJG5vcm1hbkNsdXN0ZXJSVDsKICAgICAgcmV0dXJuIChfdGhpcyRub3JtYW5DbHVzdGVyUlQgPSB0aGlzLm5vcm1hbkNsdXN0ZXJSVEJTY2hlbWEpID09PSBudWxsIHx8IF90aGlzJG5vcm1hbkNsdXN0ZXJSVCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkbm9ybWFuQ2x1c3RlclJULmNvbGxlY3Rpb25NZXRob2RzLmZpbmQoZnVuY3Rpb24gKHgpIHsKICAgICAgICByZXR1cm4geC50b0xvd2VyQ2FzZSgpID09PSAncG9zdCc7CiAgICAgIH0pOwogICAgfQogIH0pLAogIG1ldGhvZHM6IHsKICAgIGdldE1nbXRQcm9qZWN0SWQ6IGZ1bmN0aW9uIGdldE1nbXRQcm9qZWN0SWQoZ3JvdXApIHsKICAgICAgcmV0dXJuIGdyb3VwLmdyb3VwLmtleS5yZXBsYWNlKCc6JywgJy8nKTsKICAgIH0sCiAgICBnZXRNZ210UHJvamVjdDogZnVuY3Rpb24gZ2V0TWdtdFByb2plY3QoZ3JvdXApIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ21hbmFnZW1lbnQvYnlJZCddKE1BTkFHRU1FTlQuUFJPSkVDVCwgdGhpcy5nZXRNZ210UHJvamVjdElkKGdyb3VwKSk7CiAgICB9LAogICAgZ2V0UHJvamVjdExhYmVsOiBmdW5jdGlvbiBnZXRQcm9qZWN0TGFiZWwoZ3JvdXApIHsKICAgICAgdmFyIF90aGlzJGdldE1nbXRQcm9qZWN0OwogICAgICByZXR1cm4gKF90aGlzJGdldE1nbXRQcm9qZWN0ID0gdGhpcy5nZXRNZ210UHJvamVjdChncm91cCkpID09PSBudWxsIHx8IF90aGlzJGdldE1nbXRQcm9qZWN0ID09PSB2b2lkIDAgfHwgKF90aGlzJGdldE1nbXRQcm9qZWN0ID0gX3RoaXMkZ2V0TWdtdFByb2plY3Quc3BlYykgPT09IG51bGwgfHwgX3RoaXMkZ2V0TWdtdFByb2plY3QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGdldE1nbXRQcm9qZWN0LmRpc3BsYXlOYW1lOwogICAgfSwKICAgIGFkZFByb2plY3RNZW1iZXI6IGZ1bmN0aW9uIGFkZFByb2plY3RNZW1iZXIoZ3JvdXApIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvcHJvbXB0TW9kYWwnLCB7CiAgICAgICAgY29tcG9uZW50OiAnQWRkUHJvamVjdE1lbWJlckRpYWxvZycsCiAgICAgICAgY29tcG9uZW50UHJvcHM6IHsKICAgICAgICAgIHByb2plY3RJZDogZ3JvdXAuZ3JvdXAua2V5LnJlcGxhY2UoJy8nLCAnOicpLAogICAgICAgICAgc2F2ZUluTW9kYWw6IHRydWUKICAgICAgICB9LAogICAgICAgIG1vZGFsU3RpY2t5OiB0cnVlCiAgICAgIH0pOwogICAgfSwKICAgIGdldFByb2plY3RSb2xlQmluZGluZzogZnVuY3Rpb24gZ2V0UHJvamVjdFJvbGVCaW5kaW5nKHJvdywgcm9sZSkgewogICAgICAvLyBFYWNoIHJvdyBpcyBhIGNvbWJpbmF0aW9uIG9mIHByb2plY3QsIHJvbGUgYW5kIHVzZXIvZ3JvdXAKICAgICAgLy8gU28gZmluZCB0aGUgc3BlY2ZpYyByb2xlQmluZGluZ1RlbXBsYXRlIGNvcnJlc3BvbmRpbmcgdG8gdGhlIHNwZWNpZmljIHByb2plY3QsIHJvbGUgKyB1c2VyL2dyb3VwCiAgICAgIHZhciB1c2VyT3JHcm91cEtleSA9IHJvdy51c2VySWQgPyAndXNlcklkJyA6ICdncm91cFByaW5jaXBhbElkJzsKICAgICAgcmV0dXJuIHRoaXMucHJvamVjdFJvbGVUZW1wbGF0ZUJpbmRpbmdzLmZpbmQoZnVuY3Rpb24gKHIpIHsKICAgICAgICByZXR1cm4gci5wcm9qZWN0SWQgPT09IHJvdy5wcm9qZWN0SWQgJiYgci5yb2xlVGVtcGxhdGVJZCA9PT0gcm9sZS5pZCAmJiByW3VzZXJPckdyb3VwS2V5XSA9PT0gcm93W3VzZXJPckdyb3VwS2V5XTsKICAgICAgfSk7CiAgICB9LAogICAgcmVtb3ZlUm9sZTogZnVuY3Rpb24gcmVtb3ZlUm9sZShyb3csIHJvbGUsIGV2ZW50KSB7CiAgICAgIHZhciBfdGhpczYgPSB0aGlzOwogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgcmVzb3VyY2U7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICByZXNvdXJjZSA9IF90aGlzNi5nZXRQcm9qZWN0Um9sZUJpbmRpbmcocm93LCByb2xlKTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIHJlc291cmNlLnByb21wdFJlbW92ZSgpOwogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICB2aWV3Um9sZUluQVBJOiBmdW5jdGlvbiB2aWV3Um9sZUluQVBJKHJvdywgcm9sZSkgewogICAgICB2YXIgcmVzb3VyY2UgPSB0aGlzLmdldFByb2plY3RSb2xlQmluZGluZyhyb3csIHJvbGUpOwogICAgICBpZiAocmVzb3VyY2UgIT09IG51bGwgJiYgcmVzb3VyY2UgIT09IHZvaWQgMCAmJiByZXNvdXJjZS5jYW5WaWV3SW5BcGkpIHsKICAgICAgICByZXNvdXJjZS52aWV3SW5BcGkoKTsKICAgICAgfQogICAgfSwKICAgIHNsb3ROYW1lOiBmdW5jdGlvbiBzbG90TmFtZShwcm9qZWN0KSB7CiAgICAgIHJldHVybiAibWFpbi1yb3c6Ii5jb25jYXQocHJvamVjdC5pZCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["MANAGEMENT","NORMAN","VIRTUAL_TYPES","ResourceTable","Masthead","AGE","ROLE","STATE","PRINCIPAL","canViewClusterPermissionsEditor","Banner","Tabbed","Tab","SortableTable","mapGetters","canViewProjectMembershipEditor","allHash","name","components","props","createLocationOverride","type","Object","default","params","resource","CLUSTER_ROLE_TEMPLATE_BINDING","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","clusterRoleTemplateBindingSchema","projectRoleTemplateBindingSchema","hydration","wrap","_callee$","_context","prev","next","$store","getters","PROJECT_ROLE_TEMPLATE_BINDING","$set","Promise","all","dispatch","root","then","_ref","_ref2","_slicedToArray","normanBindings","loadingClusterBindings","bindings","loadingProjectBindings","PROJECT","projects","normanPrincipals","mgmt","USER","mgmtRoleTemplates","ROLE_TEMPLATE","stop","data","schema","headers","createLocation","_objectSpread","cluster","id","normanClusterRTBSchema","normanProjectRTBSchema","normanClusterRoleTemplateBindings","projectRoleTemplateBindings","projectRoleTemplateColumns","labeKey","value","formatter","labelKey","computed","clusterRoleTemplateBindings","map","b","clusterroletemplatebinding","filteredClusterRoleTemplateBindings","_this2","filter","clusterName","filteredProjects","_this3","reduce","p","_p$spec","spec","currentCluster","filteredProjectRoleTemplateBindings","_this4","out","rb","projectId","replace","projectsWithoutRoles","_this5","inUse","binding","thisProjectId","includes","push","keys","project","rowsWithFakeProjects","fakeRows","_project$spec","groupByLabel","concat","isFake","mainRowKey","nameDisplay","displayName","availableActions","userRoles","_toConsumableArray","rows","curr","userId","groupPrincipalId","roleTemplate","userOrGroup","userOrGroupKey","allRoles","values","canManageMembers","canManageProjectMembers","isLocal","canEditProjectMembers","_this$normanProjectRT","collectionMethods","find","x","toLowerCase","canEditClusterMembers","_this$normanClusterRT","methods","getMgmtProjectId","group","key","getMgmtProject","getProjectLabel","_this$getMgmtProject","addProjectMember","component","componentProps","saveInModal","modalSticky","getProjectRoleBinding","row","role","r","roleTemplateId","removeRole","event","_this6","_callee2","_callee2$","_context2","promptRemove","viewRoleInAPI","canViewInApi","viewInApi","slotName"],"sources":["node_modules/@rancher/shell/components/ExplorerMembers.vue"],"sourcesContent":["<script>\nimport { MANAGEMENT, NORMAN, VIRTUAL_TYPES } from '@shell/config/types';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport Masthead from '@shell/components/ResourceList/Masthead';\nimport { AGE, ROLE, STATE, PRINCIPAL } from '@shell/config/table-headers';\nimport { canViewClusterPermissionsEditor } from '@shell/components/form/Members/ClusterPermissionsEditor.vue';\nimport Banner from '@components/Banner/Banner.vue';\nimport Tabbed from '@shell/components/Tabbed/index.vue';\nimport Tab from '@shell/components/Tabbed/Tab.vue';\nimport SortableTable from '@shell/components/SortableTable';\nimport { mapGetters } from 'vuex';\nimport { canViewProjectMembershipEditor } from '@shell/components/form/Members/ProjectMembershipEditor.vue';\nimport { allHash } from '@shell/utils/promise';\n\n/**\n * Explorer members page.\n * Route: /c/local/explorer/members\n */\nexport default {\n  name: 'ExplorerMembers',\n\n  components: {\n    Banner,\n    Masthead,\n    ResourceTable,\n    Tabbed,\n    Tab,\n    SortableTable\n  },\n\n  props: {\n    // Cluster tole template binding create route - defaults to the explorer route\n    createLocationOverride: {\n      type:    Object,\n      default: () => {\n        return {\n          name:   'c-cluster-product-resource-create',\n          params: { resource: MANAGEMENT.CLUSTER_ROLE_TEMPLATE_BINDING }\n        };\n      }\n    }\n  },\n\n  async fetch() {\n    const clusterRoleTemplateBindingSchema = this.$store.getters[\n      `rancher/schemaFor`\n    ](NORMAN.CLUSTER_ROLE_TEMPLATE_BINDING);\n\n    const projectRoleTemplateBindingSchema = this.$store.getters['rancher/schemaFor'](NORMAN.PROJECT_ROLE_TEMPLATE_BINDING);\n\n    this.$set(this, 'normanClusterRTBSchema', clusterRoleTemplateBindingSchema);\n    this.$set(this, 'normanProjectRTBSchema', projectRoleTemplateBindingSchema);\n\n    if (clusterRoleTemplateBindingSchema) {\n      Promise.all([\n        this.$store.dispatch(`rancher/findAll`, { type: NORMAN.CLUSTER_ROLE_TEMPLATE_BINDING }, { root: true }),\n        this.$store.dispatch(`management/findAll`, { type: MANAGEMENT.CLUSTER_ROLE_TEMPLATE_BINDING })\n      ]).then(([normanBindings]) => {\n        this.$set(this, 'normanClusterRoleTemplateBindings', normanBindings);\n        this.loadingClusterBindings = false;\n      });\n    }\n\n    if (projectRoleTemplateBindingSchema) {\n      this.$store.dispatch('rancher/findAll', { type: NORMAN.PROJECT_ROLE_TEMPLATE_BINDING }, { root: true })\n        .then((bindings) => {\n          this.$set(this, 'projectRoleTemplateBindings', bindings);\n          this.loadingProjectBindings = false;\n        });\n    }\n\n    this.$store.dispatch('management/findAll', { type: MANAGEMENT.PROJECT })\n      .then((projects) => this.$set(this, 'projects', projects));\n\n    const hydration = {\n      normanPrincipals:  this.$store.dispatch('rancher/findAll', { type: NORMAN.PRINCIPAL }),\n      mgmt:              this.$store.dispatch(`management/findAll`, { type: MANAGEMENT.USER }),\n      mgmtRoleTemplates: this.$store.dispatch(`management/findAll`, { type: MANAGEMENT.ROLE_TEMPLATE }),\n    };\n\n    await allHash(hydration);\n  },\n\n  data() {\n    return {\n      schema: this.$store.getters[`management/schemaFor`](\n        MANAGEMENT.CLUSTER_ROLE_TEMPLATE_BINDING\n      ),\n      headers:        [STATE, PRINCIPAL, ROLE, AGE],\n      createLocation: {\n        ...this.createLocationOverride,\n        params: {\n          ...this.createLocationOverride.params,\n          cluster: this.$store.getters['currentCluster'].id\n        }\n      },\n      resource:                          MANAGEMENT.CLUSTER_ROLE_TEMPLATE_BINDING,\n      normanClusterRTBSchema:            null,\n      normanProjectRTBSchema:            null,\n      normanClusterRoleTemplateBindings: [],\n      projectRoleTemplateBindings:       [],\n      projects:                          [],\n      VIRTUAL_TYPES,\n      projectRoleTemplateColumns:        [\n        STATE,\n        {\n          name:      'member',\n          labeKey:   'generic.name',\n          value:     'principalId',\n          formatter: 'Principal'\n        },\n        {\n          name:     'role',\n          labelKey: 'tableHeaders.role',\n          value:    'roleTemplate.nameDisplay'\n        },\n      ],\n      loadingProjectBindings: true,\n      loadingClusterBindings: true\n    };\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n    clusterRoleTemplateBindings() {\n      return this.normanClusterRoleTemplateBindings.map((b) => b.clusterroletemplatebinding) ;\n    },\n    filteredClusterRoleTemplateBindings() {\n      return this.clusterRoleTemplateBindings.filter(\n        (b) => b?.clusterName === this.$store.getters['currentCluster'].id\n      );\n    },\n    filteredProjects() {\n      return this.projects.reduce((all, p) => {\n        if (p?.spec?.clusterName === this.currentCluster.id) {\n          all[p.id] = p;\n        }\n\n        return all;\n      }, {});\n    },\n    filteredProjectRoleTemplateBindings() {\n      const out = this.projectRoleTemplateBindings.filter((rb) => {\n        const projectId = rb.projectId.replace(':', '/');\n\n        return !!this.filteredProjects[projectId];\n      });\n\n      return out;\n    },\n    projectsWithoutRoles() {\n      const inUse = this.filteredProjectRoleTemplateBindings.reduce((projects, binding) => {\n        const thisProjectId = (binding.projectId || '').replace(':', '/');\n\n        if (!projects.includes(thisProjectId)) {\n          projects.push(thisProjectId);\n        }\n\n        return projects;\n      }, []);\n\n      return Object.keys(this.filteredProjects).reduce((all, projectId) => {\n        const project = this.filteredProjects[projectId];\n\n        if ( !inUse.includes(projectId)) {\n          all.push(project);\n        }\n\n        return all;\n      }, []);\n    },\n\n    // We're using this because we need to show projects as groups even if the project doesn't have any role bindings\n    rowsWithFakeProjects() {\n      const fakeRows = this.projectsWithoutRoles.map((project) => {\n        return {\n          groupByLabel:     `${ ('resourceTable.groupLabel.notInAProject') }-${ project.id }`,\n          isFake:           true,\n          mainRowKey:       project.id,\n          nameDisplay:      project.spec?.displayName, // Enable filtering by the project name\n          project,\n          availableActions: [],\n          projectId:        project.id\n        };\n      });\n\n      // We need to group each of the TemplateRoleBindings by the user + project\n      const userRoles = [...fakeRows, ...this.filteredProjectRoleTemplateBindings].reduce((rows, curr) => {\n        const {\n          userId, groupPrincipalId, roleTemplate, projectId\n        } = curr;\n\n        const userOrGroup = userId || groupPrincipalId;\n\n        if (!userOrGroup) {\n          return rows;\n        }\n\n        const userOrGroupKey = userOrGroup + projectId;\n\n        if (!rows[userOrGroupKey] ) {\n          rows[userOrGroupKey] = curr;\n          rows[userOrGroupKey].allRoles = [];\n        }\n\n        if (roleTemplate) {\n          rows[userOrGroupKey].allRoles.push(curr.roleTemplate);\n        }\n\n        return rows;\n      }, {});\n\n      return Object.values(userRoles);\n    },\n    canManageMembers() {\n      return canViewClusterPermissionsEditor(this.$store);\n    },\n    canManageProjectMembers() {\n      return canViewProjectMembershipEditor(this.$store);\n    },\n    isLocal() {\n      return this.$store.getters['currentCluster'].isLocal;\n    },\n    canEditProjectMembers() {\n      return this.normanProjectRTBSchema?.collectionMethods.find((x) => x.toLowerCase() === 'post');\n    },\n    canEditClusterMembers() {\n      return this.normanClusterRTBSchema?.collectionMethods.find((x) => x.toLowerCase() === 'post');\n    },\n  },\n  methods: {\n    getMgmtProjectId(group) {\n      return group.group.key.replace(':', '/');\n    },\n    getMgmtProject(group) {\n      return this.$store.getters['management/byId'](MANAGEMENT.PROJECT, this.getMgmtProjectId(group));\n    },\n    getProjectLabel(group) {\n      return this.getMgmtProject(group)?.spec?.displayName;\n    },\n    addProjectMember(group) {\n      this.$store.dispatch('cluster/promptModal', {\n        component:      'AddProjectMemberDialog',\n        componentProps: {\n          projectId:   group.group.key.replace('/', ':'),\n          saveInModal: true\n        },\n        modalSticky: true\n      });\n    },\n\n    getProjectRoleBinding(row, role) {\n      // Each row is a combination of project, role and user/group\n      // So find the specfic roleBindingTemplate corresponding to the specific project, role + user/group\n      const userOrGroupKey = row.userId ? 'userId' : 'groupPrincipalId';\n\n      return this.projectRoleTemplateBindings.find((r) => {\n        return r.projectId === row.projectId && r.roleTemplateId === role.id && r[userOrGroupKey] === row[userOrGroupKey];\n      });\n    },\n\n    async removeRole(row, role, event) {\n      const resource = this.getProjectRoleBinding(row, role);\n\n      await resource.promptRemove();\n    },\n\n    viewRoleInAPI(row, role) {\n      const resource = this.getProjectRoleBinding(row, role);\n\n      if (resource?.canViewInApi) {\n        resource.viewInApi();\n      }\n    },\n    slotName(project) {\n      return `main-row:${ project.id }`;\n    },\n  }\n};\n</script>\n\n<template>\n  <div class=\"project-members\">\n    <Masthead\n      :schema=\"schema\"\n      :resource=\"resource\"\n      :favorite-resource=\"VIRTUAL_TYPES.CLUSTER_MEMBERS\"\n      :create-location=\"createLocation\"\n      :create-button-label=\"t('members.createActionLabel')\"\n      :is-creatable=\"false\"\n      :type-display=\"t('members.clusterAndProject')\"\n    />\n    <Banner\n      v-if=\"isLocal\"\n      color=\"error\"\n      :label=\"t('members.localClusterWarning')\"\n    />\n    <Tabbed>\n      <Tab\n        name=\"cluster-membership\"\n        :label=\"t('members.clusterMembership')\"\n      >\n        <div\n          v-if=\"canEditClusterMembers\"\n          class=\"row mb-10 cluster-add\"\n        >\n          <router-link\n            :to=\"createLocation\"\n            class=\"btn role-primary pull-right\"\n          >\n            {{ t('members.createActionLabel') }}\n          </router-link>\n        </div>\n        <ResourceTable\n          :schema=\"schema\"\n          :headers=\"headers\"\n          :rows=\"filteredClusterRoleTemplateBindings\"\n          :groupable=\"true\"\n          :show-grouping=\"true\"\n          :namespaced=\"false\"\n          :loading=\"$fetchState.pending || !currentCluster || loadingClusterBindings\"\n          sub-search=\"subSearch\"\n          :sub-fields=\"['nameDisplay']\"\n        />\n      </Tab>\n      <Tab\n        v-if=\"canManageProjectMembers\"\n        name=\"project-membership\"\n        :label=\"t('members.projectMembership')\"\n      >\n        <SortableTable\n          group-by=\"projectId\"\n          :loading=\"$fetchState.pending || !currentCluster || loadingProjectBindings\"\n          :rows=\"rowsWithFakeProjects\"\n          :headers=\"projectRoleTemplateColumns\"\n          :table-actions=\"false\"\n          :row-actions=\"false\"\n        >\n          <template #group-by=\"group\">\n            <div class=\"group-bar\">\n              <div\n                v-trim-whitespace\n                class=\"group-tab\"\n              >\n                <div\n                  v-clean-html=\"getProjectLabel(group)\"\n                  class=\"project-name\"\n                />\n              </div>\n              <div class=\"right\">\n                <button\n                  v-if=\"canEditProjectMembers\"\n                  type=\"button\"\n                  class=\"create-namespace btn btn-sm role-secondary mr-10 right\"\n                  @click=\"addProjectMember(group)\"\n                >\n                  {{ t('members.createActionLabel') }}\n                </button>\n              </div>\n            </div>\n          </template>\n          <template\n            #cell:role=\"{row}\"\n          >\n            <span\n              v-for=\"(role, j) in row.allRoles\"\n              :key=\"j\"\n\n              ref=\"value\"\n              :data-testid=\"`role-value-${j}`\"\n              class=\"role\"\n            >\n              <span\n                class=\"role-value\"\n                :class=\"{'text-link-enabled' : row.canViewInApi}\"\n                @click=\"viewRoleInAPI(row, role)\"\n              >\n                {{ role.nameDisplay }}\n              </span>\n              <i\n                class=\"icon icon-close\"\n                :data-testid=\"`role-values-close-${j}`\"\n                @click=\"removeRole(row, role, $event)\"\n              />\n            </span>\n          </template>\n          <template\n            v-for=\"project in projectsWithoutRoles\"\n            v-slot:[slotName(project)]\n          >\n            <tr\n              :key=\"project.id\"\n              class=\"main-row\"\n            >\n              <td\n                class=\"empty text-center\"\n                colspan=\"100%\"\n              >\n                {{ t('members.noRolesAssigned') }}\n              </td>\n            </tr>\n          </template>\n        </SortableTable>\n      </Tab>\n    </Tabbed>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n\n.role {\n  align-items: center;\n    background-color: rgba(0, 0, 0, 0.05);\n    border: 1px solid var(--header-border);\n    border-radius: 5px;\n    color: var(--tag-text);\n    line-height: 20px;\n    padding: 2px 5px;\n    white-space: nowrap;\n    display: inline-flex;\n    margin-right: 3px;\n}\n\n.role-value {\n  &.text-link-enabled {\n    cursor: pointer;\n    &:hover {\n      color: var(--primary);\n    }\n  }\n  + .icon-close {\n    margin-left: 3px;\n    cursor: pointer;\n    &:hover {\n      color: var(--primary);\n    }\n  }\n}\n\n.project-members {\n  & ::v-deep .group-bar{\n    display: flex;\n    justify-content: space-between;\n  }\n}\n.cluster-add {\n  justify-content: flex-end;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}