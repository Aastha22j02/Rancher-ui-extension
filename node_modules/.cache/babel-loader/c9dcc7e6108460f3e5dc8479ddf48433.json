{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/config/product/auth.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/config/product/auth.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["DSL","MANAGEMENT","NORMAN","uniq","GROUP_NAME","GROUP_ROLE_NAME","RBAC_BUILTIN","RBAC_DEFAULT","STATE","NAME","HEADER_NAME","AGE","SIMPLE_NAME","MULTI_CLUSTER","USERS_VIRTUAL_TYPE","ROLES_VIRTUAL_TYPE","init","store","_DSL","product","basicType","weightType","configureType","componentForType","headers","mapType","spoofedType","virtualType","ifHaveType","RegExp","concat","USER","AUTH_CONFIG","ifHaveVerb","ifFeature","inStore","icon","removable","showClusterSwitcher","category","labelKey","namespaced","name","weight","route","params","cluster","resource","showListMasthead","type","SPOOFED","GROUP_PRINCIPAL","GLOBAL_ROLE_BINDING","collectionMethods","schemas","id","resourceFields","getInstances","_getInstances","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","canFetchGlobalRoles","canFetchGlobalRoleBindings","globalRoleBindings","uniquePrincipalIds","allPrincipalsP","allPrincipals","wrap","_callee2$","_context2","prev","next","getters","GLOBAL_ROLE","abrupt","dispatch","PRINCIPAL","opt","url","force","sent","filter","grb","groupPrincipalName","map","_ref","_callee","pId","_callee$","_context","encodeURIComponent","t0","console","warn","stop","_x","apply","arguments","Promise","all","p","_objectSpread","isCreatable","showAge","showState","isRemovable","ROLE_TEMPLATE","location","DISPLAY_NAME"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/config/product/auth.js"],"sourcesContent":["import { DSL } from '@shell/store/type-map';\nimport { MANAGEMENT, NORMAN } from '@shell/config/types';\nimport { uniq } from '@shell/utils/array';\nimport {\n  GROUP_NAME, GROUP_ROLE_NAME,\n  RBAC_BUILTIN, RBAC_DEFAULT, STATE, NAME as HEADER_NAME, AGE, SIMPLE_NAME\n} from '@shell/config/table-headers';\nimport { MULTI_CLUSTER } from '@shell/store/features';\n\nexport const NAME = 'auth';\n\nconst USERS_VIRTUAL_TYPE = 'users';\nconst ROLES_VIRTUAL_TYPE = 'roles';\n\nexport function init(store) {\n  const {\n    product,\n    basicType,\n    weightType,\n    configureType,\n    componentForType,\n    headers,\n    mapType,\n    spoofedType,\n    virtualType,\n  } = DSL(store, NAME);\n\n  product({\n    ifHaveType:          new RegExp(`${ MANAGEMENT.USER }|${ MANAGEMENT.AUTH_CONFIG }`, 'i'),\n    ifHaveVerb:          'GET',\n    ifFeature:           MULTI_CLUSTER,\n    inStore:             'management',\n    icon:                'user',\n    removable:           false,\n    showClusterSwitcher: false,\n    category:            'configuration',\n  });\n\n  virtualType({\n    labelKey:   'auth.config.label',\n    icon:       'lock',\n    namespaced: false,\n    name:       'config',\n    weight:     -1,\n    route:      { name: 'c-cluster-auth-config' },\n    ifHaveType: MANAGEMENT.AUTH_CONFIG,\n    ifHaveVerb: 'PUT'\n  });\n\n  virtualType({\n    labelKey:   'typeLabel.\"management.cattle.io.user\"',\n    name:       USERS_VIRTUAL_TYPE,\n    namespaced: false,\n    weight:     103,\n    icon:       'user',\n    route:      {\n      name:   'c-cluster-product-resource',\n      params: {\n        cluster:  'local',\n        product:  NAME,\n        resource: MANAGEMENT.USER,\n      }\n    }\n  });\n  configureType(MANAGEMENT.USER, { showListMasthead: false });\n\n  spoofedType({\n    labelKey:          'typeLabel.\"group.principal\"',\n    type:              NORMAN.SPOOFED.GROUP_PRINCIPAL,\n    weight:            101,\n    ifHaveType:        MANAGEMENT.GLOBAL_ROLE_BINDING,\n    collectionMethods: [],\n    schemas:           [\n      {\n        id:                NORMAN.SPOOFED.GROUP_PRINCIPAL,\n        type:              'schema',\n        collectionMethods: [],\n        resourceFields:    {},\n      }\n    ],\n    getInstances: async() => {\n      // Determine if the user can get fetch global roles & global role bindings. If not there's not much point in showing the table\n      const canFetchGlobalRoles = !!store.getters[`management/canList`](MANAGEMENT.GLOBAL_ROLE);\n      const canFetchGlobalRoleBindings = !!store.getters[`management/canList`](MANAGEMENT.GLOBAL_ROLE_BINDING);\n\n      if (!canFetchGlobalRoles || !canFetchGlobalRoleBindings) {\n        return [];\n      }\n\n      // Ensure we upfront load principals (saves making individual requests later)\n      await store.dispatch('rancher/findAll', {\n        type: NORMAN.PRINCIPAL,\n        opt:  { url: '/v3/principals' }\n      });\n\n      // getInstances should return a list of principals that have global bindings.\n      // It would be easier to just filter principals from above by those with bindings...\n      // .. however the principals list from above is NOT complete and misses some that have bindings (seen when using AD)\n      // So flip the logic and fetch any principal that's missing from the principal list\n\n      const globalRoleBindings = await store.dispatch('management/findAll', {\n        type: MANAGEMENT.GLOBAL_ROLE_BINDING,\n        opt:  { force: true }\n      });\n\n      const uniquePrincipalIds = uniq(globalRoleBindings\n        .filter((grb) => !!grb.groupPrincipalName)\n        .map((grb) => grb.groupPrincipalName)\n      );\n\n      const allPrincipalsP = uniquePrincipalIds\n        .map(async(pId) => {\n          // Guard against principals that aren't retrievable (bindings to principals from previous auth providers)\n          try {\n            return await store.dispatch('rancher/find', {\n              type: NORMAN.PRINCIPAL,\n              opt:  { url: `/v3/principals/${ encodeURIComponent(pId) }` },\n              id:   pId\n            });\n          } catch (e) {\n            console.warn(`Failed to fetch Principal with id: '${ pId }'`, e); // eslint-disable-line no-console\n          }\n        });\n\n      const allPrincipals = await Promise.all(allPrincipalsP);\n\n      return allPrincipals\n        .filter((p) => !!p)\n        .map((p) => ({\n          ...p,\n          type: NORMAN.SPOOFED.GROUP_PRINCIPAL\n        }));\n    }\n  });\n  configureType(NORMAN.SPOOFED.GROUP_PRINCIPAL, {\n    isCreatable:      false,\n    showAge:          false,\n    showState:        false,\n    isRemovable:      false,\n    showListMasthead: false,\n  });\n  // Use labelFor... so lookup succeeds with .'s in path.... and end result is 'trimmed' as per other entries\n  mapType(NORMAN.SPOOFED.GROUP_PRINCIPAL, store.getters['type-map/labelFor']({ id: NORMAN.SPOOFED.GROUP_PRINCIPAL }, 2));\n  weightType(NORMAN.SPOOFED.GROUP_PRINCIPAL, 101, true);\n\n  virtualType({\n    labelKey:   'auth.roleTemplate',\n    icon:       'user',\n    namespaced: false,\n    name:       ROLES_VIRTUAL_TYPE,\n    weight:     102,\n    route:      { name: 'c-cluster-auth-roles' },\n    // There are two resource types shown on this page, MANAGEMENT.GLOBAL_ROLE and MANAGEMENT.ROLE_TEMPLATE\n    // If there user can't see ROLE_TEMPLATE, they definitely can't see GLOBAL_ROLE\n    ifHaveType: MANAGEMENT.ROLE_TEMPLATE\n  });\n\n  configureType(MANAGEMENT.AUTH_CONFIG, {\n    isCreatable: false,\n    isRemovable: false,\n    showAge:     false,\n    location:    null,\n  });\n\n  componentForType(`${ MANAGEMENT.AUTH_CONFIG }/github`, 'auth/github');\n  componentForType(`${ MANAGEMENT.AUTH_CONFIG }/openldap`, 'auth/ldap/index');\n  componentForType(`${ MANAGEMENT.AUTH_CONFIG }/freeipa`, 'auth/ldap/index');\n  componentForType(`${ MANAGEMENT.AUTH_CONFIG }/activedirectory`, 'auth/ldap/index');\n  componentForType(`${ MANAGEMENT.AUTH_CONFIG }/ping`, 'auth/saml');\n  componentForType(`${ MANAGEMENT.AUTH_CONFIG }/shibboleth`, 'auth/saml');\n  componentForType(`${ MANAGEMENT.AUTH_CONFIG }/okta`, 'auth/saml');\n  componentForType(`${ MANAGEMENT.AUTH_CONFIG }/keycloak`, 'auth/saml');\n  componentForType(`${ MANAGEMENT.AUTH_CONFIG }/adfs`, 'auth/saml');\n  componentForType(`${ MANAGEMENT.AUTH_CONFIG }/googleoauth`, 'auth/googleoauth');\n  componentForType(`${ MANAGEMENT.AUTH_CONFIG }/azuread`, 'auth/azuread');\n  componentForType(`${ MANAGEMENT.AUTH_CONFIG }/keycloakoidc`, 'auth/oidc');\n  componentForType(`${ MANAGEMENT.AUTH_CONFIG }/genericoidc`, 'auth/oidc');\n\n  basicType([\n    'config',\n    USERS_VIRTUAL_TYPE,\n    NORMAN.SPOOFED.GROUP_PRINCIPAL,\n    ROLES_VIRTUAL_TYPE\n  ]);\n\n  headers(NORMAN.SPOOFED.GROUP_PRINCIPAL, [\n    GROUP_NAME,\n    GROUP_ROLE_NAME\n  ]);\n\n  // A lot of the built in roles have nicer names returned by nameDisplay. In both tables we want to show both nicer and base names\n  const DISPLAY_NAME = {\n    ...HEADER_NAME,\n    name:     'displayName',\n    labelKey: 'tableHeaders.nameDisplay',\n  };\n\n  headers(MANAGEMENT.GLOBAL_ROLE, [\n    STATE,\n    DISPLAY_NAME,\n    SIMPLE_NAME,\n    RBAC_BUILTIN,\n    {\n      ...RBAC_DEFAULT,\n      labelKey: 'tableHeaders.authRoles.globalDefault',\n    },\n    AGE\n  ]);\n\n  headers(MANAGEMENT.ROLE_TEMPLATE, [\n    STATE,\n    DISPLAY_NAME,\n    SIMPLE_NAME,\n    RBAC_BUILTIN,\n    RBAC_DEFAULT,\n    AGE\n  ]);\n}\n"],"mappings":"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","ignoreList":[]}]}