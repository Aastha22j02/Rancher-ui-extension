{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/form/SelectOrCreateAuthSecret.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/form/SelectOrCreateAuthSecret.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_EDIT","LabeledInput","LabeledSelect","AUTH_TYPE","NORMAN","SECRET","SECRET_TYPES","base64Encode","addObjects","insertAt","sortBy","FilterArgs","PaginationFilterField","PaginationParamFilter","name","components","props","mode","type","String","default","preSelect","Object","value","inStore","labelKey","namespace","required","limitToNamespace","Boolean","generateName","allowNone","allowSsh","allowBasic","allowS3","allowRke","registerBeforeHook","Function","hookName","appendUniqueIdToHook","hookPriority","Number","vertical","delegateCreateToParent","cacheSecrets","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$preSelect","selected","_this$preSelect2","_this$preSelect3","wrap","_callee$","_context","prev","next","$store","getters","concat","filterSecretsByApi","filteredSecrets","sent","dispatch","allSecrets","CLOUD_CREDENTIAL","allCloudCreds","_NONE","publicKey","privateKey","_typeof","includes","update","stop","data","filterByNamespace","uniqueId","Date","getTime","SSH","_SSH","BASIC","_BASIC","S3","_S3","computed","secretTypes","types","push","RKE_AUTH_CONFIG","options","_this2","filter","x","metadata","length","_type","out","map","dataPreview","subTypeDisplay","id","label","group","more","provider","nameDisplay","providerDisplay","lastGroup","i","kind","t","disabled","unshift","firstCol","moreCols","watch","ns","_this3","_callee2","_callee2$","_context2","startsWith","created","doCreate","Error","methods","_this4","_callee3","findPageArgs","url","res","_callee3$","_context3","namespaced","pagination","filters","createMultipleFields","field","opt","abrupt","updateKeyVal","$emit","split","_this5","_callee4","secret","publicField","privateField","_callee4$","_context4","s3credentialConfig","accessKey","secretKey","t0","_defineProperty","save","$nextTick"],"sources":["node_modules/@rancher/shell/components/form/SelectOrCreateAuthSecret.vue"],"sourcesContent":["<script>\nimport { _EDIT } from '@shell/config/query-params';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { AUTH_TYPE, NORMAN, SECRET } from '@shell/config/types';\nimport { SECRET_TYPES } from '@shell/config/secret';\nimport { base64Encode } from '@shell/utils/crypto';\nimport { addObjects, insertAt } from '@shell/utils/array';\nimport { sortBy } from '@shell/utils/sort';\nimport {\n  FilterArgs,\n  PaginationFilterField,\n  PaginationParamFilter,\n} from '@shell/types/store/pagination.types';\n\nexport default {\n  name: 'SelectOrCreateAuthSecret',\n\n  components: {\n    LabeledInput,\n    LabeledSelect,\n  },\n\n  props: {\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n\n    preSelect: {\n      type:    Object,\n      default: null,\n    },\n\n    value: {\n      type:    [String, Object],\n      default: null,\n    },\n\n    inStore: {\n      type:    String,\n      default: 'cluster',\n    },\n\n    labelKey: {\n      type:    String,\n      default: 'selectOrCreateAuthSecret.label',\n    },\n\n    namespace: {\n      type:     String,\n      required: true,\n    },\n\n    /**\n     * Limit the selection of an existing secret to the namespace provided\n     */\n    limitToNamespace: {\n      type:    Boolean,\n      default: true,\n    },\n\n    generateName: {\n      type:    String,\n      default: 'auth-',\n    },\n\n    allowNone: {\n      type:    Boolean,\n      default: true,\n    },\n\n    allowSsh: {\n      type:    Boolean,\n      default: true,\n    },\n\n    allowBasic: {\n      type:    Boolean,\n      default: true,\n    },\n\n    allowS3: {\n      type:    Boolean,\n      default: false,\n    },\n\n    allowRke: {\n      type:    Boolean,\n      default: false,\n    },\n\n    registerBeforeHook: {\n      type:     Function,\n      required: true,\n    },\n\n    hookName: {\n      type:    String,\n      default: 'registerAuthSecret'\n    },\n\n    appendUniqueIdToHook: {\n      type:    Boolean,\n      default: false\n    },\n\n    hookPriority: {\n      type:    Number,\n      default: 99,\n    },\n\n    vertical: {\n      type:    Boolean,\n      default: false,\n    },\n\n    /**\n     * This component is used in MultiStep Priocess\n     * So when user click through to final step and submit the form\n     * This component get recreated therefore register `doCreate` as a hook each time\n     * Also, the parent step component is not aware that credential is created\n     *\n     * This property is implement to prevent this issue and delegate it to parent component.\n     */\n    delegateCreateToParent: {\n      type:    Boolean,\n      default: false,\n    },\n\n    /**\n     * Set to false to make a fresh http request to secrets every time. This can be used when secrets have already been used for\n     * another purpose on the same page\n     *\n     * Set to true to cache the response\n     */\n    cacheSecrets: {\n      type:    Boolean,\n      default: false,\n    },\n  },\n\n  async fetch() {\n    if ( (this.allowSsh || this.allowBasic || this.allowRke) && this.$store.getters[`${ this.inStore }/schemaFor`](SECRET) ) {\n      if (this.$store.getters[`${ this.inStore }/paginationEnabled`](SECRET)) {\n        // Filter results via api (because we shouldn't be fetching them all...)\n        this.filteredSecrets = await this.filterSecretsByApi();\n      } else {\n        // Cannot yet filter via api, so fetch all and filter later on\n        this.allSecrets = await this.$store.dispatch(\n          `${ this.inStore }/findAll`,\n          { type: SECRET }\n        );\n      }\n    }\n\n    if ( this.allowS3 && this.$store.getters['rancher/canList'](NORMAN.CLOUD_CREDENTIAL) ) {\n      // Avoid an async call and loading screen if already loaded by someone else\n      if (this.$store.getters['rancher/haveAll'](NORMAN.CLOUD_CREDENTIAL)) {\n        this.allCloudCreds = this.$store.getters['rancher/all'](NORMAN.CLOUD_CREDENTIAL);\n      } else {\n        this.allCloudCreds = await this.$store.dispatch('rancher/findAll', { type: NORMAN.CLOUD_CREDENTIAL });\n      }\n    } else {\n      this.allCloudCreds = [];\n    }\n\n    let selected = this.preSelect?.selected || AUTH_TYPE._NONE;\n\n    if ( !this.value ) {\n      this.publicKey = this.preSelect?.publicKey || '';\n      this.privateKey = this.preSelect?.privateKey || '';\n    }\n\n    if ( this.value ) {\n      if ( typeof this.value === 'object' ) {\n        selected = `${ this.value.namespace }/${ this.value.name }`;\n      } else if ( this.value.includes('/') || this.value.includes(':') ) {\n        selected = this.value;\n      } else if ( this.namespace ) {\n        selected = `${ this.namespace }/${ this.value }`;\n      } else {\n        selected = this.value;\n      }\n    }\n\n    this.selected = selected;\n\n    this.update();\n  },\n\n  data() {\n    return {\n      allCloudCreds: [],\n\n      allSecrets:      null,\n      filteredSecrets: null,\n\n      selected: null,\n\n      filterByNamespace: this.namespace && this.limitToNamespace,\n\n      publicKey:  '',\n      privateKey: '',\n      uniqueId:   new Date().getTime(), // Allows form state to be individually tracked if the form is in a list\n\n      SSH:   AUTH_TYPE._SSH,\n      BASIC: AUTH_TYPE._BASIC,\n      S3:    AUTH_TYPE._S3,\n    };\n  },\n\n  computed: {\n    secretTypes() {\n      const types = [];\n\n      if ( this.allowSsh ) {\n        types.push(SECRET_TYPES.SSH);\n      }\n\n      if ( this.allowBasic ) {\n        types.push(SECRET_TYPES.BASIC);\n      }\n\n      if ( this.allowRke ) {\n        types.push(SECRET_TYPES.RKE_AUTH_CONFIG);\n      }\n\n      return types;\n    },\n\n    /**\n     * Fitler secrets given their namespace and required secret type\n     *\n     * Convert secrets to list of options and suplement with custom entries\n     */\n    options() {\n      let filteredSecrets = [];\n\n      if (this.allSecrets) {\n        // Fitler secrets given their namespace and required secret type\n        filteredSecrets = this.allSecrets\n          .filter((x) => this.filterByNamespace ? x.metadata.namespace === this.namespace : true\n          )\n          .filter((x) => {\n            // Must match one of the required types\n            if (\n              this.secretTypes.length &&\n              !this.secretTypes.includes(x._type)\n            ) {\n              return false;\n            }\n\n            return true;\n          });\n      } else if (this.filteredSecrets) {\n        filteredSecrets = this.filteredSecrets;\n      }\n\n      let out = filteredSecrets.map((x) => {\n        const {\n          dataPreview, subTypeDisplay, metadata, id\n        } = x;\n\n        const label =\n          subTypeDisplay && dataPreview ? `${ metadata.name } (${ subTypeDisplay }: ${ dataPreview })` : `${ metadata.name } (${ subTypeDisplay })`;\n\n        return {\n          label,\n          group: metadata.namespace,\n          value: id,\n        };\n      });\n\n      if (this.allowS3) {\n        const more = this.allCloudCreds\n          .filter((x) => ['aws', 's3'].includes(x.provider))\n          .map((x) => {\n            return {\n              label: `${ x.nameDisplay } (${ x.providerDisplay })`,\n              group: 'Cloud Credentials',\n              value: x.id,\n            };\n          });\n\n        addObjects(out, more);\n      }\n\n      if ( !this.limitToNamespace ) {\n        out = sortBy(out, 'group');\n        if ( out.length ) {\n          let lastGroup = '';\n\n          for ( let i = 0 ; i < out.length ; i++ ) {\n            if ( out[i].group !== lastGroup ) {\n              lastGroup = out[i].group;\n\n              insertAt(out, i, {\n                kind:     'title',\n                label:    this.t('selectOrCreateAuthSecret.namespaceGroup', { name: lastGroup }),\n                disabled: true,\n              });\n\n              i++;\n            }\n          }\n        }\n      }\n\n      if ( out.length ) {\n        out.unshift({\n          kind:     'title',\n          label:    this.t('selectOrCreateAuthSecret.chooseExisting'),\n          disabled: true\n        });\n      }\n      if ( this.allowNone ) {\n        out.unshift({\n          label: this.t('generic.none'),\n          value: AUTH_TYPE._NONE,\n        });\n      }\n\n      if (this.allowSsh || this.allowS3 || this.allowBasic) {\n        out.unshift({\n          label:    'divider',\n          disabled: true,\n          kind:     'divider'\n        });\n      }\n\n      if ( this.allowSsh ) {\n        out.unshift({\n          label: this.t('selectOrCreateAuthSecret.createSsh'),\n          value: AUTH_TYPE._SSH,\n          kind:  'highlighted'\n        });\n      }\n\n      if ( this.allowS3 ) {\n        out.unshift({\n          label: this.t('selectOrCreateAuthSecret.createS3'),\n          value: AUTH_TYPE._S3,\n          kind:  'highlighted'\n        });\n      }\n\n      if ( this.allowBasic ) {\n        out.unshift({\n          label: this.t('selectOrCreateAuthSecret.createBasic'),\n          value: AUTH_TYPE._BASIC,\n          kind:  'highlighted'\n        });\n      }\n\n      return out;\n    },\n\n    firstCol() {\n      if ( this.vertical ) {\n        return '';\n      }\n\n      if ( this.selected === AUTH_TYPE._SSH || this.selected === AUTH_TYPE._BASIC || this.selected === AUTH_TYPE._S3 ) {\n        return 'col span-4';\n      }\n\n      return 'col span-6';\n    },\n\n    moreCols() {\n      if ( this.vertical ) {\n        return 'mt-20';\n      }\n\n      return 'col span-4';\n    }\n  },\n\n  watch: {\n    selected:   'update',\n    publicKey:  'updateKeyVal',\n    privateKey: 'updateKeyVal',\n\n    async namespace(ns) {\n      if (ns && !this.selected.startsWith(`${ ns }/`)) {\n        this.selected = AUTH_TYPE._NONE;\n      }\n\n      // if ns has changed and we're filtering by api... we need to re-fetch entries\n      if (this.filteredSecrets && this.filterByNamespace) {\n        this.filteredSecrets = await this.filterSecretsByApi();\n      }\n    },\n  },\n\n  created() {\n    if (this.registerBeforeHook) {\n      const hookName = this.appendUniqueIdToHook ? this.hookName + this.uniqueId : this.hookName;\n\n      if (!this.delegateCreateToParent) {\n        this.registerBeforeHook(this.doCreate, hookName, this.hookPriority);\n      }\n    } else {\n      throw new Error('Before Hook is missing');\n    }\n  },\n\n  methods: {\n    async filterSecretsByApi() {\n      const findPageArgs = {\n        // Of type ActionFindPageArgs\n        namespaced: this.filterByNamespace ? this.namespace : '',\n        pagination: new FilterArgs({\n          filters: [\n            PaginationParamFilter.createMultipleFields(\n              this.secretTypes.map(\n                (t) => new PaginationFilterField({\n                  field: 'metadata.fields.1',\n                  value: t,\n                })\n              )\n            ),\n          ],\n        }),\n      };\n\n      if (this.cacheSecrets) {\n        return await this.$store.dispatch(`${ this.inStore }/findPage`, {\n          type: SECRET,\n          opt:  findPageArgs,\n        });\n      }\n\n      const url = this.$store.getters[`${ this.inStore }/urlFor`](\n        SECRET,\n        null,\n        findPageArgs\n      );\n      const res = await this.$store.dispatch(`cluster/request`, { url });\n\n      return res?.data || [];\n    },\n\n    updateKeyVal() {\n      if ( ![AUTH_TYPE._SSH, AUTH_TYPE._BASIC, AUTH_TYPE._S3].includes(this.selected) ) {\n        this.privateKey = '';\n        this.publicKey = '';\n      }\n\n      this.$emit('inputauthval', {\n        selected:   this.selected,\n        privateKey: this.privateKey,\n        publicKey:  this.publicKey\n      });\n    },\n\n    update() {\n      if ( (!this.selected || [AUTH_TYPE._SSH, AUTH_TYPE._BASIC, AUTH_TYPE._S3, AUTH_TYPE._NONE].includes(this.selected))) {\n        this.$emit('input', null);\n      } else if ( this.selected.includes(':') ) {\n        // Cloud creds\n        this.$emit('input', this.selected);\n      } else {\n        const split = this.selected.split('/');\n\n        if ( this.limitToNamespace ) {\n          this.$emit('input', split[1]);\n        } else {\n          const out = {\n            namespace: split[0],\n            name:      split[1]\n          };\n\n          this.$emit('input', out);\n        }\n      }\n\n      this.updateKeyVal();\n    },\n\n    async doCreate() {\n      if ( ![AUTH_TYPE._SSH, AUTH_TYPE._BASIC, AUTH_TYPE._S3].includes(this.selected) || this.delegateCreateToParent ) {\n        return;\n      }\n\n      let secret;\n\n      if ( this.selected === AUTH_TYPE._S3 ) {\n        secret = await this.$store.dispatch(`rancher/create`, {\n          type:               NORMAN.CLOUD_CREDENTIAL,\n          s3credentialConfig: {\n            accessKey: this.publicKey,\n            secretKey: this.privateKey,\n          },\n        });\n      } else {\n        secret = await this.$store.dispatch(`${ this.inStore }/create`, {\n          type:     SECRET,\n          metadata: {\n            namespace:    this.namespace,\n            generateName: this.generateName\n          },\n        });\n\n        let type, publicField, privateField;\n\n        switch ( this.selected ) {\n        case AUTH_TYPE._SSH:\n          type = SECRET_TYPES.SSH;\n          publicField = 'ssh-publickey';\n          privateField = 'ssh-privatekey';\n          break;\n        case AUTH_TYPE._BASIC:\n          type = SECRET_TYPES.BASIC;\n          publicField = 'username';\n          privateField = 'password';\n          break;\n        default:\n          throw new Error('Unknown type');\n        }\n\n        secret._type = type;\n        secret.data = {\n          [publicField]:  base64Encode(this.publicKey),\n          [privateField]: base64Encode(this.privateKey),\n        };\n      }\n\n      await secret.save();\n\n      await this.$nextTick(() => {\n        this.selected = secret.id;\n      });\n\n      return secret;\n    },\n  },\n};\n</script>\n\n<template>\n  <div\n    class=\"select-or-create-auth-secret\"\n  >\n    <div\n      class=\"mt-20\"\n      :class=\"{'row': !vertical}\"\n    >\n      <div :class=\"firstCol\">\n        <LabeledSelect\n          v-model=\"selected\"\n          data-testid=\"auth-secret-select\"\n          :mode=\"mode\"\n          :label-key=\"labelKey\"\n          :loading=\"$fetchState.pending\"\n          :options=\"options\"\n          :selectable=\"option => !option.disabled\"\n        />\n      </div>\n      <template v-if=\"selected === SSH\">\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"publicKey\"\n            data-testid=\"auth-secret-ssh-public-key\"\n            :mode=\"mode\"\n            type=\"multiline\"\n            label-key=\"selectOrCreateAuthSecret.ssh.publicKey\"\n          />\n        </div>\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"privateKey\"\n            data-testid=\"auth-secret-ssh-private-key\"\n            :mode=\"mode\"\n            type=\"multiline\"\n            label-key=\"selectOrCreateAuthSecret.ssh.privateKey\"\n          />\n        </div>\n      </template>\n      <template v-else-if=\"selected === BASIC\">\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"publicKey\"\n            data-testid=\"auth-secret-basic-username\"\n            :mode=\"mode\"\n            label-key=\"selectOrCreateAuthSecret.basic.username\"\n          />\n        </div>\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"privateKey\"\n            data-testid=\"auth-secret-basic-password\"\n            :mode=\"mode\"\n            type=\"password\"\n            label-key=\"selectOrCreateAuthSecret.basic.password\"\n          />\n        </div>\n      </template>\n      <template v-else-if=\"selected === S3\">\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"publicKey\"\n            data-testid=\"auth-secret-s3-public-key\"\n            :mode=\"mode\"\n            label-key=\"selectOrCreateAuthSecret.s3.accessKey\"\n          />\n        </div>\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"privateKey\"\n            data-testid=\"auth-secret-s3-private-key\"\n            :mode=\"mode\"\n            type=\"password\"\n            label-key=\"selectOrCreateAuthSecret.s3.secretKey\"\n          />\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.select-or-create-auth-secret div.labeled-select {\n  min-height: $input-height;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}