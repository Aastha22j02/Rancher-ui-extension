{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/networking.k8s.io.ingress/Rules.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/networking.k8s.io.ingress/Rules.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["WORKLOAD_TYPES","Loading","SortableTable","_VIEW","ArrayListGrouped","random32","Rule","components","props","value","type","Object","default","mode","String","certificates","Array","serviceTargets","rules","requestHost","path","port","target","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$store","getters","Promise","all","values","map","dispatch","stop","beforeUpdate","_iterator","_createForOfIteratorHelper","spec","_step","s","n","done","rule","vKey","$set","err","e","f","computed","workloads","_this2","flatMap","isView","ruleHeaders","headers","name","label","t","formatter","formatterOpts","options","internal","urlKey","labelKey","showPathType","unshift","rows","createRulesForListPage","methods","onAdd","_this$$refs$lastRule","$refs","lastRule","focus"],"sources":["node_modules/@rancher/shell/edit/networking.k8s.io.ingress/Rules.vue"],"sourcesContent":["<script>\nimport { WORKLOAD_TYPES } from '@shell/config/types';\nimport Loading from '@shell/components/Loading';\nimport SortableTable from '@shell/components/SortableTable';\nimport { _VIEW } from '@shell/config/query-params';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\nimport { random32 } from '@shell/utils/string';\nimport Rule from './Rule';\n\nexport default {\n  components: {\n    ArrayListGrouped, Loading, Rule, SortableTable\n  },\n\n  props: {\n    value: {\n      type:    Object,\n      default: () => {}\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    certificates: {\n      type:    Array,\n      default: () => []\n    },\n\n    serviceTargets: {\n      type:    Array,\n      default: () => []\n    },\n\n    rules: {\n      default: () => ({\n        requestHost: [],\n        path:        [],\n        port:        [],\n        target:      []\n      }),\n      type: Object,\n    }\n  },\n\n  async fetch() {\n    if (!this.$store.getters[`cluster/paginationEnabled`]()) {\n      // This is only used by shell/models/networking.k8s.io.ingress.js `targetTo`, where we do some dodgy matching of workloads with name 'ingress-'\n      await Promise.all(Object.values(WORKLOAD_TYPES).map((type) => this.$store.dispatch('cluster/findAll', { type })));\n    }\n  },\n\n  beforeUpdate() {\n    for (const rule of this.value.spec.rules) {\n      if (!rule.vKey) {\n        this.$set(rule, 'vKey', random32(1));\n      }\n    }\n  },\n\n  computed: {\n    workloads() {\n      return Object.values(WORKLOAD_TYPES).flatMap((type) => this.$store.getters['cluster/all'](type));\n    },\n    isView() {\n      return this.mode === _VIEW;\n    },\n    ruleHeaders() {\n      const headers = [\n        {\n          name:      'fullPath',\n          label:     this.t('ingress.rules.headers.path'),\n          value:     '',\n          formatter: 'IngressFullPath'\n        },\n        {\n          name:          'target',\n          label:         this.t('ingress.rules.headers.target'),\n          formatter:     'Link',\n          formatterOpts: {\n            options: { internal: true }, urlKey: 'targetLink.to', labelKey: 'serviceName'\n          },\n          value: 'targetLink',\n        },\n        {\n          name:  'port',\n          label: this.t('ingress.rules.headers.port'),\n          value: 'port',\n        },\n        {\n          name:      'certs',\n          label:     this.t('ingress.rules.headers.certificates'),\n          value:     'certs',\n          formatter: 'ListLink',\n        },\n      ];\n\n      if (this.value.showPathType) {\n        headers.unshift({\n          name:  'pathType',\n          label: this.t('ingress.rules.headers.pathType'),\n          value: 'pathType',\n        });\n      }\n\n      return headers;\n    },\n    rows() {\n      return this.value.createRulesForListPage(this.workloads, this.certificates);\n    }\n  },\n  methods: {\n    onAdd() {\n      if (this.$refs.lastRule?.focus) {\n        this.$refs.lastRule.focus();\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else-if=\"isView\">\n    <SortableTable\n      :rows=\"rows\"\n      :headers=\"ruleHeaders\"\n      key-field=\"_key\"\n      :search=\"false\"\n      :table-actions=\"false\"\n      :row-actions=\"false\"\n    />\n  </div>\n  <div v-else>\n    <ArrayListGrouped\n      v-model=\"value.spec.rules\"\n      :add-label=\"t('ingress.rules.addRule')\"\n      :default-add-value=\"{}\"\n      :mode=\"mode\"\n      @add=\"onAdd\"\n    >\n      <template #default=\"props\">\n        <Rule\n          ref=\"lastRule\"\n          :key=\"props.row.value.vKey\"\n          v-model=\"props.row.value\"\n          :service-targets=\"serviceTargets\"\n          :ingress=\"value\"\n          :rules=\"rules\"\n        />\n      </template>\n    </ArrayListGrouped>\n  </div>\n</template>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA,SAAAA,cAAA;AACA,OAAAC,OAAA;AACA,OAAAC,aAAA;AACA,SAAAC,KAAA;AACA,OAAAC,gBAAA;AACA,SAAAC,QAAA;AACA,OAAAC,IAAA;AAEA;EACAC,UAAA;IACAH,gBAAA,EAAAA,gBAAA;IAAAH,OAAA,EAAAA,OAAA;IAAAK,IAAA,EAAAA,IAAA;IAAAJ,aAAA,EAAAA;EACA;EAEAM,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,WAAAA,SAAA;IACA;IAEAC,IAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;IAEAG,YAAA;MACAL,IAAA,EAAAM,KAAA;MACAJ,OAAA,WAAAA,SAAA;QAAA;MAAA;IACA;IAEAK,cAAA;MACAP,IAAA,EAAAM,KAAA;MACAJ,OAAA,WAAAA,SAAA;QAAA;MAAA;IACA;IAEAM,KAAA;MACAN,OAAA,WAAAA,SAAA;QAAA;UACAO,WAAA;UACAC,IAAA;UACAC,IAAA;UACAC,MAAA;QACA;MAAA;MACAZ,IAAA,EAAAC;IACA;EACA;EAEAY,KAAA,WAAAA,MAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAAC,QAAA;MAAA,OAAAF,mBAAA,CAAAG,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAA,IACAT,KAAA,CAAAU,MAAA,CAAAC,OAAA;cAAAJ,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OAEAG,OAAA,CAAAC,GAAA,CAAA1B,MAAA,CAAA2B,MAAA,CAAAtC,cAAA,EAAAuC,GAAA,WAAA7B,IAAA;cAAA,OAAAc,KAAA,CAAAU,MAAA,CAAAM,QAAA;gBAAA9B,IAAA,EAAAA;cAAA;YAAA;UAAA;UAAA;YAAA,OAAAqB,QAAA,CAAAU,IAAA;QAAA;MAAA,GAAAb,OAAA;IAAA;EAEA;EAEAc,YAAA,WAAAA,aAAA;IAAA,IAAAC,SAAA,GAAAC,0BAAA,CACA,KAAAnC,KAAA,CAAAoC,IAAA,CAAA3B,KAAA;MAAA4B,KAAA;IAAA;MAAA,KAAAH,SAAA,CAAAI,CAAA,MAAAD,KAAA,GAAAH,SAAA,CAAAK,CAAA,IAAAC,IAAA;QAAA,IAAAC,IAAA,GAAAJ,KAAA,CAAArC,KAAA;QACA,KAAAyC,IAAA,CAAAC,IAAA;UACA,KAAAC,IAAA,CAAAF,IAAA,UAAA7C,QAAA;QACA;MACA;IAAA,SAAAgD,GAAA;MAAAV,SAAA,CAAAW,CAAA,CAAAD,GAAA;IAAA;MAAAV,SAAA,CAAAY,CAAA;IAAA;EACA;EAEAC,QAAA;IACAC,SAAA,WAAAA,UAAA;MAAA,IAAAC,MAAA;MACA,OAAA/C,MAAA,CAAA2B,MAAA,CAAAtC,cAAA,EAAA2D,OAAA,WAAAjD,IAAA;QAAA,OAAAgD,MAAA,CAAAxB,MAAA,CAAAC,OAAA,gBAAAzB,IAAA;MAAA;IACA;IACAkD,MAAA,WAAAA,OAAA;MACA,YAAA/C,IAAA,KAAAV,KAAA;IACA;IACA0D,WAAA,WAAAA,YAAA;MACA,IAAAC,OAAA,IACA;QACAC,IAAA;QACAC,KAAA,OAAAC,CAAA;QACAxD,KAAA;QACAyD,SAAA;MACA,GACA;QACAH,IAAA;QACAC,KAAA,OAAAC,CAAA;QACAC,SAAA;QACAC,aAAA;UACAC,OAAA;YAAAC,QAAA;UAAA;UAAAC,MAAA;UAAAC,QAAA;QACA;QACA9D,KAAA;MACA,GACA;QACAsD,IAAA;QACAC,KAAA,OAAAC,CAAA;QACAxD,KAAA;MACA,GACA;QACAsD,IAAA;QACAC,KAAA,OAAAC,CAAA;QACAxD,KAAA;QACAyD,SAAA;MACA,EACA;MAEA,SAAAzD,KAAA,CAAA+D,YAAA;QACAV,OAAA,CAAAW,OAAA;UACAV,IAAA;UACAC,KAAA,OAAAC,CAAA;UACAxD,KAAA;QACA;MACA;MAEA,OAAAqD,OAAA;IACA;IACAY,IAAA,WAAAA,KAAA;MACA,YAAAjE,KAAA,CAAAkE,sBAAA,MAAAlB,SAAA,OAAA1C,YAAA;IACA;EACA;EACA6D,OAAA;IACAC,KAAA,WAAAA,MAAA;MAAA,IAAAC,oBAAA;MACA,KAAAA,oBAAA,QAAAC,KAAA,CAAAC,QAAA,cAAAF,oBAAA,eAAAA,oBAAA,CAAAG,KAAA;QACA,KAAAF,KAAA,CAAAC,QAAA,CAAAC,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]}]}