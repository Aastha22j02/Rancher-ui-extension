{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/SortableTable/selection.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/SortableTable/selection.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["isMore","isRange","suppressContextMenu","isAlternate","get","filterBy","getParent","ALL","SOME","NONE","mounted","table","$el","querySelector","_onRowClickBound","onRowClick","bind","_onRowMousedownBound","onRowMousedown","_onRowContextBound","onRowContext","addEventListener","beforeDestroy","removeEventListener","computed","howMuchSelected","total","pagedRows","length","selected","selectedRows","bulkActionsForSelection","_this","disableAll","all","allRows","arrangedRows","firstNode","map","_iterator","_createForOfIteratorHelper","_step","s","n","done","node","value","availableActions","_iterator3","_step3","act","bulkable","_add","err","e","f","_iterator2","_step2","_iterator4","_step4","enabled","out","_filter","forEach","bulkAction","actionEnabledForSomeSelected","some","action","sort","a","b","weight","data","prevNode","watch","content","toRemove","_iterator5","_step5","includes","push","update","methods","onToggleAll","isSelectionCheckbox","target","preventDefault","onRowMouseEnter","tr","closest","classList","contains","trMainRow","previousElementSibling","add","onRowMouseLeave","remove","nodeForEvent","tagName","tgt","actionElement","tgtRow","nodeForRow","_tgtRow","_this2","nodeId","dataset","find","x","keyField","_this3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","td","skipSelect","selection","isCheckbox","isExpand","resources","i","isSelected","toToggle","wrap","_callee$","_context","prev","next","abrupt","$emit","toggleExpand","mangleActionResources","sent","finish","$store","commit","event","elem","toggle","nodesBetween","stop","_this4","_callee2","_callee2$","_context2","stopPropagation","slice","keySelectRow","row","more","arguments","undefined","element","type","_this5","key","groupBy","grouped","groupedRows","from","groupIdx","to","group","item","_ref","items","rows","j","indexOf","_ref2","Math","min","max","filter","toAdd","_this6","index","findIndex","r","splice","_this$selectedRows","apply","_toConsumableArray","$nextTick","updateInput","on","id","input","concat","disabled","label","first","nextElementSibling","select","nodes","_this7","dispatchEvent","Event","applyTableAction","args","opts","alt","executableSelection","matchingResourceAction","_execute","actionOfInterest","clearSelection","anon","incrementCounts","obj","Object","assign","allEnabled","anyEnabled","available","values","_iterator6","_step6","ctx","invoke","actionOpts","isAlt","fn","call","promises","_iterator7","_step7","resource","altAction","Promise"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/components/SortableTable/selection.js"],"sourcesContent":["import { isMore, isRange, suppressContextMenu, isAlternate } from '@shell/utils/platform';\nimport { get } from '@shell/utils/object';\nimport { filterBy } from '@shell/utils/array';\nimport { getParent } from '@shell/utils/dom';\n\nexport const ALL = 'all';\nexport const SOME = 'some';\nexport const NONE = 'none';\n\nexport default {\n  mounted() {\n    const table = this.$el.querySelector('TABLE');\n\n    this._onRowClickBound = this.onRowClick.bind(this);\n    this._onRowMousedownBound = this.onRowMousedown.bind(this);\n    this._onRowContextBound = this.onRowContext.bind(this);\n\n    table.addEventListener('click', this._onRowClickBound);\n    table.addEventListener('mousedown', this._onRowMousedownBound);\n    table.addEventListener('contextmenu', this._onRowContextBound);\n  },\n\n  beforeDestroy() {\n    const table = this.$el.querySelector('TABLE');\n\n    table.removeEventListener('click', this._onRowClickBound);\n    table.removeEventListener('mousedown', this._onRowMousedownBound);\n    table.removeEventListener('contextmenu', this._onRowContextBound);\n  },\n\n  computed: {\n    // Used for the table-level selection check-box to show checked (all selected)/intermediate (some selected)/unchecked (none selected)\n    howMuchSelected() {\n      const total = this.pagedRows.length;\n      const selected = this.selectedRows.length;\n\n      if ( selected >= total && total > 0 ) {\n        return ALL;\n      } else if ( selected > 0 ) {\n        return SOME;\n      }\n\n      return NONE;\n    },\n\n    // NOTE: The logic here could be simplified and made more performant\n    bulkActionsForSelection() {\n      let disableAll = false;\n\n      // pagedRows is all rows in the current page\n      const all = this.pagedRows;\n      const allRows = this.arrangedRows || all;\n      let selected = this.selectedRows;\n\n      // Nothing is selected\n      if ( !this.selectedRows.length ) {\n        // and there are no rows\n        if ( !allRows ) {\n          return [];\n        }\n\n        const firstNode = allRows[0];\n\n        selected = firstNode ? [firstNode] : [];\n        disableAll = true;\n      }\n\n      const map = {};\n\n      // Find and add all the actions for all the nodes so that we know\n      // what all the possible actions are\n      for ( const node of all ) {\n        if (node.availableActions) {\n          for ( const act of node.availableActions ) {\n            if ( act.bulkable ) {\n              _add(map, act, false);\n            }\n          }\n        }\n      }\n\n      // Go through all the selected items and add the actions (which were already identified above)\n      // as available for some (or all) of the selected nodes\n      for ( const node of selected ) {\n        if (node.availableActions) {\n          for ( const act of node.availableActions ) {\n            if ( act.bulkable && act.enabled ) {\n              _add(map, act, false);\n            }\n          }\n        }\n      }\n\n      // If there's no items actually selected, we want to see all the actions\n      // so you know what exists, but have them all be disabled since there's nothing to do them on.\n      const out = _filter(map, disableAll);\n\n      // Enable a bulkaction if some of the selected items can perform the action\n      out.forEach((bulkAction) => {\n        const actionEnabledForSomeSelected = this.selectedRows.some((node) => {\n          const availableActions = node.availableActions || [];\n\n          return availableActions.some((action) => action.action === bulkAction.action && action.enabled);\n        });\n\n        bulkAction.enabled = this.selectedRows.length > 0 && actionEnabledForSomeSelected;\n      });\n\n      return out.sort((a, b) => (b.weight || 0) - (a.weight || 0));\n    }\n  },\n\n  data() {\n    return {\n      // List of selected items in the table\n      selectedRows: [],\n      prevNode:     null,\n    };\n  },\n\n  watch: {\n    // On page change\n    pagedRows() {\n      // When the table contents changes:\n      // - Remove items that are in the selection but no longer in the table.\n\n      const content = this.pagedRows;\n      const toRemove = [];\n\n      for (const node of this.selectedRows) {\n        if (!content.includes(node) ) {\n          toRemove.push(node);\n        }\n      }\n\n      this.update([], toRemove);\n    }\n  },\n\n  methods: {\n    onToggleAll(value) {\n      if ( value ) {\n        this.update(this.pagedRows, []);\n\n        return true;\n      } else {\n        this.update([], this.pagedRows);\n\n        return false;\n      }\n    },\n\n    onRowMousedown(e) {\n      if ( isRange(e) || this.isSelectionCheckbox(e.target) ) {\n        e.preventDefault();\n      }\n    },\n\n    onRowMouseEnter(e) {\n      const tr = e.target.closest('TR');\n\n      if (tr.classList.contains('sub-row')) {\n        const trMainRow = tr.previousElementSibling;\n\n        trMainRow.classList.add('sub-row-hovered');\n      }\n    },\n\n    onRowMouseLeave(e) {\n      const tr = e.target.closest('TR');\n\n      if (tr.classList.contains('sub-row')) {\n        const trMainRow = tr.previousElementSibling;\n\n        trMainRow.classList.remove('sub-row-hovered');\n      }\n    },\n\n    nodeForEvent(e) {\n      const tagName = e.target.tagName;\n      const tgt = e.target;\n      const actionElement = tgt.closest('.actions');\n\n      if ( tgt.classList.contains('select-all-check') ) {\n        return;\n      }\n\n      if ( !actionElement ) {\n        if (\n          tagName === 'A' ||\n          tagName === 'BUTTON' ||\n          getParent(tgt, '.btn')\n        ) {\n          return;\n        }\n      }\n\n      const tgtRow = e.target.closest('TR');\n\n      return this.nodeForRow(tgtRow);\n    },\n\n    nodeForRow(tgtRow) {\n      if ( tgtRow?.classList.contains('separator-row') ) {\n        return;\n      }\n\n      while ( tgtRow && !tgtRow.classList.contains('main-row') ) {\n        tgtRow = tgtRow.previousElementSibling;\n      }\n\n      if ( !tgtRow ) {\n        return;\n      }\n\n      const nodeId = tgtRow.dataset.nodeId;\n\n      if ( !nodeId ) {\n        return;\n      }\n\n      const node = this.pagedRows.find( (x) => get(x, this.keyField) === nodeId );\n\n      return node;\n    },\n\n    async onRowClick(e) {\n      const node = this.nodeForEvent(e);\n      const td = e.target.closest('TD');\n      const skipSelect = td?.classList.contains('skip-select');\n\n      if (skipSelect) {\n        return;\n      }\n      const selection = this.selectedRows;\n      const isCheckbox = this.isSelectionCheckbox(e.target) || td?.classList.contains('row-check');\n      const isExpand = td?.classList.contains('row-expand');\n      const content = this.pagedRows;\n\n      this.$emit('rowClick', e);\n\n      if ( !node ) {\n        return;\n      }\n\n      if ( isExpand ) {\n        this.toggleExpand(node);\n\n        return;\n      }\n\n      const actionElement = e.target.closest('.actions');\n\n      if ( actionElement ) {\n        let resources = [node];\n\n        if ( this.mangleActionResources ) {\n          const i = actionElement.querySelector('i');\n\n          i.classList.remove('icon-actions');\n          i.classList.add('icon-spinner');\n          i.classList.add('icon-spin');\n\n          try {\n            resources = await this.mangleActionResources(resources);\n          } finally {\n            i.classList.remove('icon-spinner');\n            i.classList.remove('icon-spin');\n            i.classList.add('icon-actions');\n          }\n        }\n\n        this.$store.commit(`action-menu/show`, {\n          resources,\n          event: e,\n          elem:  actionElement\n        });\n\n        return;\n      }\n\n      const isSelected = selection.includes(node);\n      let prevNode = this.prevNode;\n\n      // PrevNode is only valid if it's in the current content\n      if ( !prevNode || !content.includes(prevNode) ) {\n        prevNode = node;\n      }\n\n      if ( isMore(e) ) {\n        this.toggle(node);\n      } else if ( isRange(e) ) {\n        const toToggle = this.nodesBetween(prevNode, node);\n\n        if ( isSelected ) {\n          this.update([], toToggle);\n        } else {\n          this.update(toToggle, []);\n        }\n      } else if ( isCheckbox ) {\n        this.toggle(node);\n      } else {\n        this.update([node], content);\n      }\n\n      this.prevNode = node;\n    },\n\n    async onRowContext(e) {\n      const node = this.nodeForEvent(e);\n\n      if ( suppressContextMenu(e) ) {\n        return;\n      }\n\n      if ( !node ) {\n        return;\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n\n      this.prevNode = node;\n      const isSelected = this.selectedRows.includes(node);\n\n      if ( !isSelected ) {\n        this.update([node], this.selectedRows.slice());\n      }\n\n      let resources = this.selectedRows;\n\n      if ( this.mangleActionResources ) {\n        resources = await this.mangleActionResources(resources);\n      }\n\n      this.$store.commit(`action-menu/show`, {\n        resources,\n        event: e,\n      });\n    },\n\n    keySelectRow(row, more = false) {\n      const node = this.nodeForRow(row);\n      const content = this.pagedRows;\n\n      if ( !node ) {\n        return;\n      }\n\n      if ( more ) {\n        this.update([node], []);\n      } else {\n        this.update([node], content);\n      }\n\n      this.prevNode = node;\n    },\n\n    isSelectionCheckbox(element) {\n      return element.tagName === 'INPUT' &&\n        element.type === 'checkbox' &&\n        element.closest('.selection-checkbox') !== null;\n    },\n\n    nodesBetween(a, b) {\n      let toToggle = [];\n      const key = this.groupBy;\n\n      if ( key ) {\n        // Grouped has 2 levels to look through\n        const grouped = this.groupedRows;\n\n        let from = this.groupIdx(a);\n        let to = this.groupIdx(b);\n\n        if ( !from || !to ) {\n          return [];\n        }\n\n        // From has to come before To\n        if ( (from.group > to.group) || ((from.group === to.group) && (from.item > to.item)) ) {\n          [from, to] = [to, from];\n        }\n\n        for ( let i = from.group ; i <= to.group ; i++ ) {\n          const items = grouped[i].rows;\n          let j = (from.group === i ? from.item : 0);\n\n          while ( items[j] && ( i < to.group || j <= to.item )) {\n            toToggle.push(items[j]);\n            j++;\n          }\n        }\n      } else {\n        // Ungrouped is much simpler\n        const content = this.pagedRows;\n        let from = content.indexOf(a);\n        let to = content.indexOf(b);\n\n        [from, to] = [Math.min(from, to), Math.max(from, to)];\n        toToggle = content.slice(from, to + 1);\n      }\n\n      // check if there is already duplicate content selected (selectedRows) on the list to toggle...\n      toToggle = toToggle.filter((item) => !this.selectedRows.includes(item));\n\n      return toToggle;\n    },\n\n    groupIdx(node) {\n      const grouped = this.groupedRows;\n\n      for ( let i = 0 ; i < grouped.length ; i++ ) {\n        const rows = grouped[i].rows;\n\n        for ( let j = 0 ; j < rows.length ; j++ ) {\n          if ( rows[j] === node ) {\n            return {\n              group: i,\n              item:  j\n            };\n          }\n        }\n      }\n\n      return null;\n    },\n\n    toggle(node) {\n      const add = [];\n      const remove = [];\n\n      if (this.selectedRows.includes(node)) {\n        remove.push(node);\n      } else {\n        add.push(node);\n      }\n\n      this.update(add, remove);\n    },\n\n    update(toAdd, toRemove) {\n      toRemove.forEach((row) => {\n        const index = this.selectedRows.findIndex((r) => r === row);\n\n        if (index !== -1) {\n          this.selectedRows.splice(index, 1);\n        }\n      });\n\n      if ( toAdd ) {\n        this.selectedRows.push(...toAdd);\n      }\n\n      // Uncheck and check the checkboxes of nodes that have been added/removed\n      if (toRemove.length) {\n        this.$nextTick(() => {\n          for ( let i = 0 ; i < toRemove.length ; i++ ) {\n            this.updateInput(toRemove[i], false, this.keyField);\n          }\n        });\n      }\n\n      if (toAdd.length) {\n        this.$nextTick(() => {\n          for ( let i = 0 ; i < toAdd.length ; i++ ) {\n            this.updateInput(toAdd[i], true, this.keyField);\n          }\n        });\n      }\n\n      this.$nextTick(() => {\n        this.$emit('selection', this.selectedRows);\n      });\n    },\n\n    updateInput(node, on, keyField) {\n      const id = get(node, keyField);\n\n      if ( id ) {\n        // Note: This is looking for the checkbox control for the row\n        const input = this.$el.querySelector(`div[data-checkbox-ctrl][data-node-id=\"${ id }\"]`);\n\n        if ( input && !input.disabled ) {\n          const label = input.querySelector('label');\n\n          if (label) {\n            label.value = on;\n          }\n          let tr = input.closest('tr');\n          let first = true;\n\n          while ( tr && (first || tr.classList.contains('sub-row') ) ) {\n            if (on) {\n              tr.classList.add('row-selected');\n            } else {\n              tr.classList.remove('row-selected');\n            }\n            tr = tr.nextElementSibling;\n            first = false;\n          }\n        }\n      }\n    },\n\n    select(nodes) {\n      nodes.forEach((node) => {\n        const id = get(node, this.keyField);\n        const input = this.$el.querySelector(`label[data-node-id=\"${ id }\"]`);\n\n        input.dispatchEvent(new Event('click'));\n      });\n    },\n\n    applyTableAction(action, args, event) {\n      const opts = { alt: event && isAlternate(event), event };\n\n      // Go through the table selection and filter out those actions that can't run the chosen action\n      const executableSelection = this.selectedRows.filter((row) => {\n        const matchingResourceAction = row.availableActions.find((a) => a.action === action.action);\n\n        return matchingResourceAction?.enabled;\n      });\n\n      _execute(executableSelection, action, args, opts, this);\n\n      this.actionOfInterest = null;\n    },\n\n    clearSelection() {\n      this.update([], this.selectedRows);\n    },\n\n  }\n};\n\n// ---------------------------------------------------------------------\n// --- Helpers that were in selectionStore.js --------------------------\n// ---------------------------------------------------------------------\n\nlet anon = 0;\n\nfunction _add(map, act, incrementCounts = true) {\n  let id = act.action;\n\n  if ( !id ) {\n    id = `anon${ anon }`;\n    anon++;\n  }\n\n  let obj = map[id];\n\n  if ( !obj ) {\n    obj = Object.assign({}, act);\n    map[id] = obj;\n    obj.allEnabled = false;\n  }\n\n  if ( !act.enabled ) {\n    obj.allEnabled = false;\n  } else {\n    obj.anyEnabled = true;\n  }\n\n  if ( incrementCounts ) {\n    obj.available = (obj.available || 0) + (!act.enabled ? 0 : 1 );\n    obj.total = (obj.total || 0) + 1;\n  }\n\n  return obj;\n}\n\nfunction _filter(map, disableAll = false) {\n  const out = filterBy(Object.values(map), 'anyEnabled', true);\n\n  for ( const act of out ) {\n    if ( disableAll ) {\n      act.enabled = false;\n    } else {\n      act.enabled = ( act.available >= act.total );\n    }\n  }\n\n  return out;\n}\n\nfunction _execute(resources, action, args, opts = {}, ctx) {\n  args = args || [];\n\n  // New pattern for extensions - always call invoke\n  if (action.invoke) {\n    const actionOpts = {\n      action,\n      event: opts.event,\n      isAlt: !!opts.alt,\n    };\n\n    return action.invoke.apply(ctx, [actionOpts, resources || [], args]);\n  }\n\n  if ( resources.length > 1 && action.bulkAction && !opts.alt ) {\n    const fn = resources[0][action.bulkAction];\n\n    if ( fn ) {\n      return fn.call(resources[0], resources, ...args);\n    }\n  }\n\n  const promises = [];\n\n  for ( const resource of resources ) {\n    let fn;\n\n    if (opts.alt && action.altAction) {\n      fn = resource[action.altAction];\n    } else {\n      fn = resource[action.action];\n    }\n\n    if ( fn ) {\n      promises.push(fn.apply(resource, args));\n    }\n  }\n\n  return Promise.all(promises);\n}\n"],"mappings":"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","ignoreList":[]}]}