{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/core/plugins.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/core/plugins.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["productsLoaded","clearModelCache","Plugin","PluginRoutes","UI_PLUGIN_BASE_URL","ExtensionPoint","MODEL_TYPE","context","inject","vueApp","app","store","$axios","redirect","dynamic","validators","_lastLoaded","plugins","pluginRoutes","router","uiConfig","ep","internal","loadPluginAsync","plugin","_plugin$metadata","name","version","id","concat","url","metadata","direct","endpoint","_plugin$metadata2","main","loadAsync","mainFile","_this","Promise","resolve","reject","document","getElementById","moduleUrl","element","createElement","src","type","async","dataset","purpose","oldPlugin","Object","values","find","p","startsWith","removed","removePlugin","then","window","onload","Error","Date","getTime","default","applyPlugin","dispatch","onerror","e","errorMessage","target","console","error","head","appendChild","catch","initPlugin","module","builtin","logout","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","all","i","wrap","_callee$","_context","prev","next","length","abrupt","t0","stop","_this3","_callee2","promises","_callee2$","_context2","productNames","forEach","product","push","keys","types","typ","unregister","locales","localeObj","models","apply","_toConsumableArray","removeTypeFromStore","uninstallHooks","fn","stores","pStore","key","storeName","map","commit","_this4","register","actionType","actionLocation","action","l10n","loadProducts","addRoutes","routes","_dynamic$type2","_dynamic$type","index","func","splice","getAll","getPlugins","getDynamic","typeName","_dynamic$typeName","getValidator","getUIConfig","uiArea","getAllUIConfig","lastLoad","listDynamic","products","loadPlugins","_ref","_callee3","impl","_callee3$","_context3","sent","init","_x","arguments"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/core/plugins.js"],"sourcesContent":["import { productsLoaded } from '@shell/store/type-map';\nimport { clearModelCache } from '@shell/plugins/dashboard-store/model-loader';\nimport { Plugin } from './plugin';\nimport { PluginRoutes } from './plugin-routes';\nimport { UI_PLUGIN_BASE_URL } from '@shell/config/uiplugins';\nimport { ExtensionPoint } from './types';\n\nconst MODEL_TYPE = 'models';\n\nexport default function(context, inject, vueApp) {\n  const {\n    app, store, $axios, redirect\n  } = context;\n  const dynamic = {};\n  const validators = {};\n  let _lastLoaded = 0;\n\n  // Track which plugin loaded what, so we can unload stuff\n  const plugins = {};\n\n  const pluginRoutes = new PluginRoutes(app.router);\n\n  const uiConfig = {};\n\n  for (const ep in ExtensionPoint) {\n    uiConfig[ExtensionPoint[ep]] = {};\n  }\n\n  inject(\n    'plugin',\n    {\n    // Plugins should not use these - but we will pass them in for now as a 2nd argument\n    // in case there are use cases not covered that require direct access - we may remove access later\n      internal() {\n        const internal = {\n          app,\n          store,\n          $axios,\n          redirect,\n          plugins: this\n        };\n\n        return internal;\n      },\n\n      // Load a plugin from a UI package\n      loadPluginAsync(plugin) {\n        const { name, version } = plugin;\n        const id = `${ name }-${ version }`;\n        let url;\n\n        if (plugin?.metadata?.direct === 'true') {\n          url = plugin.endpoint;\n        } else {\n        // See if the plugin has a main metadata property set\n          const main = plugin?.metadata?.main || `${ id }.umd.min.js`;\n\n          url = `${ UI_PLUGIN_BASE_URL }/${ name }/${ version }/plugin/${ main }`;\n        }\n\n        return this.loadAsync(id, url);\n      },\n\n      // Load a plugin from a UI package\n      loadAsync(id, mainFile) {\n        return new Promise((resolve, reject) => {\n        // The plugin is already loaded so we should avoid loading it again.\n        // This will primarily affect plugins that load prior to authentication and we attempt to load again after authentication.\n          if (document.getElementById(id)) {\n            return resolve();\n          }\n          const moduleUrl = mainFile;\n          const element = document.createElement('script');\n\n          element.src = moduleUrl;\n          element.type = 'text/javascript';\n          element.async = true;\n          element.id = id;\n          element.dataset.purpose = 'extension';\n\n          // id is `<product>-<version>`.\n          const oldPlugin = Object.values(plugins).find((p) => id.startsWith(p.name));\n\n          let removed = Promise.resolve();\n\n          if (oldPlugin) {\n          // Uninstall existing plugin if there is one. This ensures that last loaded plugin is not always used\n          // (nav harv1-->harv2-->harv1 and harv2 would be shown)\n            removed = this.removePlugin(oldPlugin.name).then(() => {\n              delete window[oldPlugin.id];\n\n              delete plugins[oldPlugin.id];\n            });\n          }\n\n          removed.then(() => {\n            element.onload = () => {\n              if (!window[id]) {\n                return reject(new Error('Could not load plugin code'));\n              }\n\n              // Update the timestamp that new plugins were loaded - may be needed\n              // to update caches when new plugins are loaded\n              _lastLoaded = new Date().getTime();\n\n              // name is the name of the plugin, including the version number\n              const plugin = new Plugin(id);\n\n              plugins[id] = plugin;\n\n              // Initialize the plugin\n              window[id].default(plugin, this.internal());\n\n              // Uninstall existing plugin if there is one\n              this.removePlugin(plugin.name); // Removing this causes the plugin to not load on refresh\n\n              // Load all of the types etc from the plugin\n              this.applyPlugin(plugin);\n\n              // Add the plugin to the store\n              store.dispatch('uiplugins/addPlugin', plugin);\n\n              resolve();\n            };\n\n            element.onerror = (e) => {\n            // Massage the error into something useful\n              const errorMessage = `Failed to load script from '${ e.target.src }'`;\n\n              console.error(errorMessage, e); // eslint-disable-line no-console\n              reject(new Error(errorMessage)); // This is more useful where it's used\n            };\n\n            document.head.appendChild(element);\n          }).catch((e) => {\n            const errorMessage = `Failed to unload old plugin${ oldPlugin?.id }`;\n\n            console.error(errorMessage, e); // eslint-disable-line no-console\n            reject(new Error(errorMessage)); // This is more useful where it's used\n          });\n        });\n      },\n\n      // Used by the dynamic loader when a plugin is included in the build\n      initPlugin(id, module) {\n        const plugin = new Plugin(id);\n\n        // Mark the plugin as being built-in\n        plugin.builtin = true;\n\n        plugins[id] = plugin;\n\n        // Initialize the plugin\n        const p = module;\n\n        try {\n          p.default(plugin, this.internal());\n\n          // Uninstall existing product if there is one\n          this.removePlugin(plugin.name);\n\n          // Load all of the types etc from the plugin\n          this.applyPlugin(plugin);\n\n          // Add the plugin to the store\n          store.dispatch('uiplugins/addPlugin', plugin);\n        } catch (e) {\n          console.error(`Error loading plugin ${ plugin.name }`); // eslint-disable-line no-console\n          console.error(e); // eslint-disable-line no-console\n        }\n      },\n\n      async logout() {\n        const all = Object.values(plugins);\n\n        for (let i = 0; i < all.length; i++) {\n          const plugin = all[i];\n\n          if (plugin.builtin) {\n            continue;\n          }\n\n          try {\n            await this.removePlugin(plugin.name);\n          } catch (e) {\n            console.error('Error removing plugin', e); // eslint-disable-line no-console\n          }\n\n          delete plugins[plugin.id];\n        }\n      },\n\n      // Remove the plugin\n      async removePlugin(name) {\n        const plugin = Object.values(plugins).find((p) => p.name === name);\n\n        if (!plugin) {\n          return;\n        }\n\n        const promises = [];\n\n        plugin.productNames.forEach((product) => {\n          promises.push(store.dispatch('type-map/removeProduct', { product, plugin }));\n        });\n\n        // Remove all of the types\n        Object.keys(plugin.types).forEach((typ) => {\n          Object.keys(plugin.types[typ]).forEach((name) => {\n            this.unregister(typ, name);\n\n            if (typ === MODEL_TYPE) {\n              clearModelCache(name);\n            }\n          });\n        });\n\n        // Remove locales\n        plugin.locales.forEach((localeObj) => {\n          promises.push(store.dispatch('i18n/removeLocale', localeObj));\n        });\n\n        if (plugin.types.models) {\n        // Ask the Steve stores to forget any data it has for models that we are removing\n          promises.push(...this.removeTypeFromStore(store, 'rancher', Object.keys(plugin.types.models)));\n          promises.push(...this.removeTypeFromStore(store, 'management', Object.keys(plugin.types.models)));\n        }\n\n        // Call plugin uninstall hooks\n        plugin.uninstallHooks.forEach((fn) => fn(plugin, this.internal()));\n\n        // Remove the plugin itself\n        promises.push( store.dispatch('uiplugins/removePlugin', name));\n\n        // Unregister vuex stores\n        plugin.stores.forEach((pStore) => pStore.unregister(store));\n\n        // Remove validators\n        Object.keys(plugin.validators).forEach((key) => {\n          delete validators[key];\n        });\n\n        await Promise.all(promises);\n\n        // Update last load since we removed a plugin\n        _lastLoaded = new Date().getTime();\n      },\n\n      removeTypeFromStore(store, storeName, types) {\n        return (types || []).map((type) => store.commit(`${ storeName }/forgetType`, type));\n      },\n\n      // Apply the plugin based on its metadata\n      applyPlugin(plugin) {\n      // Types\n        Object.keys(plugin.types).forEach((typ) => {\n          Object.keys(plugin.types[typ]).forEach((name) => {\n            this.register(typ, name, plugin.types[typ][name]);\n          });\n        });\n\n        // UI Configuration - copy UI config from a plugin into the global uiConfig object\n        Object.keys(plugin.uiConfig).forEach((actionType) => {\n          Object.keys(plugin.uiConfig[actionType]).forEach((actionLocation) => {\n            plugin.uiConfig[actionType][actionLocation].forEach((action) => {\n              if (!uiConfig[actionType][actionLocation]) {\n                uiConfig[actionType][actionLocation] = [];\n              }\n              uiConfig[actionType][actionLocation].push(action);\n            });\n          });\n        });\n\n        // l10n\n        Object.keys(plugin.l10n).forEach((name) => {\n          plugin.l10n[name].forEach((fn) => {\n            this.register('l10n', name, fn);\n          });\n        });\n\n        // Initialize the product if the store is ready\n        if (productsLoaded()) {\n          this.loadProducts([plugin]);\n        }\n\n        // Register vuex stores\n        plugin.stores.forEach((pStore) => pStore.register()(store));\n\n        // Locales\n        plugin.locales.forEach((localeObj) => {\n          store.dispatch('i18n/addLocale', localeObj);\n        });\n\n        // Routes\n        pluginRoutes.addRoutes(plugin, plugin.routes);\n\n        // Validators\n        Object.keys(plugin.validators).forEach((key) => {\n          validators[key] = plugin.validators[key];\n        });\n      },\n\n      /**\n     * Register 'something' that can be dynamically loaded - e.g. model, edit, create, list, i18n\n     * @param {String} type type of thing to register, e.g. 'edit'\n     * @param {String} name unique name of 'something'\n     * @param {Function} fn function that dynamically loads the module for the thing being registered\n     */\n      register(type, name, fn) {\n        if (!dynamic[type]) {\n          dynamic[type] = {};\n        }\n\n        // Accumulate l10n resources rather than replace\n        if (type === 'l10n') {\n          if (!dynamic[type][name]) {\n            dynamic[type][name] = [];\n          }\n\n          dynamic[type][name].push(fn);\n        } else {\n          dynamic[type][name] = fn;\n        }\n      },\n\n      unregister(type, name, fn) {\n        if (type === 'l10n') {\n          if (dynamic[type]?.[name]) {\n            const index = dynamic[type][name].find((func) => func === fn);\n\n            if (index !== -1) {\n              dynamic[type][name].splice(index, 1);\n            }\n          }\n        } else if (dynamic[type]?.[name]) {\n          delete dynamic[type][name];\n        }\n      },\n\n      // For debugging\n      getAll() {\n        return dynamic;\n      },\n\n      getPlugins() {\n        return plugins;\n      },\n\n      getDynamic(typeName, name) {\n        return dynamic[typeName]?.[name];\n      },\n\n      getValidator(name) {\n        return validators[name];\n      },\n\n      /**\n     * Return the UI configuration for the given type and location\n     */\n      getUIConfig(type, uiArea) {\n        return uiConfig[type][uiArea] || [];\n      },\n\n      /**\n     * Returns all UI Configuration (useful for debugging)\n     */\n      getAllUIConfig() {\n        return uiConfig;\n      },\n\n      // Timestamp that a UI package was last loaded\n      // Typically used to invalidate caches (e.g. i18n) when new plugins are loaded\n      get lastLoad() {\n        return _lastLoaded;\n      },\n\n      listDynamic(typeName) {\n        if (!dynamic[typeName]) {\n          return [];\n        }\n\n        return Object.keys(dynamic[typeName]);\n      },\n\n      // Get the products provided by plugins\n      get products() {\n        return dynamic.products || [];\n      },\n\n      // Load all of the products provided by plugins\n      loadProducts(loadPlugins) {\n        if (!loadPlugins) {\n          loadPlugins = Object.values(plugins);\n        }\n\n        loadPlugins.forEach((plugin) => {\n          if (plugin.products) {\n            plugin.products.forEach(async(p) => {\n              const impl = await p;\n\n              if (impl.init) {\n                impl.init(plugin, store);\n              }\n            });\n          }\n        });\n      },\n    },\n    context,\n    vueApp\n  );\n}\n"],"mappings":"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","ignoreList":[]}]}