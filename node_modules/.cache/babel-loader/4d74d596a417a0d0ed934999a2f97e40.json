{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/formatter/IngressTarget.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/formatter/IngressTarget.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICIvaG9tZS91YnVudHUvc3VzZWNvbmYvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mbGF0LW1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkudW5zY29wYWJsZXMuZmxhdC1tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnZhbHVlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0IHsgSU5HUkVTUywgV09SS0xPQURfVFlQRVMgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IEluZ3Jlc3NGdWxsUGF0aCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtYXR0ZXIvSW5ncmVzc0Z1bGxQYXRoJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEluZ3Jlc3NGdWxsUGF0aDogSW5ncmVzc0Z1bGxQYXRoCiAgfSwKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHJvdzogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfQogIH0sCiAgZmV0Y2g6IGZ1bmN0aW9uIGZldGNoKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBwcm9taXNlcywgaW5ncmVzc1NjaGVtYTsKICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHByb21pc2VzID0gW107CiAgICAgICAgICAgIGlmICghX3RoaXMuJHN0b3JlLmdldHRlcnNbImNsdXN0ZXIvcGFnaW5hdGlvbkVuYWJsZWQiXSgpKSB7CiAgICAgICAgICAgICAgLy8gVGhpcyBpcyBvbmx5IHVzZWQgYnkgc2hlbGwvbW9kZWxzL25ldHdvcmtpbmcuazhzLmlvLmluZ3Jlc3MuanMgYHRhcmdldFRvYCwgd2hlcmUgd2UgZG8gc29tZSBkb2RneSBtYXRjaGluZyBvZiB3b3JrbG9hZHMgd2l0aCBuYW1lICdpbmdyZXNzLScKICAgICAgICAgICAgICBwcm9taXNlcyA9IE9iamVjdC52YWx1ZXMoV09SS0xPQURfVFlQRVMpLm1hcChmdW5jdGlvbiAodHlwZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9maW5kQWxsJywgewogICAgICAgICAgICAgICAgICB0eXBlOiB0eXBlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpbmdyZXNzU2NoZW1hID0gX3RoaXMuJHN0b3JlLmdldHRlcnNbImNsdXN0ZXIvc2NoZW1hRm9yIl0oSU5HUkVTUyk7CiAgICAgICAgICAgIGlmIChpbmdyZXNzU2NoZW1hKSB7CiAgICAgICAgICAgICAgcHJvbWlzZXMucHVzaChpbmdyZXNzU2NoZW1hLmZldGNoUmVzb3VyY2VGaWVsZHMoKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7CiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICB3b3JrbG9hZHM6IGZ1bmN0aW9uIHdvcmtsb2FkcygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICAgIHJldHVybiBPYmplY3QudmFsdWVzKFdPUktMT0FEX1RZUEVTKS5mbGF0TWFwKGZ1bmN0aW9uICh0eXBlKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMi4kc3RvcmUuZ2V0dGVyc1snY2x1c3Rlci9hbGwnXSh0eXBlKTsKICAgICAgfSk7CiAgICB9LAogICAgcGF0aHM6IGZ1bmN0aW9uIHBhdGhzKCkgewogICAgICByZXR1cm4gdGhpcy5yb3cuY3JlYXRlUnVsZXNGb3JMaXN0UGFnZSh0aGlzLndvcmtsb2Fkcyk7CiAgICB9LAogICAgZGVmYXVsdFNlcnZpY2U6IGZ1bmN0aW9uIGRlZmF1bHRTZXJ2aWNlKCkgewogICAgICByZXR1cm4gdGhpcy5yb3cuY3JlYXRlRGVmYXVsdFNlcnZpY2UodGhpcy53b3JrbG9hZHMpOwogICAgfQogIH0KfTs="},{"version":3,"names":["INGRESS","WORKLOAD_TYPES","IngressFullPath","components","props","value","type","Object","required","row","default","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","promises","ingressSchema","wrap","_callee$","_context","prev","next","$store","getters","values","map","dispatch","push","fetchResourceFields","Promise","all","stop","computed","workloads","_this2","flatMap","paths","createRulesForListPage","defaultService","createDefaultService"],"sources":["node_modules/@rancher/shell/components/formatter/IngressTarget.vue"],"sourcesContent":["<script>\nimport { INGRESS, WORKLOAD_TYPES } from '@shell/config/types';\nimport IngressFullPath from '@shell/components/formatter/IngressFullPath';\n\nexport default {\n  components: { IngressFullPath },\n  props:      {\n    value: {\n      type:     Object,\n      required: true\n    },\n    row: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n\n  async fetch() {\n    let promises = [];\n\n    if (!this.$store.getters[`cluster/paginationEnabled`]()) {\n      // This is only used by shell/models/networking.k8s.io.ingress.js `targetTo`, where we do some dodgy matching of workloads with name 'ingress-'\n      promises = Object.values(WORKLOAD_TYPES).map((type) => this.$store.dispatch('cluster/findAll', { type }));\n    }\n    const ingressSchema = this.$store.getters[`cluster/schemaFor`](INGRESS);\n\n    if (ingressSchema) {\n      promises.push(ingressSchema.fetchResourceFields());\n    }\n    await Promise.all(promises);\n  },\n\n  computed: {\n    workloads() {\n      return Object.values(WORKLOAD_TYPES).flatMap((type) => this.$store.getters['cluster/all'](type));\n    },\n    paths() {\n      return this.row.createRulesForListPage(this.workloads);\n    },\n    defaultService() {\n      return this.row.createDefaultService(this.workloads);\n    }\n  }\n};\n</script>\n\n<template>\n  <div\n    v-if=\"value && !$fetchState.pending\"\n    class=\"ingress-target\"\n    :reactivity=\"workloads.length\"\n  >\n    <div\n      v-for=\"(path, i) in paths\"\n      :key=\"i\"\n      class=\"target\"\n    >\n      <IngressFullPath :row=\"path\" />\n      <i class=\"icon icon-chevron-right\" />\n      <router-link\n        v-if=\"path.serviceName && path.serviceTargetTo\"\n        :to=\"path.serviceTargetTo\"\n      >\n        {{ path.serviceName }}\n      </router-link>\n      <span v-else-if=\"path.serviceName\">\n        {{ path.serviceName }}\n      </span>\n    </div>\n    <div\n      v-if=\"defaultService\"\n      class=\"target\"\n    >\n      {{ t('ingress.target.default') }} <i class=\"icon icon-chevron-right\" />\n      <router-link\n        v-if=\"defaultService.targetTo\"\n        :to=\"defaultService.targetTo\"\n      >\n        {{ defaultService.name }}\n      </router-link>\n      <span v-else>\n        {{ defaultService.name }}\n      </span>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.ingress-target {\n  .target:not(:last-child) {\n    margin-bottom: 5px;\n  }\n}\n</style>\n"],"mappings":";;;;;;;;;;;;AACA,SAAAA,OAAA,EAAAC,cAAA;AACA,OAAAC,eAAA;AAEA;EACAC,UAAA;IAAAD,eAAA,EAAAA;EAAA;EACAE,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,GAAA;MACAH,IAAA,EAAAC,MAAA;MACAG,OAAA,WAAAA,SAAA;QACA;MACA;IACA;EACA;EAEAC,KAAA,WAAAA,MAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAAC,QAAA;MAAA,IAAAC,QAAA,EAAAC,aAAA;MAAA,OAAAJ,mBAAA,CAAAK,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YACAN,QAAA;YAEA,KAAAL,KAAA,CAAAY,MAAA,CAAAC,OAAA;cACA;cACAR,QAAA,GAAAV,MAAA,CAAAmB,MAAA,CAAAzB,cAAA,EAAA0B,GAAA,WAAArB,IAAA;gBAAA,OAAAM,KAAA,CAAAY,MAAA,CAAAI,QAAA;kBAAAtB,IAAA,EAAAA;gBAAA;cAAA;YACA;YACAY,aAAA,GAAAN,KAAA,CAAAY,MAAA,CAAAC,OAAA,sBAAAzB,OAAA;YAEA,IAAAkB,aAAA;cACAD,QAAA,CAAAY,IAAA,CAAAX,aAAA,CAAAY,mBAAA;YACA;YAAAT,QAAA,CAAAE,IAAA;YAAA,OACAQ,OAAA,CAAAC,GAAA,CAAAf,QAAA;UAAA;UAAA;YAAA,OAAAI,QAAA,CAAAY,IAAA;QAAA;MAAA,GAAAjB,OAAA;IAAA;EACA;EAEAkB,QAAA;IACAC,SAAA,WAAAA,UAAA;MAAA,IAAAC,MAAA;MACA,OAAA7B,MAAA,CAAAmB,MAAA,CAAAzB,cAAA,EAAAoC,OAAA,WAAA/B,IAAA;QAAA,OAAA8B,MAAA,CAAAZ,MAAA,CAAAC,OAAA,gBAAAnB,IAAA;MAAA;IACA;IACAgC,KAAA,WAAAA,MAAA;MACA,YAAA7B,GAAA,CAAA8B,sBAAA,MAAAJ,SAAA;IACA;IACAK,cAAA,WAAAA,eAAA;MACA,YAAA/B,GAAA,CAAAgC,oBAAA,MAAAN,SAAA;IACA;EACA;AACA","ignoreList":[]}]}