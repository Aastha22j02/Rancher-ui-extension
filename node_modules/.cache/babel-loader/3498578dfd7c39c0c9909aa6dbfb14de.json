{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/mixins/resource-fetch.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/mixins/resource-fetch.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Vue","mapGetters","COUNT","MANAGEMENT","SETTING","DEFAULT_PERF_SETTING","ResourceFetchNamespaced","ResourceFetchApiPagination","PAGES","mixins","data","perfSetting","$store","getters","UI_PERFORMANCE","perfConfig","value","JSON","parse","e","console","warn","init","multipleResources","loadResources","resource","hasManualRefresh","watch","isTooManyItemsToAutoUpdate","force","incremental","fetchedResourceType","paginating","beforeDestroy","_this","dispatch","forEach","item","concat","currStore","type","computed","_objectSpread","refreshFlag","rows","_this2","currResource","find","loading","canPaginate","length","$fetchState","pending","neu","_this3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$fetch","fetchPageSecondaryResources","stop","methods","$initializeFetchData","arguments","undefined","storeType","__gatherResourceFetchData","$fetchType","_schema$attributes","push","schema","pagination","opt","set","that","finally","resourceCount","__getCountForResources","namespaceFilter","Math","ceil","attributes","namespaced","resourceNames","namespace","_this4","reduce","res","__getCountForResource","resourceName","_this$$store$getters$","_resourceCounts$names","_resourceCounts$summa","resourceCounts","counts","namespaces","count","summary","_this$perfConfig","_this$perfConfig2","_this$perfConfig3","_this$perfConfig4","manualDataRefreshEnabled","manualRefresh","enabled","manualDataRefreshThreshold","parseInt","threshold","incrementalLoadingEnabled","incrementalLoading","incrementalLoadingThreshold","resourcesForCount"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/mixins/resource-fetch.js"],"sourcesContent":["import Vue from 'vue';\nimport { mapGetters } from 'vuex';\nimport { COUNT, MANAGEMENT } from '@shell/config/types';\nimport { SETTING, DEFAULT_PERF_SETTING } from '@shell/config/settings';\nimport ResourceFetchNamespaced from '@shell/mixins/resource-fetch-namespaced';\nimport ResourceFetchApiPagination from '@shell/mixins/resource-fetch-api-pagination';\n\n// Number of pages to fetch when loading incrementally\nconst PAGES = 4;\n\nexport default {\n\n  mixins: [\n    ResourceFetchNamespaced,\n    ResourceFetchApiPagination\n  ],\n\n  data() {\n    // fetching the settings related to manual refresh from global settings\n    const perfSetting = this.$store.getters['management/byId'](MANAGEMENT.SETTING, SETTING.UI_PERFORMANCE);\n    let perfConfig = {};\n\n    if (perfSetting && perfSetting.value) {\n      try {\n        perfConfig = JSON.parse(perfSetting.value);\n      } catch (e) {\n        console.warn('ui-performance setting contains invalid data'); // eslint-disable-line no-console\n      }\n    } else {\n      perfConfig = DEFAULT_PERF_SETTING;\n    }\n\n    return {\n      perfConfig,\n      init:                       false,\n      multipleResources:          [],\n      loadResources:              [this.resource],\n      // manual refresh vars\n      hasManualRefresh:           false,\n      watch:                      true,\n      isTooManyItemsToAutoUpdate: false,\n      force:                      false,\n      // incremental loading vars\n      incremental:                false,\n      fetchedResourceType:        [],\n      paginating:                 null,\n    };\n  },\n\n  beforeDestroy() {\n    // make sure this only runs once, for the initialized instance\n    if (this.init) {\n      // clear up the store to make sure we aren't storing anything that might interfere with the next rendered list view\n      this.$store.dispatch('resource-fetch/clearData');\n\n      this.fetchedResourceType.forEach((item) => {\n        this.$store.dispatch(`${ item.currStore }/incrementLoadCounter`, item.type);\n      });\n    }\n  },\n\n  computed: {\n    ...mapGetters({ refreshFlag: 'resource-fetch/refreshFlag' }),\n    rows() {\n      const currResource = this.fetchedResourceType.find((item) => item.type === this.resource);\n\n      if (currResource) {\n        return this.$store.getters[`${ currResource.currStore }/all`](this.resource);\n      } else {\n        return [];\n      }\n    },\n    loading() {\n      if (this.canPaginate) {\n        return this.paginating;\n      }\n\n      return this.rows.length ? false : this.$fetchState.pending;\n    },\n  },\n\n  watch: {\n    async refreshFlag(neu) {\n      // this is where the data assignment will trigger the update of the list view...\n      if (this.init && neu) {\n        await this.$fetch();\n        if (this.canPaginate && this.fetchPageSecondaryResources) {\n          this.fetchPageSecondaryResources(true);\n        }\n      }\n    }\n  },\n\n  methods: {\n    // this defines all the flags needed for the mechanism\n    // to work. They should be defined based on the main list view\n    // resource that is to be displayed. The secondary resources\n    // fetched should follow what was defined (if it is manual and/or incremental)\n    $initializeFetchData(type, multipleResources = [], storeType) {\n      if (!this.init) {\n        const currStore = storeType || this.$store.getters['currentStore']();\n\n        this.__gatherResourceFetchData(type, multipleResources, currStore);\n\n        // make sure after init that, if we have a manual refresh, we always set the force = true\n        if (!this.watch) {\n          this.force = true;\n        }\n\n        if (this.isTooManyItemsToAutoUpdate) {\n          this.hasManualRefresh = true;\n        }\n      }\n    },\n    // data fetching for the mechanism\n    $fetchType(type, multipleResources = [], storeType) {\n      const currStore = storeType || this.$store.getters['currentStore']();\n\n      this.$initializeFetchData(type, multipleResources, currStore);\n\n      if (!this.fetchedResourceType.find((item) => item.type === type)) {\n        this.fetchedResourceType.push({\n          type,\n          currStore\n        });\n      }\n\n      const schema = this.$store.getters[`${ currStore }/schemaFor`](type);\n\n      if (this.canPaginate) {\n        if (!this.pagination) {\n          // This is the initial fetchType made when resource lists are created...\n          // when pagination is enabled we want to wait for the correct set of initial pagination settings to make the call\n          return;\n        }\n        const opt = {\n          hasManualRefresh: this.hasManualRefresh,\n          pagination:       { ...this.pagination },\n          force:            this.paginating !== null // Fix for manual refresh (before ripped out).\n        };\n\n        Vue.set(this, 'paginating', true);\n\n        const that = this;\n\n        return this.$store.dispatch(`${ currStore }/findPage`, {\n          type,\n          opt\n        })\n          .finally(() => Vue.set(that, 'paginating', false));\n      }\n\n      let incremental = 0;\n\n      if (this.incremental) {\n        const resourceCount = this.__getCountForResources([type], this.namespaceFilter, currStore);\n\n        incremental = Math.ceil(resourceCount / PAGES);\n      }\n\n      const opt = {\n        incremental,\n        watch:            this.watch,\n        force:            this.force,\n        hasManualRefresh: this.hasManualRefresh\n      };\n\n      if (schema?.attributes?.namespaced) { // Is this specific resource namespaced (could be primary or secondary resource)?\n        opt.namespaced = this.namespaceFilter; // namespaceFilter will only be populated if applicable for primary resource\n      }\n\n      return this.$store.dispatch(`${ currStore }/findAll`, {\n        type,\n        opt\n      });\n    },\n\n    __getCountForResources(resourceNames, namespace, storeType) {\n      const currStore = storeType || this.$store.getters['currentStore']();\n\n      return resourceNames.reduce((res, type) => res + this.__getCountForResource(type, namespace, currStore), 0);\n    },\n\n    __getCountForResource(resourceName, namespace, storeType) {\n      const resourceCounts = this.$store.getters[`${ storeType }/all`](COUNT)[0]?.counts[`${ resourceName }`]; // NB `rancher` store behaves differently, lacks counts but has resource\n      const resourceCount = namespace && resourceCounts?.namespaces ? resourceCounts?.namespaces[namespace]?.count : resourceCounts?.summary?.count;\n\n      return resourceCount || 0;\n    },\n\n    __gatherResourceFetchData(resourceName, multipleResources, currStore) {\n      // flag to prevent a first data update being triggered from the requestData watcher\n      this.init = true;\n\n      // manual refresh settings config\n      const manualDataRefreshEnabled = this.perfConfig?.manualRefresh?.enabled;\n      const manualDataRefreshThreshold = parseInt(this.perfConfig?.manualRefresh?.threshold || '0', 10);\n\n      // incremental loading settings config\n      const incrementalLoadingEnabled = this.perfConfig?.incrementalLoading?.enabled;\n      const incrementalLoadingThreshold = parseInt(this.perfConfig?.incrementalLoading?.threshold || '0', 10);\n\n      // other vars\n      this.multipleResources = multipleResources;\n      let resourceCount = 0;\n\n      // manual refresh vars\n      let watch = true;\n      let isTooManyItemsToAutoUpdate = false;\n\n      // incremental loading vars\n      let incremental = false;\n\n      // get resource counts\n      const resourcesForCount = this.multipleResources.length ? this.multipleResources : [resourceName];\n\n      resourceCount = this.__getCountForResources(resourcesForCount, this.namespaceFilter, currStore);\n\n      // manual refresh check\n      if (manualDataRefreshEnabled && resourceCount >= manualDataRefreshThreshold) {\n        watch = false;\n        isTooManyItemsToAutoUpdate = true;\n      } else if (this.canPaginate) {\n        isTooManyItemsToAutoUpdate = true;\n      }\n\n      // incremental loading check\n      incremental = incrementalLoadingEnabled && incrementalLoadingThreshold > 0 && resourceCount >= incrementalLoadingThreshold;\n\n      // pass on the flag that controls the appearance of the manual refresh button on the sortable table\n      this.$store.dispatch('resource-fetch/updateIsTooManyItems', isTooManyItemsToAutoUpdate);\n\n      // set vars on mixin to be used on $fetchType\n      this.watch = watch;\n      this.isTooManyItemsToAutoUpdate = isTooManyItemsToAutoUpdate;\n      this.incremental = incremental;\n    },\n  },\n};\n"],"mappings":"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","ignoreList":[]}]}