{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/fleet.cattle.io.gitrepo.js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/fleet.cattle.io.gitrepo.js","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Vue","convert","matching","convertSelectorObj","jsyaml","escapeHtml","randomStr","FLEET","FLEET_ANNOTATIONS","addObject","addObjects","findBy","insertAt","set","SteveModel","STATES_ENUM","colorForState","mapStateToEnum","primaryDisplayStatusFromCount","stateDisplay","stateSort","NAME","quacksLikeAHash","str","match","GitRepo","_SteveModel","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","applyDefaults","spec","meta","metadata","namespace","$rootGetters","repo","branch","revision","paths","clientSecretName","enabled","get","_this$spec","_this$spec2","out","_get","_getPrototypeOf","prototype","action","label","icon","bulkable","links","update","paused","divider","pause","save","unpause","forceUpdate","now","forceSyncGeneration","_this$spec3","_this$metadata","state","name","workspace","$getters","WORKSPACE","clusters","groups","clusterGroups","id","local","targetClusters","targets","_iterator","_createForOfIteratorHelper","_step","s","n","done","tgt","clusterName","cluster","clusterGroup","group","clusterGroupSelector","expressions","matchingGroups","_iterator2","_step2","err","e","f","clusterSelector","matchingClusters","github","replace","_this$status","hash","status","commit","substr","concat","mode","advanced","dump","length","target","Object","keys","matchLabels","matchExpressions","CLUSTER_NAME","operator","values","modeDisplay","t","_this","all","BUNDLE","filter","bundle","repoName","namespacedName","startsWith","bundles","_this2","bds","BUNDLE_DEPLOYMENT","bd","_bd$metadata","labels","_this$status2","_this$status3","_this3","resources","conditions","_iterator3","_step3","_loop","_this3$bundleDeployme","c","clusterBundleDeploymentResources","bundleDeployments","find","_bd$metadata2","CLUSTER","forEach","r","i","_r$perClusterState","_r$perClusterState2","_clusterBundleDeploym","perEntry","perClusterState","x","clusterId","tooMany","UNKNOWN","READY","color","display","detailLocation","params","product","resource","type","push","tableKey","kind","apiVersion","clusterLabel","nameDisplay","stateBackground","bundleDeploymentStatus","creationTimestamp","createdAt","_this$status4","_this$status5","ready","readyClusters","total","desiredReadyClusters","unready","clusterStatuses","resourcesStatuses","reduce","prev","curr","resourceCounts","_defineProperty","desiredReady","map","_clusterStatuses$key","displayStatus","_objectSpread","default"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/fleet.cattle.io.gitrepo.js"],"sourcesContent":["import Vue from 'vue';\nimport { convert, matching, convertSelectorObj } from '@shell/utils/selector';\nimport jsyaml from 'js-yaml';\nimport { escapeHtml, randomStr } from '@shell/utils/string';\nimport { FLEET } from '@shell/config/types';\nimport { FLEET as FLEET_ANNOTATIONS } from '@shell/config/labels-annotations';\nimport { addObject, addObjects, findBy, insertAt } from '@shell/utils/array';\nimport { set } from '@shell/utils/object';\nimport SteveModel from '@shell/plugins/steve/steve-class';\nimport {\n  STATES_ENUM, colorForState, mapStateToEnum, primaryDisplayStatusFromCount, stateDisplay, stateSort\n} from '@shell/plugins/dashboard-store/resource-class';\nimport { NAME } from '@shell/config/product/explorer';\n\nfunction quacksLikeAHash(str) {\n  if (str.match(/^[a-f0-9]{40,}$/i)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport default class GitRepo extends SteveModel {\n  applyDefaults() {\n    const spec = this.spec || {};\n    const meta = this.metadata || {};\n\n    meta.namespace = this.$rootGetters['workspace'];\n\n    spec.repo = spec.repo || '';\n\n    if (!spec.branch && !spec.revision) {\n      spec.branch = 'master';\n    }\n\n    spec.paths = spec.paths || [];\n    spec.clientSecretName = spec.clientSecretName || null;\n\n    Vue.set(spec, 'correctDrift', { enabled: false });\n\n    set(this, 'spec', spec);\n    set(this, 'metadata', meta);\n  }\n\n  get _availableActions() {\n    const out = super._availableActions;\n\n    insertAt(out, 0, {\n      action:   'pause',\n      label:    'Pause',\n      icon:     'icon icon-pause',\n      bulkable: true,\n      enabled:  !!this.links.update && !this.spec?.paused\n    });\n\n    insertAt(out, 1, {\n      action:   'unpause',\n      label:    'Unpause',\n      icon:     'icon icon-play',\n      bulkable: true,\n      enabled:  !!this.links.update && this.spec?.paused === true\n    });\n\n    insertAt(out, 2, {\n      action:   'forceUpdate',\n      label:    'Force Update',\n      icon:     'icon icon-refresh',\n      bulkable: true,\n      enabled:  !!this.links.update\n    });\n\n    insertAt(out, 3, { divider: true });\n\n    return out;\n  }\n\n  pause() {\n    this.spec.paused = true;\n    this.save();\n  }\n\n  unpause() {\n    this.spec.paused = false;\n    this.save();\n  }\n\n  forceUpdate() {\n    const now = this.spec.forceSyncGeneration || 1;\n\n    this.spec.forceSyncGeneration = now + 1;\n    this.save();\n  }\n\n  get state() {\n    if (this.spec?.paused === true) {\n      return 'paused';\n    }\n\n    return this.metadata?.state?.name || 'unknown';\n  }\n\n  get targetClusters() {\n    const workspace = this.$getters['byId'](FLEET.WORKSPACE, this.metadata.namespace);\n    const clusters = workspace?.clusters || [];\n    const groups = workspace?.clusterGroups || [];\n\n    if (workspace?.id === 'fleet-local') {\n      const local = findBy(groups, 'id', 'fleet-local/default');\n\n      if (local) {\n        return local.targetClusters;\n      }\n\n      return [];\n    }\n\n    if (!this.spec.targets) {\n      return [];\n    }\n\n    const out = [];\n\n    for (const tgt of this.spec.targets) {\n      if (tgt.clusterName) {\n        const cluster = findBy(clusters, 'metadata.name', tgt.clusterName);\n\n        if (cluster) {\n          addObject(out, cluster);\n        }\n      } else if (tgt.clusterGroup) {\n        const group = findBy(groups, {\n          'metadata.namespace': this.metadata.namespace,\n          'metadata.name':      tgt.clusterGroup,\n        });\n\n        if (group) {\n          addObjects(out, group.targetClusters);\n        }\n      } else if (tgt.clusterGroupSelector) {\n        const expressions = convertSelectorObj(tgt.clusterGroupSelector);\n        const matchingGroups = matching(groups, expressions);\n\n        for (const group of matchingGroups) {\n          addObjects(out, group.targetClusters);\n        }\n      } else if (tgt.clusterSelector) {\n        const expressions = convertSelectorObj(tgt.clusterSelector);\n        const matchingClusters = matching(clusters, expressions);\n\n        addObjects(out, matchingClusters);\n      }\n    }\n\n    return out;\n  }\n\n  get github() {\n    const match = this.spec.repo.match(/^https?:\\/\\/github\\.com\\/(.*?)(\\.git)?\\/*$/);\n\n    if (match) {\n      return match[1];\n    }\n\n    return false;\n  }\n\n  get repoIcon() {\n    if (this.github) {\n      return 'icon icon-github';\n    }\n\n    return '';\n  }\n\n  get repoDisplay() {\n    let repo = this.spec.repo;\n\n    repo = repo.replace(/.git$/, '');\n    repo = repo.replace(/^https:\\/\\//, '');\n    repo = repo.replace(/\\/+$/, '');\n\n    if (this.github) {\n      return this.github;\n    }\n\n    return repo;\n  }\n\n  get commitDisplay() {\n    const spec = this.spec;\n    const hash = this.status?.commit?.substr(0, 7);\n\n    if (!spec || !spec.repo) {\n      return null;\n    }\n\n    if (spec.revision && quacksLikeAHash(spec.revision)) {\n      return spec.revision.substr(0, 7);\n    } else if (spec.revision) {\n      return spec.revision;\n    } else if (spec.branch) {\n      return spec.branch + (hash ? ` @ ${ hash }` : '');\n    }\n\n    return hash;\n  }\n\n  get targetInfo() {\n    let mode = null;\n    let cluster = null;\n    let clusterGroup = null;\n    let advanced = null;\n\n    const targets = this.spec.targets || [];\n\n    advanced = jsyaml.dump(targets);\n\n    if (advanced === '[]\\n') {\n      advanced = `# - name:\n#  clusterSelector:\n#    matchLabels:\n#     foo: bar\n#    matchExpressions:\n#     - key: foo\n#       op: In\n#       values: [bar, baz]\n#  clusterGroup: foo\n#  clusterGroupSelector:\n#    matchLabels:\n#     foo: bar\n#    matchExpressions:\n#     - key: foo\n#       op: In\n#       values: [bar, baz]\n`;\n    }\n\n    if (this.metadata.namespace === 'fleet-local') {\n      mode = 'local';\n    } else if (!targets.length) {\n      mode = 'none';\n    } else if (targets.length === 1) {\n      const target = targets[0];\n\n      if (Object.keys(target).length > 1) {\n        // There are multiple properties in a single target, so use the 'advanced' mode\n        // (otherwise any existing content is nuked for what we provide)\n        mode = 'advanced';\n      } else if (target.clusterGroup) {\n        clusterGroup = target.clusterGroup;\n\n        if (!mode) {\n          mode = 'clusterGroup';\n        }\n      } else if (target.clusterName) {\n        mode = 'cluster';\n        cluster = target.clusterName;\n      } else if (target.clusterSelector) {\n        if (Object.keys(target.clusterSelector).length === 0) {\n          mode = 'all';\n        } else {\n          const expressions = convert(target.clusterSelector.matchLabels, target.clusterSelector.matchExpressions);\n\n          if (expressions.length === 1 &&\n            expressions[0].key === FLEET_ANNOTATIONS.CLUSTER_NAME &&\n            expressions[0].operator === 'In' &&\n            expressions[0].values.length === 1\n          ) {\n            cluster = expressions[0].values[0];\n            if (!mode) {\n              mode = 'cluster';\n            }\n          }\n        }\n      }\n    }\n\n    if (!mode) {\n      mode = 'advanced';\n    }\n\n    return {\n      mode,\n      modeDisplay: this.t(`fleet.gitRepo.targetDisplay.\"${ mode }\"`),\n      cluster,\n      clusterGroup,\n      advanced\n    };\n  }\n\n  get groupByLabel() {\n    const name = this.metadata.namespace;\n\n    if (name) {\n      return this.$rootGetters['i18n/t']('resourceTable.groupLabel.workspace', { name: escapeHtml(name) });\n    } else {\n      return this.$rootGetters['i18n/t']('resourceTable.groupLabel.notInAWorkspace');\n    }\n  }\n\n  get bundles() {\n    const all = this.$getters['all'](FLEET.BUNDLE);\n\n    return all.filter((bundle) => bundle.repoName === this.name &&\n      bundle.namespace === this.namespace &&\n      bundle.namespacedName.startsWith(`${ this.namespace }:${ this.name }`));\n  }\n\n  get bundlesReady() {\n    if (this.bundles && this.bundles.length) {\n      return this.bundles.filter((bundle) => bundle.state === 'active');\n    }\n\n    return 0;\n  }\n\n  get bundleDeployments() {\n    const bds = this.$getters['all'](FLEET.BUNDLE_DEPLOYMENT);\n\n    return bds.filter((bd) => bd.metadata?.labels?.['fleet.cattle.io/repo-name'] === this.name);\n  }\n\n  get resourcesStatuses() {\n    const clusters = this.targetClusters || [];\n    const resources = this.status?.resources || [];\n    const conditions = this.status?.conditions || [];\n\n    const out = [];\n\n    for (const c of clusters) {\n      const clusterBundleDeploymentResources = this.bundleDeployments\n        .find((bd) => bd.metadata?.labels?.[FLEET_ANNOTATIONS.CLUSTER] === c.metadata.name)\n        ?.status?.resources || [];\n\n      resources.forEach((r, i) => {\n        let namespacedName = r.name;\n\n        if (r.namespace) {\n          namespacedName = `${ r.namespace }:${ r.name }`;\n        }\n\n        let state = r.state;\n        const perEntry = r.perClusterState?.find((x) => x.clusterId === c.id);\n        const tooMany = r.perClusterState?.length >= 10 || false;\n\n        if (perEntry) {\n          state = perEntry.state;\n        } else if (tooMany) {\n          state = STATES_ENUM.UNKNOWN;\n        } else {\n          state = STATES_ENUM.READY;\n        }\n\n        const color = colorForState(state).replace('text-', 'bg-');\n        const display = stateDisplay(state);\n\n        const detailLocation = {\n          name:   `c-cluster-product-resource${ r.namespace ? '-namespace' : '' }-id`,\n          params: {\n            product:   NAME,\n            cluster:   c.metadata.labels[FLEET_ANNOTATIONS.CLUSTER_NAME],\n            resource:  r.type,\n            namespace: r.namespace,\n            id:        r.name,\n          }\n        };\n\n        out.push({\n          key:                    `${ r.id }-${ c.id }-${ r.type }-${ r.namespace }-${ r.name }`,\n          tableKey:               `${ r.id }-${ c.id }-${ r.type }-${ r.namespace }-${ r.name }-${ randomStr(8) }`,\n          kind:                   r.kind,\n          apiVersion:             r.apiVersion,\n          type:                   r.type,\n          id:                     r.id,\n          namespace:              r.namespace,\n          name:                   r.name,\n          clusterId:              c.id,\n          clusterLabel:           c.metadata.labels[FLEET_ANNOTATIONS.CLUSTER_NAME],\n          clusterName:            c.nameDisplay,\n          state:                  mapStateToEnum(state),\n          stateBackground:        color,\n          stateDisplay:           display,\n          stateSort:              stateSort(color, display),\n          namespacedName,\n          detailLocation,\n          conditions:             conditions[i],\n          bundleDeploymentStatus: clusterBundleDeploymentResources?.[i],\n          creationTimestamp:      clusterBundleDeploymentResources?.[i]?.createdAt\n        });\n      });\n    }\n\n    return out;\n  }\n\n  get clusterInfo() {\n    const ready = this.status?.readyClusters || 0;\n    const total = this.status?.desiredReadyClusters || 0;\n\n    return {\n      ready,\n      unready: total - ready,\n      total,\n    };\n  }\n\n  get clusterResourceStatus() {\n    const clusterStatuses = this.resourcesStatuses.reduce((prev, curr) => {\n      const { clusterId, clusterLabel } = curr;\n\n      const state = curr.state;\n\n      if (!prev[clusterId]) {\n        prev[clusterId] = {\n          clusterLabel,\n          resourceCounts: { [state]: 0, desiredReady: 0 }\n\n        };\n      }\n\n      if (!prev[clusterId].resourceCounts[state]) {\n        prev[clusterId].resourceCounts[state] = 0;\n      }\n\n      prev[clusterId].resourceCounts[state] += 1;\n      prev[clusterId].resourceCounts.desiredReady += 1;\n\n      return prev;\n    }, {});\n\n    const values = Object.keys(clusterStatuses).map((key) => {\n      const { clusterLabel, resourceCounts } = clusterStatuses[key];\n\n      return {\n        clusterId: key,\n        clusterLabel, // FLEET LABEL\n        status:    {\n          displayStatus:  primaryDisplayStatusFromCount(resourceCounts),\n          resourceCounts: { ...resourceCounts }\n        }\n      };\n    });\n\n    return values;\n  }\n\n  get clustersList() {\n    return this.$getters['all'](FLEET.CLUSTER);\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}