{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/EmberPage.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/EmberPage.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Loading","mapGetters","mapState","NAME","MANAGER","CAPI","MANAGEMENT","SETTING","findEmberPage","clearEmberInactiveTimer","startEmberInactiveTimer","EMBER_FRAME","EMBER_FRAME_HIDE_CLASS","PAGE_CHECK_TIMEOUT","WINDOW_MANAGER","INTERCEPTS","name","params","cluster","product","resource","RANCHER_CLUSTER","page","components","props","src","type","String","required","pop","Boolean","default","inline","forceInlineReuse","forceNew","data","iframeEl","loaded","loadRequired","emberCheck","error","heightSync","frameHeight","frameWidth","wmHeight","showHeaderBanner","showFooterBanner","computed","_objectSpread","theme","locale","$store","getters","watch","notifyTheme","nue","old","initFrame","open","syncSize","clearTimeout","style","height","syncLocale","mounted","window","addEventListener","receiveMessage","beforeDestroy","removeEventListener","remove","classList","add","cancel","methods","addBannerClasses","elm","prefix","concat","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","bannerSetting","parsed","ready","lastDidLoad","doNotReuse","inlineChanged","pageUrl","response","frameParent","_iframeEl$contentWind","currentUrl","wrap","_callee$","_context","prev","next","BANNERS","sent","JSON","parse","value","showHeader","showFooter","_unused","getAttribute","parentElement","document","body","process","env","dev","$axios","CancelToken","source","location","origin","head","timeout","cancelToken","token","status","t0","isCancel","abrupt","createElement","setAttribute","getElementById","appendChild","append","contentWindow","scrollTo","postMessage","action","pathname","trimURL","$refs","emberPage","stop","_this2","setTimeout","dosyncSize","doc","app","h","offsetHeight","w","offsetWidth","width","wm","wmh","emberTheme","url","endsWith","substr","length","event","msg","$router","replace","$emit","target","dest","isCurrentRoute","setLoaded","fillRoute","state","updateFrameVisibility","_this$iframeEl$conten","dispatch","primary","getComputedStyle","getPropertyValue","primaryText","route","_typeof","clusterId","productId","current","$route","same","Object","keys","forEach","p","_iframeEl$contentWind2","ls","sideLoadLanguage"],"sources":["node_modules/@rancher/shell/components/EmberPage.vue"],"sourcesContent":["<script>\nimport Loading from '@shell/components/Loading';\nimport { mapGetters, mapState } from 'vuex';\nimport { NAME as MANAGER } from '@shell/config/product/manager';\nimport { CAPI, MANAGEMENT } from '@shell/config/types';\nimport { SETTING } from '@shell/config/settings';\nimport { findEmberPage, clearEmberInactiveTimer, startEmberInactiveTimer, EMBER_FRAME } from '@shell/utils/ember-page';\n\nconst EMBER_FRAME_HIDE_CLASS = 'ember-iframe-hidden';\nconst PAGE_CHECK_TIMEOUT = 30000;\nconst WINDOW_MANAGER = 'windowmanager';\n\n// Pages that we should intercept when loaded in the IFRAME and instead\n// navigate to a page in Cluster Dashboard\n// example if the Ember clusters page that is navigated to when the user presses cancel on some pages\n// we intercept this and go the the vue Clusters page instead\nconst INTERCEPTS = {\n  'global-admin.clusters.index': {\n    name:   'c-cluster-product-resource',\n    params: {\n      cluster:  '',\n      product:  MANAGER,\n      resource: CAPI.RANCHER_CLUSTER,\n    }\n  },\n  'authenticated.cluster.index': {\n    name:   'c-cluster-product-resource',\n    params: {\n      cluster:  '',\n      product:  MANAGER,\n      resource: CAPI.RANCHER_CLUSTER,\n    }\n  },\n  'global-admin.catalog': {\n    name:   'c-cluster-mcapps-pages-page',\n    params: {\n      cluster: 'local',\n      product: 'mcapps',\n      page:    'catalogs'\n    }\n  },\n  'authenticated.cluster.istio.cluster-setting': { name: 'c-cluster-explorer-tools' },\n};\n\nexport default {\n  components: { Loading },\n\n  props: {\n    src: {\n      type:     String,\n      required: true\n    },\n    pop: {\n      type:    Boolean,\n      default: false\n    },\n    inline: {\n      type:    String,\n      default: ''\n    },\n    // force inline pages to reuse cached Ember pages\n    forceInlineReuse: {\n      type:    Boolean,\n      default: false\n    },\n    // Do not reuse cached pages\n    forceNew: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      iframeEl:         null,\n      loaded:           true,\n      loadRequired:     false,\n      emberCheck:       null,\n      error:            false,\n      heightSync:       null,\n      frameHeight:      -1,\n      frameWidth:       -1,\n      wmHeight:         -1,\n      showHeaderBanner: false,\n      showFooterBanner: false,\n    };\n  },\n\n  computed: {\n    ...mapGetters({ theme: 'prefs/theme' }),\n    ...mapGetters(['clusterId', 'productId']),\n    ...mapState('wm', ['open']),\n    locale() {\n      return this.$store.getters['i18n/current']();\n    }\n  },\n\n  watch: {\n    theme(theme) {\n      this.notifyTheme(theme);\n    },\n\n    // Update when source property changes\n    src(nue, old) {\n      if (nue !== old) {\n        this.initFrame();\n      }\n    },\n\n    // Watch on the window manager opening/closing\n    open(nue, old) {\n      if (nue !== old) {\n        if (nue) {\n          this.syncSize();\n        } else {\n          clearTimeout(this.heightSync);\n          const iframeEl = findEmberPage();\n\n          // Reset the height when the window manager is closed\n          this.heightSync = null;\n          this.wmHeight = -1;\n\n          if (iframeEl) {\n            iframeEl.style.height = '';\n          }\n        }\n      }\n    },\n    locale() {\n      this.syncLocale();\n    }\n  },\n\n  mounted() {\n    // Embedded page visited, so cancel time to remove IFRAME when inactive\n    clearEmberInactiveTimer();\n    window.addEventListener('message', this.receiveMessage);\n    this.initFrame();\n  },\n\n  beforeDestroy() {\n    window.removeEventListener('message', this.receiveMessage);\n\n    if (this.heightSync) {\n      clearTimeout(this.heightSync);\n    }\n\n    if (this.inline) {\n      const iframeEl = findEmberPage();\n\n      // Remove the IFRAME - we can't reuse it one its been moved inline\n      if (iframeEl) {\n        iframeEl.remove();\n      }\n    }\n\n    // Hide the iframe\n    if (this.iframeEl) {\n      this.iframeEl.classList.add(EMBER_FRAME_HIDE_CLASS);\n    }\n\n    // Cancel any pending http request to check Ember UI availability\n    if (this.emberCheck) {\n      this.emberCheck.cancel('User left page');\n    }\n\n    // Set up a timer to remove the IFrame after a period of inactivity\n    startEmberInactiveTimer();\n  },\n\n  methods: {\n    addBannerClasses(elm, prefix) {\n      if (!elm) {\n        return;\n      }\n\n      elm.classList.remove(`${ prefix }-top-banner`);\n      elm.classList.remove(`${ prefix }-one-banner`);\n      elm.classList.remove(`${ prefix }-two-banners`);\n\n      if (this.showHeaderBanner) {\n        elm.classList.add(`${ prefix }-top-banner`);\n        if (this.showFooterBanner) {\n          elm.classList.add(`${ prefix }-two-banners`);\n        }\n      } else if (this.showFooterBanner) {\n        elm.classList.add(`${ prefix }-one-banner`);\n      }\n    },\n\n    async initFrame() {\n      const bannerSetting = await this.$store.getters['management/byId'](MANAGEMENT.SETTING, SETTING.BANNERS);\n\n      try {\n        const parsed = JSON.parse(bannerSetting.value);\n\n        this.showHeaderBanner = parsed.showHeader === 'true';\n        this.showFooterBanner = parsed.showFooter === 'true';\n      } catch {}\n\n      this.loaded = true;\n      this.loadRequired = false;\n\n      // Get the existing iframe if it exists\n      let iframeEl = findEmberPage();\n\n      // If the iframe already exists, check if it is ready for us to reuse\n      // by navigating within the app that is already loaded\n      if (iframeEl !== null) {\n        const ready = iframeEl.getAttribute('data-ready') === 'true';\n        const lastDidLoad = iframeEl.getAttribute('data-loaded') === 'true';\n        const doNotReuse = (!!this.inline && !this.forceInlineReuse) || this.forceNew;\n        // Was not inline but now is - can't reuse\n        const inlineChanged = !!this.inline && (iframeEl.parentElement === document.body);\n\n        if (!ready || doNotReuse || !lastDidLoad || inlineChanged) {\n          iframeEl.remove();\n          iframeEl = null;\n        }\n      }\n\n      if (iframeEl === null && process.env.dev) {\n        // Fetch a page to check that the Ember UI is available\n        try {\n          this.error = false;\n          this.loaded = false;\n          this.emberCheck = this.$axios.CancelToken.source();\n\n          // Make a head request to a known asset of the Ember UI\n          const pageUrl = `${ window.location.origin }/assets/images/logos/rke.svg`;\n          const response = await this.$axios.head(pageUrl, {\n            timeout:     PAGE_CHECK_TIMEOUT,\n            cancelToken: this.emberCheck.token,\n          });\n\n          if (response.status !== 200) {\n            this.loaded = true;\n            this.error = true;\n          }\n        } catch (e) {\n          if (!this.$axios.isCancel(e)) {\n            this.loaded = true;\n            this.error = true;\n          }\n        }\n      }\n\n      if (this.error) {\n        return;\n      }\n\n      if (iframeEl === null) {\n        iframeEl = document.createElement('iframe');\n        iframeEl.setAttribute('id', EMBER_FRAME);\n        iframeEl.setAttribute('data-testid', EMBER_FRAME);\n        iframeEl.classList.add(EMBER_FRAME_HIDE_CLASS);\n\n        if (this.inline) {\n          const frameParent = document.getElementById(this.inline);\n\n          frameParent.appendChild(iframeEl);\n        } else {\n          document.body.append(iframeEl);\n        }\n        iframeEl.setAttribute('src', this.src);\n      } else {\n        // Reset scroll position to top\n        if (iframeEl.contentWindow?.scrollTo) {\n          iframeEl.contentWindow.scrollTo(0, 0);\n        }\n\n        // Post a message to navigate within the existing app\n        iframeEl.contentWindow.postMessage({\n          action: 'navigate',\n          name:   this.src\n        });\n\n        // Ensure iframe gets the latest theme if it has changed\n        this.notifyTheme(this.theme);\n\n        const currentUrl = iframeEl.contentWindow.location.pathname;\n        const src = this.trimURL(this.src);\n\n        if (src !== currentUrl) {\n          iframeEl.classList.add(EMBER_FRAME_HIDE_CLASS);\n        } else {\n          iframeEl.classList.remove(EMBER_FRAME_HIDE_CLASS);\n        }\n      }\n\n      this.iframeEl = iframeEl;\n\n      if (!this.inline) {\n        iframeEl.classList.add('ember-iframe');\n        iframeEl.classList.remove('ember-iframe-inline');\n        this.addBannerClasses(this.$refs.emberPage, 'fixed');\n        this.addBannerClasses(iframeEl, 'ember-iframe');\n\n        // If the window manager is open, sync the size\n        if (this.open) {\n          this.syncSize();\n        }\n      } else {\n        iframeEl.classList.remove('ember-iframe');\n        iframeEl.classList.add('ember-iframe-inline');\n        iframeEl.height = 0;\n        this.syncSize();\n      }\n    },\n\n    syncSize() {\n      if (this.heightSync) {\n        clearTimeout(this.heightSync);\n      }\n\n      this.heightSync = setTimeout(() => {\n        this.dosyncSize();\n        this.syncSize();\n      }, 500);\n    },\n\n    dosyncSize() {\n      if (this.inline) {\n        const iframeEl = findEmberPage();\n        const doc = iframeEl.contentWindow.document;\n        const app = doc.getElementById('application');\n        const h = app?.offsetHeight;\n\n        if (h && this.frameHeight !== h) {\n          this.frameHeight = h;\n          iframeEl.height = h;\n        }\n\n        const frameParent = document.getElementById(this.inline);\n        const w = frameParent.offsetWidth;\n\n        if (w && this.frameWidth !== w) {\n          this.frameWidth = w;\n          iframeEl.width = w;\n        }\n      } else {\n        // Ensure the height takes into count the window manger height\n        const wm = document.getElementById(WINDOW_MANAGER);\n\n        if (wm) {\n          const wmh = wm.offsetHeight;\n\n          if (wmh !== this.wmHeight) {\n            // Adjust the bottom\n            const iframeEl = findEmberPage();\n\n            iframeEl.style.height = `calc(100vh - var(--header-height) - ${ wmh }px)`;\n            this.wmHeight = wmh;\n          }\n        }\n      }\n    },\n\n    notifyTheme(theme) {\n      const iframeEl = findEmberPage();\n\n      if (iframeEl) {\n        const emberTheme = theme === 'light' ? 'ui-light' : 'ui-dark';\n\n        // Ensure the embedded UI uses the correct theme\n        iframeEl.contentWindow.postMessage({\n          action: 'set-theme',\n          name:   emberTheme\n        });\n      }\n    },\n\n    trimURL(url) {\n      if (url && url.endsWith('/')) {\n        url = url.substr(0, url.length - 1);\n      }\n\n      return url;\n    },\n\n    // We use PostMessage between the Embedded Ember UI and the Dashboard UI\n    receiveMessage(event) {\n      const msg = event.data;\n\n      if (msg.action === 'navigate') {\n        this.$router.replace({\n          name:   'c-cluster-explorer',\n          params: { cluster: msg.cluster }\n        });\n      } else if (msg.action === 'before-navigation') {\n        this.$emit('before-nav', msg.target);\n\n        // Ember willTransition event\n        if (INTERCEPTS[msg.target]) {\n          const dest = INTERCEPTS[msg.target];\n\n          if (this.isCurrentRoute(dest)) {\n            this.setLoaded(true);\n\n            return;\n          }\n\n          this.setLoaded(false);\n          this.$router.replace(this.fillRoute(dest));\n        }\n      } else if (msg.action === 'loading') {\n        this.setLoaded(!msg.state);\n        this.updateFrameVisibility();\n      } else if (msg.action === 'ready') {\n        // Echo back a ping\n        this.iframeEl.contentWindow.postMessage({ action: 'echo-back' });\n        this.iframeEl.setAttribute('data-ready', true);\n\n        const doc = this.iframeEl.contentWindow?.document?.body;\n\n        if (this.inline) {\n          doc.classList.add('embedded-no-overflow');\n        } else {\n          doc.classList.remove('embedded-no-overflow');\n        }\n        this.syncLocale();\n      } else if (msg.action === 'need-to-load') {\n        this.loadRequired = true;\n      } else if (msg.action === 'did-transition') {\n        if (!this.loadRequired) {\n          this.setLoaded(true);\n          this.updateFrameVisibility();\n          this.dosyncSize();\n        }\n      } else if (msg.action === 'dashboard') {\n        this.iframeEl.setAttribute('data-ready', false);\n        this.$router.replace(msg.page);\n      } else if (msg.action === 'reload') {\n        this.loaded = false;\n        this.iframeEl.remove();\n        this.initFrame();\n      } else if ( msg.action === 'logout' ) {\n        this.loaded = false;\n        this.iframeEl.remove();\n        this.initFrame();\n        this.$store.dispatch('auth/logout');\n      }\n    },\n\n    setLoaded(loaded) {\n      this.loaded = loaded;\n      if (this.iframeEl) {\n        this.iframeEl.setAttribute('data-loaded', loaded);\n      }\n    },\n\n    updateFrameVisibility() {\n      if (this.loaded) {\n        if (this.iframeEl) {\n          this.iframeEl.classList.remove(EMBER_FRAME_HIDE_CLASS);\n\n          // Notify the embedded UI of the primary and primary text colors\n          const primary = window.getComputedStyle(document.body).getPropertyValue('--primary');\n          const primaryText = window.getComputedStyle(document.body).getPropertyValue('--primary-text');\n\n          this.iframeEl.contentWindow.postMessage({\n            action: 'colors',\n            primary,\n            primaryText,\n          });\n        }\n      }\n    },\n\n    fillRoute(route) {\n      if (typeof route === 'object') {\n        // Fill in standard params\n        if (route.params) {\n          if ('cluster' in route.params) {\n            route.params.cluster = this.clusterId;\n          }\n          if ('product' in route.params) {\n            route.params.product = this.productId;\n          }\n        }\n      }\n\n      return route;\n    },\n\n    isCurrentRoute(route) {\n      const current = this.$route;\n\n      if (current.name === route.name) {\n        let same = true;\n\n        Object.keys(current.params).forEach((p) => {\n          if (route.params[p] !== current.params[p]) {\n            same = false;\n          }\n        });\n\n        return same;\n      }\n\n      return false;\n    },\n\n    syncLocale() {\n      const iframeEl = findEmberPage();\n\n      iframeEl?.contentWindow?.ls('user-language')?.sideLoadLanguage(this.locale);\n    }\n  }\n};\n</script>\n\n<template>\n  <div\n    ref=\"emberPage\"\n    class=\"ember-page\"\n  >\n    <Loading\n      v-if=\"!inline\"\n      :loading=\"!loaded\"\n      mode=\"content\"\n      :no-delay=\"true\"\n    />\n    <div\n      v-if=\"inline && !loaded\"\n      v-clean-html=\"t('generic.loading', {}, true)\"\n      class=\"inline-loading\"\n    />\n    <div\n      v-if=\"error\"\n      class=\"ember-page-error\"\n    >\n      <div>{{ t('embedding.unavailable') }}</div>\n      <button\n        class=\"btn role-primary\"\n        @click=\"initFrame()\"\n      >\n        {{ t('embedding.retry') }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  $banner-height: 2em;\n\n  .fixed-top-banner {\n    top: calc(#{$banner-height} + var(--header-height));\n  }\n\n  .fixed-one-banner {\n    height: calc(100vh - var(--header-height) - #{$banner-height});\n  }\n\n  .fixed-two-banners {\n    height: calc(100vh - var(--header-height) - #{$banner-height} - #{$banner-height});\n  }\n\n  .ember-page {\n    display: flex;\n    height: 100%;\n    padding: 0;\n  }\n\n  .frame {\n    flex: 1;\n    visibility: hidden;\n  }\n  .frame.pop {\n    margin: -20px;\n  }\n\n  .loading {\n    visibility: visible;\n  }\n  .ember-page-error {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    flex-direction: column;\n    justify-content: center;\n    > div {\n      font-size: 20px;\n      padding-bottom: 20px;\n    }\n  }\n  .inline-loading {\n    border: 1px solid var(--border);\n    border-radius: 5px;\n    padding: 10px;\n    text-align: center;\n    width: 100%;\n  }\n</style>\n<style lang=\"scss\">\n  $banner-height: 2em;\n\n  .ember-iframe {\n    border: 0;\n    left: calc(var(--nav-width) + $app-bar-collapsed-width);\n    height: calc(100vh - var(--header-height));\n    position: absolute;\n    top: var(--header-height);\n    width: calc(100vw - var(--nav-width) - $app-bar-collapsed-width);\n    visibility: show;\n  }\n\n  .ember-iframe-top-banner {\n    top: calc(#{$banner-height} + var(--header-height));\n  }\n\n  .ember-iframe-one-banner {\n    height: calc(100vh - var(--header-height) - #{$banner-height});\n  }\n\n  .ember-iframe-two-banners {\n    height: calc(100vh - var(--header-height) - #{$banner-height} - #{$banner-height});\n  }\n\n  .ember-iframe-inline {\n    border: 0;\n    overflow: hidden;\n  }\n\n  .ember-iframe-hidden {\n    visibility: hidden;\n  }\n</style>\n"],"mappings":"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","ignoreList":[]}]}