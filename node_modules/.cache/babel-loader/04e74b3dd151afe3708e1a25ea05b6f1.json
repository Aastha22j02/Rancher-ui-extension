{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/PromptRemove.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/PromptRemove.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmZ1bmN0aW9uIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHIsIGUpIHsgdmFyIHQgPSAidW5kZWZpbmVkIiAhPSB0eXBlb2YgU3ltYm9sICYmIHJbU3ltYm9sLml0ZXJhdG9yXSB8fCByWyJAQGl0ZXJhdG9yIl07IGlmICghdCkgeyBpZiAoQXJyYXkuaXNBcnJheShyKSB8fCAodCA9IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShyKSkgfHwgZSAmJiByICYmICJudW1iZXIiID09IHR5cGVvZiByLmxlbmd0aCkgeyB0ICYmIChyID0gdCk7IHZhciBfbiA9IDAsIEYgPSBmdW5jdGlvbiBGKCkge307IHJldHVybiB7IHM6IEYsIG46IGZ1bmN0aW9uIG4oKSB7IHJldHVybiBfbiA+PSByLmxlbmd0aCA/IHsgZG9uZTogITAgfSA6IHsgZG9uZTogITEsIHZhbHVlOiByW19uKytdIH07IH0sIGU6IGZ1bmN0aW9uIGUocikgeyB0aHJvdyByOyB9LCBmOiBGIH07IH0gdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGl0ZXJhdGUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpOyB9IHZhciBvLCBhID0gITAsIHUgPSAhMTsgcmV0dXJuIHsgczogZnVuY3Rpb24gcygpIHsgdCA9IHQuY2FsbChyKTsgfSwgbjogZnVuY3Rpb24gbigpIHsgdmFyIHIgPSB0Lm5leHQoKTsgcmV0dXJuIGEgPSByLmRvbmUsIHI7IH0sIGU6IGZ1bmN0aW9uIGUocikgeyB1ID0gITAsIG8gPSByOyB9LCBmOiBmdW5jdGlvbiBmKCkgeyB0cnkgeyBhIHx8IG51bGwgPT0gdC5yZXR1cm4gfHwgdC5yZXR1cm4oKTsgfSBmaW5hbGx5IHsgaWYgKHUpIHRocm93IG87IH0gfSB9OyB9CmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShyLCBhKSB7IGlmIChyKSB7IGlmICgic3RyaW5nIiA9PSB0eXBlb2YgcikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KHIsIGEpOyB2YXIgdCA9IHt9LnRvU3RyaW5nLmNhbGwocikuc2xpY2UoOCwgLTEpOyByZXR1cm4gIk9iamVjdCIgPT09IHQgJiYgci5jb25zdHJ1Y3RvciAmJiAodCA9IHIuY29uc3RydWN0b3IubmFtZSksICJNYXAiID09PSB0IHx8ICJTZXQiID09PSB0ID8gQXJyYXkuZnJvbShyKSA6ICJBcmd1bWVudHMiID09PSB0IHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KHQpID8gX2FycmF5TGlrZVRvQXJyYXkociwgYSkgOiB2b2lkIDA7IH0gfQpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShyLCBhKSB7IChudWxsID09IGEgfHwgYSA+IHIubGVuZ3RoKSAmJiAoYSA9IHIubGVuZ3RoKTsgZm9yICh2YXIgZSA9IDAsIG4gPSBBcnJheShhKTsgZSA8IGE7IGUrKykgbltlXSA9IHJbZV07IHJldHVybiBuOyB9CmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gIi9ob21lL3VidW50dS9zdXNlY29uZi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucHJvbWlzZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnNldC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuYWRkLWFsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuZGVsZXRlLWFsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuZGlmZmVyZW5jZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuZXZlcnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuc2V0LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuaW50ZXJzZWN0aW9uLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0LnNldC5pcy1kaXNqb2ludC1mcm9tLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0LnNldC5pcy1zdWJzZXQtb2YuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuc2V0LmlzLXN1cGVyc2V0LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0LnNldC5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0LnNldC5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuc2V0LnJlZHVjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuc29tZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5zZXQuc3ltbWV0cmljLWRpZmZlcmVuY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuc2V0LnVuaW9uLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmZ1bmN0aW9uIG93bktleXMoZSwgcikgeyB2YXIgdCA9IE9iamVjdC5rZXlzKGUpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgbyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7IHIgJiYgKG8gPSBvLmZpbHRlcihmdW5jdGlvbiAocikgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCByKS5lbnVtZXJhYmxlOyB9KSksIHQucHVzaC5hcHBseSh0LCBvKTsgfSByZXR1cm4gdDsgfQpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKGUpIHsgZm9yICh2YXIgciA9IDE7IHIgPCBhcmd1bWVudHMubGVuZ3RoOyByKyspIHsgdmFyIHQgPSBudWxsICE9IGFyZ3VtZW50c1tyXSA/IGFyZ3VtZW50c1tyXSA6IHt9OyByICUgMiA/IG93bktleXMoT2JqZWN0KHQpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBfZGVmaW5lUHJvcGVydHkoZSwgciwgdFtyXSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyh0KSkgOiBvd25LZXlzKE9iamVjdCh0KSkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LCByKSk7IH0pOyB9IHJldHVybiBlOyB9CmltcG9ydCB7IG1hcFN0YXRlLCBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IGdldCwgaXNFbXB0eSB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwppbXBvcnQgeyBlc2NhcGVIdG1sLCByZXNvdXJjZU5hbWVzIH0gZnJvbSAnQHNoZWxsL3V0aWxzL3N0cmluZyc7CmltcG9ydCB7IENhcmQgfSBmcm9tICdAY29tcG9uZW50cy9DYXJkJzsKaW1wb3J0IHsgQ2hlY2tib3ggfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0NoZWNrYm94JzsKaW1wb3J0IHsgYWx0ZXJuYXRlTGFiZWwgfSBmcm9tICdAc2hlbGwvdXRpbHMvcGxhdGZvcm0nOwppbXBvcnQgeyB1bmlxIH0gZnJvbSAnQHNoZWxsL3V0aWxzL2FycmF5JzsKaW1wb3J0IEFzeW5jQnV0dG9uIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0FzeW5jQnV0dG9uJzsKaW1wb3J0IHsgQ0FUQUxPRyBhcyBDQVRBTE9HX0FOTk9UQVRJT05TIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9sYWJlbHMtYW5ub3RhdGlvbnMnOwppbXBvcnQgeyBDQVRBTE9HIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IEFwcE1vZGFsIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0FwcE1vZGFsLnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUHJvbXB0UmVtb3ZlJywKICBjb21wb25lbnRzOiB7CiAgICBDYXJkOiBDYXJkLAogICAgQ2hlY2tib3g6IENoZWNrYm94LAogICAgQXN5bmNCdXR0b246IEFzeW5jQnV0dG9uLAogICAgTGFiZWxlZElucHV0OiBMYWJlbGVkSW5wdXQsCiAgICBBcHBNb2RhbDogQXBwTW9kYWwKICB9LAogIHByb3BzOiB7CiAgICAvKioKICAgICAqIEluaGVyaXRlZCBnbG9iYWwgaWRlbnRpZmllciBwcmVmaXggZm9yIHRlc3RzCiAgICAgKiBEZWZpbmUgYSB0ZXJtIGJhc2VkIG9uIHRoZSBwYXJlbnQgY29tcG9uZW50IHRvIGF2b2lkIGNvbmZsaWN0cyBvbiBtdWx0aXBsZSBjb21wb25lbnRzCiAgICAgKi8KICAgIGNvbXBvbmVudFRlc3RpZDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdwcm9tcHQtcmVtb3ZlJwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciByZXNvdXJjZSA9IHRoaXMuJHJvdXRlLnBhcmFtcy5yZXNvdXJjZTsKICAgIHJldHVybiB7CiAgICAgIGhhc0N1c3RvbVJlbW92ZTogZmFsc2UsCiAgICAgIHJhbmRvbVBvc2l0aW9uOiBNYXRoLnJhbmRvbSgpLAogICAgICBjb25maXJtTmFtZTogJycsCiAgICAgIGVycm9yOiAnJywKICAgICAgd2FybmluZzogJycsCiAgICAgIHByZXZlbnREZWxldGU6IGZhbHNlLAogICAgICByZW1vdmVDb21wb25lbnQ6IHRoaXMuJHN0b3JlLmdldHRlcnNbJ3R5cGUtbWFwL2ltcG9ydEN1c3RvbVByb21wdFJlbW92ZSddKHJlc291cmNlKSwKICAgICAgY2hhcnRzVG9SZW1vdmVJc0FwcDogZmFsc2UsCiAgICAgIGNoYXJ0c0RlbGV0ZUNyZDogZmFsc2UsCiAgICAgIHNob3dNb2RhbDogZmFsc2UKICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHsKICAgIG5hbWVzOiBmdW5jdGlvbiBuYW1lcygpIHsKICAgICAgcmV0dXJuIHRoaXMudG9SZW1vdmUubWFwKGZ1bmN0aW9uIChvYmopIHsKICAgICAgICByZXR1cm4gb2JqLm5hbWVEaXNwbGF5OwogICAgICB9KS5zbGljZSgwLCA1KTsKICAgIH0sCiAgICBuYW1lVG9NYXRjaFBvc2l0aW9uOiBmdW5jdGlvbiBuYW1lVG9NYXRjaFBvc2l0aW9uKCkgewogICAgICB2YXIgdmlzaWJsZU5hbWVzID0gTWF0aC5taW4oNSwgdGhpcy5uYW1lcy5sZW5ndGgpOwogICAgICB2YXIgcmFuZG9tTmFtZVBvcyA9IE1hdGguZmxvb3IodGhpcy5yYW5kb21Qb3NpdGlvbiAqIHZpc2libGVOYW1lcyk7CiAgICAgIHJldHVybiByYW5kb21OYW1lUG9zOwogICAgfSwKICAgIG5hbWVUb01hdGNoOiBmdW5jdGlvbiBuYW1lVG9NYXRjaCgpIHsKICAgICAgcmV0dXJuIHRoaXMubmFtZXNbdGhpcy5uYW1lVG9NYXRjaFBvc2l0aW9uXTsKICAgIH0sCiAgICB0eXBlOiBmdW5jdGlvbiB0eXBlKCkgewogICAgICB2YXIgX3RoaXMkdG9SZW1vdmUkOwogICAgICB2YXIgdHlwZXMgPSBuZXcgU2V0KHRoaXMudG9SZW1vdmUucmVkdWNlKGZ1bmN0aW9uIChhcnJheSwgZWFjaCkgewogICAgICAgIGFycmF5LnB1c2goZWFjaC50eXBlKTsKICAgICAgICByZXR1cm4gYXJyYXk7CiAgICAgIH0sIFtdKSk7CiAgICAgIGlmICh0eXBlcy5zaXplID4gMSkgewogICAgICAgIHJldHVybiB0aGlzLnQoJ2dlbmVyaWMucmVzb3VyY2UnLCB7CiAgICAgICAgICBjb3VudDogdGhpcy50b1JlbW92ZS5sZW5ndGgKICAgICAgICB9KTsKICAgICAgfQogICAgICB2YXIgc2NoZW1hID0gKF90aGlzJHRvUmVtb3ZlJCA9IHRoaXMudG9SZW1vdmVbMF0pID09PSBudWxsIHx8IF90aGlzJHRvUmVtb3ZlJCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkdG9SZW1vdmUkLnNjaGVtYTsKICAgICAgaWYgKCFzY2hlbWEpIHsKICAgICAgICByZXR1cm4gInJlc291cmNlIi5jb25jYXQodGhpcy50b1JlbW92ZS5sZW5ndGggPT09IDEgPyAnJyA6ICdzJyk7CiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ3R5cGUtbWFwL2xhYmVsRm9yJ10oc2NoZW1hLCB0aGlzLnRvUmVtb3ZlLmxlbmd0aCk7CiAgICB9LAogICAgc2VsZkxpbmtzOiBmdW5jdGlvbiBzZWxmTGlua3MoKSB7CiAgICAgIHJldHVybiB0aGlzLnRvUmVtb3ZlLm1hcChmdW5jdGlvbiAocmVzb3VyY2UpIHsKICAgICAgICByZXR1cm4gZ2V0KHJlc291cmNlLCAnbGlua3Muc2VsZicpOwogICAgICB9KTsKICAgIH0sCiAgICBuZWVkc0NvbmZpcm06IGZ1bmN0aW9uIG5lZWRzQ29uZmlybSgpIHsKICAgICAgdmFyIGZpcnN0ID0gdGhpcy50b1JlbW92ZVswXTsKICAgICAgcmV0dXJuIGZpcnN0ID09PSBudWxsIHx8IGZpcnN0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBmaXJzdC5jb25maXJtUmVtb3ZlOwogICAgfSwKICAgIHBsdXNNb3JlOiBmdW5jdGlvbiBwbHVzTW9yZSgpIHsKICAgICAgdmFyIHJlbWFpbmluZyA9IHRoaXMudG9SZW1vdmUubGVuZ3RoIC0gdGhpcy5uYW1lcy5sZW5ndGg7CiAgICAgIHJldHVybiB0aGlzLnQoJ3Byb21wdFJlbW92ZS5hbmRPdGhlcnMnLCB7CiAgICAgICAgY291bnQ6IHJlbWFpbmluZwogICAgICB9KTsKICAgIH0sCiAgICAvLyBpZiB0aGUgY3VycmVudCByb3V0ZSBlbmRzIHdpdGggdGhlIElEIG9mIHRoZSByZXNvdXJjZSBiZWluZyBkZWxldGVkLCB3aGF0ZXZlciBwYWdlIHRoaXMgaXMgd29udCBiZSB2YWxpZCBhZnRlciBzdWNjZXNzZnVsIGRlbGV0aW9uOiBuYXZpZ2F0ZSBhd2F5CiAgICBkb25lTG9jYXRpb246IGZ1bmN0aW9uIGRvbmVMb2NhdGlvbigpIHsKICAgICAgdmFyIF90aGlzJHRvUmVtb3ZlJDI7CiAgICAgIC8vIGlmIGRlbGV0aW5nIG1vcmUgdGhhbiBvbmUgcmVzb3VyY2UsIHRoaXMgaXMgaGFwcGVuaW5nIGluIGxpc3QgdmlldyBhbmQgc2hvdWxkbid0IHJlZGlyZWN0IGFueXdoZXJlCiAgICAgIGlmICh0aGlzLnRvUmVtb3ZlLmxlbmd0aCA+IDEpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgICBpZiAodGhpcy50b1JlbW92ZVswXS5kb25lTG9jYXRpb25SZW1vdmUpIHsKICAgICAgICByZXR1cm4gdGhpcy50b1JlbW92ZVswXS5kb25lTG9jYXRpb25SZW1vdmU7CiAgICAgIH0KICAgICAgdmFyIGN1cnJlbnRSb3V0ZSA9IHRoaXMudG9SZW1vdmVbMF0uY3VycmVudFJvdXRlKCk7CiAgICAgIHZhciBvdXQgPSB7fTsKICAgICAgdmFyIHBhcmFtcyA9IF9vYmplY3RTcHJlYWQoe30sIGN1cnJlbnRSb3V0ZS5wYXJhbXMpOwogICAgICBpZiAocGFyYW1zLmlkICYmIChwYXJhbXMuaWQgPT09ICgoX3RoaXMkdG9SZW1vdmUkMiA9IHRoaXMudG9SZW1vdmVbMF0pID09PSBudWxsIHx8IF90aGlzJHRvUmVtb3ZlJDIgPT09IHZvaWQgMCB8fCAoX3RoaXMkdG9SZW1vdmUkMiA9IF90aGlzJHRvUmVtb3ZlJDIubWV0YWRhdGEpID09PSBudWxsIHx8IF90aGlzJHRvUmVtb3ZlJDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHRvUmVtb3ZlJDIubmFtZSkgfHwgcGFyYW1zLmlkID09PSB0aGlzLnRvUmVtb3ZlWzBdLmlkKSkgewogICAgICAgIHZhciBfY3VycmVudFJvdXRlJG5hbWUgPSBjdXJyZW50Um91dGUubmFtZSwKICAgICAgICAgIG5hbWUgPSBfY3VycmVudFJvdXRlJG5hbWUgPT09IHZvaWQgMCA/ICcnIDogX2N1cnJlbnRSb3V0ZSRuYW1lOwogICAgICAgIHZhciBpZEluZGV4ID0gbmFtZS5pbmRleE9mKCctaWQnKTsKICAgICAgICBpZiAoaWRJbmRleCAhPT0gLTEpIHsKICAgICAgICAgIG5hbWUgPSBuYW1lLnNsaWNlKDAsIGlkSW5kZXgpOwogICAgICAgIH0KICAgICAgICBpZiAocGFyYW1zLm5hbWVzcGFjZSkgewogICAgICAgICAgdmFyIG5hbWVzcGFjZUluZGV4ID0gbmFtZS5pbmRleE9mKCctbmFtZXNwYWNlJyk7CiAgICAgICAgICBpZiAobmFtZXNwYWNlSW5kZXggIT09IC0xKSB7CiAgICAgICAgICAgIG5hbWUgPSBuYW1lLnNsaWNlKDAsIG5hbWVzcGFjZUluZGV4KTsKICAgICAgICAgIH0KICAgICAgICAgIGRlbGV0ZSBwYXJhbXMubmFtZXNwYWNlOwogICAgICAgIH0KICAgICAgICBkZWxldGUgcGFyYW1zLmlkOwogICAgICAgIG91dC5wYXJhbXMgPSBwYXJhbXM7CiAgICAgICAgb3V0Lm5hbWUgPSBuYW1lOwogICAgICB9CiAgICAgIHJldHVybiBvdXQ7CiAgICB9LAogICAgY3VycmVudFJvdXRlcjogZnVuY3Rpb24gY3VycmVudFJvdXRlcigpIHsKICAgICAgLy8gLi4uZG9uJ3QgbmVlZCBhIHJvdXRlciBpZiB0aGVyZSdzIG5vIHJvdXRlIHRvIGdvIHRvCiAgICAgIGlmICghdGhpcy5kb25lTG9jYXRpb24pIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGhpcy50b1JlbW92ZVswXS5jdXJyZW50Um91dGVyKCk7CiAgICAgIH0KICAgIH0sCiAgICBwcm90aXA6IGZ1bmN0aW9uIHByb3RpcCgpIHsKICAgICAgcmV0dXJuIHRoaXMudCgncHJvbXB0UmVtb3ZlLnByb3RpcCcsIHsKICAgICAgICBhbHRlcm5hdGVMYWJlbDogYWx0ZXJuYXRlTGFiZWwKICAgICAgfSk7CiAgICB9LAogICAgZGVsZXRlRGlzYWJsZWQ6IGZ1bmN0aW9uIGRlbGV0ZURpc2FibGVkKCkgewogICAgICB2YXIgY29uZmlybUZhaWxlZCA9IHRoaXMubmVlZHNDb25maXJtICYmIHRoaXMuY29uZmlybU5hbWUgIT09IHRoaXMubmFtZVRvTWF0Y2g7CiAgICAgIHJldHVybiB0aGlzLnByZXZlbnREZWxldGUgfHwgY29uZmlybUZhaWxlZDsKICAgIH0KICB9LCBtYXBTdGF0ZSgnYWN0aW9uLW1lbnUnLCBbJ3Nob3dQcm9tcHRSZW1vdmUnLCAndG9SZW1vdmUnXSkpLCBtYXBHZXR0ZXJzKHsKICAgIHQ6ICdpMThuL3QnCiAgfSkpLAogIHdhdGNoOiB7CiAgICBzaG93UHJvbXB0UmVtb3ZlOiBmdW5jdGlvbiBzaG93UHJvbXB0UmVtb3ZlKHNob3cpIHsKICAgICAgaWYgKHNob3cpIHsKICAgICAgICB2YXIgX3RoaXMkY3VycmVudFJvdXRlciwgX3NlbGVjdGVkJHNwZWM7CiAgICAgICAgdmFyIHNlbGVjdGVkID0gdGhpcy50b1JlbW92ZVswXTsKICAgICAgICBpZiAoKChfdGhpcyRjdXJyZW50Um91dGVyID0gdGhpcy5jdXJyZW50Um91dGVyKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50Um91dGVyID09PSB2b2lkIDAgfHwgKF90aGlzJGN1cnJlbnRSb3V0ZXIgPSBfdGhpcyRjdXJyZW50Um91dGVyLmN1cnJlbnRSb3V0ZSkgPT09IG51bGwgfHwgX3RoaXMkY3VycmVudFJvdXRlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkY3VycmVudFJvdXRlci5uYW1lKSA9PT0gJ2MtY2x1c3Rlci1leHBsb3Jlci10b29scycgJiYgc2VsZWN0ZWQudHlwZSA9PT0gQ0FUQUxPRy5BUFAgJiYgKF9zZWxlY3RlZCRzcGVjID0gc2VsZWN0ZWQuc3BlYykgIT09IG51bGwgJiYgX3NlbGVjdGVkJHNwZWMgIT09IHZvaWQgMCAmJiAoX3NlbGVjdGVkJHNwZWMgPSBfc2VsZWN0ZWQkc3BlYy5jaGFydCkgIT09IG51bGwgJiYgX3NlbGVjdGVkJHNwZWMgIT09IHZvaWQgMCAmJiAoX3NlbGVjdGVkJHNwZWMgPSBfc2VsZWN0ZWQkc3BlYy5tZXRhZGF0YSkgIT09IG51bGwgJiYgX3NlbGVjdGVkJHNwZWMgIT09IHZvaWQgMCAmJiBfc2VsZWN0ZWQkc3BlYy5hbm5vdGF0aW9uc1tDQVRBTE9HX0FOTk9UQVRJT05TLkFVVE9fSU5TVEFMTF0pIHsKICAgICAgICAgIHRoaXMuY2hhcnRzVG9SZW1vdmVJc0FwcCA9IHRydWU7CiAgICAgICAgfQogICAgICAgIHRoaXMuc2hvd01vZGFsID0gdHJ1ZTsKICAgICAgICB2YXIgcmVzb3VyY2UgPSB0aGlzLiRyb3V0ZS5wYXJhbXMucmVzb3VyY2U7CiAgICAgICAgaWYgKHRoaXMudG9SZW1vdmUubGVuZ3RoID4gMCkgewogICAgICAgICAgcmVzb3VyY2UgPSBzZWxlY3RlZC50eXBlOwogICAgICAgIH0KICAgICAgICB0aGlzLmhhc0N1c3RvbVJlbW92ZSA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ3R5cGUtbWFwL2hhc0N1c3RvbVByb21wdFJlbW92ZSddKHJlc291cmNlKTsKICAgICAgICB0aGlzLnJlbW92ZUNvbXBvbmVudCA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ3R5cGUtbWFwL2ltcG9ydEN1c3RvbVByb21wdFJlbW92ZSddKHJlc291cmNlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNob3dNb2RhbCA9IGZhbHNlOwogICAgICB9CiAgICB9LAogICAgLy8gY2hlY2sgZm9yIGFueSByZXNvdXJjZXMgd2l0aCBhIGRlbGV0aW9uIHByZXZlbnRpb24gbWVzc2FnZSwKICAgIC8vIGlmIG5vbmUgZm91bmQgKGRlbGV0ZSBpcyBhbGxvd2VkKSwgdGhlbiBjaGVjayBmb3IgYW55IHJlc291cmNlcyB3aXRoIGEgd2FybmluZyBtZXNzYWdlCiAgICB0b1JlbW92ZTogZnVuY3Rpb24gdG9SZW1vdmUobmV1KSB7CiAgICAgIHZhciBtZXNzYWdlOwogICAgICB2YXIgcHJldmVudERlbGV0aW9uTWVzc2FnZXMgPSBuZXUuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0ucHJldmVudERlbGV0aW9uTWVzc2FnZTsKICAgICAgfSk7CiAgICAgIHRoaXMucHJldmVudERlbGV0ZSA9IGZhbHNlOwogICAgICBpZiAoISFwcmV2ZW50RGVsZXRpb25NZXNzYWdlcy5sZW5ndGgpIHsKICAgICAgICB0aGlzLnByZXZlbnREZWxldGUgPSB0cnVlOwogICAgICAgIG1lc3NhZ2UgPSBwcmV2ZW50RGVsZXRpb25NZXNzYWdlc1swXS5wcmV2ZW50RGVsZXRpb25NZXNzYWdlOwogICAgICB9IGVsc2UgewogICAgICAgIHZhciB3YXJuRGVsZXRpb25NZXNzYWdlcyA9IG5ldS5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBpdGVtLndhcm5EZWxldGlvbk1lc3NhZ2U7CiAgICAgICAgfSk7CiAgICAgICAgaWYgKCEhd2FybkRlbGV0aW9uTWVzc2FnZXMubGVuZ3RoKSB7CiAgICAgICAgICBtZXNzYWdlID0gd2FybkRlbGV0aW9uTWVzc2FnZXNbMF0ud2FybkRlbGV0aW9uTWVzc2FnZTsKICAgICAgICB9CiAgICAgIH0KICAgICAgaWYgKHR5cGVvZiBtZXNzYWdlID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgdGhpcy53YXJuaW5nID0gbWVzc2FnZSh0aGlzLnRvUmVtb3ZlKTsKICAgICAgfSBlbHNlIGlmICghIW1lc3NhZ2UpIHsKICAgICAgICB0aGlzLndhcm5pbmcgPSBtZXNzYWdlOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMud2FybmluZyA9ICcnOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICByZXNvdXJjZU5hbWVzOiByZXNvdXJjZU5hbWVzLAogICAgZXNjYXBlSHRtbDogZXNjYXBlSHRtbCwKICAgIGNsb3NlOiBmdW5jdGlvbiBjbG9zZSgpIHsKICAgICAgdGhpcy5jb25maXJtTmFtZSA9ICcnOwogICAgICB0aGlzLmVycm9yID0gJyc7CiAgICAgIHRoaXMuY2hhcnRzRGVsZXRlQ3JkID0gZmFsc2U7CiAgICAgIHRoaXMuY2hhcnRzVG9SZW1vdmVJc0FwcCA9IGZhbHNlOwogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FjdGlvbi1tZW51L3RvZ2dsZVByb21wdFJlbW92ZScpOwogICAgfSwKICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKGJ0bkNCKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIF90aGlzJCRyZWZzOwogICAgICAgIHZhciBoYW5kbGVkLCBzZXJpYWxSZW1vdmU7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGlmIChfdGhpcy5kb25lTG9jYXRpb24pIHsKICAgICAgICAgICAgICAgIC8vIGRvbmVMb2NhdGlvbiB3aWxsIHJlY29tcHV0ZSB0byB1bmRlZmluZWQgd2hlbiBkZWxldGUgcmVxdWVzdCBjb21wbGV0ZXMKICAgICAgICAgICAgICAgIF90aGlzLmNhY2hlZERvbmVMb2NhdGlvbiA9IF9vYmplY3RTcHJlYWQoe30sIF90aGlzLmRvbmVMb2NhdGlvbik7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGlmICghKF90aGlzLmhhc0N1c3RvbVJlbW92ZSAmJiAoX3RoaXMkJHJlZnMgPSBfdGhpcy4kcmVmcykgIT09IG51bGwgJiYgX3RoaXMkJHJlZnMgIT09IHZvaWQgMCAmJiAoX3RoaXMkJHJlZnMgPSBfdGhpcyQkcmVmcy5jdXN0b21Qcm9tcHQpICE9PSBudWxsICYmIF90aGlzJCRyZWZzICE9PSB2b2lkIDAgJiYgX3RoaXMkJHJlZnMucmVtb3ZlKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGhhbmRsZWQgPSBfdGhpcy4kcmVmcy5jdXN0b21Qcm9tcHQucmVtb3ZlKGJ0bkNCKTsgLy8gSWYgdGhlIHJlc3BvbnNlIGlzIGEgcHJvbWlzZSwgdGhlbiB3YWl0IGZvciB0aGUgcHJvbWlzZQogICAgICAgICAgICAgIGlmICghKGhhbmRsZWQgJiYgaGFuZGxlZC50aGVuKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE1OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgIHJldHVybiBoYW5kbGVkOwogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgaGFuZGxlZCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE1OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMDsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDQpOwogICAgICAgICAgICAgIF90aGlzLmVycm9yID0gX2NvbnRleHQudDA7CiAgICAgICAgICAgICAgYnRuQ0IoZmFsc2UpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgIGlmICghKGhhbmRsZWQgPT09IHVuZGVmaW5lZCB8fCBoYW5kbGVkKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgIHNlcmlhbFJlbW92ZSA9IF90aGlzLnRvUmVtb3ZlLnNvbWUoZnVuY3Rpb24gKHJlc291cmNlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzb3VyY2UucmVtb3ZlU2VyaWFsbHk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgaWYgKHNlcmlhbFJlbW92ZSkgewogICAgICAgICAgICAgICAgX3RoaXMuc2VyaWFsUmVtb3ZlKGJ0bkNCKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgX3RoaXMucGFyYWxsZWxSZW1vdmUoYnRuQ0IpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbNCwgMTBdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHNlcmlhbFJlbW92ZTogZnVuY3Rpb24gc2VyaWFsUmVtb3ZlKGJ0bkNCKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgc3Bvb2ZlZFR5cGVzLCBfaXRlcmF0b3IsIF9zdGVwLCByZXNvdXJjZTsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICBzcG9vZmVkVHlwZXMgPSBfdGhpczIuZ2V0U3Bvb2ZlZFR5cGVzKF90aGlzMi50b1JlbW92ZSk7CiAgICAgICAgICAgICAgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoX3RoaXMyLnRvUmVtb3ZlKTsKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDM7CiAgICAgICAgICAgICAgX2l0ZXJhdG9yLnMoKTsKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGlmICgoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDExOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHJlc291cmNlID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA5OwogICAgICAgICAgICAgIHJldHVybiByZXNvdXJjZS5yZW1vdmUoKTsKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE2OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTM7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDMpOwogICAgICAgICAgICAgIF9pdGVyYXRvci5lKF9jb250ZXh0Mi50MCk7CiAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxNjsKICAgICAgICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuZmluaXNoKDE2KTsKICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDIxOwogICAgICAgICAgICAgIHJldHVybiBfdGhpczIucmVmcmVzaFNwb29mZWRUeXBlcyhzcG9vZmVkVHlwZXMpOwogICAgICAgICAgICBjYXNlIDIxOgogICAgICAgICAgICAgIF90aGlzMi5kb25lKCk7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyODsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAyNDoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDI0OwogICAgICAgICAgICAgIF9jb250ZXh0Mi50MSA9IF9jb250ZXh0MlsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICBfdGhpczIuZXJyb3IgPSBfY29udGV4dDIudDEubWVzc2FnZSB8fCBfY29udGV4dDIudDE7CiAgICAgICAgICAgICAgYnRuQ0IoZmFsc2UpOwogICAgICAgICAgICBjYXNlIDI4OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDI0XSwgWzMsIDEzLCAxNiwgMTldXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHBhcmFsbGVsUmVtb3ZlOiBmdW5jdGlvbiBwYXJhbGxlbFJlbW92ZShidG5DQikgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIHNwb29mZWRUeXBlczsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMDsKICAgICAgICAgICAgICBpZiAoISh0eXBlb2YgX3RoaXMzLnRvUmVtb3ZlWzBdLmJ1bGtSZW1vdmUgIT09ICd1bmRlZmluZWQnKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA2OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLnRvUmVtb3ZlWzBdLmJ1bGtSZW1vdmUoX3RoaXMzLnRvUmVtb3ZlLCB7fSk7CiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDg7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDg7CiAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKF90aGlzMy50b1JlbW92ZS5tYXAoZnVuY3Rpb24gKHJlc291cmNlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzb3VyY2UucmVtb3ZlKCk7CiAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgc3Bvb2ZlZFR5cGVzID0gX3RoaXMzLmdldFNwb29mZWRUeXBlcyhfdGhpczMudG9SZW1vdmUpOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5yZWZyZXNoU3Bvb2ZlZFR5cGVzKHNwb29mZWRUeXBlcyk7CiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgX3RoaXMzLmRvbmUoKTsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDE4OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMTQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIF90aGlzMy5lcnJvciA9IF9jb250ZXh0My50MC5tZXNzYWdlIHx8IF9jb250ZXh0My50MDsKICAgICAgICAgICAgICBidG5DQihmYWxzZSk7CiAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMCwgMTRdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGRvbmU6IGZ1bmN0aW9uIGRvbmUoKSB7CiAgICAgIGlmICh0aGlzLmNhY2hlZERvbmVMb2NhdGlvbiAmJiAhaXNFbXB0eSh0aGlzLmNhY2hlZERvbmVMb2NhdGlvbikpIHsKICAgICAgICB0aGlzLmN1cnJlbnRSb3V0ZXIucHVzaCh0aGlzLmNhY2hlZERvbmVMb2NhdGlvbik7CiAgICAgIH0KICAgICAgdGhpcy5jbG9zZSgpOwogICAgfSwKICAgIGdldFNwb29mZWRUeXBlczogZnVuY3Rpb24gZ2V0U3Bvb2ZlZFR5cGVzKHJlc291cmNlcykgewogICAgICB2YXIgdW5pcXVlUmVzb3VyY2VUeXBlcyA9IHVuaXEodGhpcy50b1JlbW92ZS5tYXAoZnVuY3Rpb24gKHJlc291cmNlKSB7CiAgICAgICAgcmV0dXJuIHJlc291cmNlLnR5cGU7CiAgICAgIH0pKTsKICAgICAgcmV0dXJuIHVuaXF1ZVJlc291cmNlVHlwZXMuZmlsdGVyKHRoaXMuJHN0b3JlLmdldHRlcnNbJ3R5cGUtbWFwL2lzU3Bvb2ZlZCddKTsKICAgIH0sCiAgICAvLyBJZiBzcG9vZmVkIHdlIG5lZWQgdG8gcmVsb2FkIHRoZSB2YWx1ZXMgYXMgdGhlIHNlcnZlciBjYW4ndCBoYXZlIHdhdGNoZXJzIGZvciB0aGVtLgogICAgcmVmcmVzaFNwb29mZWRUeXBlczogZnVuY3Rpb24gcmVmcmVzaFNwb29mZWRUeXBlcyh0eXBlcykgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKICAgICAgdmFyIGluU3RvcmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjdXJyZW50UHJvZHVjdCddLmluU3RvcmU7CiAgICAgIHZhciBwcm9taXNlcyA9IHR5cGVzLm1hcChmdW5jdGlvbiAodHlwZSkgewogICAgICAgIHJldHVybiBfdGhpczQuJHN0b3JlLmRpc3BhdGNoKCIiLmNvbmNhdChpblN0b3JlLCAiL2ZpbmRBbGwiKSwgewogICAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICAgIG9wdDogewogICAgICAgICAgICBmb3JjZTogdHJ1ZQogICAgICAgICAgfQogICAgICAgIH0sIHsKICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7CiAgICB9LAogICAgY2hhcnRBZGRDcmRUb1JlbW92ZTogZnVuY3Rpb24gY2hhcnRBZGRDcmRUb1JlbW92ZSgpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciByZXM7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBfdGhpczUudG9SZW1vdmVbMF0ucmVsYXRlZFJlc291cmNlc1RvUmVtb3ZlKCk7CiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICBpZiAoIV90aGlzNS50b1JlbW92ZS5pbmNsdWRlcyhyZXMpKSB7CiAgICAgICAgICAgICAgICBfdGhpczUudG9SZW1vdmUucHVzaChyZXMpOwogICAgICAgICAgICAgIH0gZWxzZSBpZiAoIV90aGlzNS5jaGFydHNEZWxldGVDcmQpIHsKICAgICAgICAgICAgICAgIF90aGlzNS50b1JlbW92ZS5wb3AocmVzKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gNzsKICAgICAgICAgICAgICBfY29udGV4dDQudDAgPSBfY29udGV4dDRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgX3RoaXM1LmVycm9yID0gX2NvbnRleHQ0LnQwOwogICAgICAgICAgICAgIF90aGlzNS5jaGFydHNEZWxldGVDcmQgPSBmYWxzZTsKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCwgbnVsbCwgW1swLCA3XV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"names":["mapState","mapGetters","get","isEmpty","escapeHtml","resourceNames","Card","Checkbox","alternateLabel","uniq","AsyncButton","CATALOG","CATALOG_ANNOTATIONS","LabeledInput","AppModal","name","components","props","componentTestid","type","String","default","data","resource","$route","params","hasCustomRemove","randomPosition","Math","random","confirmName","error","warning","preventDelete","removeComponent","$store","getters","chartsToRemoveIsApp","chartsDeleteCrd","showModal","computed","_objectSpread","names","toRemove","map","obj","nameDisplay","slice","nameToMatchPosition","visibleNames","min","length","randomNamePos","floor","nameToMatch","_this$toRemove$","types","Set","reduce","array","each","push","size","t","count","schema","concat","selfLinks","needsConfirm","first","confirmRemove","plusMore","remaining","doneLocation","_this$toRemove$2","doneLocationRemove","currentRoute","out","id","metadata","_currentRoute$name","idIndex","indexOf","namespace","namespaceIndex","currentRouter","protip","deleteDisabled","confirmFailed","watch","showPromptRemove","show","_this$currentRouter","_selected$spec","selected","APP","spec","chart","annotations","AUTO_INSTALL","neu","message","preventDeletionMessages","filter","item","preventDeletionMessage","warnDeletionMessages","warnDeletionMessage","methods","close","commit","remove","btnCB","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$$refs","handled","serialRemove","wrap","_callee$","_context","prev","next","cachedDoneLocation","$refs","customPrompt","then","sent","t0","abrupt","undefined","some","removeSerially","parallelRemove","stop","_this2","_callee2","spoofedTypes","_iterator","_step","_callee2$","_context2","getSpoofedTypes","_createForOfIteratorHelper","s","n","done","value","e","f","finish","refreshSpoofedTypes","t1","_this3","_callee3","_callee3$","_context3","bulkRemove","Promise","all","resources","uniqueResourceTypes","_this4","inStore","promises","dispatch","opt","force","root","chartAddCrdToRemove","_this5","_callee4","res","_callee4$","_context4","relatedResourcesToRemove","includes","pop"],"sources":["node_modules/@rancher/shell/components/PromptRemove.vue"],"sourcesContent":["<script>\nimport { mapState, mapGetters } from 'vuex';\nimport { get, isEmpty } from '@shell/utils/object';\nimport { escapeHtml, resourceNames } from '@shell/utils/string';\nimport { Card } from '@components/Card';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { alternateLabel } from '@shell/utils/platform';\nimport { uniq } from '@shell/utils/array';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { CATALOG as CATALOG_ANNOTATIONS } from '@shell/config/labels-annotations';\nimport { CATALOG } from '@shell/config/types';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport AppModal from '@shell/components/AppModal.vue';\n\nexport default {\n  name: 'PromptRemove',\n\n  components: {\n    Card, Checkbox, AsyncButton, LabeledInput, AppModal\n  },\n  props: {\n    /**\n     * Inherited global identifier prefix for tests\n     * Define a term based on the parent component to avoid conflicts on multiple components\n     */\n    componentTestid: {\n      type:    String,\n      default: 'prompt-remove'\n    }\n  },\n  data() {\n    const { resource } = this.$route.params;\n\n    return {\n      hasCustomRemove:     false,\n      randomPosition:      Math.random(),\n      confirmName:         '',\n      error:               '',\n      warning:             '',\n      preventDelete:       false,\n      removeComponent:     this.$store.getters['type-map/importCustomPromptRemove'](resource),\n      chartsToRemoveIsApp: false,\n      chartsDeleteCrd:     false,\n      showModal:           false,\n    };\n  },\n  computed: {\n    names() {\n      return this.toRemove.map((obj) => obj.nameDisplay).slice(0, 5);\n    },\n\n    nameToMatchPosition() {\n      const visibleNames = Math.min(5, this.names.length);\n      const randomNamePos = Math.floor(this.randomPosition * visibleNames);\n\n      return randomNamePos;\n    },\n\n    nameToMatch() {\n      return this.names[this.nameToMatchPosition];\n    },\n\n    type() {\n      const types = new Set(this.toRemove.reduce((array, each) => {\n        array.push(each.type);\n\n        return array;\n      }, []));\n\n      if (types.size > 1) {\n        return this.t('generic.resource', { count: this.toRemove.length });\n      }\n\n      const schema = this.toRemove[0]?.schema;\n\n      if ( !schema ) {\n        return `resource${ this.toRemove.length === 1 ? '' : 's' }`;\n      }\n\n      return this.$store.getters['type-map/labelFor'](schema, this.toRemove.length);\n    },\n\n    selfLinks() {\n      return this.toRemove.map((resource) => {\n        return get(resource, 'links.self');\n      });\n    },\n\n    needsConfirm() {\n      const first = this.toRemove[0];\n\n      return first?.confirmRemove;\n    },\n\n    plusMore() {\n      const remaining = this.toRemove.length - this.names.length;\n\n      return this.t('promptRemove.andOthers', { count: remaining });\n    },\n\n    // if the current route ends with the ID of the resource being deleted, whatever page this is wont be valid after successful deletion: navigate away\n    doneLocation() {\n      // if deleting more than one resource, this is happening in list view and shouldn't redirect anywhere\n      if (this.toRemove.length > 1) {\n        return null;\n      }\n\n      if (this.toRemove[0].doneLocationRemove) {\n        return this.toRemove[0].doneLocationRemove;\n      }\n\n      const currentRoute = this.toRemove[0].currentRoute();\n      const out = {};\n      const params = { ...currentRoute.params };\n\n      if (params.id && (params.id === this.toRemove[0]?.metadata?.name || params.id === this.toRemove[0].id)) {\n        let { name = '' } = currentRoute;\n\n        const idIndex = name.indexOf('-id');\n\n        if (idIndex !== -1) {\n          name = name.slice(0, idIndex);\n        }\n\n        if (params.namespace) {\n          const namespaceIndex = name.indexOf('-namespace');\n\n          if (namespaceIndex !== -1) {\n            name = name.slice(0, namespaceIndex);\n          }\n          delete params.namespace;\n        }\n        delete params.id;\n\n        out.params = params;\n        out.name = name;\n      }\n\n      return out;\n    },\n\n    currentRouter() {\n      // ...don't need a router if there's no route to go to\n      if (!this.doneLocation) {\n        return null;\n      } else {\n        return this.toRemove[0].currentRouter();\n      }\n    },\n\n    protip() {\n      return this.t('promptRemove.protip', { alternateLabel });\n    },\n\n    deleteDisabled() {\n      const confirmFailed = this.needsConfirm && this.confirmName !== this.nameToMatch;\n\n      return this.preventDelete || confirmFailed;\n    },\n\n    ...mapState('action-menu', ['showPromptRemove', 'toRemove']),\n    ...mapGetters({ t: 'i18n/t' }),\n  },\n\n  watch: {\n    showPromptRemove(show) {\n      if (show) {\n        const selected = this.toRemove[0];\n\n        if (this.currentRouter?.currentRoute?.name === 'c-cluster-explorer-tools' &&\n            selected.type === CATALOG.APP &&\n            selected.spec?.chart?.metadata?.annotations[CATALOG_ANNOTATIONS.AUTO_INSTALL]) {\n          this.chartsToRemoveIsApp = true;\n        }\n\n        this.showModal = true;\n\n        let { resource } = this.$route.params;\n\n        if (this.toRemove.length > 0) {\n          resource = selected.type;\n        }\n\n        this.hasCustomRemove = this.$store.getters['type-map/hasCustomPromptRemove'](resource);\n\n        this.removeComponent = this.$store.getters['type-map/importCustomPromptRemove'](resource);\n      } else {\n        this.showModal = false;\n      }\n    },\n\n    // check for any resources with a deletion prevention message,\n    // if none found (delete is allowed), then check for any resources with a warning message\n    toRemove(neu) {\n      let message;\n      const preventDeletionMessages = neu.filter((item) => item.preventDeletionMessage);\n\n      this.preventDelete = false;\n\n      if (!!preventDeletionMessages.length) {\n        this.preventDelete = true;\n        message = preventDeletionMessages[0].preventDeletionMessage;\n      } else {\n        const warnDeletionMessages = neu.filter((item) => item.warnDeletionMessage);\n\n        if (!!warnDeletionMessages.length) {\n          message = warnDeletionMessages[0].warnDeletionMessage;\n        }\n      }\n      if (typeof message === 'function' ) {\n        this.warning = message(this.toRemove);\n      } else if (!!message) {\n        this.warning = message;\n      } else {\n        this.warning = '';\n      }\n    }\n  },\n\n  methods: {\n    resourceNames,\n    escapeHtml,\n    close() {\n      this.confirmName = '';\n      this.error = '';\n      this.chartsDeleteCrd = false;\n      this.chartsToRemoveIsApp = false;\n      this.$store.commit('action-menu/togglePromptRemove');\n    },\n\n    async remove(btnCB) {\n      if (this.doneLocation) {\n        // doneLocation will recompute to undefined when delete request completes\n        this.cachedDoneLocation = { ...this.doneLocation };\n      }\n\n      if (this.hasCustomRemove && this.$refs?.customPrompt?.remove) {\n        let handled = this.$refs.customPrompt.remove(btnCB);\n\n        // If the response is a promise, then wait for the promise\n        if (handled && handled.then) {\n          try {\n            handled = await handled;\n          } catch (err) {\n            this.error = err;\n            btnCB(false);\n\n            return;\n          }\n        }\n\n        // If the remove function for the custom dialog handled the request, it can return true or not return anything\n        // if it returned false, then it wants us to continue with the deletion logic below - this is useful\n        // where the custom dialog needs to delete additional resources - it handles those and retrurns false to get us\n        // to delete the main resource\n        if (handled === undefined || handled) {\n          return;\n        }\n      }\n      const serialRemove = this.toRemove.some((resource) => resource.removeSerially);\n\n      if (serialRemove) {\n        this.serialRemove(btnCB);\n      } else {\n        this.parallelRemove(btnCB);\n      }\n    },\n    async serialRemove(btnCB) {\n      try {\n        const spoofedTypes = this.getSpoofedTypes(this.toRemove);\n\n        for (const resource of this.toRemove) {\n          await resource.remove();\n        }\n\n        await this.refreshSpoofedTypes(spoofedTypes);\n        this.done();\n      } catch (err) {\n        this.error = err.message || err;\n        btnCB(false);\n      }\n    },\n    async parallelRemove(btnCB) {\n      try {\n        if (typeof this.toRemove[0].bulkRemove !== 'undefined') {\n          await this.toRemove[0].bulkRemove(this.toRemove, {});\n        } else {\n          await Promise.all(this.toRemove.map((resource) => resource.remove()));\n        }\n\n        const spoofedTypes = this.getSpoofedTypes(this.toRemove);\n\n        await this.refreshSpoofedTypes(spoofedTypes);\n\n        this.done();\n      } catch (err) {\n        this.error = err.message || err;\n        btnCB(false);\n      }\n    },\n    done() {\n      if ( this.cachedDoneLocation && !isEmpty(this.cachedDoneLocation) ) {\n        this.currentRouter.push(this.cachedDoneLocation);\n      }\n      this.close();\n    },\n    getSpoofedTypes(resources) {\n      const uniqueResourceTypes = uniq(this.toRemove.map((resource) => resource.type));\n\n      return uniqueResourceTypes.filter(this.$store.getters['type-map/isSpoofed']);\n    },\n\n    // If spoofed we need to reload the values as the server can't have watchers for them.\n    refreshSpoofedTypes(types) {\n      const inStore = this.$store.getters['currentProduct'].inStore;\n      const promises = types.map((type) => this.$store.dispatch(`${ inStore }/findAll`, { type, opt: { force: true } }, { root: true }));\n\n      return Promise.all(promises);\n    },\n\n    async chartAddCrdToRemove() {\n      try {\n        const res = await this.toRemove[0].relatedResourcesToRemove();\n\n        if (!this.toRemove.includes(res)) {\n          this.toRemove.push(res);\n        } else if (!this.chartsDeleteCrd) {\n          this.toRemove.pop(res);\n        }\n      } catch (err) {\n        this.error = err;\n        this.chartsDeleteCrd = false;\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <app-modal\n    v-if=\"showModal\"\n    custom-class=\"remove-modal\"\n    name=\"promptRemove\"\n    :width=\"400\"\n    height=\"auto\"\n    styles=\"max-height: 100vh;\"\n    @close=\"close\"\n  >\n    <Card\n      class=\"prompt-remove\"\n      :show-highlight-border=\"false\"\n    >\n      <h4\n        slot=\"title\"\n        class=\"text-default-text\"\n      >\n        {{ t('promptRemove.title') }}\n      </h4>\n      <div slot=\"body\">\n        <div class=\"mb-10\">\n          <template v-if=\"!hasCustomRemove\">\n            {{ t('promptRemove.attemptingToRemove', { type }) }} <span\n              v-clean-html=\"resourceNames(names, plusMore, t)\"\n            />\n          </template>\n\n          <template>\n            <component\n              :is=\"removeComponent\"\n              v-if=\"hasCustomRemove\"\n              ref=\"customPrompt\"\n              v-model=\"toRemove\"\n              v-bind=\"_data\"\n              :close=\"close\"\n              :needs-confirm=\"needsConfirm\"\n              :value=\"toRemove\"\n              :names=\"names\"\n              :type=\"type\"\n              :done-location=\"doneLocation\"\n              @errors=\"e => error = e\"\n              @done=\"done\"\n            />\n            <div\n              v-if=\"needsConfirm\"\n              class=\"mt-10\"\n            >\n              <span\n                v-clean-html=\"t('promptRemove.confirmName', { nameToMatch: escapeHtml(nameToMatch) }, true)\"\n              />\n            </div>\n          </template>\n        </div>\n        <LabeledInput\n          v-if=\"needsConfirm\"\n          id=\"confirm\"\n          v-model=\"confirmName\"\n          v-focus\n          :data-testid=\"componentTestid + '-input'\"\n          type=\"text\"\n        >\n          <div class=\"text-warning mb-10 mt-10\">\n            {{ warning }}\n          </div>\n          <div class=\"text-error mb-10 mt-10\">\n            {{ error }}\n          </div>\n          <div\n            v-if=\"!needsConfirm\"\n            class=\"text-info mt-20\"\n          >\n            {{ protip }}\n          </div>\n          <Checkbox\n            v-if=\"chartsToRemoveIsApp\"\n            v-model=\"chartsDeleteCrd\"\n            label-key=\"promptRemoveApp.removeCrd\"\n            class=\"mt-10 type\"\n            @input=\"chartAddCrdToRemove\"\n          />\n        </labeledinput>\n        <template v-else>\n          <div class=\"text-warning mb-10 mt-10\">\n            {{ warning }}\n          </div>\n          <div class=\"text-error mb-10 mt-10\">\n            {{ error }}\n          </div>\n        </template>\n      </div>\n      <template #actions>\n        <button\n          class=\"btn role-secondary\"\n          @click=\"close\"\n        >\n          {{ t('generic.cancel') }}\n        </button>\n        <div class=\"spacer\" />\n        <AsyncButton\n          mode=\"delete\"\n          class=\"btn bg-error ml-10\"\n          :disabled=\"deleteDisabled\"\n          :data-testid=\"componentTestid + '-confirm-button'\"\n          @click=\"remove\"\n        />\n      </template>\n    </Card>\n  </app-modal>\n</template>\n\n<style lang='scss'>\n  .prompt-remove {\n    &.card-container {\n      box-shadow: none;\n    }\n    #confirm {\n      width: 90%;\n      margin-left: 3px;\n    }\n\n    .actions {\n      text-align: right;\n    }\n\n    .card-actions {\n      display: flex;\n\n      .spacer {\n        flex: 1;\n      }\n    }\n  }\n</style>\n"],"mappings":"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","ignoreList":[]}]}