{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/cluster/node.js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/cluster/node.js","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["formatPercent","CAPI","CAPI_ANNOTATIONS","NODE_ROLES","RKE","SYSTEM_LABELS","MANAGEMENT","METRIC","NORMAN","POD","parseSi","findLast","SteveModel","LOCAL","ClusterNode","_SteveModel","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","get","_this$norman","_this$provisionedMach","_this$provisionedMach2","normanAction","norman","actions","cordon","action","enabled","icon","label","total","bulkable","uncordon","drain","t","bulkAction","stopDrain","openSsh","provisionedMachine","links","shell","downloadKeys","sshkeys","divider","concat","_toConsumableArray","_get","_getPrototypeOf","prototype","value","nameDisplay","metadata","name","_this$status","status","addresses","_findLast","address","type","_findLast2","annotationAddress","annotations","EXTERNAL_IP","statusAddress","_this$metadata","labels","customLabels","length","parsedLabels","k","_k$split","split","_k$split2","_slicedToArray","prefix","includes","push","managementNode","isWorker","WORKER","isControlPlane","CONTROL_PLANE","CONTROL_PLANE_OLD","isEtcd","ETCD","_this","roleLabelKeys","Object","values","keys","some","labelKey","hasRoleLabel","isExpectedValue","listNodeRoles","nodeInfo","kubeletVersion","_this$$rootGetters$cl","isFromNorman","provider","podRequests","cpu","$rootGetters","NODE","id","usage","_this$status$allocata","allocatable","cpuUsage","cpuCapacity","toString","_this$$rootGetters$cl2","memory","_this$status$capacity","capacity","ramUsage","ramCapacity","_this$status2","ramReserved","_this$status$allocata2","_this$status$capacity2","calculatePercentage","pods","podConsumed","podCapacity","_this$status$capacity3","Number","parseInt","runningPods","filter","pod","state","JSON","parse","isCondition","spec","unschedulable","_this$managementNode","sNodeCondition","conditions","find","c","transitioning","containerRuntimeVersion","replace","_cordon","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resources","safeResources","wrap","_callee$","_context","prev","next","Array","isArray","Promise","all","map","node","_node$norman","doAction","stop","_x","apply","_uncordon","_callee2","_callee2$","_context2","_node$norman2","_x2","parts","self","_this2","n","startsWith","clusterId","nodeName","normanNodeId","_this3","mNode","$dispatch","component","componentProps","kubeNodes","_stopDrain","_callee3","_callee3$","_context3","_node$norman3","_x3","_this$metadata2","drainedState","isCordoned","details","content","version","osImage","formatter","formatterOpts","iconClass","containerRuntimeIcon","internalIp","unshift","externalIp","_this4","allPods","cloudProviders","_this$metadata3","_this$metadata4","namespace","CLUSTER_NAMESPACE","MACHINE_NAME","MACHINE","provisioner","toLowerCase","default","parseFloat","a","percent","allString","res","join"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/cluster/node.js"],"sourcesContent":["import { formatPercent } from '@shell/utils/string';\nimport { CAPI as CAPI_ANNOTATIONS, NODE_ROLES, RKE, SYSTEM_LABELS } from '@shell/config/labels-annotations.js';\nimport {\n  CAPI, MANAGEMENT, METRIC, NORMAN, POD\n} from '@shell/config/types';\nimport { parseSi } from '@shell/utils/units';\nimport findLast from 'lodash/findLast';\n\nimport SteveModel from '@shell/plugins/steve/steve-class';\nimport { LOCAL } from '@shell/config/query-params';\n\nexport default class ClusterNode extends SteveModel {\n  get _availableActions() {\n    const normanAction = this.norman?.actions || {};\n\n    const cordon = {\n      action:   'cordon',\n      enabled:  !!normanAction.cordon,\n      icon:     'icon icon-fw icon-pause',\n      label:    'Cordon',\n      total:    1,\n      bulkable: true\n    };\n\n    const uncordon = {\n      action:   'uncordon',\n      enabled:  !!normanAction.uncordon,\n      icon:     'icon icon-fw icon-play',\n      label:    'Uncordon',\n      total:    1,\n      bulkable: true\n    };\n\n    const drain = {\n      action:     'drain',\n      enabled:    !!normanAction.drain,\n      icon:       'icon icon-fw icon-dot-open',\n      label:      this.t('drainNode.action'),\n      bulkable:   true,\n      bulkAction: 'drain'\n    };\n\n    const stopDrain = {\n      action:   'stopDrain',\n      enabled:  !!normanAction.stopDrain,\n      icon:     'icon icon-fw icon-x',\n      label:    this.t('drainNode.actionStop'),\n      bulkable: true,\n    };\n\n    const openSsh = {\n      action:  'openSsh',\n      enabled: !!this.provisionedMachine?.links?.shell,\n      icon:    'icon icon-fw icon-chevron-right',\n      label:   'SSH Shell',\n    };\n\n    const downloadKeys = {\n      action:  'downloadKeys',\n      enabled: !!this.provisionedMachine?.links?.sshkeys,\n      icon:    'icon icon-fw icon-download',\n      label:   this.t('node.actions.downloadSSHKey'),\n    };\n\n    return [\n      openSsh,\n      downloadKeys,\n      { divider: true },\n      cordon,\n      uncordon,\n      drain,\n      stopDrain,\n      { divider: true },\n      ...super._availableActions\n    ];\n  }\n\n  openSsh() {\n    // Pass in the name of the node, so we display that rather than the name of the provisioned machine\n    this.provisionedMachine.openSsh(this.nameDisplay);\n  }\n\n  downloadKeys() {\n    this.provisionedMachine.downloadKeys();\n  }\n\n  get showDetailStateBadge() {\n    return true;\n  }\n\n  get name() {\n    return this.metadata.name;\n  }\n\n  get addresses() {\n    return this.status?.addresses || [];\n  }\n\n  get internalIp() {\n    return findLast(this.addresses, (address) => address.type === 'InternalIP')?.address;\n  }\n\n  get externalIp() {\n    const annotationAddress = this.metadata.annotations[RKE.EXTERNAL_IP];\n    const statusAddress = findLast(this.addresses, (address) => address.type === 'ExternalIP')?.address;\n\n    return statusAddress || annotationAddress;\n  }\n\n  get labels() {\n    return this.metadata?.labels || {};\n  }\n\n  get customLabelCount() {\n    return this.customLabels.length;\n  }\n\n  get customLabels() {\n    const parsedLabels = [];\n\n    if (this.labels) {\n      for (const k in this.labels) {\n        const [prefix] = k.split('/');\n\n        if (!SYSTEM_LABELS.includes(prefix)) {\n          parsedLabels.push(`${ k }=${ this.labels[k] }`);\n        }\n      }\n    }\n\n    return parsedLabels;\n  }\n\n  get isWorker() {\n    return this.managementNode ? this.managementNode.isWorker : `${ this.labels[NODE_ROLES.WORKER] }` === 'true';\n  }\n\n  get isControlPlane() {\n    if (this.managementNode) {\n      return this.managementNode.isControlPlane;\n    } else if (\n      `${ this.labels[NODE_ROLES.CONTROL_PLANE] }` === 'true' ||\n      `${ this.labels[NODE_ROLES.CONTROL_PLANE_OLD] }` === 'true'\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  get isEtcd() {\n    return this.managementNode ? this.managementNode.isEtcd : `${ this.labels[NODE_ROLES.ETCD] }` === 'true';\n  }\n\n  get hasARole() {\n    const roleLabelKeys = Object.values(NODE_ROLES);\n\n    return Object.keys(this.labels)\n      .some((labelKey) => {\n        const hasRoleLabel = roleLabelKeys.includes(labelKey);\n        const isExpectedValue = `${ this.labels[labelKey] }` === 'true';\n\n        return hasRoleLabel && isExpectedValue;\n      });\n  }\n\n  get roles() {\n    const { isControlPlane, isWorker, isEtcd } = this;\n\n    return listNodeRoles(isControlPlane, isWorker, isEtcd, this.t('generic.all'));\n  }\n\n  get version() {\n    return this.status.nodeInfo.kubeletVersion;\n  }\n\n  get cpuUsage() {\n    /*\n      With EKS nodes that have been migrated from norman,\n      cpu/memory usage is by the annotation `management.cattle.io/pod-requests`\n    */\n    if ( this.isFromNorman && this.provider === 'eks' ) {\n      return parseSi(this.podRequests.cpu || '0');\n    }\n\n    return parseSi(this.$rootGetters['cluster/byId'](METRIC.NODE, this.id)?.usage?.cpu || '0');\n  }\n\n  get cpuCapacity() {\n    return parseSi(this.status.allocatable?.cpu);\n  }\n\n  get cpuUsagePercentage() {\n    return ((this.cpuUsage * 100) / this.cpuCapacity).toString();\n  }\n\n  get ramUsage() {\n    if ( this.isFromNorman && this.provider === 'eks' ) {\n      return parseSi(this.podRequests.memory || '0');\n    }\n\n    return parseSi(this.$rootGetters['cluster/byId'](METRIC.NODE, this.id)?.usage?.memory || '0');\n  }\n\n  get ramCapacity() {\n    return parseSi(this.status.capacity?.memory);\n  }\n\n  get ramUsagePercentage() {\n    return ((this.ramUsage * 100) / this.ramCapacity).toString();\n  }\n\n  get ramReserved() {\n    return parseSi(this.status?.allocatable?.memory);\n  }\n\n  get ramReservedPercentage() {\n    return ((this.ramUsage * 100) / this.ramReserved).toString();\n  }\n\n  get podUsage() {\n    return calculatePercentage(this.status.allocatable?.pods, this.status.capacity?.pods);\n  }\n\n  get podConsumedUsage() {\n    return ((this.podConsumed / this.podCapacity) * 100).toString();\n  }\n\n  get podCapacity() {\n    return Number.parseInt(this.status.capacity?.pods);\n  }\n\n  get podConsumed() {\n    const runningPods = this.pods.filter((pod) => pod.state === 'running');\n\n    return runningPods.length || 0;\n  }\n\n  get podRequests() {\n    return JSON.parse(this.metadata.annotations['management.cattle.io/pod-requests'] || '{}');\n  }\n\n  get isPidPressureOk() {\n    return this.isCondition('PIDPressure', 'False');\n  }\n\n  get isDiskPressureOk() {\n    return this.isCondition('DiskPressure', 'False');\n  }\n\n  get isMemoryPressureOk() {\n    return this.isCondition('MemoryPressure', 'False');\n  }\n\n  get isKubeletOk() {\n    return this.isCondition('Ready');\n  }\n\n  get isCordoned() {\n    return !!this.spec.unschedulable;\n  }\n\n  get drainedState() {\n    const sNodeCondition = this.managementNode?.status.conditions.find((c) => c.type === 'Drained');\n\n    if (sNodeCondition) {\n      if (sNodeCondition.status === 'True') {\n        return 'drained';\n      }\n      if (sNodeCondition.transitioning) {\n        return 'draining';\n      }\n    }\n\n    return null;\n  }\n\n  get containerRuntimeVersion() {\n    return this.status.nodeInfo.containerRuntimeVersion.replace('docker://', '');\n  }\n\n  get containerRuntimeIcon() {\n    if ( this.status.nodeInfo.containerRuntimeVersion.includes('docker') ) {\n      return 'icon-docker';\n    }\n\n    return '';\n  }\n\n  async cordon(resources) {\n    const safeResources = Array.isArray(resources) ? resources : [this];\n\n    await Promise.all(safeResources.map((node) => {\n      return node.norman?.doAction('cordon');\n    }));\n  }\n\n  async uncordon(resources) {\n    const safeResources = Array.isArray(resources) ? resources : [this];\n\n    await Promise.all(safeResources.map((node) => {\n      return node.norman?.doAction('uncordon');\n    }));\n  }\n\n  /**\n   *Find the node's cluster id from it's url\n   */\n  get clusterId() {\n    const parts = this.links.self.split('/');\n\n    // Local cluster url links omit `/k8s/clusters/<cluster id>`\n    // `/v1/nodes` vs `k8s/clusters/c-m-274kcrc4/v1/nodes`\n    // Be safe when determining this, so work back through the url from a known point\n    if (parts.length > 6 && parts[parts.length - 6] === 'k8s' && parts[parts.length - 5] === 'clusters') {\n      return parts[parts.length - 4];\n    }\n\n    return LOCAL;\n  }\n\n  get normanNodeId() {\n    const managementNode = (this.$rootGetters['management/all'](MANAGEMENT.NODE) || []).find((n) => {\n      return n.id.startsWith(this.clusterId) && n.status.nodeName === this.name;\n    });\n\n    if (managementNode) {\n      return managementNode.id.replace('/', ':');\n    }\n\n    return null;\n  }\n\n  get norman() {\n    return this.$rootGetters['rancher/byId'](NORMAN.NODE, this.normanNodeId);\n  }\n\n  get managementNode() {\n    return this.$rootGetters['management/all'](MANAGEMENT.NODE).find((mNode) => {\n      return mNode.id.startsWith(this.clusterId) && mNode.status.nodeName === this.id;\n    });\n  }\n\n  drain(resources) {\n    this.$dispatch('promptModal', {\n      component:      'DrainNode',\n      componentProps: {\n        kubeNodes:    resources || [this],\n        normanNodeId: this.normanNodeId\n      }\n    });\n  }\n\n  async stopDrain(resources) {\n    const safeResources = Array.isArray(resources) ? resources : [this];\n\n    await Promise.all(safeResources.map((node) => {\n      return node.norman?.doAction('stopDrain');\n    }));\n  }\n\n  get state() {\n    if (this.drainedState) {\n      return this.drainedState;\n    }\n\n    if ( this.isCordoned ) {\n      return 'cordoned';\n    }\n\n    return this.metadata?.state?.name || 'unknown';\n  }\n\n  get details() {\n    const details = [\n      {\n        label:   this.t('node.detail.detailTop.version'),\n        content: this.version\n      },\n      {\n        label:   this.t('node.detail.detailTop.os'),\n        content: this.status.nodeInfo.osImage\n      },\n      {\n        label:         this.t('node.detail.detailTop.containerRuntime'),\n        formatter:     'IconText',\n        formatterOpts: { iconClass: this.containerRuntimeIcon },\n        content:       this.containerRuntimeVersion\n      }];\n\n    if (this.internalIp) {\n      details.unshift({\n        label:     this.t('node.detail.detailTop.internalIP'),\n        formatter: 'CopyToClipboard',\n        content:   this.internalIp\n      });\n    }\n\n    if (this.externalIp) {\n      details.unshift({\n        label:     this.t('node.detail.detailTop.externalIP'),\n        formatter: 'CopyToClipboard',\n        content:   this.externalIp\n      });\n    }\n\n    return details;\n  }\n\n  get pods() {\n    const allPods = this.$rootGetters['cluster/all'](POD);\n\n    return allPods.filter((pod) => pod.spec.nodeName === this.name);\n  }\n\n  get confirmRemove() {\n    return true;\n  }\n\n  get canClone() {\n    return false;\n  }\n\n  get canDelete() {\n    const cloudProviders = [\n      'aks', 'azureaks', 'azurekubernetesservice',\n      'eks', 'amazoneks',\n      'gke', 'googlegke'\n    ];\n\n    return !cloudProviders.includes(this.provider);\n  }\n\n  // You need to preload CAPI.MACHINEs to use this\n  get provisionedMachine() {\n    const namespace = this.metadata?.annotations?.[CAPI_ANNOTATIONS.CLUSTER_NAMESPACE];\n    const name = this.metadata?.annotations?.[CAPI_ANNOTATIONS.MACHINE_NAME];\n\n    if ( namespace && name ) {\n      return this.$rootGetters['management/byId'](CAPI.MACHINE, `${ namespace }/${ name }`);\n    }\n\n    return null;\n  }\n\n  get isFromNorman() {\n    return (this.$rootGetters['currentCluster'].metadata.labels || {})['cattle.io/creator'] === 'norman';\n  }\n\n  get provider() {\n    return this.$rootGetters['currentCluster'].provisioner.toLowerCase();\n  }\n}\n\nfunction calculatePercentage(allocatable, capacity) {\n  const c = Number.parseFloat(capacity);\n  const a = Number.parseFloat(allocatable);\n  const percent = (((c - a) / c) * 100);\n\n  return formatPercent(percent);\n}\n\nexport function listNodeRoles(isControlPlane, isWorker, isEtcd, allString) {\n  const res = [];\n\n  if (isControlPlane) {\n    res.push('Control Plane');\n  }\n\n  if (isWorker) {\n    res.push('Worker');\n  }\n\n  if (isEtcd) {\n    res.push('Etcd');\n  }\n\n  if (res.length === 3 || res.length === 0) {\n    return allString;\n  }\n\n  return res.join(', ');\n}\n"],"mappings":"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","ignoreList":[]}]}