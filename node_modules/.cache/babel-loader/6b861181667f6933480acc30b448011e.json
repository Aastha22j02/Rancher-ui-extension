{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/ExplorerMembers.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/ExplorerMembers.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["MANAGEMENT","NORMAN","VIRTUAL_TYPES","ResourceTable","Masthead","AGE","ROLE","STATE","PRINCIPAL","canViewClusterPermissionsEditor","Banner","Tabbed","Tab","SortableTable","mapGetters","canViewProjectMembershipEditor","allHash","name","components","props","createLocationOverride","type","Object","default","_default","params","resource","CLUSTER_ROLE_TEMPLATE_BINDING","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","clusterRoleTemplateBindingSchema","projectRoleTemplateBindingSchema","hydration","wrap","_callee$","_context","prev","next","$store","getters","PROJECT_ROLE_TEMPLATE_BINDING","$set","Promise","all","dispatch","root","then","_ref","_ref2","_slicedToArray","normanBindings","loadingClusterBindings","bindings","loadingProjectBindings","PROJECT","projects","normanPrincipals","mgmt","USER","mgmtRoleTemplates","ROLE_TEMPLATE","stop","data","schema","headers","createLocation","_objectSpread","cluster","id","normanClusterRTBSchema","normanProjectRTBSchema","normanClusterRoleTemplateBindings","projectRoleTemplateBindings","projectRoleTemplateColumns","labeKey","value","formatter","labelKey","computed","clusterRoleTemplateBindings","map","b","clusterroletemplatebinding","filteredClusterRoleTemplateBindings","_this2","filter","clusterName","filteredProjects","_this3","reduce","p","_p$spec","spec","currentCluster","filteredProjectRoleTemplateBindings","_this4","out","rb","projectId","replace","projectsWithoutRoles","_this5","inUse","binding","thisProjectId","includes","push","keys","project","rowsWithFakeProjects","fakeRows","_project$spec","groupByLabel","concat","isFake","mainRowKey","nameDisplay","displayName","availableActions","userRoles","_toConsumableArray","rows","curr","userId","groupPrincipalId","roleTemplate","userOrGroup","userOrGroupKey","allRoles","values","canManageMembers","canManageProjectMembers","isLocal","canEditProjectMembers","_this$normanProjectRT","collectionMethods","find","x","toLowerCase","canEditClusterMembers","_this$normanClusterRT","methods","getMgmtProjectId","group","key","getMgmtProject","getProjectLabel","_this$getMgmtProject","addProjectMember","component","componentProps","saveInModal","modalSticky","getProjectRoleBinding","row","role","r","roleTemplateId","removeRole","event","_this6","_callee2","_callee2$","_context2","promptRemove","viewRoleInAPI","canViewInApi","viewInApi","slotName"],"sources":["node_modules/@rancher/shell/components/ExplorerMembers.vue"],"sourcesContent":["<script>\nimport { MANAGEMENT, NORMAN, VIRTUAL_TYPES } from '@shell/config/types';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport Masthead from '@shell/components/ResourceList/Masthead';\nimport { AGE, ROLE, STATE, PRINCIPAL } from '@shell/config/table-headers';\nimport { canViewClusterPermissionsEditor } from '@shell/components/form/Members/ClusterPermissionsEditor.vue';\nimport Banner from '@components/Banner/Banner.vue';\nimport Tabbed from '@shell/components/Tabbed/index.vue';\nimport Tab from '@shell/components/Tabbed/Tab.vue';\nimport SortableTable from '@shell/components/SortableTable';\nimport { mapGetters } from 'vuex';\nimport { canViewProjectMembershipEditor } from '@shell/components/form/Members/ProjectMembershipEditor.vue';\nimport { allHash } from '@shell/utils/promise';\n\n/**\n * Explorer members page.\n * Route: /c/local/explorer/members\n */\nexport default {\n  name: 'ExplorerMembers',\n\n  components: {\n    Banner,\n    Masthead,\n    ResourceTable,\n    Tabbed,\n    Tab,\n    SortableTable\n  },\n\n  props: {\n    // Cluster tole template binding create route - defaults to the explorer route\n    createLocationOverride: {\n      type:    Object,\n      default: () => {\n        return {\n          name:   'c-cluster-product-resource-create',\n          params: { resource: MANAGEMENT.CLUSTER_ROLE_TEMPLATE_BINDING }\n        };\n      }\n    }\n  },\n\n  async fetch() {\n    const clusterRoleTemplateBindingSchema = this.$store.getters[\n      `rancher/schemaFor`\n    ](NORMAN.CLUSTER_ROLE_TEMPLATE_BINDING);\n\n    const projectRoleTemplateBindingSchema = this.$store.getters['rancher/schemaFor'](NORMAN.PROJECT_ROLE_TEMPLATE_BINDING);\n\n    this.$set(this, 'normanClusterRTBSchema', clusterRoleTemplateBindingSchema);\n    this.$set(this, 'normanProjectRTBSchema', projectRoleTemplateBindingSchema);\n\n    if (clusterRoleTemplateBindingSchema) {\n      Promise.all([\n        this.$store.dispatch(`rancher/findAll`, { type: NORMAN.CLUSTER_ROLE_TEMPLATE_BINDING }, { root: true }),\n        this.$store.dispatch(`management/findAll`, { type: MANAGEMENT.CLUSTER_ROLE_TEMPLATE_BINDING })\n      ]).then(([normanBindings]) => {\n        this.$set(this, 'normanClusterRoleTemplateBindings', normanBindings);\n        this.loadingClusterBindings = false;\n      });\n    }\n\n    if (projectRoleTemplateBindingSchema) {\n      this.$store.dispatch('rancher/findAll', { type: NORMAN.PROJECT_ROLE_TEMPLATE_BINDING }, { root: true })\n        .then((bindings) => {\n          this.$set(this, 'projectRoleTemplateBindings', bindings);\n          this.loadingProjectBindings = false;\n        });\n    }\n\n    this.$store.dispatch('management/findAll', { type: MANAGEMENT.PROJECT })\n      .then((projects) => this.$set(this, 'projects', projects));\n\n    const hydration = {\n      normanPrincipals:  this.$store.dispatch('rancher/findAll', { type: NORMAN.PRINCIPAL }),\n      mgmt:              this.$store.dispatch(`management/findAll`, { type: MANAGEMENT.USER }),\n      mgmtRoleTemplates: this.$store.dispatch(`management/findAll`, { type: MANAGEMENT.ROLE_TEMPLATE }),\n    };\n\n    await allHash(hydration);\n  },\n\n  data() {\n    return {\n      schema: this.$store.getters[`management/schemaFor`](\n        MANAGEMENT.CLUSTER_ROLE_TEMPLATE_BINDING\n      ),\n      headers:        [STATE, PRINCIPAL, ROLE, AGE],\n      createLocation: {\n        ...this.createLocationOverride,\n        params: {\n          ...this.createLocationOverride.params,\n          cluster: this.$store.getters['currentCluster'].id\n        }\n      },\n      resource:                          MANAGEMENT.CLUSTER_ROLE_TEMPLATE_BINDING,\n      normanClusterRTBSchema:            null,\n      normanProjectRTBSchema:            null,\n      normanClusterRoleTemplateBindings: [],\n      projectRoleTemplateBindings:       [],\n      projects:                          [],\n      VIRTUAL_TYPES,\n      projectRoleTemplateColumns:        [\n        STATE,\n        {\n          name:      'member',\n          labeKey:   'generic.name',\n          value:     'principalId',\n          formatter: 'Principal'\n        },\n        {\n          name:     'role',\n          labelKey: 'tableHeaders.role',\n          value:    'roleTemplate.nameDisplay'\n        },\n      ],\n      loadingProjectBindings: true,\n      loadingClusterBindings: true\n    };\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n    clusterRoleTemplateBindings() {\n      return this.normanClusterRoleTemplateBindings.map((b) => b.clusterroletemplatebinding) ;\n    },\n    filteredClusterRoleTemplateBindings() {\n      return this.clusterRoleTemplateBindings.filter(\n        (b) => b?.clusterName === this.$store.getters['currentCluster'].id\n      );\n    },\n    filteredProjects() {\n      return this.projects.reduce((all, p) => {\n        if (p?.spec?.clusterName === this.currentCluster.id) {\n          all[p.id] = p;\n        }\n\n        return all;\n      }, {});\n    },\n    filteredProjectRoleTemplateBindings() {\n      const out = this.projectRoleTemplateBindings.filter((rb) => {\n        const projectId = rb.projectId.replace(':', '/');\n\n        return !!this.filteredProjects[projectId];\n      });\n\n      return out;\n    },\n    projectsWithoutRoles() {\n      const inUse = this.filteredProjectRoleTemplateBindings.reduce((projects, binding) => {\n        const thisProjectId = (binding.projectId || '').replace(':', '/');\n\n        if (!projects.includes(thisProjectId)) {\n          projects.push(thisProjectId);\n        }\n\n        return projects;\n      }, []);\n\n      return Object.keys(this.filteredProjects).reduce((all, projectId) => {\n        const project = this.filteredProjects[projectId];\n\n        if ( !inUse.includes(projectId)) {\n          all.push(project);\n        }\n\n        return all;\n      }, []);\n    },\n\n    // We're using this because we need to show projects as groups even if the project doesn't have any role bindings\n    rowsWithFakeProjects() {\n      const fakeRows = this.projectsWithoutRoles.map((project) => {\n        return {\n          groupByLabel:     `${ ('resourceTable.groupLabel.notInAProject') }-${ project.id }`,\n          isFake:           true,\n          mainRowKey:       project.id,\n          nameDisplay:      project.spec?.displayName, // Enable filtering by the project name\n          project,\n          availableActions: [],\n          projectId:        project.id\n        };\n      });\n\n      // We need to group each of the TemplateRoleBindings by the user + project\n      const userRoles = [...fakeRows, ...this.filteredProjectRoleTemplateBindings].reduce((rows, curr) => {\n        const {\n          userId, groupPrincipalId, roleTemplate, projectId\n        } = curr;\n\n        const userOrGroup = userId || groupPrincipalId;\n\n        if (!userOrGroup) {\n          return rows;\n        }\n\n        const userOrGroupKey = userOrGroup + projectId;\n\n        if (!rows[userOrGroupKey] ) {\n          rows[userOrGroupKey] = curr;\n          rows[userOrGroupKey].allRoles = [];\n        }\n\n        if (roleTemplate) {\n          rows[userOrGroupKey].allRoles.push(curr.roleTemplate);\n        }\n\n        return rows;\n      }, {});\n\n      return Object.values(userRoles);\n    },\n    canManageMembers() {\n      return canViewClusterPermissionsEditor(this.$store);\n    },\n    canManageProjectMembers() {\n      return canViewProjectMembershipEditor(this.$store);\n    },\n    isLocal() {\n      return this.$store.getters['currentCluster'].isLocal;\n    },\n    canEditProjectMembers() {\n      return this.normanProjectRTBSchema?.collectionMethods.find((x) => x.toLowerCase() === 'post');\n    },\n    canEditClusterMembers() {\n      return this.normanClusterRTBSchema?.collectionMethods.find((x) => x.toLowerCase() === 'post');\n    },\n  },\n  methods: {\n    getMgmtProjectId(group) {\n      return group.group.key.replace(':', '/');\n    },\n    getMgmtProject(group) {\n      return this.$store.getters['management/byId'](MANAGEMENT.PROJECT, this.getMgmtProjectId(group));\n    },\n    getProjectLabel(group) {\n      return this.getMgmtProject(group)?.spec?.displayName;\n    },\n    addProjectMember(group) {\n      this.$store.dispatch('cluster/promptModal', {\n        component:      'AddProjectMemberDialog',\n        componentProps: {\n          projectId:   group.group.key.replace('/', ':'),\n          saveInModal: true\n        },\n        modalSticky: true\n      });\n    },\n\n    getProjectRoleBinding(row, role) {\n      // Each row is a combination of project, role and user/group\n      // So find the specfic roleBindingTemplate corresponding to the specific project, role + user/group\n      const userOrGroupKey = row.userId ? 'userId' : 'groupPrincipalId';\n\n      return this.projectRoleTemplateBindings.find((r) => {\n        return r.projectId === row.projectId && r.roleTemplateId === role.id && r[userOrGroupKey] === row[userOrGroupKey];\n      });\n    },\n\n    async removeRole(row, role, event) {\n      const resource = this.getProjectRoleBinding(row, role);\n\n      await resource.promptRemove();\n    },\n\n    viewRoleInAPI(row, role) {\n      const resource = this.getProjectRoleBinding(row, role);\n\n      if (resource?.canViewInApi) {\n        resource.viewInApi();\n      }\n    },\n    slotName(project) {\n      return `main-row:${ project.id }`;\n    },\n  }\n};\n</script>\n\n<template>\n  <div class=\"project-members\">\n    <Masthead\n      :schema=\"schema\"\n      :resource=\"resource\"\n      :favorite-resource=\"VIRTUAL_TYPES.CLUSTER_MEMBERS\"\n      :create-location=\"createLocation\"\n      :create-button-label=\"t('members.createActionLabel')\"\n      :is-creatable=\"false\"\n      :type-display=\"t('members.clusterAndProject')\"\n    />\n    <Banner\n      v-if=\"isLocal\"\n      color=\"error\"\n      :label=\"t('members.localClusterWarning')\"\n    />\n    <Tabbed>\n      <Tab\n        name=\"cluster-membership\"\n        :label=\"t('members.clusterMemebership')\"\n      >\n        <div\n          v-if=\"canEditClusterMembers\"\n          class=\"row mb-10 cluster-add\"\n        >\n          <n-link\n            :to=\"createLocation\"\n            class=\"btn role-primary pull-right\"\n          >\n            {{ t('members.createActionLabel') }}\n          </n-link>\n        </div>\n        <ResourceTable\n          :schema=\"schema\"\n          :headers=\"headers\"\n          :rows=\"filteredClusterRoleTemplateBindings\"\n          :groupable=\"true\"\n          :show-grouping=\"true\"\n          :namespaced=\"false\"\n          :loading=\"$fetchState.pending || !currentCluster || loadingClusterBindings\"\n          sub-search=\"subSearch\"\n          :sub-fields=\"['nameDisplay']\"\n        />\n      </Tab>\n      <Tab\n        v-if=\"canManageProjectMembers\"\n        name=\"project-membership\"\n        :label=\"t('members.projectMembership')\"\n      >\n        <SortableTable\n          group-by=\"projectId\"\n          :loading=\"$fetchState.pending || !currentCluster || loadingProjectBindings\"\n          :rows=\"rowsWithFakeProjects\"\n          :headers=\"projectRoleTemplateColumns\"\n          :table-actions=\"false\"\n          :row-actions=\"false\"\n        >\n          <template #group-by=\"group\">\n            <div class=\"group-bar\">\n              <div\n                v-trim-whitespace\n                class=\"group-tab\"\n              >\n                <div\n                  v-clean-html=\"getProjectLabel(group)\"\n                  class=\"project-name\"\n                />\n              </div>\n              <div class=\"right\">\n                <button\n                  v-if=\"canEditProjectMembers\"\n                  type=\"button\"\n                  class=\"create-namespace btn btn-sm role-secondary mr-10 right\"\n                  @click=\"addProjectMember(group)\"\n                >\n                  {{ t('members.createActionLabel') }}\n                </button>\n              </div>\n            </div>\n          </template>\n          <template\n            #cell:role=\"{row}\"\n          >\n            <span\n              v-for=\"(role, j) in row.allRoles\"\n              :key=\"j\"\n\n              ref=\"value\"\n              :data-testid=\"`role-value-${j}`\"\n              class=\"role\"\n            >\n              <span\n                class=\"role-value\"\n                :class=\"{'text-link-enabled' : row.canViewInApi}\"\n                @click=\"viewRoleInAPI(row, role)\"\n              >\n                {{ role.nameDisplay }}\n              </span>\n              <i\n                class=\"icon icon-close\"\n                :data-testid=\"`role-values-close-${j}`\"\n                @click=\"removeRole(row, role, $event)\"\n              />\n            </span>\n          </template>\n          <template\n            v-for=\"project in projectsWithoutRoles\"\n            v-slot:[slotName(project)]\n          >\n            <tr\n              :key=\"project.id\"\n              class=\"main-row\"\n            >\n              <td\n                class=\"empty text-center\"\n                colspan=\"100%\"\n              >\n                {{ t('members.noRolesAssigned') }}\n              </td>\n            </tr>\n          </template>\n        </SortableTable>\n      </Tab>\n    </Tabbed>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n\n.role {\n  align-items: center;\n    background-color: rgba(0, 0, 0, 0.05);\n    border: 1px solid var(--header-border);\n    border-radius: 5px;\n    color: var(--tag-text);\n    line-height: 20px;\n    padding: 2px 5px;\n    white-space: nowrap;\n    display: inline-flex;\n    margin-right: 3px;\n}\n\n.role-value {\n  &.text-link-enabled {\n    cursor: pointer;\n    &:hover {\n      color: var(--primary);\n    }\n  }\n  + .icon-close {\n    margin-left: 3px;\n    cursor: pointer;\n    &:hover {\n      color: var(--primary);\n    }\n  }\n}\n\n.project-members {\n  & ::v-deep .group-bar{\n    display: flex;\n    justify-content: space-between;\n  }\n}\n.cluster-add {\n  justify-content: flex-end;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}