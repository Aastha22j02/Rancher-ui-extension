{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/c/_cluster/explorer/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/c/_cluster/explorer/index.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["DashboardMetrics","mapGetters","CAPI","ENDPOINTS","EVENT","NAMESPACE","INGRESS","MANAGEMENT","METRIC","NODE","SERVICE","PV","WORKLOAD_TYPES","COUNT","CATALOG","SECRET","NODE_ARCHITECTURE","setPromiseResult","AlertTable","Banner","parseSi","createMemoryValues","NAME","ROLES","STATE","monitoringStatus","canViewGrafanaLink","Tabbed","Tab","allDashboardsExist","EtcdInfoBanner","metricPoller","ResourceSummary","resourceCounts","HardwareResourceGauge","isEmpty","ConfigBadge","EventsTable","fetchClusterResources","SimpleBox","ExtensionPoint","CardLocation","getApplicableExtensionEnhancements","Certificates","EXPLORER","TabTitle","STATES_ENUM","capitalize","RESOURCES","DEPLOYMENT","STATEFUL_SET","JOB","DAEMON_SET","CLUSTER_METRICS_DETAIL_URL","CLUSTER_METRICS_SUMMARY_URL","K8S_METRICS_DETAIL_URL","K8S_METRICS_SUMMARY_URL","ETCD_METRICS_DETAIL_URL","ETCD_METRICS_SUMMARY_URL","CLUSTER_COMPONENTS","name","components","mixins","fetch","$store","currentCluster","id","isLocal","getters","dispatch","type","canViewAgents","loadAgents","data","clusterCounts","nodeHeaders","constraints","cattleDeployment","fleetDeployment","fleetStatefulSet","disconnected","events","nodeMetrics","showClusterMetrics","showK8sMetrics","showEtcdMetrics","canViewMetrics","selectedTab","extensionCards","CARD","CLUSTER_DASHBOARD_CARD","$route","beforeDestroy","clearInterval","interval","computed","_objectSpread","nodes","mgmtNodes","CLUSTER","showClusterTools","CLUSTER_REPO","APP","displayProvider","_this$currentCluster","other","provider","status","concat","t","nodesArchitecture","_this$nodes","_this","obj","forEach","node","_node$metadata","metadata","state","transitioning","_node$labels","architecture","labels","key","_this2","keys","Object","length","label","tooltip","reduce","acc","k","isHarvesterCluster","_this$currentCluster2","isHarvester","isRKE","includes","toLowerCase","accessibleResources","_this$clusterCounts","_this3","defaultAllowedResources","counts","filter","typeId","allowedResources","_toConsumableArray","Set","resource","clusterServices","_this4","services","cs","push","getComponentStatus","labelKey","cattleStatus","fleetStatus","_resource$status$cond","_resource$metadata$st","IN_PROGRESS","conditions","find","c","error","UNHEALTHY","spec","replicas","readyReplicas","unavailableReplicas","WARNING","HEALTHY","resources","r","_iterator","_createForOfIteratorHelper","_step","s","n","done","_resource$status$cond2","_resource$metadata$st2","value","err","e","f","_iterator2","_step2","totalCountGaugeInput","_this5","totalInput","total","useful","warningCount","errorCount","entries","entry","hasStats","_this$currentCluster3","_this$currentCluster4","allocatable","requested","cpuReserved","_this$currentCluster5","_this$currentCluster6","cpu","units","count","podsUsed","_this$currentCluster7","_this$currentCluster8","pods","ramReserved","_this$currentCluster9","_this$currentCluster10","memory","metricAggregations","_this6","checkNodes","nodeNames","_n$metadata","nodeName","someNonWorkerRoles","some","hasARole","isWorker","metrics","nd","initialAggregation","agg","metric","usage","cpuUsed","_this$currentCluster11","_this$metricAggregati","capacity","ramUsed","_this$currentCluster12","_this$metricAggregati2","hasMonitoring","_this$clusterCounts2","namespaces","canAccessNodes","_this$clusterCounts3","canAccessDeployments","_this$clusterCounts4","hasMetricsTabs","hasBadge","_this$currentCluster13","badge","hasDescription","_this$currentCluster14","description","allEventsLink","params","product","allSecretsLink","methods","_this7","setAgentResource","setInterval","agent","_this8","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","sent","t0","stop","field","_this$currentCluster15","matching","componentStatuses","startsWith","showActions","commit","elem","$refs","loadMetrics","_this9","_callee2","_callee2$","_context2","force","tabChange","neu","selectedName","goToHarvesterCluster","_this10","_callee3","provClusters","provCluster","_callee3$","_context3","RANCHER_CLUSTER","p","mgmt"],"sources":["node_modules/@rancher/shell/pages/c/_cluster/explorer/index.vue"],"sourcesContent":["<script>\nimport DashboardMetrics from '@shell/components/DashboardMetrics';\nimport { mapGetters } from 'vuex';\nimport {\n  CAPI,\n  ENDPOINTS,\n  EVENT,\n  NAMESPACE,\n  INGRESS,\n  MANAGEMENT,\n  METRIC,\n  NODE,\n  SERVICE,\n  PV,\n  WORKLOAD_TYPES,\n  COUNT,\n  CATALOG,\n  SECRET\n} from '@shell/config/types';\nimport { NODE_ARCHITECTURE } from '@shell/config/labels-annotations';\nimport { setPromiseResult } from '@shell/utils/promise';\nimport AlertTable from '@shell/components/AlertTable';\nimport { Banner } from '@components/Banner';\nimport { parseSi, createMemoryValues } from '@shell/utils/units';\nimport {\n  NAME,\n  ROLES,\n  STATE,\n} from '@shell/config/table-headers';\n\nimport { monitoringStatus, canViewGrafanaLink } from '@shell/utils/monitoring';\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport { allDashboardsExist } from '@shell/utils/grafana';\nimport EtcdInfoBanner from '@shell/components/EtcdInfoBanner';\nimport metricPoller from '@shell/mixins/metric-poller';\nimport ResourceSummary, { resourceCounts } from '@shell/components/ResourceSummary';\nimport HardwareResourceGauge from '@shell/components/HardwareResourceGauge';\nimport { isEmpty } from '@shell/utils/object';\nimport ConfigBadge from './ConfigBadge';\nimport EventsTable from './EventsTable';\nimport { fetchClusterResources } from './explorer-utils';\nimport SimpleBox from '@shell/components/SimpleBox';\nimport { ExtensionPoint, CardLocation } from '@shell/core/types';\nimport { getApplicableExtensionEnhancements } from '@shell/core/plugin-helpers';\nimport Certificates from '@shell/components/Certificates';\nimport { NAME as EXPLORER } from '@shell/config/product/explorer';\nimport TabTitle from '@shell/components/TabTitle';\nimport { STATES_ENUM } from '@shell/plugins/dashboard-store/resource-class';\nimport capitalize from 'lodash/capitalize';\n\nexport const RESOURCES = [NAMESPACE, INGRESS, PV, WORKLOAD_TYPES.DEPLOYMENT, WORKLOAD_TYPES.STATEFUL_SET, WORKLOAD_TYPES.JOB, WORKLOAD_TYPES.DAEMON_SET, SERVICE];\n\nconst CLUSTER_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-cluster-nodes-1/rancher-cluster-nodes?orgId=1';\nconst CLUSTER_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-cluster-1/rancher-cluster?orgId=1';\nconst K8S_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-k8s-components-nodes-1/rancher-kubernetes-components-nodes?orgId=1';\nconst K8S_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-k8s-components-1/rancher-kubernetes-components?orgId=1';\nconst ETCD_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-etcd-nodes-1/rancher-etcd-nodes?orgId=1';\nconst ETCD_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-etcd-1/rancher-etcd?orgId=1';\n\nconst CLUSTER_COMPONENTS = [\n  'etcd',\n  'scheduler',\n  'controller-manager',\n];\n\nexport default {\n  name: 'ClusterExplorerIndexPage',\n\n  components: {\n    EtcdInfoBanner,\n    DashboardMetrics,\n    HardwareResourceGauge,\n    ResourceSummary,\n    Tab,\n    Tabbed,\n    AlertTable,\n    Banner,\n    ConfigBadge,\n    EventsTable,\n    SimpleBox,\n    Certificates,\n    TabTitle\n  },\n\n  mixins: [metricPoller],\n\n  fetch() {\n    fetchClusterResources(this.$store, NODE);\n\n    if (this.currentCluster) {\n      setPromiseResult(\n        allDashboardsExist(this.$store, this.currentCluster.id, [CLUSTER_METRICS_DETAIL_URL, CLUSTER_METRICS_SUMMARY_URL]),\n        this,\n        'showClusterMetrics',\n        `Determine cluster metrics`\n      );\n      setPromiseResult(\n        allDashboardsExist(this.$store, this.currentCluster.id, [K8S_METRICS_DETAIL_URL, K8S_METRICS_SUMMARY_URL]),\n        this,\n        'showK8sMetrics',\n        `Determine k8s metrics`\n      );\n      setPromiseResult(\n        allDashboardsExist(this.$store, this.currentCluster.id, [ETCD_METRICS_DETAIL_URL, ETCD_METRICS_SUMMARY_URL]),\n        this,\n        'showEtcdMetrics',\n        `Determine etcd metrics`\n      );\n\n      // It's not enough to check that the grafana links are working for the current user; embedded cluster-level dashboards should only be shown if the user can view the grafana endpoint\n      // https://github.com/rancher/dashboard/issues/9792\n      setPromiseResult(canViewGrafanaLink(this.$store), this, 'canViewMetrics', 'Determine Grafana Permission');\n\n      if (this.currentCluster.isLocal && this.$store.getters['management/schemaFor'](MANAGEMENT.NODE)) {\n        this.$store.dispatch('management/findAll', { type: MANAGEMENT.NODE });\n      }\n\n      this.canViewAgents = this.$store.getters['cluster/canList'](WORKLOAD_TYPES.DEPLOYMENT) && this.$store.getters['cluster/canList'](WORKLOAD_TYPES.STATEFUL_SET);\n\n      if (this.canViewAgents) {\n        this.loadAgents();\n      }\n    }\n  },\n\n  data() {\n    const clusterCounts = this.$store.getters[`cluster/all`](COUNT);\n    const nodeHeaders = [\n      STATE,\n      NAME,\n      ROLES,\n    ];\n\n    return {\n      nodeHeaders,\n      constraints:        [],\n      cattleDeployment:   'loading',\n      fleetDeployment:    'loading',\n      fleetStatefulSet:   'loading',\n      canViewAgents:      false,\n      disconnected:       false,\n      events:             [],\n      nodeMetrics:        [],\n      showClusterMetrics: false,\n      showK8sMetrics:     false,\n      showEtcdMetrics:    false,\n      canViewMetrics:     false,\n      CLUSTER_METRICS_DETAIL_URL,\n      CLUSTER_METRICS_SUMMARY_URL,\n      K8S_METRICS_DETAIL_URL,\n      K8S_METRICS_SUMMARY_URL,\n      ETCD_METRICS_DETAIL_URL,\n      ETCD_METRICS_SUMMARY_URL,\n      STATES_ENUM,\n      clusterCounts,\n      selectedTab:        'cluster-events',\n      extensionCards:     getApplicableExtensionEnhancements(this, ExtensionPoint.CARD, CardLocation.CLUSTER_DASHBOARD_CARD, this.$route),\n    };\n  },\n\n  beforeDestroy() {\n    // Remove the data and stop watching resources that were fetched in this page\n    // Events in particular can lead to change messages having to be processed when we are no longer interested in events\n    this.$store.dispatch('cluster/forgetType', EVENT);\n    this.$store.dispatch('cluster/forgetType', NODE);\n    this.$store.dispatch('cluster/forgetType', ENDPOINTS); // Used by AlertTable to get alerts when v2 monitoring is installed\n    this.$store.dispatch('cluster/forgetType', METRIC.NODE);\n    this.$store.dispatch('cluster/forgetType', MANAGEMENT.NODE);\n    this.$store.dispatch('cluster/forgetType', WORKLOAD_TYPES.DEPLOYMENT);\n\n    clearInterval(this.interval);\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n    ...monitoringStatus(),\n\n    nodes() {\n      return this.$store.getters['cluster/all'](NODE);\n    },\n\n    mgmtNodes() {\n      return this.$store.getters['management/all'](MANAGEMENT.CLUSTER);\n    },\n\n    showClusterTools() {\n      return this.$store.getters['cluster/canList'](CATALOG.CLUSTER_REPO) &&\n      this.$store.getters['cluster/canList'](CATALOG.APP);\n    },\n\n    displayProvider() {\n      const other = 'other';\n\n      let provider = this.currentCluster?.status?.provider || other;\n\n      if (provider === 'rke.windows') {\n        provider = 'rkeWindows';\n      }\n\n      if (!this.$store.getters['i18n/exists'](`cluster.provider.${ provider }`)) {\n        provider = 'other';\n      }\n\n      return this.t(`cluster.provider.${ provider }`);\n    },\n\n    nodesArchitecture() {\n      const obj = {};\n\n      this.nodes?.forEach((node) => {\n        if (!node.metadata?.state?.transitioning) {\n          const architecture = node.labels?.[NODE_ARCHITECTURE];\n\n          const key = architecture ? capitalize(architecture) : this.t('cluster.architecture.label.unknown');\n\n          obj[key] = (obj[key] || 0) + 1;\n        }\n      });\n\n      return obj;\n    },\n\n    architecture() {\n      const keys = Object.keys(this.nodesArchitecture);\n\n      switch (keys.length) {\n      case 0:\n        return { label: this.t('generic.provisioning') };\n      case 1:\n        return { label: keys[0] };\n      default:\n        return {\n          label:   this.t('cluster.architecture.label.mixed'),\n          tooltip: keys.reduce((acc, k) => `${ acc }${ k }: ${ this.nodesArchitecture[k] }<br>`, '')\n        };\n      }\n    },\n\n    isHarvesterCluster() {\n      return this.currentCluster?.isHarvester;\n    },\n\n    isRKE() {\n      return ['rke', 'rke.windows', 'rke2', 'rke2.windows'].includes((this.currentCluster.status.provider || '').toLowerCase());\n    },\n\n    accessibleResources() {\n      // This is a list of IDs for allowed resources counts.\n      const defaultAllowedResources = Object.keys(this.clusterCounts?.[0]?.counts || {}).filter((typeId) => {\n        return this.$store.getters['type-map/isIgnored']({ id: typeId });\n      });\n\n      // Merge with RESOURCES list\n      const allowedResources = [...new Set([...defaultAllowedResources, ...RESOURCES])];\n\n      return allowedResources.filter((resource) => this.$store.getters['cluster/schemaFor'](resource));\n    },\n\n    clusterServices() {\n      const services = [];\n\n      CLUSTER_COMPONENTS.forEach((cs) => {\n        services.push({\n          name:     cs,\n          status:   this.getComponentStatus(cs),\n          labelKey: `clusterIndexPage.sections.componentStatus.${ cs }`,\n        });\n      });\n\n      if (this.canViewAgents) {\n        if (!this.currentCluster.isLocal) {\n          services.push({\n            name:     'cattle',\n            status:   this.cattleStatus,\n            labelKey: 'clusterIndexPage.sections.componentStatus.cattle',\n          });\n        }\n\n        services.push({\n          name:     'fleet',\n          status:   this.fleetStatus,\n          labelKey: 'clusterIndexPage.sections.componentStatus.fleet',\n        });\n      }\n\n      return services;\n    },\n\n    cattleStatus() {\n      const resource = this.cattleDeployment;\n\n      if (resource === 'loading') {\n        return STATES_ENUM.IN_PROGRESS;\n      }\n\n      if (!resource || this.disconnected || resource.status.conditions?.find((c) => c.status !== 'True') || resource.metadata.state?.error) {\n        return STATES_ENUM.UNHEALTHY;\n      }\n\n      if (resource.spec.replicas !== resource.status.readyReplicas || resource.status.unavailableReplicas > 0) {\n        return STATES_ENUM.WARNING;\n      }\n\n      return STATES_ENUM.HEALTHY;\n    },\n\n    fleetStatus() {\n      const resources = this.currentCluster.isLocal ? [\n        /**\n         * 'fleetStatefulSet' could take a while to be created by rancher.\n         * During that startup period, only 'fleetDeployment' will be used to calculate the fleet agent status.\n         */\n        ...(this.fleetStatefulSet ? [this.fleetStatefulSet, this.fleetDeployment] : [this.fleetDeployment]),\n      ] : [\n        this.fleetStatefulSet\n      ];\n\n      if (resources.find((r) => r === 'loading')) {\n        return STATES_ENUM.IN_PROGRESS;\n      }\n\n      for (const resource of resources) {\n        if (!resource || resource.status.conditions?.find((c) => c.status !== 'True') || resource.metadata.state?.error) {\n          return STATES_ENUM.UNHEALTHY;\n        }\n      }\n\n      for (const resource of resources) {\n        if (resource.spec.replicas !== resource.status.readyReplicas || resource.status.unavailableReplicas > 0) {\n          return STATES_ENUM.WARNING;\n        }\n      }\n\n      return STATES_ENUM.HEALTHY;\n    },\n\n    totalCountGaugeInput() {\n      const totalInput = {\n        name:         this.t('clusterIndexPage.resourceGauge.totalResources'),\n        total:        0,\n        useful:       0,\n        warningCount: 0,\n        errorCount:   0\n      };\n\n      this.accessibleResources.forEach((resource) => {\n        const counts = resourceCounts(this.$store, resource);\n\n        Object.entries(counts).forEach((entry) => {\n          totalInput[entry[0]] += entry[1];\n        });\n      });\n\n      return totalInput;\n    },\n\n    hasStats() {\n      return this.currentCluster?.status?.allocatable && this.currentCluster?.status?.requested;\n    },\n\n    cpuReserved() {\n      const total = parseSi(this.currentCluster?.status?.allocatable?.cpu);\n\n      return {\n        total,\n        useful: parseSi(this.currentCluster?.status?.requested?.cpu),\n        units:  this.t('clusterIndexPage.hardwareResourceGauge.units.cores', { count: total })\n      };\n    },\n\n    podsUsed() {\n      return {\n        total:  parseSi(this.currentCluster?.status?.allocatable?.pods || '0'),\n        useful: parseSi(this.currentCluster?.status?.requested?.pods || '0'),\n      };\n    },\n\n    ramReserved() {\n      return createMemoryValues(this.currentCluster?.status?.allocatable?.memory, this.currentCluster?.status?.requested?.memory);\n    },\n\n    metricAggregations() {\n      let checkNodes = this.nodes;\n\n      // Special case local cluster\n      if (this.currentCluster.isLocal) {\n        const nodeNames = this.nodes.reduce((acc, n) => {\n          acc[n.id] = n;\n\n          return acc;\n        }, {});\n\n        checkNodes = this.mgmtNodes.filter((n) => {\n          const nodeName = n.metadata?.labels?.['management.cattle.io/nodename'] || n.id;\n\n          return !!nodeNames[nodeName];\n        });\n      }\n\n      const someNonWorkerRoles = checkNodes.some((node) => node.hasARole && !node.isWorker);\n      const metrics = this.nodeMetrics.filter((nodeMetrics) => {\n        const node = this.nodes.find((nd) => nd.id === nodeMetrics.id);\n\n        return node && (!someNonWorkerRoles || node.isWorker);\n      });\n      const initialAggregation = {\n        cpu:    0,\n        memory: 0\n      };\n\n      if (isEmpty(metrics)) {\n        return null;\n      }\n\n      return metrics.reduce((agg, metric) => {\n        agg.cpu += parseSi(metric.usage.cpu);\n        agg.memory += parseSi(metric.usage.memory);\n\n        return agg;\n      }, initialAggregation);\n    },\n\n    cpuUsed() {\n      const total = parseSi(this.currentCluster?.status?.capacity?.cpu);\n\n      return {\n        total,\n        useful: this.metricAggregations?.cpu,\n        units:  this.t('clusterIndexPage.hardwareResourceGauge.units.cores', { count: total })\n      };\n    },\n\n    ramUsed() {\n      return createMemoryValues(this.currentCluster?.status?.capacity?.memory, this.metricAggregations?.memory);\n    },\n\n    hasMonitoring() {\n      return !!this.clusterCounts?.[0]?.counts?.[CATALOG.APP]?.namespaces?.['cattle-monitoring-system'];\n    },\n\n    canAccessNodes() {\n      return !!this.clusterCounts?.[0]?.counts?.[NODE];\n    },\n\n    canAccessDeployments() {\n      return !!this.clusterCounts?.[0]?.counts?.[WORKLOAD_TYPES.DEPLOYMENT];\n    },\n\n    hasMetricsTabs() {\n      return this.canViewMetrics && ( this.showClusterMetrics || this.showK8sMetrics || this.showEtcdMetrics);\n    },\n\n    hasBadge() {\n      return !!this.currentCluster?.badge;\n    },\n\n    hasDescription() {\n      return !!this.currentCluster?.spec?.description;\n    },\n\n    allEventsLink() {\n      return {\n        name:   'c-cluster-product-resource',\n        params: {\n          product:  EXPLORER,\n          resource: EVENT,\n        }\n      };\n    },\n\n    allSecretsLink() {\n      return {\n        name:   'c-cluster-product-resource',\n        params: {\n          product:  EXPLORER,\n          resource: SECRET,\n        }\n      };\n    }\n  },\n\n  methods: {\n    loadAgents() {\n      if (this.currentCluster.isLocal) {\n        this.setAgentResource('fleetDeployment', WORKLOAD_TYPES.DEPLOYMENT, 'cattle-fleet-system/fleet-controller');\n        this.setAgentResource('fleetStatefulSet', WORKLOAD_TYPES.STATEFUL_SET, 'cattle-fleet-local-system/fleet-agent');\n      } else {\n        this.setAgentResource('fleetStatefulSet', WORKLOAD_TYPES.STATEFUL_SET, 'cattle-fleet-system/fleet-agent');\n        this.setAgentResource('cattleDeployment', WORKLOAD_TYPES.DEPLOYMENT, 'cattle-system/cattle-cluster-agent');\n\n        // Scaling Up/Down cattle deployment causes web sockets disconnection;\n        this.interval = setInterval(() => {\n          this.disconnected = !!this.$store.getters['cluster/inError']({ type: NODE });\n        }, 1000);\n      }\n    },\n\n    async setAgentResource(agent, type, id) {\n      try {\n        this[agent] = await this.$store.dispatch('cluster/find', { type, id });\n      } catch (err) {\n        this[agent] = null;\n      }\n    },\n\n    getComponentStatus(field) {\n      const matching = (this.currentCluster?.status?.componentStatuses || []).filter((s) => s.name.startsWith(field));\n\n      // If there's no matching component status, it's \"healthy\"\n      if ( !matching.length ) {\n        return STATES_ENUM.HEALTHY;\n      }\n\n      const count = matching.reduce((acc, status) => {\n        const conditions = status.conditions.find((c) => c.status !== 'True');\n\n        return !conditions ? acc : acc + 1;\n      }, 0);\n\n      if (count > 0) {\n        return STATES_ENUM.UNHEALTHY;\n      }\n\n      return STATES_ENUM.HEALTHY;\n    },\n\n    showActions() {\n      this.$store.commit('action-menu/show', {\n        resources: this.currentCluster,\n        elem:      this.$refs['cluster-actions'],\n      });\n    },\n\n    // Used by metric-poller mixin\n    async loadMetrics() {\n      this.nodeMetrics = await fetchClusterResources(this.$store, METRIC.NODE, { force: true } );\n    },\n\n    // Events/Alerts tab changed\n    tabChange(neu) {\n      this.selectedTab = neu?.selectedName;\n    },\n\n    async goToHarvesterCluster() {\n      try {\n        const provClusters = await this.$store.dispatch('management/findAll', { type: CAPI.RANCHER_CLUSTER });\n        const provCluster = provClusters.find((p) => p.mgmt.id === this.currentCluster.id);\n\n        await provCluster.goToHarvesterCluster();\n      } catch {\n      }\n    }\n  },\n};\n</script>\n\n<template>\n  <section class=\"dashboard\">\n    <header>\n      <div class=\"title\">\n        <h1>\n          <TabTitle>\n            {{ t('clusterIndexPage.header') }}\n          </TabTitle>\n        </h1>\n        <div\n          v-if=\"hasDescription\"\n          class=\"cluster-dashboard-description\"\n        >\n          <span>{{ currentCluster.spec.description }}</span>\n        </div>\n      </div>\n    </header>\n    <div\n      class=\"cluster-dashboard-glance\"\n    >\n      <div data-testid=\"clusterProvider__label\">\n        <label>{{ t('glance.provider') }}: </label>\n        <span v-if=\"isHarvesterCluster\">\n          <a\n            role=\"button\"\n            @click=\"goToHarvesterCluster\"\n          >\n            {{ displayProvider }}\n          </a>\n        </span>\n        <span v-else>\n          {{ displayProvider }}\n        </span>\n      </div>\n      <div data-testid=\"kubernetesVersion__label\">\n        <label>{{ t('glance.version') }}: </label>\n        <span>{{ currentCluster.kubernetesVersionBase }}</span>\n        <span\n          v-if=\"currentCluster.kubernetesVersionExtension\"\n          style=\"font-size: 0.75em\"\n        >{{ currentCluster.kubernetesVersionExtension }}</span>\n      </div>\n      <div\n        v-if=\"nodes.length > 0\"\n        data-testid=\"architecture__label\"\n      >\n        <label>{{ t('glance.architecture') }}: </label>\n        <span v-clean-tooltip=\"architecture.tooltip\">\n          {{ architecture.label }}\n        </span>\n      </div>\n      <div data-testid=\"created__label\">\n        <label>{{ t('glance.created') }}: </label>\n        <span><LiveDate\n          :value=\"currentCluster.metadata.creationTimestamp\"\n          :add-suffix=\"true\"\n          :show-tooltip=\"true\"\n        /></span>\n      </div>\n      <div :style=\"{'flex':1}\" />\n      <div v-if=\"showClusterTools\">\n        <router-link\n          :to=\"{name: 'c-cluster-explorer-tools'}\"\n          class=\"cluster-tools-link\"\n        >\n          <span>{{ t('nav.clusterTools') }}</span>\n        </router-link>\n      </div>\n      <ConfigBadge\n        v-if=\"currentCluster.canUpdate\"\n        :cluster=\"currentCluster\"\n      />\n    </div>\n\n    <div class=\"resource-gauges\">\n      <ResourceSummary :spoofed-counts=\"totalCountGaugeInput\" />\n      <ResourceSummary\n        v-if=\"canAccessNodes\"\n        resource=\"node\"\n      />\n      <ResourceSummary\n        v-if=\"canAccessDeployments\"\n        resource=\"apps.deployment\"\n      />\n    </div>\n\n    <!-- extension cards -->\n    <div\n      v-if=\"extensionCards.length\"\n      class=\"extension-card-container mt-20\"\n    >\n      <SimpleBox\n        v-for=\"item, i in extensionCards\"\n        :key=\"`extensionCards${i}`\"\n        class=\"extension-card\"\n        :style=\"item.style\"\n      >\n        <h3>\n          {{ item.label }}\n        </h3>\n        <component\n          :is=\"item.component\"\n          :resource=\"currentCluster\"\n        />\n      </SimpleBox>\n    </div>\n\n    <h3\n      v-if=\"hasStats\"\n      class=\"mt-40\"\n    >\n      {{ t('clusterIndexPage.sections.capacity.label') }}\n    </h3>\n    <div\n      v-if=\"hasStats\"\n      class=\"hardware-resource-gauges\"\n    >\n      <HardwareResourceGauge\n        :name=\"t('clusterIndexPage.hardwareResourceGauge.pods')\"\n        :used=\"podsUsed\"\n      />\n      <HardwareResourceGauge\n        :name=\"t('clusterIndexPage.hardwareResourceGauge.cores')\"\n        :reserved=\"cpuReserved\"\n        :used=\"cpuUsed\"\n        :units=\"cpuReserved.units\"\n      />\n      <HardwareResourceGauge\n        :name=\"t('clusterIndexPage.hardwareResourceGauge.ram')\"\n        :reserved=\"ramReserved\"\n        :used=\"ramUsed\"\n        :units=\"ramReserved.units\"\n      />\n    </div>\n\n    <div v-if=\"clusterServices\">\n      <div\n        v-for=\"service in clusterServices\"\n        :key=\"service.name\"\n        class=\"k8s-service-status\"\n        :class=\"{[service.status]: true }\"\n        :data-testid=\"`k8s-service-${ service.name }`\"\n      >\n        <i\n          v-if=\"service.status === STATES_ENUM.IN_PROGRESS\"\n          class=\"icon icon-spinner icon-spin\"\n        />\n        <i\n          v-else-if=\"service.status === STATES_ENUM.HEALTHY\"\n          class=\"icon icon-checkmark\"\n        />\n        <i\n          v-else\n          class=\"icon icon-warning\"\n        />\n        <div class=\"label\">\n          {{ t(service.labelKey) }}\n        </div>\n      </div>\n    </div>\n\n    <div class=\"mt-30\">\n      <Tabbed @changed=\"tabChange\">\n        <Tab\n          name=\"cluster-events\"\n          :label=\"t('clusterIndexPage.sections.events.label')\"\n          :weight=\"2\"\n        >\n          <span class=\"events-table-link\">\n            <router-link :to=\"allEventsLink\">\n              <span>{{ t('glance.eventsTable') }}</span>\n            </router-link>\n          </span>\n          <EventsTable />\n        </Tab>\n        <Tab\n          v-if=\"hasMonitoring\"\n          name=\"cluster-alerts\"\n          :label=\"t('clusterIndexPage.sections.alerts.label')\"\n          :weight=\"1\"\n        >\n          <AlertTable v-if=\"selectedTab === 'cluster-alerts'\" />\n        </Tab>\n        <Tab\n          name=\"cluster-certs\"\n          :label=\"t('clusterIndexPage.sections.certs.label')\"\n          :weight=\"1\"\n        >\n          <span class=\"cert-table-link\">\n            <router-link :to=\"allSecretsLink\">\n              <span>{{ t('glance.secretsTable') }}</span>\n            </router-link>\n          </span>\n          <Certificates v-if=\"selectedTab === 'cluster-certs'\" />\n        </Tab>\n      </Tabbed>\n    </div>\n    <Tabbed\n      v-if=\"hasMetricsTabs\"\n      default-tab=\"cluster-metrics\"\n      :use-hash=\"false\"\n      class=\"mt-30\"\n    >\n      <Tab\n        v-if=\"showClusterMetrics\"\n        name=\"cluster-metrics\"\n        :label=\"t('clusterIndexPage.sections.clusterMetrics.label')\"\n        :weight=\"2\"\n      >\n        <template #default=\"props\">\n          <DashboardMetrics\n            v-if=\"props.active\"\n            :detail-url=\"CLUSTER_METRICS_DETAIL_URL\"\n            :summary-url=\"CLUSTER_METRICS_SUMMARY_URL\"\n            graph-height=\"825px\"\n          />\n        </template>\n      </Tab>\n      <Tab\n        v-if=\"showK8sMetrics\"\n        name=\"k8s-metrics\"\n        :label=\"t('clusterIndexPage.sections.k8sMetrics.label')\"\n        :weight=\"1\"\n      >\n        <template #default=\"props\">\n          <DashboardMetrics\n            v-if=\"props.active\"\n            :detail-url=\"K8S_METRICS_DETAIL_URL\"\n            :summary-url=\"K8S_METRICS_SUMMARY_URL\"\n            graph-height=\"550px\"\n          />\n        </template>\n      </Tab>\n      <Tab\n        v-if=\"showEtcdMetrics\"\n        name=\"etcd-metrics\"\n        :label=\"t('clusterIndexPage.sections.etcdMetrics.label')\"\n        :weight=\"0\"\n      >\n        <template #default=\"props\">\n          <DashboardMetrics\n            v-if=\"props.active\"\n            class=\"etcd-metrics\"\n            :detail-url=\"ETCD_METRICS_DETAIL_URL\"\n            :summary-url=\"ETCD_METRICS_SUMMARY_URL\"\n            graph-height=\"550px\"\n          >\n            <EtcdInfoBanner />\n          </DashboardMetrics>\n        </template>\n      </Tab>\n    </Tabbed>\n  </section>\n</template>\n\n<style lang=\"scss\" scoped>\n.extension-card-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(calc((100%/3) - 40px), 1fr));\n  grid-column-gap: 15px;\n  grid-row-gap: 20px;\n}\n\n@media only screen and (max-width: map-get($breakpoints, \"--viewport-9\")) {\n  .extension-card-container {\n    grid-template-columns: 1fr !important;\n  }\n}\n\n.cluster-dashboard-glance {\n  align-items: center;\n  border-top: 1px solid var(--border);\n  border-bottom: 1px solid var(--border);\n  padding: 10px 0px;\n  display: flex;\n\n  &>*:not(:nth-last-child(-n+2)) {\n    margin-right: 40px;\n\n    & SPAN {\n       font-weight: bold\n    }\n  }\n}\n\n.title {\n  h1 {\n    margin: 0;\n  }\n\n  .cluster-dashboard-description {\n    margin: 5px 0;\n    opacity: 0.7;\n  }\n}\n\n.actions-span {\n  align-self: center;\n}\n\n.events {\n  margin-top: 30px;\n}\n\n.graph-options {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.etcd-metrics ::v-deep .external-link {\n  top: -107px;\n}\n\n.cluster-tools-tip {\n  margin-top: 0;\n}\n\n.cluster-tools-link {\n  display: flex;\n  margin-right: 10px;\n\n  > I {\n    line-height: inherit;\n    margin-right: 4px;\n  }\n\n  &:focus {\n    outline: 0;\n  }\n}\n\n.events-table-link, .cert-table-link {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 20px;\n}\n\n.k8s-service-status {\n  align-items: center;\n  display: inline-flex;\n  border: 1px solid;\n  border-color: var(--border);\n  margin-top: 20px;\n\n  .label {\n    border-left: 1px solid var(--border);\n  }\n\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n\n  > div {\n    padding: 5px 20px;\n  }\n\n  > I {\n    text-align: center;\n    padding: 5px 10px;\n  }\n\n  &.unhealthy {\n    border-color: var(--error-border);\n\n    > I {\n      color: var(--error)\n    }\n  }\n\n  &.warning {\n    > I {\n      color: var(--warning)\n    }\n  }\n\n  &.healthy {\n    > I {\n      color: var(--success)\n    }\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}