{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/machine-config/amazonec2.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/machine-config/amazonec2.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Loading","Banner","CreateEditView","LabeledSelect","LabeledInput","KeyValue","UnitInput","RadioGroup","Checkbox","NORMAN","allHash","addObject","addObjects","findBy","sortBy","stringify","exceptionToErrorsArray","DEFAULT_GROUP","components","mixins","props","uuid","type","String","required","cluster","Object","default","credentialId","disabled","Boolean","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$credential","_this$credential2","_this$value$securityG","_this$value$securityG2","region","hash","res","k","wrap","_callee$","_context","prev","next","errors","abrupt","credential","id","$store","dispatch","CLOUD_CREDENTIAL","sent","t0","value","decodedData","defaultRegion","getters","$set","cloudCredentialId","ec2Client","kmsClient","instanceInfo","client","regionInfo","describeRegions","loadedRegionalFor","describeAvailabilityZones","zoneInfo","describeVpcs","vpcInfo","describeSubnets","subnetInfo","describeSecurityGroups","securityGroupInfo","listKeys","kmsInfo","canReadKms","t1","zone","instanceType","initNetwork","initTags","securityGroup","length","securityGroupMode","t2","stop","data","tags","selectedNetwork","computed","securityGroupLabels","t","defaultGroup","isIamInstanceProfileNameRequired","_this$cluster","cloudProvider","instanceOptions","lastGroup","out","_iterator","_createForOfIteratorHelper","_step","s","n","done","row","groupLabel","push","kind","label","err","e","f","regionOptions","Regions","map","obj","RegionName","sort","zoneOptions","AvailabilityZones","ZoneName","substr","networkOptions","vpcs","subnetsByVpc","_iterator2","Vpcs","_step2","_obj$Tags","_obj$Tags$find","name","Tags","find","Key","Value","VpcId","subLabel","CidrBlock","isDefault","IsDefault","_iterator3","Subnets","_step3","_obj$Tags2","_obj$Tags$find2","AvailabilityZone","concat","entry","SubnetId","DefaultForAz","vpcId","_iterator4","_step4","securityGroupOptions","_this2","SecurityGroups","filter","GroupName","description","GroupDescription","kmsOptions","Keys","KeyArn","watch","$fetch","valueRegion","updateNetwork","valueZone","val","securityGroupReadonly","methods","subnetId","_obj3","parts","split","i","key","trim","updateTags","ary","join","test"],"sources":["node_modules/@rancher/shell/machine-config/amazonec2.vue"],"sourcesContent":["<script>\nimport Loading from '@shell/components/Loading';\nimport { Banner } from '@components/Banner';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport KeyValue from '@shell/components/form/KeyValue';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { RadioGroup } from '@components/Form/Radio';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { NORMAN } from '@shell/config/types';\nimport { allHash } from '@shell/utils/promise';\nimport { addObject, addObjects, findBy } from '@shell/utils/array';\nimport { sortBy } from '@shell/utils/sort';\nimport { stringify, exceptionToErrorsArray } from '@shell/utils/error';\n\nconst DEFAULT_GROUP = 'rancher-nodes';\n\nexport default {\n  components: {\n    Banner, Loading, LabeledInput, LabeledSelect, Checkbox, RadioGroup, UnitInput, KeyValue\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    uuid: {\n      type:     String,\n      required: true,\n    },\n\n    cluster: {\n      type:    Object,\n      default: () => ({})\n    },\n\n    credentialId: {\n      type:     String,\n      required: true,\n    },\n\n    disabled: {\n      type:    Boolean,\n      default: false\n    },\n  },\n\n  async fetch() {\n    this.errors = [];\n    if ( !this.credentialId ) {\n      return;\n    }\n\n    try {\n      if ( this.credential?.id !== this.credentialId ) {\n        this.credential = await this.$store.dispatch('rancher/find', { type: NORMAN.CLOUD_CREDENTIAL, id: this.credentialId });\n      }\n    } catch (e) {\n      this.credential = null;\n    }\n\n    try {\n      const region = this.value.region || this.credential?.decodedData.defaultRegion || this.$store.getters['aws/defaultRegion'];\n\n      if ( !this.value.region ) {\n        this.$set(this.value, 'region', region);\n      }\n\n      this.ec2Client = await this.$store.dispatch('aws/ec2', { region, cloudCredentialId: this.credentialId });\n      this.kmsClient = await this.$store.dispatch('aws/kms', { region, cloudCredentialId: this.credentialId });\n\n      if ( !this.instanceInfo ) {\n        this.instanceInfo = await this.$store.dispatch('aws/describeInstanceTypes', { client: this.ec2Client } );\n      }\n\n      const hash = {};\n\n      if ( !this.regionInfo ) {\n        hash.regionInfo = this.ec2Client.describeRegions({});\n      }\n\n      if ( this.loadedRegionalFor !== region ) {\n        hash.zoneInfo = await this.ec2Client.describeAvailabilityZones({});\n        hash.vpcInfo = await this.ec2Client.describeVpcs({});\n        hash.subnetInfo = await this.ec2Client.describeSubnets({});\n        hash.securityGroupInfo = await this.ec2Client.describeSecurityGroups({});\n      }\n\n      const res = await allHash(hash);\n\n      for ( const k in res ) {\n        this[k] = res[k];\n      }\n\n      try {\n        this.kmsInfo = await this.kmsClient.listKeys({});\n        this.canReadKms = true;\n      } catch (e) {\n        this.canReadKms = false;\n      }\n\n      if ( !this.value.zone ) {\n        this.$set(this.value, 'zone', 'a');\n      }\n\n      if ( !this.value.instanceType ) {\n        this.$set(this.value, 'instanceType', this.$store.getters['aws/defaultInstanceType']);\n      }\n\n      this.initNetwork();\n      this.initTags();\n\n      if ( !this.value.securityGroup?.length ) {\n        this.$set(this.value, 'securityGroup', [DEFAULT_GROUP]);\n      }\n\n      if ( this.value.securityGroup?.length === 1 && this.value.securityGroup[0] === DEFAULT_GROUP ) {\n        this.securityGroupMode = 'default';\n      } else {\n        this.securityGroupMode = 'custom';\n      }\n\n      this.loadedRegionalFor = region;\n    } catch (e) {\n      this.errors = exceptionToErrorsArray(e);\n    }\n  },\n\n  data() {\n    return {\n      ec2Client:         null,\n      kmsClient:         null,\n      credential:        null,\n      instanceInfo:      null,\n      regionInfo:        null,\n      canReadKms:        null,\n      kmsInfo:           null,\n      tags:              null,\n      loadedRegionalFor: null,\n      zoneInfo:          null,\n      vpcInfo:           null,\n      subnetInfo:        null,\n      securityGroupInfo: null,\n      selectedNetwork:   null,\n      securityGroupMode: null,\n    };\n  },\n\n  computed: {\n    securityGroupLabels() {\n      return [\n        this.t('cluster.machineConfig.amazonEc2.securityGroup.mode.default', { defaultGroup: DEFAULT_GROUP }),\n        this.t('cluster.machineConfig.amazonEc2.securityGroup.mode.custom')\n      ];\n    },\n\n    isIamInstanceProfileNameRequired() {\n      return this.cluster?.cloudProvider === 'aws';\n    },\n\n    instanceOptions() {\n      let lastGroup;\n\n      const out = [];\n\n      for ( const row of this.instanceInfo ) {\n        if ( row.groupLabel !== lastGroup ) {\n          out.push({\n            kind:     'group',\n            disabled: true,\n            label:    row.groupLabel\n          });\n\n          lastGroup = row.groupLabel;\n        }\n\n        out.push({\n          label: row['label'],\n          value: row['apiName'],\n        });\n      }\n\n      return out;\n    },\n\n    regionOptions() {\n      if ( !this.regionInfo ) {\n        return [];\n      }\n\n      return this.regionInfo.Regions.map((obj) => {\n        return obj.RegionName;\n      }).sort();\n    },\n\n    zoneOptions() {\n      if ( !this.zoneInfo ) {\n        return [];\n      }\n\n      return this.zoneInfo.AvailabilityZones.map((obj) => {\n        return obj.ZoneName.substr(-1);\n      }).sort();\n    },\n\n    networkOptions() {\n      if ( !this.vpcInfo || !this.subnetInfo ) {\n        return [];\n      }\n\n      let vpcs = [];\n      const subnetsByVpc = {};\n\n      for ( const obj of this.vpcInfo.Vpcs ) {\n        const name = obj.Tags && obj.Tags?.length ? obj.Tags.find((t) => t.Key === 'Name')?.Value : null;\n\n        vpcs.push({\n          label:     name || obj.VpcId,\n          subLabel:  name ? obj.VpcId : obj.CidrBlock,\n          isDefault: obj.IsDefault || false,\n          kind:      'vpc',\n          value:     obj.VpcId,\n        });\n      }\n\n      vpcs = sortBy(vpcs, ['isDefault:desc', 'label']);\n\n      for ( const obj of this.subnetInfo.Subnets ) {\n        if ( obj.AvailabilityZone !== `${ this.value.region }${ this.value.zone }` ) {\n          continue;\n        }\n\n        let entry = subnetsByVpc[obj.VpcId];\n\n        if ( !entry ) {\n          entry = [];\n          subnetsByVpc[obj.VpcId] = entry;\n        }\n\n        const name = obj.Tags && obj.Tags?.length ? obj.Tags.find((t) => t.Key === 'Name')?.Value : null;\n\n        entry.push({\n          label:     name || obj.SubnetId,\n          subLabel:  name ? obj.SubnetId : obj.CidrBlock,\n          kind:      'subnet',\n          isDefault: obj.DefaultForAz || false,\n          value:     obj.SubnetId,\n          vpcId:     obj.VpcId,\n        });\n      }\n\n      const out = [];\n\n      for ( const obj of vpcs ) {\n        addObject(out, obj);\n\n        if ( subnetsByVpc[obj.value] ) {\n          addObjects(out, sortBy(subnetsByVpc[obj.value], ['isDefault:desc', 'label']));\n        }\n      }\n\n      return out;\n    },\n\n    securityGroupOptions() {\n      if ( !this.securityGroupInfo ) {\n        return [];\n      }\n\n      const out = this.securityGroupInfo.SecurityGroups.filter((obj) => {\n        return obj.VpcId === this.value.vpcId;\n      }).map((obj) => {\n        return {\n          label:       obj.GroupName,\n          description: obj.GroupDescription,\n          value:       obj.GroupName\n        };\n      });\n\n      return sortBy(out, 'label');\n    },\n\n    kmsOptions() {\n      if ( !this.kmsInfo ) {\n        return [];\n      }\n\n      const out = this.kmsInfo.Keys.map((obj) => {\n        return obj.KeyArn;\n      }).sort();\n\n      return out;\n    },\n\n    DEFAULT_GROUP() {\n      return DEFAULT_GROUP;\n    }\n  },\n\n  watch: {\n    'credentialId'() {\n      this.$fetch();\n    },\n\n    'value.region'() {\n      this.updateNetwork();\n      this.$fetch();\n    },\n\n    'value.zone'() {\n      this.$fetch();\n    },\n\n    'securityGroupMode'(val) {\n      this.value.securityGroupReadonly = ( val !== 'default' );\n    },\n  },\n\n  methods: {\n    stringify,\n\n    initNetwork() {\n      const id = this.value.subnetId || this.value.vpcId;\n\n      this.selectedNetwork = id;\n    },\n\n    updateNetwork(value) {\n      let obj;\n\n      if ( value ) {\n        obj = findBy(this.networkOptions, 'value', value);\n      }\n\n      if ( obj?.kind === 'subnet' ) {\n        this.value.subnetId = value;\n        this.value.vpcId = obj.vpcId;\n        this.selectedNetwork = value;\n      } else if ( obj ) {\n        this.value.subnetId = null;\n        this.value.vpcId = value;\n        this.selectedNetwork = value;\n      } else {\n        this.value.subnetId = null;\n        this.value.vpcId = null;\n        this.selectedNetwork = null;\n      }\n    },\n\n    initTags() {\n      const parts = (this.value.tags || '').split(/,/);\n      const out = {};\n\n      let i = 0;\n\n      while ( i + 1 < parts.length ) {\n        const key = `${ parts[i] }`.trim();\n        const value = `${ parts[i + 1] }`.trim();\n\n        if ( key ) {\n          out[key] = value;\n        }\n\n        i += 2;\n      }\n\n      this.tags = out;\n    },\n\n    updateTags(tags) {\n      const ary = [];\n\n      for ( const k in tags ) {\n        ary.push(k, tags[k]);\n      }\n\n      this.$set(this.value, 'tags', ary.join(','));\n    },\n\n    test() {\n      const errors = [];\n\n      if (!this.selectedNetwork) {\n        errors.push(this.t('validation.required', { key: 'VPC/Subnet' }, true));\n      }\n\n      return { errors };\n    },\n  },\n};\n</script>\n\n<template>\n  <div>\n    <Loading v-if=\"$fetchState.pending\" />\n    <template v-else>\n      <div v-if=\"errors.length\">\n        <div\n          v-for=\"(err, idx) in errors\"\n          :key=\"idx\"\n        >\n          <Banner\n            color=\"error\"\n            :label=\"stringify(err)\"\n          />\n        </div>\n      </div>\n\n      <div v-if=\"loadedRegionalFor\">\n        <div class=\"row mb-20\">\n          <div class=\"col span-6\">\n            <LabeledSelect\n              v-model=\"value.region\"\n              :mode=\"mode\"\n              :options=\"regionOptions\"\n              :required=\"true\"\n              :searchable=\"true\"\n              :disabled=\"disabled\"\n              :label=\"t('cluster.machineConfig.amazonEc2.region')\"\n            />\n          </div>\n          <div class=\"col span-6\">\n            <LabeledSelect\n              v-model=\"value.zone\"\n              :mode=\"mode\"\n              :options=\"zoneOptions\"\n              :required=\"true\"\n              :disabled=\"disabled\"\n              :label=\"t('cluster.machineConfig.amazonEc2.zone')\"\n            />\n          </div>\n        </div>\n        <div class=\"row mb-20\">\n          <div class=\"col span-9\">\n            <LabeledSelect\n              v-model=\"value.instanceType\"\n              :mode=\"mode\"\n              :options=\"instanceOptions\"\n              :required=\"true\"\n              :selectable=\"option => !option.disabled\"\n              :searchable=\"true\"\n              :disabled=\"disabled\"\n              :label=\"t('cluster.machineConfig.amazonEc2.instanceType')\"\n            >\n              <template v-slot:option=\"opt\">\n                <template v-if=\"opt.kind === 'group'\">\n                  <b>{{ opt.label }}</b>\n                </template>\n                <template v-else>\n                  <span class=\"pl-10\">{{ opt.label }}</span>\n                </template>\n              </template>\n            </LabeledSelect>\n          </div>\n          <div class=\"col span-3\">\n            <UnitInput\n              v-model=\"value.rootSize\"\n              output-as=\"string\"\n              :mode=\"mode\"\n              :disabled=\"disabled\"\n              :placeholder=\"t('cluster.machineConfig.amazonEc2.rootSize.placeholder')\"\n              :label=\"t('cluster.machineConfig.amazonEc2.rootSize.label')\"\n              :suffix=\"t('cluster.machineConfig.amazonEc2.rootSize.suffix')\"\n            />\n          </div>\n        </div>\n        <div class=\"row mt-20 mb-20\">\n          <div class=\"col span-6\">\n            <LabeledSelect\n              :mode=\"mode\"\n              :value=\"selectedNetwork\"\n              :options=\"networkOptions\"\n              :searchable=\"true\"\n              :required=\"true\"\n              :disabled=\"disabled\"\n              :placeholder=\"t('cluster.machineConfig.amazonEc2.selectedNetwork.placeholder')\"\n              :label=\"t('cluster.machineConfig.amazonEc2.selectedNetwork.label')\"\n              data-testid=\"amazonEc2__selectedNetwork\"\n              option-key=\"value\"\n              @input=\"updateNetwork($event)\"\n            >\n              <template v-slot:option=\"opt\">\n                <div :class=\"{'vpc': opt.kind === 'vpc', 'vpc-subnet': opt.kind !== 'vpc'}\">\n                  <span class=\"vpc-name\">{{ opt.label }}</span><span class=\"vpc-info\">{{ opt.subLabel }}</span>\n                </div>\n              </template>\n            </LabeledSelect>\n          </div>\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"value.iamInstanceProfile\"\n              :mode=\"mode\"\n              :disabled=\"disabled\"\n              :required=\"isIamInstanceProfileNameRequired\"\n              :tooltip=\"t('cluster.machineConfig.amazonEc2.iamInstanceProfile.tooltip')\"\n              :label=\"t('cluster.machineConfig.amazonEc2.iamInstanceProfile.label')\"\n            />\n          </div>\n        </div>\n\n        <portal :to=\"'advanced-'+uuid\">\n          <div class=\"row mt-20\">\n            <div class=\"col span-6\">\n              <LabeledInput\n                v-model=\"value.ami\"\n                :mode=\"mode\"\n                :disabled=\"disabled\"\n                :placeholder=\"t('cluster.machineConfig.amazonEc2.ami.placeholder')\"\n                :label=\"t('cluster.machineConfig.amazonEc2.ami.label')\"\n              />\n            </div>\n            <div class=\"col span-6\">\n              <LabeledInput\n                v-model=\"value.sshUser\"\n                :mode=\"mode\"\n                :label=\"t('cluster.machineConfig.amazonEc2.sshUser.label')\"\n                :disabled=\"!value.ami || disabled\"\n                :tooltip=\"t('cluster.machineConfig.amazonEc2.sshUser.tooltip')\"\n                :placeholder=\"t('cluster.machineConfig.amazonEc2.sshUser.placeholder')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <h3>\n                {{ t('cluster.machineConfig.amazonEc2.securityGroup.title') }}\n                <span\n                  v-if=\"!value.vpcId\"\n                  class=\"text-muted text-small\"\n                >\n                  {{ t('cluster.machineConfig.amazonEc2.securityGroup.vpcId') }}\n                </span>\n              </h3>\n              <RadioGroup\n                v-model=\"securityGroupMode\"\n                name=\"securityGroupMode\"\n                :mode=\"mode\"\n                :disabled=\"!value.vpcId || disabled\"\n                :labels=\"securityGroupLabels\"\n                :options=\"['default','custom']\"\n              />\n              <LabeledSelect\n                v-if=\"value.vpcId && securityGroupMode === 'custom'\"\n                v-model=\"value.securityGroup\"\n                :mode=\"mode\"\n                :disabled=\"!value.vpcId || disabled\"\n                :options=\"securityGroupOptions\"\n                :searchable=\"true\"\n                :multiple=\"true\"\n                :taggable=\"true\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-6\">\n              <LabeledInput\n                v-model=\"value.volumeType\"\n                :mode=\"mode\"\n                :disabled=\"disabled\"\n                :label=\"t('cluster.machineConfig.amazonEc2.volumeType.label')\"\n                :placeholder=\"t('cluster.machineConfig.amazonEc2.volumeType.placeholder')\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <Checkbox\n                v-model=\"value.encryptEbsVolume\"\n                :mode=\"mode\"\n                :label=\"t('cluster.machineConfig.amazonEc2.encryptEbsVolume')\"\n              />\n              <div\n                v-if=\"value.encryptEbsVolume\"\n                class=\"mt-10\"\n              >\n                <LabeledSelect\n                  v-if=\"canReadKms\"\n                  v-model=\"value.kmsKey\"\n                  :mode=\"mode\"\n                  :options=\"kmsOptions\"\n                  :disabled=\"disabled\"\n                  :label=\"t('cluster.machineConfig.amazonEc2.kmsKey.label')\"\n                />\n                <template v-else>\n                  <LabeledInput\n                    v-model=\"value.kmsKey\"\n                    :mode=\"mode\"\n                    :disabled=\"disabled\"\n                    :label=\"t('cluster.machineConfig.amazonEc2.kmsKey.label')\"\n                  />\n                  <p class=\"text-muted\">\n                    {{ t('cluster.machineConfig.amazonEc2.kmsKey.text') }}\n                  </p>\n                </template>\n              </div>\n            </div>\n          </div>\n          <div class=\"row mt-20\">\n            <div class=\"col span-6\">\n              <Checkbox\n                v-model=\"value.requestSpotInstance\"\n                :mode=\"mode\"\n                :label=\"t('cluster.machineConfig.amazonEc2.requestSpotInstance')\"\n              />\n              <div\n                v-if=\"value.requestSpotInstance\"\n                class=\"mt-10\"\n              >\n                <UnitInput\n                  v-model=\"value.spotPrice\"\n                  output-as=\"string\"\n                  :mode=\"mode\"\n                  :disabled=\"disabled\"\n                  :placeholder=\"t('cluster.machineConfig.amazonEc2.spotPrice.placeholder')\"\n                  :label=\"t('cluster.machineConfig.amazonEc2.spotPrice.label')\"\n                  :suffix=\"t('cluster.machineConfig.amazonEc2.spotPrice.suffix')\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <div>\n                <Checkbox\n                  v-model=\"value.privateAddressOnly\"\n                  :mode=\"mode\"\n                  :disabled=\"disabled\"\n                  :label=\"t('cluster.machineConfig.amazonEc2.privateAddressOnly')\"\n                />\n              </div>\n              <div>\n                <Checkbox\n                  v-model=\"value.useEbsOptimizedInstance\"\n                  :mode=\"mode\"\n                  :disabled=\"disabled\"\n                  :label=\"t('cluster.machineConfig.amazonEc2.useEbsOptimizedInstance')\"\n                />\n              </div>\n              <div>\n                <Checkbox\n                  v-model=\"value.httpEndpoint\"\n                  value-when-true=\"enabled\"\n                  :mode=\"mode\"\n                  :disabled=\"disabled\"\n                  :label=\"t('cluster.machineConfig.amazonEc2.httpEndpoint')\"\n                />\n              </div>\n              <div>\n                <Checkbox\n                  v-model=\"value.httpTokens\"\n                  value-when-true=\"required\"\n                  :mode=\"mode\"\n                  :disabled=\"!value.httpEndpoint || disabled\"\n                  :label=\"t('cluster.machineConfig.amazonEc2.httpTokens')\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row mt-20\">\n            <div class=\"col span-12\">\n              <KeyValue\n                :value=\"tags\"\n                :mode=\"mode\"\n                :read-allowed=\"false\"\n                :label=\"t('cluster.machineConfig.amazonEc2.tagTitle')\"\n                :add-label=\"t('labels.addTag')\"\n                :disabled=\"disabled\"\n                @input=\"updateTags\"\n              />\n            </div>\n          </div>\n        </portal>\n      </div>\n    </template>\n  </div>\n</template>\n<style scoped lang=\"scss\">\n  .vpc, .vpc-subnet {\n    display: flex;\n    line-height: 30px;\n\n    .vpc-name {\n      font-weight: bold;\n      flex: 1;\n    }\n\n    .vpc-info {\n      font-size: 12px;\n      opacity: 0.7;\n    }\n  }\n\n  .vpc-subnet .vpc-name {\n    font-weight: normal;\n    padding-left: 15px;\n  }\n</style>\n"],"mappings":"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","ignoreList":[]}]}