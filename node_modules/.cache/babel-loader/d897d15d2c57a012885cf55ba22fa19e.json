{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/ResourceDetail/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/ResourceDetail/index.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["CreateEditView","Loading","ResourceYaml","_VIEW","_EDIT","_CLONE","_IMPORT","_STAGE","_CREATE","AS","_YAML","_DETAIL","_CONFIG","_GRAPH","PREVIEW","MODE","FLEET","SCHEMA","createYaml","Masthead","DetailTop","clone","diff","IconMessage","ForceDirectedTreeChart","checkSchemasForFindAllHash","modeFor","route","_route$query","_route$params","query","mode","params","id","getYaml","_x","_x2","_getYaml","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","store","model","yaml","opt","wrap","_callee3$","_context3","prev","next","headers","accept","hasLink","followLink","sent","data","abrupt","cleanForDownload","stop","components","mixins","props","storeOverride","type","String","default","resourceOverride","parentRouteOverride","flexContent","Boolean","componentTestid","fetch","_this","_callee","resource","inStore","realMode","namespace","getGraphConfig","hasGraph","hasCustomDetail","hasCustomEdit","schemas","requested","as","notFound","options","canViewYaml","schema","initialModel","liveModel","_schema$attributes","_schema$attributes2","graphSchema","fqid","out","key","_callee$","_context","$store","$route","getters","includes","concat","showMasthead","resourceEditMasthead","canYaml","attributes","namespaced","metadata","dispatch","forceYaml","cluster","inStoreType","CLUSTER","bundle","BUNDLE","bundleDeployment","BUNDLE_DEPLOYMENT","canViewChart","watch","t0","status","Error","t","chartData","cleanForNew","cleanYaml","value","applyDefaults","resourceSubtype","asYaml","computed","isView","isYaml","isDetail","isGraph","offerPreview","showComponent","detailComponent","editComponent","$routeQuery","inNeu","inOld","neu","old","queryDiff","Object","keys","$fetch","valueMetadataResourceVersion","a","b","_this2","_callee2","_callee2$","_context2","created","detailResource","resourceDetail","editResource","resourceEdit","methods","setSubtype","subtype","keyAction","act","m"],"sources":["node_modules/@rancher/shell/components/ResourceDetail/index.vue"],"sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view/impl';\nimport Loading from '@shell/components/Loading';\nimport ResourceYaml from '@shell/components/ResourceYaml';\nimport {\n  _VIEW, _EDIT, _CLONE, _IMPORT, _STAGE, _CREATE,\n  AS, _YAML, _DETAIL, _CONFIG, _GRAPH, PREVIEW, MODE,\n} from '@shell/config/query-params';\nimport { FLEET, SCHEMA } from '@shell/config/types';\nimport { createYaml } from '@shell/utils/create-yaml';\nimport Masthead from '@shell/components/ResourceDetail/Masthead';\nimport DetailTop from '@shell/components/DetailTop';\nimport { clone, diff } from '@shell/utils/object';\nimport IconMessage from '@shell/components/IconMessage';\nimport ForceDirectedTreeChart from '@shell/components/fleet/ForceDirectedTreeChart';\nimport { checkSchemasForFindAllHash } from '@shell/utils/auth';\n\nfunction modeFor(route) {\n  if ( route.query?.mode === _IMPORT ) {\n    return _IMPORT;\n  }\n\n  if ( route.params?.id ) {\n    return route.query.mode || _VIEW;\n  } else {\n    return _CREATE;\n  }\n}\n\nasync function getYaml(store, model) {\n  let yaml;\n  const opt = { headers: { accept: 'application/yaml' } };\n\n  if ( model.hasLink('view') ) {\n    yaml = (await model.followLink('view', opt)).data;\n  }\n\n  return model.cleanForDownload(yaml);\n}\n\nexport default {\n  components: {\n    Loading,\n    DetailTop,\n    ForceDirectedTreeChart,\n    ResourceYaml,\n    Masthead,\n    IconMessage,\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    storeOverride: {\n      type:    String,\n      default: null,\n    },\n\n    resourceOverride: {\n      type:    String,\n      default: null,\n    },\n\n    parentRouteOverride: {\n      type:    String,\n      default: null,\n    },\n\n    flexContent: {\n      type:    Boolean,\n      default: false,\n    },\n\n    /**\n     * Inherited global identifier prefix for tests\n     * Define a term based on the parent component to avoid conflicts on multiple components\n     */\n    componentTestid: {\n      type:    String,\n      default: 'resource-details'\n    }\n  },\n\n  async fetch() {\n    const store = this.$store;\n    const route = this.$route;\n    const params = route.params;\n    let resource = this.resourceOverride || params.resource;\n\n    const inStore = this.storeOverride || store.getters['currentStore'](resource);\n    const realMode = this.realMode;\n\n    // eslint-disable-next-line prefer-const\n    let { namespace, id } = params;\n\n    // There are 6 \"real\" modes that can be put into the query string\n    // These are mapped down to the 3 regular page \"mode\"s that create-edit-view components\n    // know about:  view, edit, create (stage, import and clone become \"create\")\n    const mode = ([_CLONE, _IMPORT, _STAGE].includes(realMode) ? _CREATE : realMode);\n\n    const getGraphConfig = store.getters['type-map/hasGraph'](resource);\n    const hasGraph = !!getGraphConfig;\n    const hasCustomDetail = store.getters['type-map/hasCustomDetail'](resource, id);\n    const hasCustomEdit = store.getters['type-map/hasCustomEdit'](resource, id);\n\n    const schemas = store.getters[`${ inStore }/all`](SCHEMA);\n\n    // As determines what component will be rendered\n    const requested = route.query[AS];\n    let as;\n    let notFound = false;\n\n    if ( mode === _VIEW && hasCustomDetail && (!requested || requested === _DETAIL) ) {\n      as = _DETAIL;\n    } else if ( mode === _VIEW && hasGraph && requested === _GRAPH) {\n      as = _GRAPH;\n    } else if ( hasCustomEdit && (!requested || requested === _CONFIG) ) {\n      as = _CONFIG;\n    } else {\n      as = _YAML;\n    }\n\n    this.as = as;\n\n    const options = store.getters[`type-map/optionsFor`](resource);\n\n    this.showMasthead = [_CREATE, _EDIT].includes(mode) ? options.resourceEditMasthead : true;\n    const canViewYaml = options.canYaml;\n\n    if ( options.resource ) {\n      resource = options.resource;\n    }\n\n    const schema = store.getters[`${ inStore }/schemaFor`](resource);\n    let model, initialModel, liveModel, yaml;\n\n    if ( realMode === _CREATE || realMode === _IMPORT ) {\n      if ( !namespace ) {\n        namespace = store.getters['defaultNamespace'];\n      }\n\n      const data = { type: resource };\n\n      if ( schema?.attributes?.namespaced ) {\n        data.metadata = { namespace };\n      }\n\n      liveModel = await store.dispatch(`${ inStore }/create`, data);\n      initialModel = await store.dispatch(`${ inStore }/clone`, { resource: liveModel });\n      model = await store.dispatch(`${ inStore }/clone`, { resource: liveModel });\n\n      if (model.forceYaml === true) {\n        as = _YAML;\n        this.as = as;\n      }\n\n      if ( as === _YAML ) {\n        yaml = createYaml(schemas, resource, data);\n      }\n    } else {\n      if ( as === _GRAPH ) {\n        const graphSchema = await checkSchemasForFindAllHash({\n          cluster: {\n            inStoreType: 'management',\n            type:        FLEET.CLUSTER\n          },\n          bundle: {\n            inStoreType: 'management',\n            type:        FLEET.BUNDLE\n          },\n\n          bundleDeployment: {\n            inStoreType: 'management',\n            type:        FLEET.BUNDLE_DEPLOYMENT\n          }\n\n        }, this.$store);\n\n        this.canViewChart = graphSchema.cluster && graphSchema.bundle && graphSchema.bundleDeployment;\n      }\n\n      let fqid = id;\n\n      if ( schema.attributes?.namespaced && namespace ) {\n        fqid = `${ namespace }/${ fqid }`;\n      }\n\n      try {\n        liveModel = await store.dispatch(`${ inStore }/find`, {\n          type: resource,\n          id:   fqid,\n          opt:  { watch: true }\n        });\n      } catch (e) {\n        if (e.status === 404 || e.status === 403) {\n          store.dispatch('loadingError', new Error(this.t('nav.failWhale.resourceIdNotFound', { resource, fqid }, true)));\n        }\n        liveModel = {};\n        notFound = fqid;\n      }\n\n      if (realMode === _VIEW) {\n        model = liveModel;\n      } else {\n        model = await store.dispatch(`${ inStore }/clone`, { resource: liveModel });\n      }\n\n      initialModel = await store.dispatch(`${ inStore }/clone`, { resource: liveModel });\n\n      if ( as === _YAML ) {\n        yaml = await getYaml(this.$store, liveModel);\n      }\n\n      if ( as === _GRAPH ) {\n        this.chartData = liveModel;\n      }\n\n      if ( [_CLONE, _IMPORT, _STAGE].includes(realMode) ) {\n        model.cleanForNew();\n        yaml = model.cleanYaml(yaml, realMode);\n      }\n    }\n\n    // Ensure common properties exists\n    model = await store.dispatch(`${ inStore }/cleanForDetail`, model);\n\n    const out = {\n      hasGraph,\n      getGraphConfig,\n      hasCustomDetail,\n      hasCustomEdit,\n      canViewYaml,\n      resource,\n      as,\n      yaml,\n      initialModel,\n      liveModel,\n      mode,\n      value: model,\n      notFound,\n    };\n\n    for ( const key in out ) {\n      this[key] = out[key];\n    }\n\n    if ( this.mode === _CREATE ) {\n      this.value.applyDefaults(this, realMode);\n    }\n  },\n  data() {\n    return {\n      chartData:       null,\n      resourceSubtype: null,\n\n      // Set by fetch\n      hasGraph:        null,\n      hasCustomDetail: null,\n      hasCustomEdit:   null,\n      resource:        null,\n      asYaml:          null,\n      yaml:            null,\n      liveModel:       null,\n      initialModel:    null,\n      mode:            null,\n      as:              null,\n      value:           null,\n      model:           null,\n      notFound:        null,\n      canViewChart:    true,\n    };\n  },\n\n  computed: {\n    realMode() {\n      // There are 5 \"real\" modes that you can start in: view, edit, create, stage, clone\n      const realMode = modeFor(this.$route);\n\n      return realMode;\n    },\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    isYaml() {\n      return this.as === _YAML;\n    },\n\n    isDetail() {\n      return this.as === _DETAIL;\n    },\n\n    isGraph() {\n      return this.as === _GRAPH;\n    },\n\n    offerPreview() {\n      return this.as === _YAML && [_EDIT, _CLONE, _IMPORT, _STAGE].includes(this.mode);\n    },\n\n    showComponent() {\n      switch ( this.as ) {\n      case _DETAIL: return this.detailComponent;\n      case _CONFIG: return this.editComponent;\n      }\n\n      return null;\n    },\n  },\n\n  watch: {\n    '$route.query'(inNeu, inOld) {\n      const neu = clone(inNeu);\n      const old = clone(inOld);\n\n      delete neu[PREVIEW];\n      delete old[PREVIEW];\n\n      if ( !this.isView ) {\n        delete neu[AS];\n        delete old[AS];\n      }\n\n      const queryDiff = Object.keys(diff(neu, old));\n\n      if ( queryDiff.includes(MODE) || queryDiff.includes(AS)) {\n        this.$fetch();\n      }\n    },\n\n    // Auto refresh YAML when the model changes\n    async 'value.metadata.resourceVersion'(a, b) {\n      if ( this.mode === _VIEW && this.as === _YAML && a && b && a !== b) {\n        this.yaml = await getYaml(this.$store, this.liveModel);\n      }\n    }\n  },\n\n  created() {\n    // eslint-disable-next-line prefer-const\n    const id = this.$route.params.id;\n    const resource = this.resourceOverride || this.$route.params.resource;\n    const options = this.$store.getters[`type-map/optionsFor`](resource);\n\n    const detailResource = options.resourceDetail || options.resource || resource;\n    const editResource = options.resourceEdit || options.resource || resource;\n\n    // FIXME: These aren't right... signature is (rawType, subType).. not (rawType, resourceId)\n    // Remove id? How does subtype get in (cluster/node)\n    this.detailComponent = this.$store.getters['type-map/importDetail'](detailResource, id);\n    this.editComponent = this.$store.getters['type-map/importEdit'](editResource, id);\n  },\n\n  methods: {\n    setSubtype(subtype) {\n      this.resourceSubtype = subtype;\n    },\n\n    keyAction(act) {\n      const m = this.liveModel;\n\n      if ( m?.[act] ) {\n        m[act]();\n      }\n    },\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending || notFound\" />\n  <div v-else>\n    <Masthead\n      v-if=\"showMasthead\"\n      :resource=\"resource\"\n      :value=\"liveModel\"\n      :mode=\"mode\"\n      :real-mode=\"realMode\"\n      :as=\"as\"\n      :has-graph=\"hasGraph\"\n      :has-detail=\"hasCustomDetail\"\n      :has-edit=\"hasCustomEdit\"\n      :can-view-yaml=\"canViewYaml\"\n      :resource-subtype=\"resourceSubtype\"\n      :parent-route-override=\"parentRouteOverride\"\n      :store-override=\"storeOverride\"\n    >\n      <DetailTop\n        v-if=\"isView && isDetail\"\n        :value=\"liveModel\"\n      />\n    </Masthead>\n\n    <ForceDirectedTreeChart\n      v-if=\"isGraph && canViewChart\"\n      :data=\"chartData\"\n      :fdc-config=\"getGraphConfig\"\n    />\n\n    <ResourceYaml\n      v-else-if=\"isYaml\"\n      ref=\"resourceyaml\"\n      v-model=\"value\"\n      :mode=\"mode\"\n      :yaml=\"yaml\"\n      :offer-preview=\"offerPreview\"\n      :done-route=\"doneRoute\"\n      :done-override=\"value.doneOverride\"\n      :class=\"{'flex-content': flexContent}\"\n    />\n\n    <component\n      :is=\"showComponent\"\n      v-else\n      ref=\"comp\"\n      v-model=\"value\"\n      v-bind=\"_data\"\n      :done-params=\"doneParams\"\n      :done-route=\"doneRoute\"\n      :mode=\"mode\"\n      :initial-value=\"initialModel\"\n      :live-value=\"liveModel\"\n      :real-mode=\"realMode\"\n      :class=\"{'flex-content': flexContent}\"\n      @set-subtype=\"setSubtype\"\n    />\n\n    <button\n      v-if=\"isView\"\n      v-shortkey.once=\"['shift','d']\"\n      :data-testid=\"componentTestid + '-detail'\"\n      class=\"hide\"\n      @shortkey=\"keyAction('goToDetail')\"\n    />\n    <button\n      v-if=\"isView\"\n      v-shortkey.once=\"['shift','c']\"\n      :data-testid=\"componentTestid + '-config'\"\n      class=\"hide\"\n      @shortkey=\"keyAction('goToViewConfig')\"\n    />\n    <button\n      v-if=\"isView\"\n      v-shortkey.once=\"['shift','y']\"\n      :data-testid=\"componentTestid + '-yaml'\"\n      class=\"hide\"\n      @shortkey=\"keyAction('goToViewYaml')\"\n    />\n    <button\n      v-if=\"isView\"\n      v-shortkey.once=\"['shift','e']\"\n      :data-testid=\"componentTestid + '-edit'\"\n      class=\"hide\"\n      @shortkey=\"keyAction('goToEdit')\"\n    />\n  </div>\n</template>\n\n<style lang='scss' scoped>\n.flex-content {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}