{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/c/_cluster/apps/charts/install.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/c/_cluster/apps/charts/install.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmZ1bmN0aW9uIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHIsIGUpIHsgdmFyIHQgPSAidW5kZWZpbmVkIiAhPSB0eXBlb2YgU3ltYm9sICYmIHJbU3ltYm9sLml0ZXJhdG9yXSB8fCByWyJAQGl0ZXJhdG9yIl07IGlmICghdCkgeyBpZiAoQXJyYXkuaXNBcnJheShyKSB8fCAodCA9IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShyKSkgfHwgZSAmJiByICYmICJudW1iZXIiID09IHR5cGVvZiByLmxlbmd0aCkgeyB0ICYmIChyID0gdCk7IHZhciBfbiA9IDAsIEYgPSBmdW5jdGlvbiBGKCkge307IHJldHVybiB7IHM6IEYsIG46IGZ1bmN0aW9uIG4oKSB7IHJldHVybiBfbiA+PSByLmxlbmd0aCA/IHsgZG9uZTogITAgfSA6IHsgZG9uZTogITEsIHZhbHVlOiByW19uKytdIH07IH0sIGU6IGZ1bmN0aW9uIGUocikgeyB0aHJvdyByOyB9LCBmOiBGIH07IH0gdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGl0ZXJhdGUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpOyB9IHZhciBvLCBhID0gITAsIHUgPSAhMTsgcmV0dXJuIHsgczogZnVuY3Rpb24gcygpIHsgdCA9IHQuY2FsbChyKTsgfSwgbjogZnVuY3Rpb24gbigpIHsgdmFyIHIgPSB0Lm5leHQoKTsgcmV0dXJuIGEgPSByLmRvbmUsIHI7IH0sIGU6IGZ1bmN0aW9uIGUocikgeyB1ID0gITAsIG8gPSByOyB9LCBmOiBmdW5jdGlvbiBmKCkgeyB0cnkgeyBhIHx8IG51bGwgPT0gdC5yZXR1cm4gfHwgdC5yZXR1cm4oKTsgfSBmaW5hbGx5IHsgaWYgKHUpIHRocm93IG87IH0gfSB9OyB9CmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShyLCBhKSB7IGlmIChyKSB7IGlmICgic3RyaW5nIiA9PSB0eXBlb2YgcikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KHIsIGEpOyB2YXIgdCA9IHt9LnRvU3RyaW5nLmNhbGwocikuc2xpY2UoOCwgLTEpOyByZXR1cm4gIk9iamVjdCIgPT09IHQgJiYgci5jb25zdHJ1Y3RvciAmJiAodCA9IHIuY29uc3RydWN0b3IubmFtZSksICJNYXAiID09PSB0IHx8ICJTZXQiID09PSB0ID8gQXJyYXkuZnJvbShyKSA6ICJBcmd1bWVudHMiID09PSB0IHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KHQpID8gX2FycmF5TGlrZVRvQXJyYXkociwgYSkgOiB2b2lkIDA7IH0gfQpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShyLCBhKSB7IChudWxsID09IGEgfHwgYSA+IHIubGVuZ3RoKSAmJiAoYSA9IHIubGVuZ3RoKTsgZm9yICh2YXIgZSA9IDAsIG4gPSBBcnJheShhKTsgZSA8IGE7IGUrKykgbltlXSA9IHJbZV07IHJldHVybiBuOyB9CmZ1bmN0aW9uIG93bktleXMoZSwgcikgeyB2YXIgdCA9IE9iamVjdC5rZXlzKGUpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgbyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7IHIgJiYgKG8gPSBvLmZpbHRlcihmdW5jdGlvbiAocikgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCByKS5lbnVtZXJhYmxlOyB9KSksIHQucHVzaC5hcHBseSh0LCBvKTsgfSByZXR1cm4gdDsgfQpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKGUpIHsgZm9yICh2YXIgciA9IDE7IHIgPCBhcmd1bWVudHMubGVuZ3RoOyByKyspIHsgdmFyIHQgPSBudWxsICE9IGFyZ3VtZW50c1tyXSA/IGFyZ3VtZW50c1tyXSA6IHt9OyByICUgMiA/IG93bktleXMoT2JqZWN0KHQpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBfZGVmaW5lUHJvcGVydHkoZSwgciwgdFtyXSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyh0KSkgOiBvd25LZXlzKE9iamVjdCh0KSkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LCByKSk7IH0pOyB9IHJldHVybiBlOyB9CmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gIi9ob21lL3VidW50dS9zdXNlY29uZi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb20uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCBqc3lhbWwgZnJvbSAnanMteWFtbCc7CmltcG9ydCBtZXJnZSBmcm9tICdsb2Rhc2gvbWVyZ2UnOwppbXBvcnQgaXNFcXVhbCBmcm9tICdsb2Rhc2gvaXNFcXVhbCc7CmltcG9ydCB7IG1hcFByZWYsIERJRkYgfSBmcm9tICdAc2hlbGwvc3RvcmUvcHJlZnMnOwppbXBvcnQgeyBtYXBGZWF0dXJlLCBNVUxUSV9DTFVTVEVSLCBMRUdBQ1kgfSBmcm9tICdAc2hlbGwvc3RvcmUvZmVhdHVyZXMnOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IEJhbm5lciB9IGZyb20gJ0Bjb21wb25lbnRzL0Jhbm5lcic7CmltcG9ydCBCdXR0b25Hcm91cCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9CdXR0b25Hcm91cCc7CmltcG9ydCBDaGFydFJlYWRtZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DaGFydFJlYWRtZSc7CmltcG9ydCB7IENoZWNrYm94IH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9DaGVja2JveCc7CmltcG9ydCBMYWJlbGVkU2VsZWN0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vTGFiZWxlZFNlbGVjdCc7CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IHsgTGFiZWxlZFRvb2x0aXAgfSBmcm9tICdAY29tcG9uZW50cy9MYWJlbGVkVG9vbHRpcCc7CmltcG9ydCBMYXp5SW1hZ2UgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvTGF6eUltYWdlJzsKaW1wb3J0IExvYWRpbmcgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvTG9hZGluZyc7CmltcG9ydCBOYW1lTnNEZXNjcmlwdGlvbiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL05hbWVOc0Rlc2NyaXB0aW9uJzsKaW1wb3J0IFJlc291cmNlQ2FuY2VsTW9kYWwgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvUmVzb3VyY2VDYW5jZWxNb2RhbCc7CmltcG9ydCBRdWVzdGlvbnMgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvUXVlc3Rpb25zJzsKaW1wb3J0IFRhYmJlZCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9UYWJiZWQnOwppbXBvcnQgVW5pdElucHV0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vVW5pdElucHV0JzsKaW1wb3J0IFlhbWxFZGl0b3IsIHsgRURJVE9SX01PREVTIH0gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvWWFtbEVkaXRvcic7CmltcG9ydCBXaXphcmQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvV2l6YXJkJzsKaW1wb3J0IFR5cGVEZXNjcmlwdGlvbiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9UeXBlRGVzY3JpcHRpb24nOwppbXBvcnQgQ2hhcnRNaXhpbiBmcm9tICdAc2hlbGwvbWl4aW5zL2NoYXJ0JzsKaW1wb3J0IENoaWxkSG9vaywgeyBCRUZPUkVfU0FWRV9IT09LUywgQUZURVJfU0FWRV9IT09LUyB9IGZyb20gJ0BzaGVsbC9taXhpbnMvY2hpbGQtaG9vayc7CmltcG9ydCB7IENBVEFMT0csIE1BTkFHRU1FTlQsIERFRkFVTFRfV09SS1NQQUNFLCBDQVBJIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IENIQVJULCBGUk9NX0NMVVNURVIsIEZST01fVE9PTFMsIEhJREVfU0lERV9OQVYsIE5BTUVTUEFDRSwgUkVQTywgUkVQT19UWVBFLCBWRVJTSU9OLCBfRkxBR0dFRCB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKaW1wb3J0IHsgQ0FUQUxPRyBhcyBDQVRBTE9HX0FOTk9UQVRJT05TLCBQUk9KRUNUIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9sYWJlbHMtYW5ub3RhdGlvbnMnOwppbXBvcnQgeyBleGNlcHRpb25Ub0Vycm9yc0FycmF5IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2Vycm9yJzsKaW1wb3J0IHsgY2xvbmUsIGRpZmYsIGdldCwgc2V0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL29iamVjdCc7CmltcG9ydCB7IGlnbm9yZVZhcmlhYmxlcyBhcyBfaWdub3JlVmFyaWFibGVzIH0gZnJvbSAnLi9pbnN0YWxsLmhlbHBlcnMnOwppbXBvcnQgeyBmaW5kQnksIGluc2VydEF0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2FycmF5JzsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgeyBzYWZlckR1bXAgfSBmcm9tICdAc2hlbGwvdXRpbHMvY3JlYXRlLXlhbWwnOwppbXBvcnQgeyBMSU5VWCwgV0lORE9XUyB9IGZyb20gJ0BzaGVsbC9zdG9yZS9jYXRhbG9nJzsKaW1wb3J0IHsgU0VUVElORyB9IGZyb20gJ0BzaGVsbC9jb25maWcvc2V0dGluZ3MnOwp2YXIgVkFMVUVTX1NUQVRFID0gewogIEZPUk06ICdGT1JNJywKICBZQU1MOiAnWUFNTCcsCiAgRElGRjogJ0RJRkYnCn07CmZ1bmN0aW9uIGlzUGxhaW5MYXlvdXQocXVlcnkpIHsKICByZXR1cm4gT2JqZWN0LmtleXMocXVlcnkpLmluY2x1ZGVzKEhJREVfU0lERV9OQVYpOwp9CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSW5zdGFsbCcsCiAgbGF5b3V0OiBmdW5jdGlvbiBsYXlvdXQoY29udGV4dCkgewogICAgcmV0dXJuIGlzUGxhaW5MYXlvdXQoY29udGV4dC5xdWVyeSkgPyAncGxhaW4nIDogJyc7CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBCYW5uZXI6IEJhbm5lciwKICAgIEJ1dHRvbkdyb3VwOiBCdXR0b25Hcm91cCwKICAgIENoYXJ0UmVhZG1lOiBDaGFydFJlYWRtZSwKICAgIENoZWNrYm94OiBDaGVja2JveCwKICAgIExhYmVsZWRJbnB1dDogTGFiZWxlZElucHV0LAogICAgTGFiZWxlZFNlbGVjdDogTGFiZWxlZFNlbGVjdCwKICAgIExhYmVsZWRUb29sdGlwOiBMYWJlbGVkVG9vbHRpcCwKICAgIExhenlJbWFnZTogTGF6eUltYWdlLAogICAgTG9hZGluZzogTG9hZGluZywKICAgIE5hbWVOc0Rlc2NyaXB0aW9uOiBOYW1lTnNEZXNjcmlwdGlvbiwKICAgIFJlc291cmNlQ2FuY2VsTW9kYWw6IFJlc291cmNlQ2FuY2VsTW9kYWwsCiAgICBRdWVzdGlvbnM6IFF1ZXN0aW9ucywKICAgIFRhYmJlZDogVGFiYmVkLAogICAgVW5pdElucHV0OiBVbml0SW5wdXQsCiAgICBZYW1sRWRpdG9yOiBZYW1sRWRpdG9yLAogICAgV2l6YXJkOiBXaXphcmQsCiAgICBUeXBlRGVzY3JpcHRpb246IFR5cGVEZXNjcmlwdGlvbgogIH0sCiAgbWl4aW5zOiBbQ2hpbGRIb29rLCBDaGFydE1peGluXSwKICBmZXRjaDogZnVuY3Rpb24gZmV0Y2goKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIF90aGlzJGNoYXJ0LCBfdGhpcyRleGlzdGluZzI7CiAgICAgIHZhciBfdGhpcyRleGlzdGluZywgX3RoaXMkY2hhcnQyLCBucywgX25zJG1ldGFkYXRhJGFubm90YXRpLCBwcm9qZWN0LCBfdGhpcyR2ZXJzaW9uSW5mbywgX3RoaXMkdmVyc2lvbkluZm8yLCBfdGhpcyR2ZXJzaW9uLCB1c2VyVmFsdWVzLCBfdGhpcyRleGlzdGluZyRzcGVjLCBfdGhpcyRjaGFydFZhbHVlcywgX3RoaXMkY2hhcnRWYWx1ZXMyLCBfdGhpcyRjaGFydFZhbHVlczMsIF90aGlzJGNoYXJ0VmFsdWVzNCwgZXhpc3RpbmdSZWdpc3RyeTsKICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF90aGlzLmVycm9ycyA9IFtdOwogICAgICAgICAgICAvLyBJTVBPUlRBTlQhIEFueSBleGNlcHRpb24gdGhyb3duIGJlZm9yZSB0aGlzLnZhbHVlIGlzIHNldCB3aWxsIHJlc3VsdCBpbiBhbiBlbXB0eSBwYWdlCgogICAgICAgICAgICAvKgogICAgICAgICAgICAgIGZldGNoQ2hhcnQgaXMgZGVmaW5lZCBpbiBzaGVsbC9taXhpbnMuIEl0IGZpcnN0IGNoZWNrcyB0aGUgVVJMCiAgICAgICAgICAgICAgcXVlcnkgZm9yIGFuIGFwcCBuYW1lIGFuZCBuYW1lc3BhY2UuIEl0IHVzZXMgdGhvc2UgdmFsdWVzIHRvIGNoZWNrCiAgICAgICAgICAgICAgZm9yIGEgY2F0YWxvZyBhcHAgcmVzb3VyY2UuIElmIGZvdW5kLCBpdCBzZXRzIHRoZSBmb3JtIHRvIGVkaXQKICAgICAgICAgICAgICBtb2RlLiBJZiBub3QsIGl0IHNldHMgdGhlIGZvcm0gdG8gY3JlYXRlIG1vZGUuCiAgICAgICAgICAgICAgIElmIHRoZSBhcHAgYW5kIGFwcCBuYW1lc3BhY2UgYXJlIG5vdCBwcm92aWRlZCBpbiB0aGUgcXVlcnksCiAgICAgICAgICAgICAgaXQgY2hlY2tzIGZvciB0YXJnZXQgbmFtZSBhbmQgbmFtZXNwYWNlIHZhbHVlcyBkZWZpbmVkIGluIHRoZQogICAgICAgICAgICAgIEhlbG0gY2hhcnQgaXRzZWxmLgogICAgICAgICAgICAqLwogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy5mZXRjaENoYXJ0KCk7CiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDY7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgIGNvbnNvbGUud2FybignVW5hYmxlIHRvIGZldGNoIGNoYXJ0OiAnLCBfY29udGV4dC50MCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZQogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gOTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICByZXR1cm4gX3RoaXMuZmV0Y2hBdXRvSW5zdGFsbEluZm8oKTsKICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTQ7CiAgICAgICAgICAgIF9jb250ZXh0LnQxID0gX2NvbnRleHRbImNhdGNoIl0oOSk7CiAgICAgICAgICAgIGNvbnNvbGUud2FybignVW5hYmxlIHRvIGRldGVybWluZSBpZiBvdGhlciBjaGFydHMgcmVxdWlyZSBpbnN0YWxsOiAnLCBfY29udGV4dC50MSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZQogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgaWYgKCFfdGhpcy5zaG93Q3VzdG9tUmVnaXN0cnkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzc7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE4OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjE7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy5nZXRDbHVzdGVyUmVnaXN0cnkoKTsKICAgICAgICAgIGNhc2UgMjE6CiAgICAgICAgICAgIF90aGlzLmNsdXN0ZXJSZWdpc3RyeSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyNzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIDI0OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjQ7CiAgICAgICAgICAgIF9jb250ZXh0LnQyID0gX2NvbnRleHRbImNhdGNoIl0oMTgpOwogICAgICAgICAgICBjb25zb2xlLndhcm4oJ1VuYWJsZSB0byBnZXQgY2x1c3RlciByZWdpc3RyeTogJywgX2NvbnRleHQudDIpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGUKICAgICAgICAgIGNhc2UgMjc6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyNzsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDMwOwogICAgICAgICAgICByZXR1cm4gX3RoaXMuZ2V0R2xvYmFsUmVnaXN0cnkoKTsKICAgICAgICAgIGNhc2UgMzA6CiAgICAgICAgICAgIF90aGlzLmdsb2JhbFJlZ2lzdHJ5ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM2OwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgMzM6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAzMzsKICAgICAgICAgICAgX2NvbnRleHQudDMgPSBfY29udGV4dFsiY2F0Y2giXSgyNyk7CiAgICAgICAgICAgIGNvbnNvbGUud2FybignVW5hYmxlIHRvIGdldCBnbG9iYWwgcmVnaXN0cnk6ICcsIF9jb250ZXh0LnQzKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlCiAgICAgICAgICBjYXNlIDM2OgogICAgICAgICAgICBfdGhpcy5kZWZhdWx0UmVnaXN0cnlTZXR0aW5nID0gX3RoaXMuY2x1c3RlclJlZ2lzdHJ5IHx8IF90aGlzLmdsb2JhbFJlZ2lzdHJ5OwogICAgICAgICAgY2FzZSAzNzoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDM3OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDA7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ21hbmFnZW1lbnQvZmluZCcsIHsKICAgICAgICAgICAgICB0eXBlOiBNQU5BR0VNRU5ULlNFVFRJTkcsCiAgICAgICAgICAgICAgaWQ6IFNFVFRJTkcuU0VSVkVSX1VSTAogICAgICAgICAgICB9KTsKICAgICAgICAgIGNhc2UgNDA6CiAgICAgICAgICAgIF90aGlzLnNlcnZlclVybFNldHRpbmcgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDY7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgY2FzZSA0MzoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDQzOwogICAgICAgICAgICBfY29udGV4dC50NCA9IF9jb250ZXh0WyJjYXRjaCJdKDM3KTsKICAgICAgICAgICAgY29uc29sZS5lcnJvcignVW5hYmxlIHRvIGZldGNoIGBzZXJ2ZXItdXJsYCBzZXR0aW5nOiAnLCBfY29udGV4dC50NCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZQogICAgICAgICAgY2FzZSA0NjoKICAgICAgICAgICAgLyoKICAgICAgICAgICAgICBGaWd1cmUgb3V0IHRoZSBuYW1lc3BhY2Ugd2hlcmUgdGhlIGNoYXJ0IGlzCiAgICAgICAgICAgICAgYmVpbmcgaW5zdGFsbGVkIG9yIHVwZ3JhZGVkLgogICAgICAgICAgICAqLwogICAgICAgICAgICBpZiAoX3RoaXMuZXhpc3RpbmcpIHsKICAgICAgICAgICAgICAvKgogICAgICAgICAgICAgIElmIHRoZSBIZWxtIGNoYXJ0IGlzIGFscmVhZHkgaW5zdGFsbGVkLAogICAgICAgICAgICAgIHVzZSB0aGUgZXhpc3RpbmcgbmFtZXNwYWNlIGJ5IGRlZmF1bHQuCiAgICAgICAgICAgICAgKi8KCiAgICAgICAgICAgICAgX3RoaXMuZm9yY2VOYW1lc3BhY2UgPSBfdGhpcy5leGlzdGluZy5tZXRhZGF0YS5uYW1lc3BhY2U7CiAgICAgICAgICAgICAgX3RoaXMubmFtZURpc2FibGVkID0gdHJ1ZTsKICAgICAgICAgICAgfSBlbHNlIGlmIChfdGhpcy4kcm91dGUucXVlcnlbRlJPTV9DTFVTVEVSXSA9PT0gX0ZMQUdHRUQpIHsKICAgICAgICAgICAgICAvKiBGb3IgRmxlZXQsIHVzZSB0aGUgZmxlZXQtZGVmYXVsdCBuYW1lc3BhY2UuICovCiAgICAgICAgICAgICAgX3RoaXMuZm9yY2VOYW1lc3BhY2UgPSBERUZBVUxUX1dPUktTUEFDRTsKICAgICAgICAgICAgfSBlbHNlIGlmICgoX3RoaXMkY2hhcnQgPSBfdGhpcy5jaGFydCkgIT09IG51bGwgJiYgX3RoaXMkY2hhcnQgIT09IHZvaWQgMCAmJiBfdGhpcyRjaGFydC50YXJnZXROYW1lc3BhY2UpIHsKICAgICAgICAgICAgICAvKiBJZiBhIHRhcmdldCBuYW1lc3BhY2UgaXMgZGVmaW5lZCBpbiB0aGUgY2hhcnQsCiAgICAgICAgICAgICAgc2V0IHRoZSB0YXJnZXQgbmFtZXNwYWNlIGFzIGRlZmF1bHQuICovCiAgICAgICAgICAgICAgX3RoaXMuZm9yY2VOYW1lc3BhY2UgPSBfdGhpcy5jaGFydC50YXJnZXROYW1lc3BhY2U7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXMucXVlcnkuYXBwTmFtZXNwYWNlKSB7CiAgICAgICAgICAgICAgLyogSWYgYSBuYW1lc3BhY2UgaXMgZGVmaW5lZCBpbiB0aGUgVVJMIHF1ZXJ5LAogICAgICAgICAgICAgICB1c2UgdGhhdCBuYW1lc3BhY2UgYXMgZGVmYXVsdC4gKi8KICAgICAgICAgICAgICBfdGhpcy5mb3JjZU5hbWVzcGFjZSA9IF90aGlzLnF1ZXJ5LmFwcE5hbWVzcGFjZTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBfdGhpcy5mb3JjZU5hbWVzcGFjZSA9IG51bGw7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8qIENoZWNrIGlmIHRoZSBhcHAgaXMgZGVwcmVjYXRlZC4gKi8KICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDQ3OwogICAgICAgICAgICBpZiAoIV90aGlzLmV4aXN0aW5nKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU0OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1MTsKICAgICAgICAgICAgcmV0dXJuIF90aGlzLmV4aXN0aW5nLmRlcGxveWVkQXNMZWdhY3koKTsKICAgICAgICAgIGNhc2UgNTE6CiAgICAgICAgICAgIF9jb250ZXh0LnQ1ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU1OwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgNTQ6CiAgICAgICAgICAgIF9jb250ZXh0LnQ1ID0gZmFsc2U7CiAgICAgICAgICBjYXNlIDU1OgogICAgICAgICAgICBfdGhpcy5sZWdhY3lBcHAgPSBfY29udGV4dC50NTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDYyOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgNTg6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA1ODsKICAgICAgICAgICAgX2NvbnRleHQudDYgPSBfY29udGV4dFsiY2F0Y2giXSg0Nyk7CiAgICAgICAgICAgIF90aGlzLmxlZ2FjeUFwcCA9IGZhbHNlOwogICAgICAgICAgICBjb25zb2xlLndhcm4oJ1VuYWJsZSB0byBkZXRlcm1pbmUgaWYgZXhpc3RpbmcgaW5zdGFsbCBpcyBhIGxlZ2FjeSBhcHA6ICcsIF9jb250ZXh0LnQ2KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlCiAgICAgICAgICBjYXNlIDYyOgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNjI7CiAgICAgICAgICAgIGlmICghX3RoaXMuZXhpc3RpbmcpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjk7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY2OwogICAgICAgICAgICByZXR1cm4gX3RoaXMuZXhpc3RpbmcuZGVwbG95ZWRBc011bHRpQ2x1c3RlcigpOwogICAgICAgICAgY2FzZSA2NjoKICAgICAgICAgICAgX2NvbnRleHQudDcgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzA7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgY2FzZSA2OToKICAgICAgICAgICAgX2NvbnRleHQudDcgPSBmYWxzZTsKICAgICAgICAgIGNhc2UgNzA6CiAgICAgICAgICAgIF90aGlzLm1jYXBwID0gX2NvbnRleHQudDc7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3NzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIDczOgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNzM7CiAgICAgICAgICAgIF9jb250ZXh0LnQ4ID0gX2NvbnRleHRbImNhdGNoIl0oNjIpOwogICAgICAgICAgICBfdGhpcy5tY2FwcCA9IGZhbHNlOwogICAgICAgICAgICBjb25zb2xlLndhcm4oJ1VuYWJsZSB0byBkZXRlcm1pbmUgaWYgZXhpc3RpbmcgaW5zdGFsbCBpcyBhIG1jIGFwcDogJywgX2NvbnRleHQudDgpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGUKICAgICAgICAgIGNhc2UgNzc6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3NzsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDgwOwogICAgICAgICAgICByZXR1cm4gX3RoaXMuJHN0b3JlLmRpc3BhdGNoKCdjbHVzdGVyL2NyZWF0ZScsIHsKICAgICAgICAgICAgICB0eXBlOiAnY2hhcnRJbnN0YWxsQWN0aW9uJywKICAgICAgICAgICAgICBtZXRhZGF0YTogewogICAgICAgICAgICAgICAgbmFtZXNwYWNlOiBfdGhpcy5mb3JjZU5hbWVzcGFjZSB8fCBfdGhpcy4kc3RvcmUuZ2V0dGVyc1snZGVmYXVsdE5hbWVzcGFjZSddLAogICAgICAgICAgICAgICAgbmFtZTogKChfdGhpcyRleGlzdGluZyA9IF90aGlzLmV4aXN0aW5nKSA9PT0gbnVsbCB8fCBfdGhpcyRleGlzdGluZyA9PT0gdm9pZCAwIHx8IChfdGhpcyRleGlzdGluZyA9IF90aGlzJGV4aXN0aW5nLnNwZWMpID09PSBudWxsIHx8IF90aGlzJGV4aXN0aW5nID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRleGlzdGluZy5uYW1lKSB8fCBfdGhpcy5xdWVyeS5hcHBOYW1lIHx8ICcnCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIGNhc2UgODA6CiAgICAgICAgICAgIF90aGlzLnZhbHVlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg3OwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgODM6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA4MzsKICAgICAgICAgICAgX2NvbnRleHQudDkgPSBfY29udGV4dFsiY2F0Y2giXSg3Nyk7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuYWJsZSB0byBjcmVhdGUgb2JqZWN0IG9mIHR5cGUgYGNoYXJ0SW5zdGFsbEFjdGlvbmA6ICcsIF9jb250ZXh0LnQ5KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlCgogICAgICAgICAgICAvLyBOb3RoaW5nJ3MgZ29pbmcgdG8gd29yayB3aXRob3V0IGEgYHZhbHVlYC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9yYW5jaGVyL2Rhc2hib2FyZC9pc3N1ZXMvOTQ1MiB0byBoYW5kbGUgdGhpcyBhbmQgb3RoZXIgY2F0Y2hlcy4KICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CiAgICAgICAgICBjYXNlIDg3OgogICAgICAgICAgICAvKiBMb2dpYyBmb3Igd2hlbiB0aGUgSGVsbSBjaGFydCBpcyBub3QgYWxyZWFkeSBpbnN0YWxsZWQgKi8KICAgICAgICAgICAgaWYgKCFfdGhpcy5leGlzdGluZykgewogICAgICAgICAgICAgIC8qCiAgICAgICAgICAgICAgICBUaGUgdGFyZ2V0IG5hbWUgaXMgdXNlZCBmb3IgR2l0IHJlcG9zIGZvciBGbGVldC4KICAgICAgICAgICAgICAgIFRoZSB0YXJnZXQgbmFtZSBpbmRpY2F0ZXMgdGhlIG5hbWUgb2YgdGhlIGNsdXN0ZXIKICAgICAgICAgICAgICAgIGdyb3VwIHRoYXQgdGhlIGNoYXJ0IGlzIG1lYW50IHRvIGJlIGluc3RhbGxlZCBpbi4KICAgICAgICAgICAgICAqLwogICAgICAgICAgICAgIGlmICgoX3RoaXMkY2hhcnQyID0gX3RoaXMuY2hhcnQpICE9PSBudWxsICYmIF90aGlzJGNoYXJ0MiAhPT0gdm9pZCAwICYmIF90aGlzJGNoYXJ0Mi50YXJnZXROYW1lKSB7CiAgICAgICAgICAgICAgICAvKgogICAgICAgICAgICAgICAgICBTZXQgdGhlIG5hbWUgb2YgdGhlIGNoYXJ0SW5zdGFsbEFjdGlvbgogICAgICAgICAgICAgICAgICB0byB0aGUgbmFtZSBvZiB0aGUgY2x1c3RlciBncm91cAogICAgICAgICAgICAgICAgICB3aGVyZSB0aGUgY2hhcnQgc2hvdWxkIGJlIGluc3RhbGxlZC4KICAgICAgICAgICAgICAgICovCiAgICAgICAgICAgICAgICBfdGhpcy52YWx1ZS5tZXRhZGF0YS5uYW1lID0gX3RoaXMuY2hhcnQudGFyZ2V0TmFtZTsKICAgICAgICAgICAgICAgIF90aGlzLm5hbWVEaXNhYmxlZCA9IHRydWU7CiAgICAgICAgICAgICAgfSBlbHNlIGlmIChfdGhpcy5xdWVyeS5hcHBOYW1lKSB7CiAgICAgICAgICAgICAgICBfdGhpcy52YWx1ZS5tZXRhZGF0YS5uYW1lID0gX3RoaXMucXVlcnkuYXBwTmFtZTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgX3RoaXMubmFtZURpc2FibGVkID0gZmFsc2U7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGlmIChfdGhpcy5xdWVyeS5kZXNjcmlwdGlvbikgewogICAgICAgICAgICAgICAgX3RoaXMuY3VzdG9tQ21kT3B0cy5kZXNjcmlwdGlvbiA9IF90aGlzLnF1ZXJ5LmRlc2NyaXB0aW9uOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSAvKiBFbmQgb2YgbG9naWMgZm9yIHdoZW4gY2hhcnQgaXMgYWxyZWFkeSBpbnN0YWxsZWQgKi8KCiAgICAgICAgICAgIC8qCiAgICAgICAgICAgICAgTG9naWMgZm9yIHdoYXQgdG8gZG8gaWYgdGhlIHVzZXIgaXMgaW5zdGFsbGluZwogICAgICAgICAgICAgIHRoZSBIZWxtIGNoYXJ0IGZvciB0aGUgZmlyc3QgdGltZSBhbmQgYSBkZWZhdWx0CiAgICAgICAgICAgICAgbmFtZXNwYWNlIGhhcyBiZWVuIHNldC4KICAgICAgICAgICAgKi8KICAgICAgICAgICAgaWYgKCEoX3RoaXMuZm9yY2VOYW1lc3BhY2UgJiYgIV90aGlzLmV4aXN0aW5nKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gODk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5MjsKICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9maW5kJywgewogICAgICAgICAgICAgIHR5cGU6IE5BTUVTUEFDRSwKICAgICAgICAgICAgICBpZDogX3RoaXMuZm9yY2VOYW1lc3BhY2UKICAgICAgICAgICAgfSk7CiAgICAgICAgICBjYXNlIDkyOgogICAgICAgICAgICBucyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIHByb2plY3QgPSAoX25zJG1ldGFkYXRhJGFubm90YXRpID0gbnMubWV0YWRhdGEuYW5ub3RhdGlvbnMpID09PSBudWxsIHx8IF9ucyRtZXRhZGF0YSRhbm5vdGF0aSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25zJG1ldGFkYXRhJGFubm90YXRpW1BST0pFQ1RdOwogICAgICAgICAgICBpZiAocHJvamVjdCkgewogICAgICAgICAgICAgIF90aGlzLnByb2plY3QgPSBwcm9qZWN0LnJlcGxhY2UoJzonLCAnLycpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIDk3OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gOTc7CiAgICAgICAgICAgIF9jb250ZXh0LnQxMCA9IF9jb250ZXh0WyJjYXRjaCJdKDg5KTsKICAgICAgICAgIGNhc2UgOTk6CiAgICAgICAgICAgIGlmICghKCFfdGhpcy5jaGFydCB8fCAhX3RoaXMucXVlcnkudmVyc2lvbk5hbWUpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwMTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKICAgICAgICAgIGNhc2UgMTAxOgogICAgICAgICAgICBpZiAoIV90aGlzLnZlcnNpb24pIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA0OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDQ7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy5sb2FkVmFsdWVzQ29tcG9uZW50KCk7CiAgICAgICAgICBjYXNlIDEwNDoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwNjsKICAgICAgICAgICAgcmV0dXJuIF90aGlzLmxvYWRDaGFydFN0ZXBzKCk7CiAgICAgICAgICBjYXNlIDEwNjoKICAgICAgICAgICAgLyoKICAgICAgICAgICAgICB0aGlzLmxvYWRlZFZlcnNpb24gd2lsbCBvbmx5IGJlIHRydWUgaWYgeW91IHNlbGVjdCBhIG5vbi1kZWZhbHV0CiAgICAgICAgICAgICAgb3B0aW9uIGZyb20gdGhlICJWZXJzaW9uIiBkcm9wZG93biBtZW51IGluIEFwcHMgJiBNYXJrZXRwbGFjZQogICAgICAgICAgICAgIHdoZW4gdXBkYXRpbmcgYSBwcmV2aW91c2x5IGluc3RhbGxlZCBhcHAuCiAgICAgICAgICAgICovCiAgICAgICAgICAgIGlmICghX3RoaXMubG9hZGVkVmVyc2lvbiB8fCBfdGhpcy5sb2FkZWRWZXJzaW9uICE9PSBfdGhpcy52ZXJzaW9uLmtleSkgewogICAgICAgICAgICAgIC8qCiAgICAgICAgICAgICAgICBXaGVuIHlvdSBzZWxlY3QgYSB2ZXJzaW9uLCBhIG5ldyBjaGFydCBpcyBsb2FkZWQuIFRoZW4KICAgICAgICAgICAgICAgIFJhbmNoZXIgYW50aWNpcGF0ZXMgdGhhdCB5b3UgcHJvYmFibHkgd2FudCB0byBwb3J0IGFsbCBvZiB5b3VyCiAgICAgICAgICAgICAgICBwcmV2aW91c2x5IGN1c3RvbWl6ZWQsIG5vbi1kZWZhdWx0IHZhbHVlcyBmcm9tIHRoZSBvbGQgY2hhcnQKICAgICAgICAgICAgICAgIHZlcnNpb24gdG8gdGhlIG5ldyBjaGFydCB2ZXJzaW9uLCBzbyBpdCBhcHBsaWVzIHRoZSBwcmV2aW91cwogICAgICAgICAgICAgICAgY2hhcnQncyBjdXN0b21pemF0aW9uIHRvIHRoZSBuZXcgY2hhcnQgdmFsdWVzIGJlZm9yZQogICAgICAgICAgICAgICAgeW91IHNlZSB0aGUgdmFsdWVzIGZvcm0gb24gdGhlIG5leHQgcGFnZSBpbiB0aGUgd29ya2Zsb3cuCiAgICAgICAgICAgICAgKi8KICAgICAgICAgICAgICBpZiAoX3RoaXMubG9hZGVkVmVyc2lvbikgewogICAgICAgICAgICAgICAgaWYgKF90aGlzLnNob3dpbmdZYW1sKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLmFwcGx5WWFtbFRvVmFsdWVzKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAvKgogICAgICAgICAgICAgICAgICB0aGlzLmxvYWRlZFZlcnNpb25WYWx1ZXMgaXMgdGFrZW4gZnJvbSB2ZXJzaW9uSW5mbywKICAgICAgICAgICAgICAgICAgd2hpY2ggY29udGFpbnMgZXZlcnl0aGluZyB0aGVyZSBpcyB0byBrbm93IGFib3V0IGEgc3BlY2lmaWMKICAgICAgICAgICAgICAgICAgdmVyc2lvbiBvZiBhIEhlbG0gY2hhcnQsIGluY2x1ZGluZyBhbGwgY2hhcnQgdmFsdWVzLAogICAgICAgICAgICAgICAgICBjaGFydCBtZXRhZGF0YSwgYSBzaG9ydCBhcHAgUkVBRE1FIGFuZCBhIG1vcmUKICAgICAgICAgICAgICAgICAgdmVyc2lvbi1zcGVjaWZpYyBSRUFETUUgY2FsbGVkIHRoZSBjaGFydCBSRUFETUUuCiAgICAgICAgICAgICAgICAgICBIZXJlIHdlIGFzc3VtZSB0aGF0IGFueSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHZhbHVlcyBpbgogICAgICAgICAgICAgICAgICB0d28gZGlmZmVyZW50IEhlbG0gY2hhcnQgdmVyc2lvbnMgaXMgYSAidXNlciB2YWx1ZSwiIG9yCiAgICAgICAgICAgICAgICAgIGEgdXNlci1zZWxlY3RlZCBjdXN0b21pemF0aW9uLgogICAgICAgICAgICAgICAgKi8KICAgICAgICAgICAgICAgIHVzZXJWYWx1ZXMgPSBkaWZmKF90aGlzLmxvYWRlZFZlcnNpb25WYWx1ZXMsIF90aGlzLmNoYXJ0VmFsdWVzKTsKICAgICAgICAgICAgICB9IGVsc2UgaWYgKF90aGlzLmV4aXN0aW5nKSB7CiAgICAgICAgICAgICAgICAvKiBGb3IgYW4gYWxyZWFkeSBpbnN0YWxsZWQgYXBwLCB1c2UgdGhlIHZhbHVlcyBmcm9tIHRoZSBwcmV2aW91cyBpbnN0YWxsLiAqLwogICAgICAgICAgICAgICAgdXNlclZhbHVlcyA9IGNsb25lKCgoX3RoaXMkZXhpc3Rpbmckc3BlYyA9IF90aGlzLmV4aXN0aW5nLnNwZWMpID09PSBudWxsIHx8IF90aGlzJGV4aXN0aW5nJHNwZWMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGV4aXN0aW5nJHNwZWMudmFsdWVzKSB8fCB7fSk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIC8qIEZvciBhbiBuZXcgYXBwLCBzdGFydCBlbXB0eS4gKi8KICAgICAgICAgICAgICAgIHVzZXJWYWx1ZXMgPSB7fTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIC8qCiAgICAgICAgICAgICAgICBSZW1vdmUgZ2xvYmFsIHZhbHVlcyBpZiB0aGV5IGFyZSBpZGVudGljYWwgdG8KICAgICAgICAgICAgICAgIHRoZSBjdXJyZW50bHkgYXZhaWxhYmxlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjbHVzdGVyCiAgICAgICAgICAgICAgICBhbmQgUmFuY2hlciBzZXR0aW5ncy4KICAgICAgICAgICAgICAgICBJbW1lZGlhdGVseSBiZWZvcmUgdGhlIEhlbG0gY2hhcnQgaXMgaW5zdGFsbGVkIG9yCiAgICAgICAgICAgICAgICB1cGdyYWRlZCwgdGhlIGdsb2JhbCB2YWx1ZXMgYXJlIHJlLWFkZGVkLgogICAgICAgICAgICAgICovCiAgICAgICAgICAgICAgX3RoaXMucmVtb3ZlR2xvYmFsVmFsdWVzRnJvbSh1c2VyVmFsdWVzKTsKCiAgICAgICAgICAgICAgLyoKICAgICAgICAgICAgICAgIFRoZSBtZXJnZSgpIG1ldGhvZCBpcyB1c2VkIHRvIG1lcmdlIHR3byBvciBtb3JlIG9iamVjdHMKICAgICAgICAgICAgICAgIHN0YXJ0aW5nIHdpdGggdGhlIGxlZnQtbW9zdCB0byB0aGUgcmlnaHQtbW9zdCB0byBjcmVhdGUgYQogICAgICAgICAgICAgICAgcGFyZW50IG1hcHBpbmcgb2JqZWN0LiBXaGVuIHR3byBrZXlzIGFyZSB0aGUgc2FtZSwgdGhlCiAgICAgICAgICAgICAgICBnZW5lcmF0ZWQgb2JqZWN0IHdpbGwgaGF2ZSB2YWx1ZSBmb3IgdGhlIHJpZ2h0bW9zdCBrZXkuCiAgICAgICAgICAgICAgICBJbiB0aGlzIGNhc2UsIGFueSB2YWx1ZXMgaW4gdXNlclZhbHVlcyBvdmVycmlkZSBhbnkKICAgICAgICAgICAgICAgIG1hdGNoaW5nIHZhbHVlcyBpbiB2ZXJzaW9uSW5mby4KICAgICAgICAgICAgICAqLwogICAgICAgICAgICAgIF90aGlzLmNoYXJ0VmFsdWVzID0gbWVyZ2UobWVyZ2Uoe30sICgoX3RoaXMkdmVyc2lvbkluZm8gPSBfdGhpcy52ZXJzaW9uSW5mbykgPT09IG51bGwgfHwgX3RoaXMkdmVyc2lvbkluZm8gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHZlcnNpb25JbmZvLnZhbHVlcykgfHwge30pLCB1c2VyVmFsdWVzKTsKICAgICAgICAgICAgICBpZiAoX3RoaXMuc2hvd0N1c3RvbVJlZ2lzdHJ5KSB7CiAgICAgICAgICAgICAgICAvKioKICAgICAgICAgICAgICAgICAqIFRoZSBpbnB1dCB0byBjb25maWd1cmUgdGhlIHJlZ2lzdHJ5IHNob3VsZCBuZXZlciBiZQogICAgICAgICAgICAgICAgICogc2hvd24gZm9yIHRoaXJkLXBhcnR5IGNoYXJ0cywgd2hpY2ggZG9uJ3QgaGF2ZSBSYW5jaGVyCiAgICAgICAgICAgICAgICAgKiBnbG9iYWwgdmFsdWVzLgogICAgICAgICAgICAgICAgICovCiAgICAgICAgICAgICAgICBleGlzdGluZ1JlZ2lzdHJ5ID0gKChfdGhpcyRjaGFydFZhbHVlcyA9IF90aGlzLmNoYXJ0VmFsdWVzKSA9PT0gbnVsbCB8fCBfdGhpcyRjaGFydFZhbHVlcyA9PT0gdm9pZCAwIHx8IChfdGhpcyRjaGFydFZhbHVlcyA9IF90aGlzJGNoYXJ0VmFsdWVzLmdsb2JhbCkgPT09IG51bGwgfHwgX3RoaXMkY2hhcnRWYWx1ZXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGNoYXJ0VmFsdWVzLnN5c3RlbURlZmF1bHRSZWdpc3RyeSkgfHwgKChfdGhpcyRjaGFydFZhbHVlczIgPSBfdGhpcy5jaGFydFZhbHVlcykgPT09IG51bGwgfHwgX3RoaXMkY2hhcnRWYWx1ZXMyID09PSB2b2lkIDAgfHwgKF90aGlzJGNoYXJ0VmFsdWVzMiA9IF90aGlzJGNoYXJ0VmFsdWVzMi5nbG9iYWwpID09PSBudWxsIHx8IF90aGlzJGNoYXJ0VmFsdWVzMiA9PT0gdm9pZCAwIHx8IChfdGhpcyRjaGFydFZhbHVlczIgPSBfdGhpcyRjaGFydFZhbHVlczIuY2F0dGxlKSA9PT0gbnVsbCB8fCBfdGhpcyRjaGFydFZhbHVlczIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGNoYXJ0VmFsdWVzMi5zeXN0ZW1EZWZhdWx0UmVnaXN0cnkpOwogICAgICAgICAgICAgICAgKF90aGlzJGNoYXJ0VmFsdWVzMyA9IF90aGlzLmNoYXJ0VmFsdWVzKSA9PT0gbnVsbCB8fCBfdGhpcyRjaGFydFZhbHVlczMgPT09IHZvaWQgMCB8fCAoX3RoaXMkY2hhcnRWYWx1ZXMzID0gX3RoaXMkY2hhcnRWYWx1ZXMzLmdsb2JhbCkgPT09IG51bGwgfHwgX3RoaXMkY2hhcnRWYWx1ZXMzID09PSB2b2lkIDAgfHwgZGVsZXRlIF90aGlzJGNoYXJ0VmFsdWVzMy5zeXN0ZW1EZWZhdWx0UmVnaXN0cnk7CiAgICAgICAgICAgICAgICAoX3RoaXMkY2hhcnRWYWx1ZXM0ID0gX3RoaXMuY2hhcnRWYWx1ZXMpID09PSBudWxsIHx8IF90aGlzJGNoYXJ0VmFsdWVzNCA9PT0gdm9pZCAwIHx8IChfdGhpcyRjaGFydFZhbHVlczQgPSBfdGhpcyRjaGFydFZhbHVlczQuZ2xvYmFsKSA9PT0gbnVsbCB8fCBfdGhpcyRjaGFydFZhbHVlczQgPT09IHZvaWQgMCB8fCAoX3RoaXMkY2hhcnRWYWx1ZXM0ID0gX3RoaXMkY2hhcnRWYWx1ZXM0LmNhdHRsZSkgPT09IG51bGwgfHwgX3RoaXMkY2hhcnRWYWx1ZXM0ID09PSB2b2lkIDAgfHwgZGVsZXRlIF90aGlzJGNoYXJ0VmFsdWVzNC5zeXN0ZW1EZWZhdWx0UmVnaXN0cnk7CiAgICAgICAgICAgICAgICBfdGhpcy5jdXN0b21SZWdpc3RyeVNldHRpbmcgPSBleGlzdGluZ1JlZ2lzdHJ5IHx8IF90aGlzLmRlZmF1bHRSZWdpc3RyeVNldHRpbmc7CiAgICAgICAgICAgICAgICBfdGhpcy5zaG93Q3VzdG9tUmVnaXN0cnlJbnB1dCA9ICEhX3RoaXMuY3VzdG9tUmVnaXN0cnlTZXR0aW5nOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgLyogU2VyaWFsaXplcyBhbiBvYmplY3QgYXMgYSBZQU1MIGRvY3VtZW50ICovCiAgICAgICAgICAgICAgX3RoaXMudmFsdWVzWWFtbCA9IHNhZmVyRHVtcChfdGhpcy5jaGFydFZhbHVlcyk7CgogICAgICAgICAgICAgIC8qIEZvciBZQU1MIGRpZmYgKi8KICAgICAgICAgICAgICBpZiAoIV90aGlzLmxvYWRlZFZlcnNpb24pIHsKICAgICAgICAgICAgICAgIF90aGlzLm9yaWdpbmFsWWFtbFZhbHVlcyA9IF90aGlzLnZhbHVlc1lhbWw7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF90aGlzLmxvYWRlZFZlcnNpb25WYWx1ZXMgPSAoKF90aGlzJHZlcnNpb25JbmZvMiA9IF90aGlzLnZlcnNpb25JbmZvKSA9PT0gbnVsbCB8fCBfdGhpcyR2ZXJzaW9uSW5mbzIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHZlcnNpb25JbmZvMi52YWx1ZXMpIHx8IHt9OwogICAgICAgICAgICAgIF90aGlzLmxvYWRlZFZlcnNpb24gPSAoX3RoaXMkdmVyc2lvbiA9IF90aGlzLnZlcnNpb24pID09PSBudWxsIHx8IF90aGlzJHZlcnNpb24gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHZlcnNpb24ua2V5OwogICAgICAgICAgICB9CgogICAgICAgICAgICAvKiBDaGVjayBpZiBjaGFydCBleGlzdHMgYW5kIGlmIHJlcXVpcmVkIHZhbHVlcyBleGlzdCAqLwogICAgICAgICAgICBfdGhpcy51cGRhdGVTdGVwT25lUmVhZHkoKTsKICAgICAgICAgICAgX3RoaXMucHJlRm9ybVlhbWxPcHRpb24gPSBfdGhpcy52YWx1ZXNDb21wb25lbnQgfHwgX3RoaXMuaGFzUXVlc3Rpb25zID8gVkFMVUVTX1NUQVRFLkZPUk0gOiBWQUxVRVNfU1RBVEUuWUFNTDsKCiAgICAgICAgICAgIC8qIExvb2sgZm9yIGFubm90YXRpb24gdG8gc2F5IHRoaXMgYXBwIGlzIGEgbGVnYWN5IG1pZ3JhdGVkIGFwcCAod2UgbG9vayBpbiBlaXRoZXIgcGxhY2UgZm9yIG5vdykgKi8KICAgICAgICAgICAgX3RoaXMubWlncmF0ZWRBcHAgPSAoKF90aGlzJGV4aXN0aW5nMiA9IF90aGlzLmV4aXN0aW5nKSA9PT0gbnVsbCB8fCBfdGhpcyRleGlzdGluZzIgPT09IHZvaWQgMCB8fCAoX3RoaXMkZXhpc3RpbmcyID0gX3RoaXMkZXhpc3RpbmcyLnNwZWMpID09PSBudWxsIHx8IF90aGlzJGV4aXN0aW5nMiA9PT0gdm9pZCAwIHx8IChfdGhpcyRleGlzdGluZzIgPSBfdGhpcyRleGlzdGluZzIuY2hhcnQpID09PSBudWxsIHx8IF90aGlzJGV4aXN0aW5nMiA9PT0gdm9pZCAwIHx8IChfdGhpcyRleGlzdGluZzIgPSBfdGhpcyRleGlzdGluZzIubWV0YWRhdGEpID09PSBudWxsIHx8IF90aGlzJGV4aXN0aW5nMiA9PT0gdm9pZCAwIHx8IChfdGhpcyRleGlzdGluZzIgPSBfdGhpcyRleGlzdGluZzIuYW5ub3RhdGlvbnMpID09PSBudWxsIHx8IF90aGlzJGV4aXN0aW5nMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkZXhpc3RpbmcyW0NBVEFMT0dfQU5OT1RBVElPTlMuTUlHUkFURURdKSA9PT0gJ3RydWUnOwogICAgICAgICAgY2FzZSAxMTA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxLCA2XSwgWzksIDE0XSwgWzE4LCAyNF0sIFsyNywgMzNdLCBbMzcsIDQzXSwgWzQ3LCA1OF0sIFs2MiwgNzNdLCBbNzcsIDgzXSwgWzg5LCA5N11dKTsKICAgIH0pKSgpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIC8qIEhlbG0gQ0xJIG9wdGlvbnMgdGhhdCBhcmUgbm90IHBlcnNpc3RlZCBvbiB0aGUgYmFjayBlbmQsCiAgICBidXQgYXJlIHVzZWQgZm9yIHRoZSBmaW5hbCBpbnN0YWxsL3VwZ3JhZGUgb3BlcmF0aW9uLiAqLwogICAgdmFyIGRlZmF1bHRDbWRPcHRzID0gewogICAgICBjbGVhbnVwT25GYWlsOiBmYWxzZSwKICAgICAgY3JkczogdHJ1ZSwKICAgICAgaG9va3M6IHRydWUsCiAgICAgIGZvcmNlOiBmYWxzZSwKICAgICAgcmVzZXRWYWx1ZXM6IGZhbHNlLAogICAgICBvcGVuQXBpOiB0cnVlLAogICAgICB3YWl0OiB0cnVlLAogICAgICB0aW1lb3V0OiA2MDAsCiAgICAgIGhpc3RvcnlNYXg6IDUKICAgIH07CiAgICByZXR1cm4gewogICAgICBkZWZhdWx0UmVnaXN0cnlTZXR0aW5nOiAnJywKICAgICAgY3VzdG9tUmVnaXN0cnlTZXR0aW5nOiAnJywKICAgICAgc2VydmVyVXJsU2V0dGluZzogbnVsbCwKICAgICAgY2hhcnRWYWx1ZXM6IG51bGwsCiAgICAgIGNsdXN0ZXJSZWdpc3RyeTogJycsCiAgICAgIG9yaWdpbmFsWWFtbFZhbHVlczogbnVsbCwKICAgICAgcHJldmlvdXNZYW1sVmFsdWVzOiBudWxsLAogICAgICBlcnJvcnM6IG51bGwsCiAgICAgIGV4aXN0aW5nOiBudWxsLAogICAgICBnbG9iYWxSZWdpc3RyeTogJycsCiAgICAgIGZvcmNlTmFtZXNwYWNlOiBudWxsLAogICAgICBsb2FkZWRWZXJzaW9uOiBudWxsLAogICAgICBsb2FkZWRWZXJzaW9uVmFsdWVzOiBudWxsLAogICAgICBsZWdhY3lBcHA6IG51bGwsCiAgICAgIG1jYXBwOiBudWxsLAogICAgICBtb2RlOiBudWxsLAogICAgICB2YWx1ZTogbnVsbCwKICAgICAgdmFsdWVzQ29tcG9uZW50OiBudWxsLAogICAgICB2YWx1ZXNZYW1sOiAnJywKICAgICAgcHJvamVjdDogbnVsbCwKICAgICAgbWlncmF0ZWRBcHA6IGZhbHNlLAogICAgICBkZWZhdWx0Q21kT3B0czogZGVmYXVsdENtZE9wdHMsCiAgICAgIGN1c3RvbUNtZE9wdHM6IF9vYmplY3RTcHJlYWQoe30sIGRlZmF1bHRDbWRPcHRzKSwKICAgICAgYXV0b0luc3RhbGxJbmZvOiBbXSwKICAgICAgbmFtZURpc2FibGVkOiBmYWxzZSwKICAgICAgcHJlRm9ybVlhbWxPcHRpb246IFZBTFVFU19TVEFURS5ZQU1MLAogICAgICBmb3JtWWFtbE9wdGlvbjogVkFMVUVTX1NUQVRFLllBTUwsCiAgICAgIHNob3dEaWZmOiBmYWxzZSwKICAgICAgc2hvd1ZhbHVlc0NvbXBvbmVudDogdHJ1ZSwKICAgICAgc2hvd1F1ZXN0aW9uczogdHJ1ZSwKICAgICAgc2hvd1NsaWRlSW46IGZhbHNlLAogICAgICBzaG93blJlYWRtZVdpbmRvd3M6IFtdLAogICAgICBjb21wb25lbnRIYXNUYWJzOiBmYWxzZSwKICAgICAgc2hvd0NvbW1hbmRTdGVwOiBmYWxzZSwKICAgICAgc2hvd0N1c3RvbVJlZ2lzdHJ5SW5wdXQ6IGZhbHNlLAogICAgICBpc05hbWVzcGFjZU5ldzogZmFsc2UsCiAgICAgIHN0ZXBCYXNpYzogewogICAgICAgIG5hbWU6ICdiYXNpY3MnLAogICAgICAgIGxhYmVsOiB0aGlzLnQoJ2NhdGFsb2cuaW5zdGFsbC5zdGVwcy5iYXNpY3MubGFiZWwnKSwKICAgICAgICBzdWJ0ZXh0OiB0aGlzLnQoJ2NhdGFsb2cuaW5zdGFsbC5zdGVwcy5iYXNpY3Muc3VidGV4dCcpLAogICAgICAgIGRlc2NyaXB0aW9uS2V5OiAnY2F0YWxvZy5pbnN0YWxsLnN0ZXBzLmJhc2ljcy5kZXNjcmlwdGlvbicsCiAgICAgICAgcmVhZHk6IHRydWUsCiAgICAgICAgd2VpZ2h0OiAzMAogICAgICB9LAogICAgICBzdGVwQ2x1c3RlclRwbFZlcnNpb246IHsKICAgICAgICBuYW1lOiAnY2x1c3RlclRwbFZlcnNpb24nLAogICAgICAgIGxhYmVsOiB0aGlzLnQoJ2NhdGFsb2cuaW5zdGFsbC5zdGVwcy5jbHVzdGVyVHBsVmVyc2lvbi5sYWJlbCcpLAogICAgICAgIHN1YnRleHQ6IHRoaXMudCgnY2F0YWxvZy5pbnN0YWxsLnN0ZXBzLmNsdXN0ZXJUcGxWZXJzaW9uLnN1YnRleHQnKSwKICAgICAgICBkZXNjcmlwdGlvbktleTogJ2NhdGFsb2cuaW5zdGFsbC5zdGVwcy5oZWxtVmFsdWVzLmRlc2NyaXB0aW9uJywKICAgICAgICByZWFkeTogdHJ1ZSwKICAgICAgICB3ZWlnaHQ6IDMwCiAgICAgIH0sCiAgICAgIHN0ZXBWYWx1ZXM6IHsKICAgICAgICBuYW1lOiAnaGVsbVZhbHVlcycsCiAgICAgICAgbGFiZWw6IHRoaXMudCgnY2F0YWxvZy5pbnN0YWxsLnN0ZXBzLmhlbG1WYWx1ZXMubGFiZWwnKSwKICAgICAgICBzdWJ0ZXh0OiB0aGlzLnQoJ2NhdGFsb2cuaW5zdGFsbC5zdGVwcy5oZWxtVmFsdWVzLnN1YnRleHQnKSwKICAgICAgICBkZXNjcmlwdGlvbktleTogJ2NhdGFsb2cuaW5zdGFsbC5zdGVwcy5oZWxtVmFsdWVzLmRlc2NyaXB0aW9uJywKICAgICAgICByZWFkeTogdHJ1ZSwKICAgICAgICB3ZWlnaHQ6IDIwCiAgICAgIH0sCiAgICAgIHN0ZXBDb21tYW5kczogewogICAgICAgIG5hbWU6ICdoZWxtQ2xpJywKICAgICAgICBsYWJlbDogdGhpcy50KCdjYXRhbG9nLmluc3RhbGwuc3RlcHMuaGVsbUNsaS5sYWJlbCcpLAogICAgICAgIHN1YnRleHQ6IHRoaXMudCgnY2F0YWxvZy5pbnN0YWxsLnN0ZXBzLmhlbG1DbGkuc3VidGV4dCcpLAogICAgICAgIGRlc2NyaXB0aW9uS2V5OiAnY2F0YWxvZy5pbnN0YWxsLnN0ZXBzLmhlbG1DbGkuZGVzY3JpcHRpb24nLAogICAgICAgIHJlYWR5OiB0cnVlLAogICAgICAgIHdlaWdodDogMTAKICAgICAgfSwKICAgICAgY3VzdG9tU3RlcHM6IFtdLAogICAgICBpc1BsYWluTGF5b3V0OiBpc1BsYWluTGF5b3V0KHRoaXMuJHJvdXRlLnF1ZXJ5KSwKICAgICAgbGVnYWN5RGVmczogewogICAgICAgIGxlZ2FjeTogdGhpcy50KCdjYXRhbG9nLmluc3RhbGwuZXJyb3IubGVnYWN5LmNhdGVnb3J5LmxlZ2FjeScpLAogICAgICAgIG1jbTogdGhpcy50KCdjYXRhbG9nLmluc3RhbGwuZXJyb3IubGVnYWN5LmNhdGVnb3J5Lm1jbScpCiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKHsKICAgIGluU3RvcmU6ICdjYXRhbG9nL2luU3RvcmUnLAogICAgZmVhdHVyZXM6ICdmZWF0dXJlcy9nZXQnCiAgfSkpLCB7fSwgewogICAgbWNtOiBtYXBGZWF0dXJlKE1VTFRJX0NMVVNURVIpLAogICAgLyoqCiAgICAgKiBSZXR1cm4gbGlzdCBvZiB2YXJpYWJsZXMgdG8gZmlsdGVyIGNoYXJ0IHF1ZXN0aW9ucwogICAgICovCiAgICBpZ25vcmVWYXJpYWJsZXM6IGZ1bmN0aW9uIGlnbm9yZVZhcmlhYmxlcygpIHsKICAgICAgcmV0dXJuIF9pZ25vcmVWYXJpYWJsZXModGhpcy52ZXJzaW9uSW5mbyk7CiAgICB9LAogICAgbmFtZXNwYWNlSXNOZXc6IGZ1bmN0aW9uIG5hbWVzcGFjZUlzTmV3KCkgewogICAgICB2YXIgX3RoaXMkdmFsdWU7CiAgICAgIHZhciBhbGwgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjbHVzdGVyL2FsbCddKE5BTUVTUEFDRSk7CiAgICAgIHZhciB3YW50ID0gKF90aGlzJHZhbHVlID0gdGhpcy52YWx1ZSkgPT09IG51bGwgfHwgX3RoaXMkdmFsdWUgPT09IHZvaWQgMCB8fCAoX3RoaXMkdmFsdWUgPSBfdGhpcyR2YWx1ZS5tZXRhZGF0YSkgPT09IG51bGwgfHwgX3RoaXMkdmFsdWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHZhbHVlLm5hbWVzcGFjZTsKICAgICAgaWYgKCF3YW50KSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICAgIHJldHVybiAhZmluZEJ5KGFsbCwgJ2lkJywgd2FudCk7CiAgICB9LAogICAgc2hvd1Byb2plY3Q6IGZ1bmN0aW9uIHNob3dQcm9qZWN0KCkgewogICAgICByZXR1cm4gdGhpcy5pc1JhbmNoZXIgJiYgIXRoaXMuZXhpc3RpbmcgJiYgdGhpcy5mb3JjZU5hbWVzcGFjZTsKICAgIH0sCiAgICBwcm9qZWN0T3B0czogZnVuY3Rpb24gcHJvamVjdE9wdHMoKSB7CiAgICAgIHZhciBjbHVzdGVyID0gdGhpcy5jdXJyZW50Q2x1c3RlcjsKICAgICAgdmFyIHByb2plY3RzID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snbWFuYWdlbWVudC9hbGwnXShNQU5BR0VNRU5ULlBST0pFQ1QpOwogICAgICB2YXIgb3V0ID0gcHJvamVjdHMuZmlsdGVyKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgcmV0dXJuIHguc3BlYy5jbHVzdGVyTmFtZSA9PT0gKGNsdXN0ZXIgPT09IG51bGwgfHwgY2x1c3RlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogY2x1c3Rlci5pZCk7CiAgICAgIH0pLm1hcChmdW5jdGlvbiAocHJvamVjdCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBpZDogcHJvamVjdC5pZCwKICAgICAgICAgIGxhYmVsOiBwcm9qZWN0Lm5hbWVEaXNwbGF5LAogICAgICAgICAgdmFsdWU6IHByb2plY3QuaWQKICAgICAgICB9OwogICAgICB9KTsKICAgICAgb3V0LnVuc2hpZnQoewogICAgICAgIGlkOiAnbm9uZScsCiAgICAgICAgbGFiZWw6ICIoIi5jb25jYXQodGhpcy50KCdnZW5lcmljLm5vbmUnKSwgIikiKSwKICAgICAgICB2YWx1ZTogJycKICAgICAgfSk7CiAgICAgIHJldHVybiBvdXQ7CiAgICB9LAogICAgY2hhcnRzOiBmdW5jdGlvbiBjaGFydHMoKSB7CiAgICAgIHZhciBfdGhpcyRleGlzdGluZzMsCiAgICAgICAgX3RoaXMyID0gdGhpczsKICAgICAgdmFyIGN1cnJlbnQgPSAoX3RoaXMkZXhpc3RpbmczID0gdGhpcy5leGlzdGluZykgPT09IG51bGwgfHwgX3RoaXMkZXhpc3RpbmczID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRleGlzdGluZzMubWF0Y2hpbmdDaGFydCh0cnVlKTsKICAgICAgdmFyIG91dCA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2NhdGFsb2cvY2hhcnRzJ10uZmlsdGVyKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgaWYgKHgua2V5ID09PSAoY3VycmVudCA9PT0gbnVsbCB8fCBjdXJyZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjdXJyZW50LmtleSkgfHwgeC5jaGFydE5hbWUgPT09IChjdXJyZW50ID09PSBudWxsIHx8IGN1cnJlbnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGN1cnJlbnQuY2hhcnROYW1lKSkgewogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICAgIGlmICh4LmhpZGRlbiAmJiAhX3RoaXMyLnNob3dIaWRkZW4pIHsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgICAgaWYgKHguZGVwcmVjYXRlZCAmJiAhX3RoaXMyLnNob3dEZXByZWNhdGVkKSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9KTsKICAgICAgdmFyIGxhc3QgPSAnJzsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvdXQubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAob3V0W2ldLnJlcG9OYW1lICE9PSBsYXN0KSB7CiAgICAgICAgICBsYXN0ID0gb3V0W2ldLnJlcG9OYW1lOwogICAgICAgICAgaW5zZXJ0QXQob3V0LCBpLCB7CiAgICAgICAgICAgIGtpbmQ6ICdsYWJlbCcsCiAgICAgICAgICAgIGxhYmVsOiBvdXRbaV0ucmVwb05hbWVEaXNwbGF5LAogICAgICAgICAgICBkaXNhYmxlZDogdHJ1ZQogICAgICAgICAgfSk7CiAgICAgICAgICBpKys7CiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiBvdXQ7CiAgICB9LAogICAgc2hvd1NlbGVjdFZlcnNpb25PckNoYXJ0OiBmdW5jdGlvbiBzaG93U2VsZWN0VmVyc2lvbk9yQ2hhcnQoKSB7CiAgICAgIC8vIEFsbG93IHRoZSB1c2VyIHRvIGNob29zZSBhIHZlcnNpb24gaWYgdGhlIGFwcCBleGlzdHMgT1IgdGhleSd2ZSBjb21lIGZyb20gdG9vbHMKICAgICAgcmV0dXJuIHRoaXMuZXhpc3RpbmcgfHwgRlJPTV9UT09MUyBpbiB0aGlzLiRyb3V0ZS5xdWVyeTsKICAgIH0sCiAgICBzaG93TmFtZUVkaXRvcjogZnVuY3Rpb24gc2hvd05hbWVFZGl0b3IoKSB7CiAgICAgIHJldHVybiAhdGhpcy5uYW1lRGlzYWJsZWQgfHwgIXRoaXMuZm9yY2VOYW1lc3BhY2U7CiAgICB9LAogICAgc2hvd1ZlcnNpb25zOiBmdW5jdGlvbiBzaG93VmVyc2lvbnMoKSB7CiAgICAgIHZhciBfdGhpcyRjaGFydDM7CiAgICAgIHJldHVybiAoKF90aGlzJGNoYXJ0MyA9IHRoaXMuY2hhcnQpID09PSBudWxsIHx8IF90aGlzJGNoYXJ0MyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkY2hhcnQzLnZlcnNpb25zLmxlbmd0aCkgPiAxOwogICAgfSwKICAgIHRhcmdldE5hbWVzcGFjZTogZnVuY3Rpb24gdGFyZ2V0TmFtZXNwYWNlKCkgewogICAgICB2YXIgX3RoaXMkdmFsdWUyOwogICAgICBpZiAodGhpcy5mb3JjZU5hbWVzcGFjZSkgewogICAgICAgIHJldHVybiB0aGlzLmZvcmNlTmFtZXNwYWNlOwogICAgICB9IGVsc2UgaWYgKChfdGhpcyR2YWx1ZTIgPSB0aGlzLnZhbHVlKSAhPT0gbnVsbCAmJiBfdGhpcyR2YWx1ZTIgIT09IHZvaWQgMCAmJiBfdGhpcyR2YWx1ZTIubWV0YWRhdGEubmFtZXNwYWNlKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWUubWV0YWRhdGEubmFtZXNwYWNlOwogICAgICB9CiAgICAgIHJldHVybiAnZGVmYXVsdCc7CiAgICB9LAogICAgZWRpdG9yTW9kZTogZnVuY3Rpb24gZWRpdG9yTW9kZSgpIHsKICAgICAgaWYgKHRoaXMuc2hvd0RpZmYpIHsKICAgICAgICByZXR1cm4gRURJVE9SX01PREVTLkRJRkZfQ09ERTsKICAgICAgfQogICAgICByZXR1cm4gRURJVE9SX01PREVTLkVESVRfQ09ERTsKICAgIH0sCiAgICBzaG93aW5nWWFtbDogZnVuY3Rpb24gc2hvd2luZ1lhbWwoKSB7CiAgICAgIHJldHVybiB0aGlzLmZvcm1ZYW1sT3B0aW9uID09PSBWQUxVRVNfU1RBVEUuWUFNTCB8fCAhdGhpcy52YWx1ZXNDb21wb25lbnQgJiYgIXRoaXMuaGFzUXVlc3Rpb25zOwogICAgfSwKICAgIHNob3dpbmdZYW1sRGlmZjogZnVuY3Rpb24gc2hvd2luZ1lhbWxEaWZmKCkgewogICAgICByZXR1cm4gdGhpcy5mb3JtWWFtbE9wdGlvbiA9PT0gVkFMVUVTX1NUQVRFLkRJRkY7CiAgICB9LAogICAgZm9ybVlhbWxPcHRpb25zOiBmdW5jdGlvbiBmb3JtWWFtbE9wdGlvbnMoKSB7CiAgICAgIHZhciBvcHRpb25zID0gW107CiAgICAgIGlmICh0aGlzLnZhbHVlc0NvbXBvbmVudCB8fCB0aGlzLmhhc1F1ZXN0aW9ucykgewogICAgICAgIG9wdGlvbnMucHVzaCh7CiAgICAgICAgICBsYWJlbEtleTogJ2NhdGFsb2cuaW5zdGFsbC5zZWN0aW9uLmNoYXJ0T3B0aW9ucycsCiAgICAgICAgICB2YWx1ZTogVkFMVUVTX1NUQVRFLkZPUk0KICAgICAgICB9KTsKICAgICAgfQogICAgICBvcHRpb25zLnB1c2goewogICAgICAgIGxhYmVsS2V5OiAnY2F0YWxvZy5pbnN0YWxsLnNlY3Rpb24udmFsdWVzWWFtbCcsCiAgICAgICAgdmFsdWU6IFZBTFVFU19TVEFURS5ZQU1MCiAgICAgIH0sIHsKICAgICAgICBsYWJlbEtleTogJ2NhdGFsb2cuaW5zdGFsbC5zZWN0aW9uLmRpZmYnLAogICAgICAgIHZhbHVlOiBWQUxVRVNfU1RBVEUuRElGRiwKICAgICAgICAvLyA9PT0gcXVpdGUgb2J2aW91c2x5IHNob3VsZG4ndCB3b3JrLCBidXQgaGFzIGJlZW4gYW5kIHN0aWxsIGRvZXMuIFdoZW4gdGhlIG1hZ2ljIGJyZWFrcyBhZGRyZXNzIHdpdGggaGVhdmllciBzdHJpbmdpZnkvanN5YW1sLmR1bXAKICAgICAgICBkaXNhYmxlZDogdGhpcy5mb3JtWWFtbE9wdGlvbiA9PT0gVkFMVUVTX1NUQVRFLkZPUk0gPyB0aGlzLm9yaWdpbmFsWWFtbFZhbHVlcyA9PT0ganN5YW1sLmR1bXAodGhpcy5jaGFydFZhbHVlcyB8fCB7fSkgOiB0aGlzLm9yaWdpbmFsWWFtbFZhbHVlcyA9PT0gdGhpcy52YWx1ZXNZYW1sCiAgICAgIH0pOwogICAgICByZXR1cm4gb3B0aW9uczsKICAgIH0sCiAgICB5YW1sRGlmZk1vZGVPcHRpb25zOiBmdW5jdGlvbiB5YW1sRGlmZk1vZGVPcHRpb25zKCkgewogICAgICByZXR1cm4gW3sKICAgICAgICBsYWJlbEtleTogJ3Jlc291cmNlWWFtbC5idXR0b25zLnVuaWZpZWQnLAogICAgICAgIHZhbHVlOiAndW5pZmllZCcKICAgICAgfSwgewogICAgICAgIGxhYmVsS2V5OiAncmVzb3VyY2VZYW1sLmJ1dHRvbnMuc3BsaXQnLAogICAgICAgIHZhbHVlOiAnc3BsaXQnCiAgICAgIH1dOwogICAgfSwKICAgIHN0ZXBwZXJOYW1lOiBmdW5jdGlvbiBzdGVwcGVyTmFtZSgpIHsKICAgICAgdmFyIF90aGlzJGV4aXN0aW5nNCwgX3RoaXMkY2hhcnQ0OwogICAgICByZXR1cm4gKChfdGhpcyRleGlzdGluZzQgPSB0aGlzLmV4aXN0aW5nKSA9PT0gbnVsbCB8fCBfdGhpcyRleGlzdGluZzQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGV4aXN0aW5nNC5uYW1lRGlzcGxheSkgfHwgKChfdGhpcyRjaGFydDQgPSB0aGlzLmNoYXJ0KSA9PT0gbnVsbCB8fCBfdGhpcyRjaGFydDQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGNoYXJ0NC5jaGFydE5hbWVEaXNwbGF5KTsKICAgIH0sCiAgICBzdGVwcGVyU3VidGV4dDogZnVuY3Rpb24gc3RlcHBlclN1YnRleHQoKSB7CiAgICAgIHJldHVybiB0aGlzLmV4aXN0aW5nICYmIHRoaXMuY3VycmVudFZlcnNpb24gIT09IHRoaXMudGFyZ2V0VmVyc2lvbiA/ICIiLmNvbmNhdCh0aGlzLmN1cnJlbnRWZXJzaW9uLCAiID4gIikuY29uY2F0KHRoaXMudGFyZ2V0VmVyc2lvbikgOiB0aGlzLnRhcmdldFZlcnNpb247CiAgICB9LAogICAgcmVhZG1lV2luZG93TmFtZTogZnVuY3Rpb24gcmVhZG1lV2luZG93TmFtZSgpIHsKICAgICAgdmFyIF90aGlzJHZlcnNpb24yOwogICAgICAvLyBWZXJzaW9uIGNhbiBjaGFuZ2UsIHNvIGFsbG93IG11bHRpcGxlIFdNIHRhYnMgZm9yIGRpZmZlcmVudCB2ZXJzaW9ucwogICAgICByZXR1cm4gIiIuY29uY2F0KHRoaXMuc3RlcHBlck5hbWUsICItIikuY29uY2F0KChfdGhpcyR2ZXJzaW9uMiA9IHRoaXMudmVyc2lvbikgPT09IG51bGwgfHwgX3RoaXMkdmVyc2lvbjIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHZlcnNpb24yLnZlcnNpb24pOwogICAgfSwKICAgIHNob3dpbmdSZWFkbWVXaW5kb3c6IGZ1bmN0aW9uIHNob3dpbmdSZWFkbWVXaW5kb3coKSB7CiAgICAgIHJldHVybiAhIXRoaXMuJHN0b3JlLmdldHRlcnNbJ3dtL2J5SWQnXSh0aGlzLnJlYWRtZVdpbmRvd05hbWUpOwogICAgfSwKICAgIGRpZmZNb2RlOiBtYXBQcmVmKERJRkYpLAogICAgc3RlcDFEZXNjcmlwdGlvbjogZnVuY3Rpb24gc3RlcDFEZXNjcmlwdGlvbigpIHsKICAgICAgdmFyIGRlc2NyaXB0aW9uS2V5ID0gdGhpcy5zdGVwcy5maW5kKGZ1bmN0aW9uIChzKSB7CiAgICAgICAgcmV0dXJuIHMubmFtZSA9PT0gJ2Jhc2ljcyc7CiAgICAgIH0pLmRlc2NyaXB0aW9uS2V5OwogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1snaTE4bi93aXRoRmFsbGJhY2snXShkZXNjcmlwdGlvbktleSwgewogICAgICAgIGFjdGlvbjogdGhpcy5hY3Rpb24sCiAgICAgICAgZXhpc3Rpbmc6ICEhdGhpcy5leGlzdGluZwogICAgICB9LCAnJyk7CiAgICB9LAogICAgc3RlcDJEZXNjcmlwdGlvbjogZnVuY3Rpb24gc3RlcDJEZXNjcmlwdGlvbigpIHsKICAgICAgdmFyIGRlc2NyaXB0aW9uS2V5ID0gdGhpcy5zdGVwcy5maW5kKGZ1bmN0aW9uIChzKSB7CiAgICAgICAgcmV0dXJuIHMubmFtZSA9PT0gJ2hlbG1WYWx1ZXMnOwogICAgICB9KS5kZXNjcmlwdGlvbktleTsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ2kxOG4vd2l0aEZhbGxiYWNrJ10oZGVzY3JpcHRpb25LZXksIHsKICAgICAgICBhY3Rpb246IHRoaXMuYWN0aW9uLAogICAgICAgIGV4aXN0aW5nOiAhIXRoaXMuZXhpc3RpbmcKICAgICAgfSwgJycpOwogICAgfSwKICAgIHN0ZXAzRGVzY3JpcHRpb246IGZ1bmN0aW9uIHN0ZXAzRGVzY3JpcHRpb24oKSB7CiAgICAgIHZhciBkZXNjcmlwdGlvbktleSA9IHRoaXMuc3RlcHMuZmluZChmdW5jdGlvbiAocykgewogICAgICAgIHJldHVybiBzLm5hbWUgPT09ICdoZWxtQ2xpJzsKICAgICAgfSkuZGVzY3JpcHRpb25LZXk7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydpMThuL3dpdGhGYWxsYmFjayddKGRlc2NyaXB0aW9uS2V5LCB7CiAgICAgICAgYWN0aW9uOiB0aGlzLmFjdGlvbiwKICAgICAgICBleGlzdGluZzogISF0aGlzLmV4aXN0aW5nCiAgICAgIH0sICcnKTsKICAgIH0sCiAgICBzdGVwczogZnVuY3Rpb24gc3RlcHMoKSB7CiAgICAgIHZhciBfdGhpcyR2ZXJzaW9uMzsKICAgICAgdmFyIHN0ZXBzID0gW107CiAgICAgIHZhciB0eXBlID0gKF90aGlzJHZlcnNpb24zID0gdGhpcy52ZXJzaW9uKSA9PT0gbnVsbCB8fCBfdGhpcyR2ZXJzaW9uMyA9PT0gdm9pZCAwIHx8IChfdGhpcyR2ZXJzaW9uMyA9IF90aGlzJHZlcnNpb24zLmFubm90YXRpb25zKSA9PT0gbnVsbCB8fCBfdGhpcyR2ZXJzaW9uMyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkdmVyc2lvbjNbQ0FUQUxPR19BTk5PVEFUSU9OUy5UWVBFXTsKICAgICAgaWYgKHR5cGUgPT09IENBVEFMT0dfQU5OT1RBVElPTlMuX0NMVVNURVJfVFBMKSB7CiAgICAgICAgdmFyIF90aGlzJGZpbHRlcmVkVmVyc2lvbjsKICAgICAgICBpZiAoKChfdGhpcyRmaWx0ZXJlZFZlcnNpb24gPSB0aGlzLmZpbHRlcmVkVmVyc2lvbnMpID09PSBudWxsIHx8IF90aGlzJGZpbHRlcmVkVmVyc2lvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkZmlsdGVyZWRWZXJzaW9uLmxlbmd0aCkgPiAxKSB7CiAgICAgICAgICBzdGVwcy5wdXNoKHRoaXMuc3RlcENsdXN0ZXJUcGxWZXJzaW9uKTsKICAgICAgICB9CiAgICAgICAgc3RlcHMucHVzaChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRoaXMuc3RlcFZhbHVlcyksIHt9LCB7CiAgICAgICAgICBsYWJlbDogdGhpcy50KCdjYXRhbG9nLmluc3RhbGwuc3RlcHMuY2x1c3RlclRwbFZhbHVlcy5sYWJlbCcpLAogICAgICAgICAgc3VidGV4dDogdGhpcy50KCdjYXRhbG9nLmluc3RhbGwuc3RlcHMuY2x1c3RlclRwbFZhbHVlcy5zdWJ0ZXh0JyksCiAgICAgICAgICBkZXNjcmlwdGlvbktleTogJ2NhdGFsb2cuaW5zdGFsbC5zdGVwcy5jbHVzdGVyVHBsVmFsdWVzLmRlc2NyaXB0aW9uJwogICAgICAgIH0pKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBzdGVwcy5wdXNoLmFwcGx5KHN0ZXBzLCBbdGhpcy5zdGVwQmFzaWMsIHRoaXMuc3RlcFZhbHVlc10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmN1c3RvbVN0ZXBzKSkpOwogICAgICB9CiAgICAgIGlmICh0aGlzLnNob3dDb21tYW5kU3RlcCkgewogICAgICAgIHN0ZXBzLnB1c2godGhpcy5zdGVwQ29tbWFuZHMpOwogICAgICB9CiAgICAgIHJldHVybiBzdGVwcy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgcmV0dXJuIChiLndlaWdodCB8fCAwKSAtIChhLndlaWdodCB8fCAwKTsKICAgICAgfSk7CiAgICB9LAogICAgY21kT3B0aW9uczogZnVuY3Rpb24gY21kT3B0aW9ucygpIHsKICAgICAgcmV0dXJuIHRoaXMuc2hvd0NvbW1hbmRTdGVwID8gdGhpcy5jdXN0b21DbWRPcHRzIDogdGhpcy5kZWZhdWx0Q21kT3B0czsKICAgIH0sCiAgICBuYW1lc3BhY2VOZXdBbGxvd2VkOiBmdW5jdGlvbiBuYW1lc3BhY2VOZXdBbGxvd2VkKCkgewogICAgICByZXR1cm4gIXRoaXMuZXhpc3RpbmcgJiYgIXRoaXMuZm9yY2VOYW1lc3BhY2U7CiAgICB9LAogICAgbGVnYWN5RW5hYmxlZDogZnVuY3Rpb24gbGVnYWN5RW5hYmxlZCgpIHsKICAgICAgLy8gQ2hlY2sgZm9yIHRoZSBsZWdhY3kgZmVhdHVyZSBmbGFnIGluIHRoZSBzZXR0aW5ncwogICAgICByZXR1cm4gdGhpcy5mZWF0dXJlcyhMRUdBQ1kpOwogICAgfSwKICAgIGxlZ2FjeUZlYXR1cmVSb3V0ZTogZnVuY3Rpb24gbGVnYWN5RmVhdHVyZVJvdXRlKCkgewogICAgICByZXR1cm4gewogICAgICAgIG5hbWU6ICdjLWNsdXN0ZXItcHJvZHVjdC1yZXNvdXJjZScsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBwcm9kdWN0OiAnc2V0dGluZ3MnLAogICAgICAgICAgcmVzb3VyY2U6ICdtYW5hZ2VtZW50LmNhdHRsZS5pby5mZWF0dXJlJwogICAgICAgIH0KICAgICAgfTsKICAgIH0sCiAgICBsZWdhY3lBcHBSb3V0ZTogZnVuY3Rpb24gbGVnYWN5QXBwUm91dGUoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgbmFtZTogJ2MtY2x1c3Rlci1sZWdhY3ktcHJvamVjdCcKICAgICAgfTsKICAgIH0sCiAgICB3aW5kb3dzSW5jb21wYXRpYmxlOiBmdW5jdGlvbiB3aW5kb3dzSW5jb21wYXRpYmxlKCkgewogICAgICB2YXIgX3RoaXMkY2hhcnQ1OwogICAgICBpZiAoKF90aGlzJGNoYXJ0NSA9IHRoaXMuY2hhcnQpICE9PSBudWxsICYmIF90aGlzJGNoYXJ0NSAhPT0gdm9pZCAwICYmIF90aGlzJGNoYXJ0NS53aW5kb3dzSW5jb21wYXRpYmxlKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudCgnY2F0YWxvZy5jaGFydHMud2luZG93c0luY29tcGF0aWJsZScpOwogICAgICB9CiAgICAgIGlmICh0aGlzLnZlcnNpb25JbmZvKSB7CiAgICAgICAgdmFyIF90aGlzJHZlcnNpb25JbmZvMzsKICAgICAgICB2YXIgaW5jb21wYXRpYmxlVmVyc2lvbiA9ICEoKChfdGhpcyR2ZXJzaW9uSW5mbzMgPSB0aGlzLnZlcnNpb25JbmZvKSA9PT0gbnVsbCB8fCBfdGhpcyR2ZXJzaW9uSW5mbzMgPT09IHZvaWQgMCB8fCAoX3RoaXMkdmVyc2lvbkluZm8zID0gX3RoaXMkdmVyc2lvbkluZm8zLmNoYXJ0KSA9PT0gbnVsbCB8fCBfdGhpcyR2ZXJzaW9uSW5mbzMgPT09IHZvaWQgMCB8fCAoX3RoaXMkdmVyc2lvbkluZm8zID0gX3RoaXMkdmVyc2lvbkluZm8zLmFubm90YXRpb25zKSA9PT0gbnVsbCB8fCBfdGhpcyR2ZXJzaW9uSW5mbzMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHZlcnNpb25JbmZvM1tDQVRBTE9HX0FOTk9UQVRJT05TLlBFUk1JVFRFRF9PU10pIHx8IExJTlVYKS5pbmNsdWRlcygnd2luZG93cycpOwogICAgICAgIGlmIChpbmNvbXBhdGlibGVWZXJzaW9uICYmICF0aGlzLmNoYXJ0LndpbmRvd3NJbmNvbXBhdGlibGUpIHsKICAgICAgICAgIHJldHVybiB0aGlzLnQoJ2NhdGFsb2cuY2hhcnRzLnZlcnNpb25XaW5kb3dzSW5jb21wYXRpYmxlJyk7CiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiBudWxsOwogICAgfSwKICAgIC8qKgogICAgICogQ2hlY2sgaWYgdGhlIGNoYXJ0IGNvbnRhaW5zIGBzeXN0ZW1EZWZhdWx0UmVnaXN0cnlgIHByb3BlcnRpZXMuCiAgICAgKiBJZiBub3Qgd2Ugc2hvdWxkbid0IGFwcGx5IHRoZSBzZXR0aW5nLCBiZWNhdXNlIGlmIHRoZSBvcHRpb24KICAgICAqIGlzIGV4cG9zZWQgZm9yIHRoaXJkLXBhcnR5IEhlbG0gY2hhcnRzLCBpdCBjb25mdXNlcyB1c2VycyBiZWNhdXNlCiAgICAgKiBpdCBzaG93cyBhIHByaXZhdGUgcmVnaXN0cnkgc2V0dGluZyB0aGF0IGlzIG5ldmVyIHVzZWQKICAgICAqIGJ5IHRoZSBjaGFydCB0aGV5IGFyZSBpbnN0YWxsaW5nLiBJZiBub3QgaGlkZGVuLCB0aGUgc2V0dGluZwogICAgICogZG9lcyBub3RoaW5nLCBhbmQgaWYgdGhlIHVzZXIgY2hhbmdlcyBpdCwgaXQgd2lsbCBsb29rIGxpa2UKICAgICAqIHRoZXJlIGlzIGEgYnVnIGluIHRoZSBVSSB3aGVuIGl0IGRvZXNuJ3Qgd29yaywgYmVjYXVzZSBVSSBpcwogICAgICogZXhwb3NpbmcgYSBmZWF0dXJlIHRoYXQgdGhlIGNoYXJ0IGRvZXMgbm90IGhhdmUuCiAgICAgKi8KICAgIHNob3dDdXN0b21SZWdpc3RyeTogZnVuY3Rpb24gc2hvd0N1c3RvbVJlZ2lzdHJ5KCkgewogICAgICB2YXIgX3RoaXMkdmVyc2lvbkluZm80LCBfZ2xvYmFsJGNhdHRsZTsKICAgICAgdmFyIGdsb2JhbCA9ICgoX3RoaXMkdmVyc2lvbkluZm80ID0gdGhpcy52ZXJzaW9uSW5mbykgPT09IG51bGwgfHwgX3RoaXMkdmVyc2lvbkluZm80ID09PSB2b2lkIDAgfHwgKF90aGlzJHZlcnNpb25JbmZvNCA9IF90aGlzJHZlcnNpb25JbmZvNC52YWx1ZXMpID09PSBudWxsIHx8IF90aGlzJHZlcnNpb25JbmZvNCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkdmVyc2lvbkluZm80Lmdsb2JhbCkgfHwge307CiAgICAgIHJldHVybiBnbG9iYWwuc3lzdGVtRGVmYXVsdFJlZ2lzdHJ5ICE9PSB1bmRlZmluZWQgfHwgKChfZ2xvYmFsJGNhdHRsZSA9IGdsb2JhbC5jYXR0bGUpID09PSBudWxsIHx8IF9nbG9iYWwkY2F0dGxlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZ2xvYmFsJGNhdHRsZS5zeXN0ZW1EZWZhdWx0UmVnaXN0cnkpICE9PSB1bmRlZmluZWQ7CiAgICB9CiAgfSksCiAgd2F0Y2g6IHsKICAgICckcm91dGUucXVlcnknOiBmdW5jdGlvbiAkcm91dGVRdWVyeShuZXUsIG9sZCkgewogICAgICBpZiAoIWlzRXF1YWwobmV1LCBvbGQpKSB7CiAgICAgICAgdGhpcy4kZmV0Y2goKTsKICAgICAgICB0aGlzLnNob3dTbGlkZUluID0gZmFsc2U7CiAgICAgIH0KICAgIH0sCiAgICAndmFsdWUubWV0YWRhdGEubmFtZXNwYWNlJzogZnVuY3Rpb24gdmFsdWVNZXRhZGF0YU5hbWVzcGFjZShuZXUsIG9sZCkgewogICAgICBpZiAobmV1KSB7CiAgICAgICAgdmFyIF9ucyRtZXRhZGF0YSRhbm5vdGF0aTI7CiAgICAgICAgdmFyIG5zID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snY2x1c3Rlci9ieUlkJ10oTkFNRVNQQUNFLCB0aGlzLnZhbHVlLm1ldGFkYXRhLm5hbWVzcGFjZSk7CiAgICAgICAgdmFyIHByb2plY3QgPSBucyA9PT0gbnVsbCB8fCBucyA9PT0gdm9pZCAwIHx8IChfbnMkbWV0YWRhdGEkYW5ub3RhdGkyID0gbnMubWV0YWRhdGEuYW5ub3RhdGlvbnMpID09PSBudWxsIHx8IF9ucyRtZXRhZGF0YSRhbm5vdGF0aTIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ucyRtZXRhZGF0YSRhbm5vdGF0aTJbUFJPSkVDVF07CiAgICAgICAgaWYgKHByb2plY3QpIHsKICAgICAgICAgIHRoaXMucHJvamVjdCA9IHByb2plY3QucmVwbGFjZSgnOicsICcvJyk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgcHJlRm9ybVlhbWxPcHRpb246IGZ1bmN0aW9uIHByZUZvcm1ZYW1sT3B0aW9uKG5ldSwgb2xkKSB7CiAgICAgIGlmIChuZXUgPT09IFZBTFVFU19TVEFURS5GT1JNICYmIHRoaXMudmFsdWVzWWFtbCAhPT0gdGhpcy5wcmV2aW91c1lhbWxWYWx1ZXMgJiYgISF0aGlzLiRyZWZzLmNhbmNlbE1vZGFsKSB7CiAgICAgICAgdGhpcy4kcmVmcy5jYW5jZWxNb2RhbC5zaG93KCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5mb3JtWWFtbE9wdGlvbiA9IG5ldTsKICAgICAgfQogICAgfSwKICAgIGZvcm1ZYW1sT3B0aW9uOiBmdW5jdGlvbiBmb3JtWWFtbE9wdGlvbihuZXUsIG9sZCkgewogICAgICBzd2l0Y2ggKG5ldSkgewogICAgICAgIGNhc2UgVkFMVUVTX1NUQVRFLkZPUk06CiAgICAgICAgICAvLyBSZXR1cm4gdG8gZm9ybSwgcmVzZXQgZXZlcnl0aGluZyBiYWNrIHRvIHN0YXJ0aW5nIHBvaW50CiAgICAgICAgICB0aGlzLnZhbHVlc1lhbWwgPSB0aGlzLnByZXZpb3VzWWFtbFZhbHVlczsKICAgICAgICAgIHRoaXMuc2hvd1ZhbHVlc0NvbXBvbmVudCA9IHRydWU7CiAgICAgICAgICB0aGlzLnNob3dRdWVzdGlvbnMgPSB0cnVlOwogICAgICAgICAgdGhpcy5zaG93RGlmZiA9IGZhbHNlOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBWQUxVRVNfU1RBVEUuWUFNTDoKICAgICAgICAgIC8vIFNob3cgdGhlIFlBTUwgcHJldmlldwogICAgICAgICAgaWYgKG9sZCA9PT0gVkFMVUVTX1NUQVRFLkZPUk0pIHsKICAgICAgICAgICAgdGhpcy52YWx1ZXNZYW1sID0ganN5YW1sLmR1bXAodGhpcy5jaGFydFZhbHVlcyB8fCB7fSk7CiAgICAgICAgICAgIHRoaXMucHJldmlvdXNZYW1sVmFsdWVzID0gdGhpcy52YWx1ZXNZYW1sOwogICAgICAgICAgfQogICAgICAgICAgdGhpcy5zaG93VmFsdWVzQ29tcG9uZW50ID0gZmFsc2U7CiAgICAgICAgICB0aGlzLnNob3dRdWVzdGlvbnMgPSBmYWxzZTsKICAgICAgICAgIHRoaXMuc2hvd0RpZmYgPSBmYWxzZTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgVkFMVUVTX1NUQVRFLkRJRkY6CiAgICAgICAgICAvLyBTaG93IHRoZSBZQU1MIGRpZmYKICAgICAgICAgIGlmIChvbGQgPT09IFZBTFVFU19TVEFURS5GT1JNKSB7CiAgICAgICAgICAgIHRoaXMudmFsdWVzWWFtbCA9IGpzeWFtbC5kdW1wKHRoaXMuY2hhcnRWYWx1ZXMgfHwge30pOwogICAgICAgICAgICB0aGlzLnByZXZpb3VzWWFtbFZhbHVlcyA9IHRoaXMudmFsdWVzWWFtbDsKICAgICAgICAgIH0KICAgICAgICAgIHRoaXMuc2hvd1ZhbHVlc0NvbXBvbmVudCA9IGZhbHNlOwogICAgICAgICAgdGhpcy5zaG93UXVlc3Rpb25zID0gZmFsc2U7CiAgICAgICAgICB0aGlzLnVwZGF0ZVZhbHVlKHRoaXMudmFsdWVzWWFtbCk7CiAgICAgICAgICB0aGlzLnNob3dEaWZmID0gdHJ1ZTsKICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9LAogICAgcmVxdWlyZXM6IGZ1bmN0aW9uIHJlcXVpcmVzKCkgewogICAgICB0aGlzLnVwZGF0ZVN0ZXBPbmVSZWFkeSgpOwogICAgfSwKICAgIHdhcm5pbmdzOiBmdW5jdGlvbiB3YXJuaW5ncygpIHsKICAgICAgdGhpcy51cGRhdGVTdGVwT25lUmVhZHkoKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMzID0gdGhpczsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5sb2FkVmFsdWVzQ29tcG9uZW50KCk7CiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5sb2FkQ2hhcnRTdGVwcygpOwogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICB3aW5kb3cuc2Nyb2xsVG9wID0gMDsKICAgICAgICAgICAgX3RoaXMzLnByZUZvcm1ZYW1sT3B0aW9uID0gX3RoaXMzLnZhbHVlc0NvbXBvbmVudCB8fCBfdGhpczMuaGFzUXVlc3Rpb25zID8gVkFMVUVTX1NUQVRFLkZPUk0gOiBWQUxVRVNfU1RBVEUuWUFNTDsKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKCk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgdmFyIF90aGlzNCA9IHRoaXM7CiAgICB0aGlzLnNob3duUmVhZG1lV2luZG93cy5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7CiAgICAgIHJldHVybiBfdGhpczQuJHN0b3JlLmRpc3BhdGNoKCd3bS9jbG9zZScsIG5hbWUsIHsKICAgICAgICByb290OiB0cnVlCiAgICAgIH0pOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRDbHVzdGVyUmVnaXN0cnk6IGZ1bmN0aW9uIGdldENsdXN0ZXJSZWdpc3RyeSgpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBoYXNQZXJtaXNzaW9uVG9TZWVQcm92Q2x1c3RlciwgX3Byb3ZDbHVzdGVyLCBfcHJvdkNsdXN0ZXIyLCBtZ21DbHVzdGVyLCBwcm92Q2x1c3RlcklkLCBwcm92Q2x1c3RlciwgX3Byb3ZDbHVzdGVyJGFnZW50Q29uLCBjbHVzdGVyUmVnaXN0cnksIF9tZ21DbHVzdGVyJHNwZWMsIHJrZTFSZWdpc3RyaWVzLCBkZWZhdWx0UmVnaXN0cnk7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBoYXNQZXJtaXNzaW9uVG9TZWVQcm92Q2x1c3RlciA9IF90aGlzNS4kc3RvcmUuZ2V0dGVyc1sibWFuYWdlbWVudC9zY2hlbWFGb3IiXShDQVBJLlJBTkNIRVJfQ0xVU1RFUik7CiAgICAgICAgICAgICAgaWYgKCFoYXNQZXJtaXNzaW9uVG9TZWVQcm92Q2x1c3RlcikgewogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyNzsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBtZ21DbHVzdGVyID0gX3RoaXM1LiRzdG9yZS5nZXR0ZXJzWydjdXJyZW50Q2x1c3RlciddOwogICAgICAgICAgICAgIHByb3ZDbHVzdGVySWQgPSBtZ21DbHVzdGVyID09PSBudWxsIHx8IG1nbUNsdXN0ZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1nbUNsdXN0ZXIucHJvdkNsdXN0ZXJJZDsKICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDQ7CiAgICAgICAgICAgICAgaWYgKCFwcm92Q2x1c3RlcklkKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDExOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gODsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXM1LiRzdG9yZS5kaXNwYXRjaCgnbWFuYWdlbWVudC9maW5kJywgewogICAgICAgICAgICAgICAgdHlwZTogQ0FQSS5SQU5DSEVSX0NMVVNURVIsCiAgICAgICAgICAgICAgICBpZDogcHJvdkNsdXN0ZXJJZAogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxMjsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSB7fTsKICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBwcm92Q2x1c3RlciA9IF9jb250ZXh0My50MDsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDE4OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMTU7CiAgICAgICAgICAgICAgX2NvbnRleHQzLnQxID0gX2NvbnRleHQzWyJjYXRjaCJdKDQpOwogICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIlVuYWJsZSB0byBmZXRjaCBwcm92IGNsdXN0ZXIgJyIuY29uY2F0KHByb3ZDbHVzdGVySWQsICInOiAiKSwgX2NvbnRleHQzLnQxKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlCiAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgICAgaWYgKCEoKF9wcm92Q2x1c3RlciA9IHByb3ZDbHVzdGVyKSAhPT0gbnVsbCAmJiBfcHJvdkNsdXN0ZXIgIT09IHZvaWQgMCAmJiBfcHJvdkNsdXN0ZXIuaXNSa2UyKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyMjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAvLyBpc1JrZTIgcmV0dXJucyB0cnVlIGZvciBib3RoIFJLRTIgYW5kIEszcyBjbHVzdGVycy4KICAgICAgICAgICAgICAvLyBJZiBhIGNsdXN0ZXIgc2NvcGVkIHJlZ2lzdHJ5IGV4aXN0cywKICAgICAgICAgICAgICAvLyBpdCBzaG91bGQgYmUgdXNlZCBieSBkZWZhdWx0LgogICAgICAgICAgICAgIGNsdXN0ZXJSZWdpc3RyeSA9ICgoX3Byb3ZDbHVzdGVyJGFnZW50Q29uID0gcHJvdkNsdXN0ZXIuYWdlbnRDb25maWcpID09PSBudWxsIHx8IF9wcm92Q2x1c3RlciRhZ2VudENvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3Byb3ZDbHVzdGVyJGFnZW50Q29uWydzeXN0ZW0tZGVmYXVsdC1yZWdpc3RyeSddKSB8fCAnJzsKICAgICAgICAgICAgICBpZiAoIWNsdXN0ZXJSZWdpc3RyeSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyMjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgY2x1c3RlclJlZ2lzdHJ5KTsKICAgICAgICAgICAgY2FzZSAyMjoKICAgICAgICAgICAgICBpZiAoISgoX3Byb3ZDbHVzdGVyMiA9IHByb3ZDbHVzdGVyKSAhPT0gbnVsbCAmJiBfcHJvdkNsdXN0ZXIyICE9PSB2b2lkIDAgJiYgX3Byb3ZDbHVzdGVyMi5pc1JrZTEpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIC8vIEZvciBSS0UxIGNsdXN0ZXJzLCB0aGUgY2x1c3RlciBzY29wZWQgcHJpdmF0ZSByZWdpc3RyeSBpcyBvbiB0aGUgbWFuYWdlbWVudAogICAgICAgICAgICAgIC8vIGNsdXN0ZXIsIG5vdCB0aGUgcHJvdmlzaW9uaW5nIGNsdXN0ZXIuCiAgICAgICAgICAgICAgcmtlMVJlZ2lzdHJpZXMgPSBtZ21DbHVzdGVyID09PSBudWxsIHx8IG1nbUNsdXN0ZXIgPT09IHZvaWQgMCB8fCAoX21nbUNsdXN0ZXIkc3BlYyA9IG1nbUNsdXN0ZXIuc3BlYykgPT09IG51bGwgfHwgX21nbUNsdXN0ZXIkc3BlYyA9PT0gdm9pZCAwIHx8IChfbWdtQ2x1c3RlciRzcGVjID0gX21nbUNsdXN0ZXIkc3BlYy5yYW5jaGVyS3ViZXJuZXRlc0VuZ2luZUNvbmZpZykgPT09IG51bGwgfHwgX21nbUNsdXN0ZXIkc3BlYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX21nbUNsdXN0ZXIkc3BlYy5wcml2YXRlUmVnaXN0cmllczsKICAgICAgICAgICAgICBpZiAoISgocmtlMVJlZ2lzdHJpZXMgPT09IG51bGwgfHwgcmtlMVJlZ2lzdHJpZXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJrZTFSZWdpc3RyaWVzLmxlbmd0aCkgPiAwKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyNzsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBkZWZhdWx0UmVnaXN0cnkgPSBya2UxUmVnaXN0cmllcy5maW5kKGZ1bmN0aW9uIChyZWdpc3RyeSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2lzdHJ5LmlzRGVmYXVsdDsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgZGVmYXVsdFJlZ2lzdHJ5LnVybCk7CiAgICAgICAgICAgIGNhc2UgMjc6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbNCwgMTVdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldEdsb2JhbFJlZ2lzdHJ5OiBmdW5jdGlvbiBnZXRHbG9iYWxSZWdpc3RyeSgpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciBnbG9iYWxSZWdpc3RyeTsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXM2LiRzdG9yZS5kaXNwYXRjaCgnbWFuYWdlbWVudC9maW5kJywgewogICAgICAgICAgICAgICAgdHlwZTogTUFOQUdFTUVOVC5TRVRUSU5HLAogICAgICAgICAgICAgICAgaWQ6IFNFVFRJTkcuU1lTVEVNX0RFRkFVTFRfUkVHSVNUUlkKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGdsb2JhbFJlZ2lzdHJ5ID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIGdsb2JhbFJlZ2lzdHJ5LnZhbHVlKTsKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgdXBkYXRlVmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZVZhbHVlKHZhbHVlKSB7CiAgICAgIGlmICh0aGlzLiRyZWZzLnlhbWwpIHsKICAgICAgICB0aGlzLiRyZWZzLnlhbWwudXBkYXRlVmFsdWUodmFsdWUpOwogICAgICB9CiAgICB9LAogICAgbG9hZFZhbHVlc0NvbXBvbmVudDogZnVuY3Rpb24gbG9hZFZhbHVlc0NvbXBvbmVudCgpIHsKICAgICAgdmFyIF90aGlzNyA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICAgIHZhciBfdGhpczckdmVyc2lvbjsKICAgICAgICB2YXIgY29tcG9uZW50LCBoYXNDaGFydENvbXBvbmVudCwgX2xvYWRlZCRkZWZhdWx0LCBsb2FkZWQ7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAvLyBUaGUgY29uc3QgY29tcG9uZW50IGlzIGEgc3RyaW5nLCBmb3IgZXhhbXBsZSwgJ21vbml0b3JpbmcnLgogICAgICAgICAgICAgIGNvbXBvbmVudCA9IChfdGhpczckdmVyc2lvbiA9IF90aGlzNy52ZXJzaW9uKSA9PT0gbnVsbCB8fCBfdGhpczckdmVyc2lvbiA9PT0gdm9pZCAwIHx8IChfdGhpczckdmVyc2lvbiA9IF90aGlzNyR2ZXJzaW9uLmFubm90YXRpb25zKSA9PT0gbnVsbCB8fCBfdGhpczckdmVyc2lvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXM3JHZlcnNpb25bQ0FUQUxPR19BTk5PVEFUSU9OUy5DT01QT05FTlRdOyAvLyBMb2FkIGEgdmFsdWVzIGNvbXBvbmVudCBmb3IgdGhlIFVJIGlmIGl0IGlzIG5hbWVkIGluIHRoZSBIZWxtIGNoYXJ0LgogICAgICAgICAgICAgIGlmICghY29tcG9uZW50KSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDE3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGhhc0NoYXJ0Q29tcG9uZW50ID0gX3RoaXM3LiRzdG9yZS5nZXR0ZXJzWyd0eXBlLW1hcC9oYXNDdXN0b21DaGFydCddKGNvbXBvbmVudCk7CiAgICAgICAgICAgICAgaWYgKCFoYXNDaGFydENvbXBvbmVudCkgewogICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBfdGhpczcudmFsdWVzQ29tcG9uZW50ID0gX3RoaXM3LiRzdG9yZS5nZXR0ZXJzWyd0eXBlLW1hcC9pbXBvcnRDaGFydCddKGNvbXBvbmVudCk7CiAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSA3OwogICAgICAgICAgICAgIHJldHVybiBfdGhpczcudmFsdWVzQ29tcG9uZW50KCk7CiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBsb2FkZWQgPSBfY29udGV4dDUuc2VudDsKICAgICAgICAgICAgICBfdGhpczcuc2hvd1ZhbHVlc0NvbXBvbmVudCA9IHRydWU7CiAgICAgICAgICAgICAgX3RoaXM3LmNvbXBvbmVudEhhc1RhYnMgPSAobG9hZGVkID09PSBudWxsIHx8IGxvYWRlZCA9PT0gdm9pZCAwIHx8IChfbG9hZGVkJGRlZmF1bHQgPSBsb2FkZWQuZGVmYXVsdCkgPT09IG51bGwgfHwgX2xvYWRlZCRkZWZhdWx0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbG9hZGVkJGRlZmF1bHQuaGFzVGFicykgfHwgZmFsc2U7CiAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAxNTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBfdGhpczcudmFsdWVzQ29tcG9uZW50ID0gbnVsbDsKICAgICAgICAgICAgICBfdGhpczcuY29tcG9uZW50SGFzVGFicyA9IGZhbHNlOwogICAgICAgICAgICAgIF90aGlzNy5zaG93VmFsdWVzQ29tcG9uZW50ID0gZmFsc2U7CiAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAyMDsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgICBfdGhpczcudmFsdWVzQ29tcG9uZW50ID0gbnVsbDsKICAgICAgICAgICAgICBfdGhpczcuY29tcG9uZW50SGFzVGFicyA9IGZhbHNlOwogICAgICAgICAgICAgIF90aGlzNy5zaG93VmFsdWVzQ29tcG9uZW50ID0gZmFsc2U7CiAgICAgICAgICAgIGNhc2UgMjA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBsb2FkQ2hhcnRTdGVwczogZnVuY3Rpb24gbG9hZENoYXJ0U3RlcHMoKSB7CiAgICAgIHZhciBfdGhpczggPSB0aGlzOwogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNigpIHsKICAgICAgICB2YXIgX3RoaXM4JHZlcnNpb247CiAgICAgICAgdmFyIGNvbXBvbmVudCwgc3RlcHM7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNiQoX2NvbnRleHQ2KSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDYucHJldiA9IF9jb250ZXh0Ni5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21wb25lbnQgPSAoX3RoaXM4JHZlcnNpb24gPSBfdGhpczgudmVyc2lvbikgPT09IG51bGwgfHwgX3RoaXM4JHZlcnNpb24gPT09IHZvaWQgMCB8fCAoX3RoaXM4JHZlcnNpb24gPSBfdGhpczgkdmVyc2lvbi5hbm5vdGF0aW9ucykgPT09IG51bGwgfHwgX3RoaXM4JHZlcnNpb24gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzOCR2ZXJzaW9uW0NBVEFMT0dfQU5OT1RBVElPTlMuQ09NUE9ORU5UXTsKICAgICAgICAgICAgICBpZiAoIWNvbXBvbmVudCkgewogICAgICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSA4OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXM4LiRzdG9yZS5nZXR0ZXJzWydjYXRhbG9nL2NoYXJ0U3RlcHMnXShjb21wb25lbnQpOwogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgc3RlcHMgPSBfY29udGV4dDYuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDc7CiAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHN0ZXBzLm1hcChmdW5jdGlvbiAoY3MpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczgubG9hZENoYXJ0U3RlcChjcyk7CiAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgX3RoaXM4LmN1c3RvbVN0ZXBzID0gX2NvbnRleHQ2LnNlbnQ7CiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvYWRDaGFydFN0ZXA6IGZ1bmN0aW9uIGxvYWRDaGFydFN0ZXAoY3VzdG9tU3RlcCkgewogICAgICB2YXIgX3RoaXM5ID0gdGhpczsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTcoKSB7CiAgICAgICAgdmFyIF9sb2FkZWQkZGVmYXVsdDIsIF9sb2FkZWQkZGVmYXVsdDMsIF9sb2FkZWQkZGVmYXVsdDQ7CiAgICAgICAgdmFyIGxvYWRlZCwgd2l0aEZhbGxCYWNrOwogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTckKF9jb250ZXh0NykgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQ3LnByZXYgPSBfY29udGV4dDcubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBjdXN0b21TdGVwLmNvbXBvbmVudCgpOwogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgbG9hZGVkID0gX2NvbnRleHQ3LnNlbnQ7CiAgICAgICAgICAgICAgd2l0aEZhbGxCYWNrID0gX3RoaXM5LiRzdG9yZS5nZXR0ZXJzWydpMThuL3dpdGhGYWxsYmFjayddOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDcuYWJydXB0KCJyZXR1cm4iLCB7CiAgICAgICAgICAgICAgICBuYW1lOiBjdXN0b21TdGVwLm5hbWUsCiAgICAgICAgICAgICAgICBsYWJlbDogd2l0aEZhbGxCYWNrKGxvYWRlZCA9PT0gbnVsbCB8fCBsb2FkZWQgPT09IHZvaWQgMCB8fCAoX2xvYWRlZCRkZWZhdWx0MiA9IGxvYWRlZC5kZWZhdWx0KSA9PT0gbnVsbCB8fCBfbG9hZGVkJGRlZmF1bHQyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbG9hZGVkJGRlZmF1bHQyLmxhYmVsLCBudWxsLCBjdXN0b21TdGVwLm5hbWUpLAogICAgICAgICAgICAgICAgc3VidGV4dDogd2l0aEZhbGxCYWNrKGxvYWRlZCA9PT0gbnVsbCB8fCBsb2FkZWQgPT09IHZvaWQgMCB8fCAoX2xvYWRlZCRkZWZhdWx0MyA9IGxvYWRlZC5kZWZhdWx0KSA9PT0gbnVsbCB8fCBfbG9hZGVkJGRlZmF1bHQzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbG9hZGVkJGRlZmF1bHQzLnN1YnRleHQsIG51bGwsICcnKSwKICAgICAgICAgICAgICAgIHdlaWdodDogbG9hZGVkID09PSBudWxsIHx8IGxvYWRlZCA9PT0gdm9pZCAwIHx8IChfbG9hZGVkJGRlZmF1bHQ0ID0gbG9hZGVkLmRlZmF1bHQpID09PSBudWxsIHx8IF9sb2FkZWQkZGVmYXVsdDQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9sb2FkZWQkZGVmYXVsdDQud2VpZ2h0LAogICAgICAgICAgICAgICAgcmVhZHk6IGZhbHNlLAogICAgICAgICAgICAgICAgaGlkZGVuOiB0cnVlLAogICAgICAgICAgICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgICAgICAgICAgIGNvbXBvbmVudDogY3VzdG9tU3RlcC5jb21wb25lbnQKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDcuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU3KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgc2VsZWN0Q2hhcnQ6IGZ1bmN0aW9uIHNlbGVjdENoYXJ0KGNoYXJ0KSB7CiAgICAgIGlmICghY2hhcnQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdGhpcy4kcm91dGVyLmFwcGx5UXVlcnkoX2RlZmluZVByb3BlcnR5KF9kZWZpbmVQcm9wZXJ0eShfZGVmaW5lUHJvcGVydHkoX2RlZmluZVByb3BlcnR5KHt9LCBSRVBPLCBjaGFydC5yZXBvTmFtZSksIFJFUE9fVFlQRSwgY2hhcnQucmVwb1R5cGUpLCBDSEFSVCwgY2hhcnQuY2hhcnROYW1lKSwgVkVSU0lPTiwgY2hhcnQudmVyc2lvbnNbMF0udmVyc2lvbikpOwogICAgfSwKICAgIGNhbmNlbDogZnVuY3Rpb24gY2FuY2VsKCkgewogICAgICBpZiAodGhpcy5leGlzdGluZykgewogICAgICAgIHRoaXMuZG9uZSgpOwogICAgICB9IGVsc2UgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5W0ZST01fVE9PTFNdID09PSBfRkxBR0dFRCkgewogICAgICAgIHRoaXMuJHJvdXRlci5yZXBsYWNlKHRoaXMuY2x1c3RlclRvb2xzTG9jYXRpb24oKSk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy4kcm91dGUucXVlcnlbRlJPTV9DTFVTVEVSXSA9PT0gX0ZMQUdHRUQpIHsKICAgICAgICB0aGlzLiRyb3V0ZXIucmVwbGFjZSh0aGlzLmNsdXN0ZXJzTG9jYXRpb24oKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kcm91dGVyLnJlcGxhY2UodGhpcy5jaGFydExvY2F0aW9uKGZhbHNlKSk7CiAgICAgIH0KICAgIH0sCiAgICBkb25lOiBmdW5jdGlvbiBkb25lKCkgewogICAgICBpZiAodGhpcy4kcm91dGUucXVlcnlbRlJPTV9UT09MU10gPT09IF9GTEFHR0VEKSB7CiAgICAgICAgdGhpcy4kcm91dGVyLnJlcGxhY2UodGhpcy5jbHVzdGVyVG9vbHNMb2NhdGlvbigpKTsKICAgICAgfSBlbHNlIGlmICh0aGlzLiRyb3V0ZS5xdWVyeVtGUk9NX0NMVVNURVJdID09PSBfRkxBR0dFRCkgewogICAgICAgIHRoaXMuJHJvdXRlci5yZXBsYWNlKHRoaXMuY2x1c3RlcnNMb2NhdGlvbigpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyBJZiB0aGUgY3JlYXRlIGFwcCBwcm9jZXNzIGZhaWxzIGhlbG0gdmFsaWRhdGlvbiB0aGVuIHdlIHN0aWxsIGdldCBoZXJlLi4uIHNvIHVudGlsIHRoaXMgaXMgZml4ZWQgbmV3IGFwcHMgd2lsbCBiZSB0YWtlbiB0byB0aGUKICAgICAgICAvLyBnZW5lcmljIGFwcHMgbGlzdCAoZXhpc3RpbmcgYXBwcyB3aWxsIGJlIHRha2VuIHRvIHRoZWlyIGRldGFpbCBwYWdlKQogICAgICAgIHRoaXMuJHJvdXRlci5yZXBsYWNlKHRoaXMuYXBwTG9jYXRpb24oKSk7CiAgICAgIH0KICAgIH0sCiAgICBmaW5pc2g6IGZ1bmN0aW9uIGZpbmlzaChidG5DYikgewogICAgICB2YXIgX3RoaXMxMCA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU4KCkgewogICAgICAgIHZhciBpc1VwZ3JhZGUsIF90aGlzMTAkYWN0aW9uSW5wdXQsIGVycm9ycywgaW5wdXQsIHJlcywgb3BlcmF0aW9uSWQ7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlOCQoX2NvbnRleHQ4KSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDgucHJldiA9IF9jb250ZXh0OC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDgucHJldiA9IDA7CiAgICAgICAgICAgICAgaXNVcGdyYWRlID0gISFfdGhpczEwLmV4aXN0aW5nOwogICAgICAgICAgICAgIF90aGlzMTAuZXJyb3JzID0gW107CiAgICAgICAgICAgICAgX2NvbnRleHQ4Lm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBfdGhpczEwLmFwcGx5SG9va3MoQkVGT1JFX1NBVkVfSE9PS1MpOwogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgX3RoaXMxMCRhY3Rpb25JbnB1dCA9IF90aGlzMTAuYWN0aW9uSW5wdXQoaXNVcGdyYWRlKSwgZXJyb3JzID0gX3RoaXMxMCRhY3Rpb25JbnB1dC5lcnJvcnMsIGlucHV0ID0gX3RoaXMxMCRhY3Rpb25JbnB1dC5pbnB1dDsKICAgICAgICAgICAgICBpZiAoIShlcnJvcnMgIT09IG51bGwgJiYgZXJyb3JzICE9PSB2b2lkIDAgJiYgZXJyb3JzLmxlbmd0aCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0OC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgX3RoaXMxMC5lcnJvcnMgPSBlcnJvcnM7CiAgICAgICAgICAgICAgYnRuQ2IoZmFsc2UpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDguYWJydXB0KCJyZXR1cm4iKTsKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBfY29udGV4dDgubmV4dCA9IDEyOwogICAgICAgICAgICAgIHJldHVybiBfdGhpczEwLnJlcG8uZG9BY3Rpb24oaXNVcGdyYWRlID8gJ3VwZ3JhZGUnIDogJ2luc3RhbGwnLCBpbnB1dCk7CiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQ4LnNlbnQ7CiAgICAgICAgICAgICAgb3BlcmF0aW9uSWQgPSAiIi5jb25jYXQocmVzLm9wZXJhdGlvbk5hbWVzcGFjZSwgIi8iKS5jb25jYXQocmVzLm9wZXJhdGlvbk5hbWUpOyAvLyBOb24tYWRtaW5zIHdpdGhvdXQgYSBjbHVzdGVyIHdvbid0IGJlIGFibGUgdG8gZmV0Y2ggb3BlcmF0aW9ucyBpbW1lZGlhdGVseQogICAgICAgICAgICAgIF9jb250ZXh0OC5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMTAucmVwby53YWl0Rm9yT3BlcmF0aW9uKG9wZXJhdGlvbklkKTsKICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICBfY29udGV4dDgubmV4dCA9IDE4OwogICAgICAgICAgICAgIHJldHVybiBfdGhpczEwLiRzdG9yZS5kaXNwYXRjaCgiIi5jb25jYXQoX3RoaXMxMC5pblN0b3JlLCAiL2ZpbmQiKSwgewogICAgICAgICAgICAgICAgdHlwZTogQ0FUQUxPRy5PUEVSQVRJT04sCiAgICAgICAgICAgICAgICBpZDogb3BlcmF0aW9uSWQKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgICBfdGhpczEwLm9wZXJhdGlvbiA9IF9jb250ZXh0OC5zZW50OwogICAgICAgICAgICAgIF9jb250ZXh0OC5wcmV2ID0gMTk7CiAgICAgICAgICAgICAgX2NvbnRleHQ4Lm5leHQgPSAyMjsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMxMC5vcGVyYXRpb24ud2FpdEZvckxpbmsoJ2xvZ3MnKTsKICAgICAgICAgICAgY2FzZSAyMjoKICAgICAgICAgICAgICBfdGhpczEwLm9wZXJhdGlvbi5vcGVuTG9ncygpOwogICAgICAgICAgICAgIF9jb250ZXh0OC5uZXh0ID0gMjc7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgMjU6CiAgICAgICAgICAgICAgX2NvbnRleHQ4LnByZXYgPSAyNTsKICAgICAgICAgICAgICBfY29udGV4dDgudDAgPSBfY29udGV4dDhbImNhdGNoIl0oMTkpOwogICAgICAgICAgICBjYXNlIDI3OgogICAgICAgICAgICAgIF9jb250ZXh0OC5uZXh0ID0gMjk7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMTAuYXBwbHlIb29rcyhBRlRFUl9TQVZFX0hPT0tTKTsKICAgICAgICAgICAgY2FzZSAyOToKICAgICAgICAgICAgICBidG5DYih0cnVlKTsKICAgICAgICAgICAgICBfdGhpczEwLmRvbmUoKTsKICAgICAgICAgICAgICBfY29udGV4dDgubmV4dCA9IDM3OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDMzOgogICAgICAgICAgICAgIF9jb250ZXh0OC5wcmV2ID0gMzM7CiAgICAgICAgICAgICAgX2NvbnRleHQ4LnQxID0gX2NvbnRleHQ4WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIF90aGlzMTAuZXJyb3JzID0gZXhjZXB0aW9uVG9FcnJvcnNBcnJheShfY29udGV4dDgudDEpOwogICAgICAgICAgICAgIGJ0bkNiKGZhbHNlKTsKICAgICAgICAgICAgY2FzZSAzNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ4LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlOCwgbnVsbCwgW1swLCAzM10sIFsxOSwgMjVdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGFkZEdsb2JhbFZhbHVlc1RvOiBmdW5jdGlvbiBhZGRHbG9iYWxWYWx1ZXNUbyh2YWx1ZXMpIHsKICAgICAgdmFyIF9wcm9qZWN0cyRmaW5kLCBfdGhpcyRzZXJ2ZXJVcmxTZXR0aW4sIF9jbHVzdGVyJHNwZWMsIF9jbHVzdGVyJHNwZWMyOwogICAgICB2YXIgZ2xvYmFsID0gdmFsdWVzLmdsb2JhbDsKICAgICAgaWYgKCFnbG9iYWwpIHsKICAgICAgICBnbG9iYWwgPSB7fTsKICAgICAgICBzZXQodmFsdWVzLCAnZ2xvYmFsJywgZ2xvYmFsKTsKICAgICAgfQogICAgICB2YXIgY2F0dGxlID0gZ2xvYmFsLmNhdHRsZTsKICAgICAgaWYgKCFjYXR0bGUpIHsKICAgICAgICBjYXR0bGUgPSB7fTsKICAgICAgICBzZXQodmFsdWVzLmdsb2JhbCwgJ2NhdHRsZScsIGNhdHRsZSk7CiAgICAgIH0KICAgICAgdmFyIGNsdXN0ZXIgPSB0aGlzLmN1cnJlbnRDbHVzdGVyOwogICAgICB2YXIgcHJvamVjdHMgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L2FsbCddKE1BTkFHRU1FTlQuUFJPSkVDVCk7CiAgICAgIHZhciBzeXN0ZW1Qcm9qZWN0SWQgPSAoKF9wcm9qZWN0cyRmaW5kID0gcHJvamVjdHMuZmluZChmdW5jdGlvbiAocCkgewogICAgICAgIHZhciBfcCRzcGVjOwogICAgICAgIHJldHVybiAoKF9wJHNwZWMgPSBwLnNwZWMpID09PSBudWxsIHx8IF9wJHNwZWMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wJHNwZWMuZGlzcGxheU5hbWUpID09PSAnU3lzdGVtJzsKICAgICAgfSkpID09PSBudWxsIHx8IF9wcm9qZWN0cyRmaW5kID09PSB2b2lkIDAgfHwgKF9wcm9qZWN0cyRmaW5kID0gX3Byb2plY3RzJGZpbmQuaWQpID09PSBudWxsIHx8IF9wcm9qZWN0cyRmaW5kID09PSB2b2lkIDAgfHwgKF9wcm9qZWN0cyRmaW5kID0gX3Byb2plY3RzJGZpbmQuc3BsaXQoJy8nKSkgPT09IG51bGwgfHwgX3Byb2plY3RzJGZpbmQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wcm9qZWN0cyRmaW5kWzFdKSB8fCAnJzsKICAgICAgdmFyIHNlcnZlclVybCA9ICgoX3RoaXMkc2VydmVyVXJsU2V0dGluID0gdGhpcy5zZXJ2ZXJVcmxTZXR0aW5nKSA9PT0gbnVsbCB8fCBfdGhpcyRzZXJ2ZXJVcmxTZXR0aW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHNlcnZlclVybFNldHRpbi52YWx1ZSkgfHwgJyc7CiAgICAgIHZhciBpc1dpbmRvd3MgPSAoKGNsdXN0ZXIgPT09IG51bGwgfHwgY2x1c3RlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogY2x1c3Rlci53b3JrZXJPU3MpIHx8IFtdKS5pbmNsdWRlcyhXSU5ET1dTKTsKICAgICAgdmFyIHBhdGhQcmVmaXggPSAoY2x1c3RlciA9PT0gbnVsbCB8fCBjbHVzdGVyID09PSB2b2lkIDAgfHwgKF9jbHVzdGVyJHNwZWMgPSBjbHVzdGVyLnNwZWMpID09PSBudWxsIHx8IF9jbHVzdGVyJHNwZWMgPT09IHZvaWQgMCB8fCAoX2NsdXN0ZXIkc3BlYyA9IF9jbHVzdGVyJHNwZWMucmFuY2hlckt1YmVybmV0ZXNFbmdpbmVDb25maWcpID09PSBudWxsIHx8IF9jbHVzdGVyJHNwZWMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jbHVzdGVyJHNwZWMucHJlZml4UGF0aCkgfHwgJyc7CiAgICAgIHZhciB3aW5kb3dzUGF0aFByZWZpeCA9IChjbHVzdGVyID09PSBudWxsIHx8IGNsdXN0ZXIgPT09IHZvaWQgMCB8fCAoX2NsdXN0ZXIkc3BlYzIgPSBjbHVzdGVyLnNwZWMpID09PSBudWxsIHx8IF9jbHVzdGVyJHNwZWMyID09PSB2b2lkIDAgfHwgKF9jbHVzdGVyJHNwZWMyID0gX2NsdXN0ZXIkc3BlYzIucmFuY2hlckt1YmVybmV0ZXNFbmdpbmVDb25maWcpID09PSBudWxsIHx8IF9jbHVzdGVyJHNwZWMyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfY2x1c3RlciRzcGVjMi53aW5QcmVmaXhQYXRoKSB8fCAnJzsKICAgICAgc2V0SWZOb3RTZXQoY2F0dGxlLCAnY2x1c3RlcklkJywgY2x1c3RlciA9PT0gbnVsbCB8fCBjbHVzdGVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjbHVzdGVyLmlkKTsKICAgICAgc2V0SWZOb3RTZXQoY2F0dGxlLCAnY2x1c3Rlck5hbWUnLCBjbHVzdGVyID09PSBudWxsIHx8IGNsdXN0ZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNsdXN0ZXIubmFtZURpc3BsYXkpOwogICAgICBpZiAodGhpcy5zaG93Q3VzdG9tUmVnaXN0cnkpIHsKICAgICAgICBzZXQoY2F0dGxlLCAnc3lzdGVtRGVmYXVsdFJlZ2lzdHJ5JywgdGhpcy5jdXN0b21SZWdpc3RyeVNldHRpbmcpOwogICAgICAgIHNldChnbG9iYWwsICdzeXN0ZW1EZWZhdWx0UmVnaXN0cnknLCB0aGlzLmN1c3RvbVJlZ2lzdHJ5U2V0dGluZyk7CiAgICAgIH0KICAgICAgc2V0SWZOb3RTZXQoZ2xvYmFsLCAnY2F0dGxlLnN5c3RlbVByb2plY3RJZCcsIHN5c3RlbVByb2plY3RJZCk7CiAgICAgIHNldElmTm90U2V0KGNhdHRsZSwgJ3VybCcsIHNlcnZlclVybCk7CiAgICAgIHNldElmTm90U2V0KGNhdHRsZSwgJ3JrZVBhdGhQcmVmaXgnLCBwYXRoUHJlZml4KTsKICAgICAgc2V0SWZOb3RTZXQoY2F0dGxlLCAncmtlV2luZG93c1BhdGhQcmVmaXgnLCB3aW5kb3dzUGF0aFByZWZpeCk7CiAgICAgIGlmIChpc1dpbmRvd3MpIHsKICAgICAgICBzZXRJZk5vdFNldChjYXR0bGUsICd3aW5kb3dzLmVuYWJsZWQnLCB0cnVlKTsKICAgICAgfQogICAgICByZXR1cm4gdmFsdWVzOwogICAgICBmdW5jdGlvbiBzZXRJZk5vdFNldChvYmosIGtleSwgdmFsKSB7CiAgICAgICAgaWYgKHR5cGVvZiBnZXQob2JqLCBrZXkpID09PSAndW5kZWZpbmVkJykgewogICAgICAgICAgc2V0KG9iaiwga2V5LCB2YWwpOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHJlbW92ZUdsb2JhbFZhbHVlc0Zyb206IGZ1bmN0aW9uIHJlbW92ZUdsb2JhbFZhbHVlc0Zyb20odmFsdWVzKSB7CiAgICAgIHZhciBfdGhpcyRzZXJ2ZXJVcmxTZXR0aW4yLCBfY2x1c3RlciRzcGVjMywgX2NsdXN0ZXIkc3BlYzQsIF92YWx1ZXMkZ2xvYmFsLCBfdmFsdWVzJGdsb2JhbDIsIF92YWx1ZXMkZ2xvYmFsMzsKICAgICAgaWYgKCF2YWx1ZXMpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdmFyIGNsdXN0ZXIgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjdXJyZW50Q2x1c3RlciddOwogICAgICB2YXIgc2VydmVyVXJsID0gKChfdGhpcyRzZXJ2ZXJVcmxTZXR0aW4yID0gdGhpcy5zZXJ2ZXJVcmxTZXR0aW5nKSA9PT0gbnVsbCB8fCBfdGhpcyRzZXJ2ZXJVcmxTZXR0aW4yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRzZXJ2ZXJVcmxTZXR0aW4yLnZhbHVlKSB8fCAnJzsKICAgICAgdmFyIGlzV2luZG93cyA9ICgoY2x1c3RlciA9PT0gbnVsbCB8fCBjbHVzdGVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjbHVzdGVyLndvcmtlck9TcykgfHwgW10pLmluY2x1ZGVzKFdJTkRPV1MpOwogICAgICB2YXIgcGF0aFByZWZpeCA9IChjbHVzdGVyID09PSBudWxsIHx8IGNsdXN0ZXIgPT09IHZvaWQgMCB8fCAoX2NsdXN0ZXIkc3BlYzMgPSBjbHVzdGVyLnNwZWMpID09PSBudWxsIHx8IF9jbHVzdGVyJHNwZWMzID09PSB2b2lkIDAgfHwgKF9jbHVzdGVyJHNwZWMzID0gX2NsdXN0ZXIkc3BlYzMucmFuY2hlckt1YmVybmV0ZXNFbmdpbmVDb25maWcpID09PSBudWxsIHx8IF9jbHVzdGVyJHNwZWMzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfY2x1c3RlciRzcGVjMy5wcmVmaXhQYXRoKSB8fCAnJzsKICAgICAgdmFyIHdpbmRvd3NQYXRoUHJlZml4ID0gKGNsdXN0ZXIgPT09IG51bGwgfHwgY2x1c3RlciA9PT0gdm9pZCAwIHx8IChfY2x1c3RlciRzcGVjNCA9IGNsdXN0ZXIuc3BlYykgPT09IG51bGwgfHwgX2NsdXN0ZXIkc3BlYzQgPT09IHZvaWQgMCB8fCAoX2NsdXN0ZXIkc3BlYzQgPSBfY2x1c3RlciRzcGVjNC5yYW5jaGVyS3ViZXJuZXRlc0VuZ2luZUNvbmZpZykgPT09IG51bGwgfHwgX2NsdXN0ZXIkc3BlYzQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jbHVzdGVyJHNwZWM0LndpblByZWZpeFBhdGgpIHx8ICcnOwogICAgICBpZiAoKF92YWx1ZXMkZ2xvYmFsID0gdmFsdWVzLmdsb2JhbCkgIT09IG51bGwgJiYgX3ZhbHVlcyRnbG9iYWwgIT09IHZvaWQgMCAmJiBfdmFsdWVzJGdsb2JhbC5jYXR0bGUpIHsKICAgICAgICBkZWxldGVJZkVxdWFsKHZhbHVlcy5nbG9iYWwuY2F0dGxlLCAnY2x1c3RlcklkJywgY2x1c3RlciA9PT0gbnVsbCB8fCBjbHVzdGVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjbHVzdGVyLmlkKTsKICAgICAgICBkZWxldGVJZkVxdWFsKHZhbHVlcy5nbG9iYWwuY2F0dGxlLCAnY2x1c3Rlck5hbWUnLCBjbHVzdGVyID09PSBudWxsIHx8IGNsdXN0ZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNsdXN0ZXIubmFtZURpc3BsYXkpOwogICAgICAgIGRlbGV0ZUlmRXF1YWwodmFsdWVzLmdsb2JhbC5jYXR0bGUsICd1cmwnLCBzZXJ2ZXJVcmwpOwogICAgICAgIGRlbGV0ZUlmRXF1YWwodmFsdWVzLmdsb2JhbC5jYXR0bGUsICdya2VQYXRoUHJlZml4JywgcGF0aFByZWZpeCk7CiAgICAgICAgZGVsZXRlSWZFcXVhbCh2YWx1ZXMuZ2xvYmFsLmNhdHRsZSwgJ3JrZVdpbmRvd3NQYXRoUHJlZml4Jywgd2luZG93c1BhdGhQcmVmaXgpOwogICAgICAgIGlmIChpc1dpbmRvd3MpIHsKICAgICAgICAgIGRlbGV0ZUlmRXF1YWwodmFsdWVzLmdsb2JhbC5jYXR0bGUud2luZG93cywgJ2VuYWJsZWQnLCB0cnVlKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgaWYgKChfdmFsdWVzJGdsb2JhbDIgPSB2YWx1ZXMuZ2xvYmFsKSAhPT0gbnVsbCAmJiBfdmFsdWVzJGdsb2JhbDIgIT09IHZvaWQgMCAmJiAoX3ZhbHVlcyRnbG9iYWwyID0gX3ZhbHVlcyRnbG9iYWwyLmNhdHRsZSkgIT09IG51bGwgJiYgX3ZhbHVlcyRnbG9iYWwyICE9PSB2b2lkIDAgJiYgX3ZhbHVlcyRnbG9iYWwyLndpbmRvd3MgJiYgIU9iamVjdC5rZXlzKHZhbHVlcy5nbG9iYWwuY2F0dGxlLndpbmRvd3MpLmxlbmd0aCkgewogICAgICAgIGRlbGV0ZSB2YWx1ZXMuZ2xvYmFsLmNhdHRsZS53aW5kb3dzOwogICAgICB9CiAgICAgIGlmICgoX3ZhbHVlcyRnbG9iYWwzID0gdmFsdWVzLmdsb2JhbCkgIT09IG51bGwgJiYgX3ZhbHVlcyRnbG9iYWwzICE9PSB2b2lkIDAgJiYgX3ZhbHVlcyRnbG9iYWwzLmNhdHRsZSAmJiAhT2JqZWN0LmtleXModmFsdWVzLmdsb2JhbC5jYXR0bGUpLmxlbmd0aCkgewogICAgICAgIGRlbGV0ZSB2YWx1ZXMuZ2xvYmFsLmNhdHRsZTsKICAgICAgfQogICAgICBpZiAoIU9iamVjdC5rZXlzKHZhbHVlcy5nbG9iYWwgfHwge30pLmxlbmd0aCkgewogICAgICAgIGRlbGV0ZSB2YWx1ZXMuZ2xvYmFsOwogICAgICB9CiAgICAgIHJldHVybiB2YWx1ZXM7CiAgICAgIGZ1bmN0aW9uIGRlbGV0ZUlmRXF1YWwob2JqLCBrZXksIHZhbCkgewogICAgICAgIGlmIChnZXQob2JqLCBrZXkpID09PSB2YWwpIHsKICAgICAgICAgIGRlbGV0ZSBvYmpba2V5XTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBhcHBseVlhbWxUb1ZhbHVlczogZnVuY3Rpb24gYXBwbHlZYW1sVG9WYWx1ZXMoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgdGhpcy5jaGFydFZhbHVlcyA9IGpzeWFtbC5sb2FkKHRoaXMudmFsdWVzWWFtbCk7CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBlcnJvcnM6IGV4Y2VwdGlvblRvRXJyb3JzQXJyYXkoZXJyKQogICAgICAgIH07CiAgICAgIH0KICAgICAgcmV0dXJuIHsKICAgICAgICBlcnJvcnM6IFtdCiAgICAgIH07CiAgICB9LAogICAgLyoKICAgICAgYWN0aW9uSW5wdXQgZGV0ZXJtaW5lcyB3aGF0IHZhbHVlcyBSYW5jaGVyIGZpbmFsbHkgc2VuZHMKICAgICAgdG8gdGhlIGJhY2tlbmQgd2hlbiBpbnN0YWxsaW5nIG9yIHVwZ3JhZGluZyB0aGUgYXBwLiBJdAogICAgICBpbmplY3RzIFJhbmNoZXItc3BlY2lmaWMgdmFsdWVzIGludG8gdGhlIGNoYXJ0IHZhbHVlcy4KICAgICovCiAgICBhY3Rpb25JbnB1dDogZnVuY3Rpb24gYWN0aW9uSW5wdXQoaXNVcGdyYWRlKSB7CiAgICAgIHZhciBfdGhpcyR2ZXJzaW9uSW5mbzUsIF90aGlzJHZlcnNpb240LCBfdGhpcyR2ZXJzaW9uNTsKICAgICAgLyogRGVmYXVsdCB2YWx1ZXMgZGVmaW5lZCBpbiB0aGUgSGVsbSBjaGFydCBpdHNlbGYgKi8KICAgICAgdmFyIGZyb21DaGFydCA9ICgoX3RoaXMkdmVyc2lvbkluZm81ID0gdGhpcy52ZXJzaW9uSW5mbykgPT09IG51bGwgfHwgX3RoaXMkdmVyc2lvbkluZm81ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyR2ZXJzaW9uSW5mbzUudmFsdWVzKSB8fCB7fTsKICAgICAgdmFyIGVycm9ycyA9IFtdOwogICAgICBpZiAodGhpcy5zaG93aW5nWWFtbCB8fCB0aGlzLnNob3dpbmdZYW1sRGlmZikgewogICAgICAgIHZhciBfdGhpcyRhcHBseVlhbWxUb1ZhbHUgPSB0aGlzLmFwcGx5WWFtbFRvVmFsdWVzKCksCiAgICAgICAgICB5YW1sRXJyb3JzID0gX3RoaXMkYXBwbHlZYW1sVG9WYWx1LmVycm9yczsKICAgICAgICBlcnJvcnMucHVzaC5hcHBseShlcnJvcnMsIF90b0NvbnN1bWFibGVBcnJheSh5YW1sRXJyb3JzKSk7CiAgICAgIH0KCiAgICAgIC8qCiAgICAgICAgT25seSBzYXZlIHRoZSB2YWx1ZXMgdGhhdCBkaWZmZXIgZnJvbSB0aGUgY2hhcnQncyBzdGFuZGFyZCB2YWx1ZXMueWFtbC4KICAgICAgICBjaGFydFZhbHVlcyBpcyBjcmVhdGVkIGJ5IGFwcGx5aW5nIHRoZSB1c2VyJ3MgY3VzdG9taXplZCBvbnRvCiAgICAgICAgdGhlIGRlZmF1bHQgY2hhcnQgdmFsdWVzLgogICAgICAqLwogICAgICB2YXIgdmFsdWVzID0gZGlmZihmcm9tQ2hhcnQsIHRoaXMuY2hhcnRWYWx1ZXMpOwoKICAgICAgLyoKICAgICAgICBSZWZlciB0byB0aGUgZGV2ZWxvcGVyIGRvY3MgYXQgZG9jcy9kZXZlbG9wZXIvaGVsbS1jaGFydC1hcHBzLm1kCiAgICAgICAgZm9yIGRldGFpbHMgb24gd2hhdCB2YWx1ZXMgYXJlIGluamVjdGVkIGFuZCB3aGVyZSB0aGV5IGNvbWUgZnJvbS4KICAgICAgKi8KCiAgICAgIHRoaXMuYWRkR2xvYmFsVmFsdWVzVG8odmFsdWVzKTsKICAgICAgdmFyIGZvcm0gPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMudmFsdWUpKTsKCiAgICAgIC8qCiAgICAgICAgTWlncmF0ZWQgYW5ub3RhdGlvbnMgYXJlIHJlcXVpcmVkIHRvIGFsbG93IGEgZGVwcmVjYXRlZCBsZWdhY3kgYXBwIHRvIGJlCiAgICAgICAgdXBncmFkZWQuCiAgICAgICovCiAgICAgIHZhciBtaWdyYXRlZEFubm90YXRpb25zID0gdGhpcy5taWdyYXRlZEFwcCA/IF9kZWZpbmVQcm9wZXJ0eSh7fSwgQ0FUQUxPR19BTk5PVEFUSU9OUy5NSUdSQVRFRCwgJ3RydWUnKSA6IHt9OwogICAgICB2YXIgY2hhcnQgPSB7CiAgICAgICAgY2hhcnROYW1lOiB0aGlzLmNoYXJ0LmNoYXJ0TmFtZSwKICAgICAgICB2ZXJzaW9uOiAoKF90aGlzJHZlcnNpb240ID0gdGhpcy52ZXJzaW9uKSA9PT0gbnVsbCB8fCBfdGhpcyR2ZXJzaW9uNCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkdmVyc2lvbjQudmVyc2lvbikgfHwgdGhpcy5xdWVyeS52ZXJzaW9uTmFtZSwKICAgICAgICByZWxlYXNlTmFtZTogZm9ybS5tZXRhZGF0YS5uYW1lLAogICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLmN1c3RvbUNtZE9wdHMuZGVzY3JpcHRpb24sCiAgICAgICAgYW5ub3RhdGlvbnM6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWlncmF0ZWRBbm5vdGF0aW9ucyksIHt9LCBfZGVmaW5lUHJvcGVydHkoX2RlZmluZVByb3BlcnR5KHt9LCBDQVRBTE9HX0FOTk9UQVRJT05TLlNPVVJDRV9SRVBPX1RZUEUsIHRoaXMuY2hhcnQucmVwb1R5cGUpLCBDQVRBTE9HX0FOTk9UQVRJT05TLlNPVVJDRV9SRVBPX05BTUUsIHRoaXMuY2hhcnQucmVwb05hbWUpKSwKICAgICAgICB2YWx1ZXM6IHZhbHVlcwogICAgICB9OwogICAgICBpZiAoaXNVcGdyYWRlKSB7CiAgICAgICAgY2hhcnQucmVzZXRWYWx1ZXMgPSB0aGlzLmNtZE9wdGlvbnMucmVzZXRWYWx1ZXM7CiAgICAgIH0KCiAgICAgIC8qCiAgICAgICAgQ29uZmlndXJlIEhlbG0gQ0xJIG9wdGlvbnMgZm9yIGRvaW5nIHRoZSBpbnN0YWxsIG9yCiAgICAgICAgdXBncmFkZSBvcGVyYXRpb24uCiAgICAgICovCiAgICAgIHZhciBvdXQgPSB7CiAgICAgICAgY2hhcnRzOiBbY2hhcnRdLAogICAgICAgIG5vSG9va3M6IHRoaXMuY21kT3B0aW9ucy5ob29rcyA9PT0gZmFsc2UsCiAgICAgICAgdGltZW91dDogdGhpcy5jbWRPcHRpb25zLnRpbWVvdXQgPiAwID8gIiIuY29uY2F0KHRoaXMuY21kT3B0aW9ucy50aW1lb3V0LCAicyIpIDogbnVsbCwKICAgICAgICB3YWl0OiB0aGlzLmNtZE9wdGlvbnMud2FpdCA9PT0gdHJ1ZSwKICAgICAgICBuYW1lc3BhY2U6IGZvcm0ubWV0YWRhdGEubmFtZXNwYWNlLAogICAgICAgIHByb2plY3RJZDogdGhpcy5wcm9qZWN0CiAgICAgIH07CgogICAgICAvKgogICAgICAgIENvbmZpZ3VyZSBIZWxtIENMSSBvcHRpb25zIHRoYXQgYXJlIHNwZWNpZmljIHRvCiAgICAgICAgaW5zdGFsbHMgb3Igc3BlY2lmaWMgdG8gdXBncmFkZXMuCiAgICAgICovCiAgICAgIGlmIChpc1VwZ3JhZGUpIHsKICAgICAgICBvdXQuZm9yY2UgPSB0aGlzLmNtZE9wdGlvbnMuZm9yY2UgPT09IHRydWU7CiAgICAgICAgb3V0Lmhpc3RvcnlNYXggPSB0aGlzLmNtZE9wdGlvbnMuaGlzdG9yeU1heDsKICAgICAgICBvdXQuY2xlYW51cE9uRmFpbCA9IHRoaXMuY21kT3B0aW9ucy5jbGVhbnVwT25GYWlsOwogICAgICB9IGVsc2UgewogICAgICAgIG91dC5kaXNhYmxlT3BlbkFQSVZhbGlkYXRpb24gPSB0aGlzLmNtZE9wdGlvbnMub3BlbkFwaSA9PT0gZmFsc2U7CiAgICAgICAgb3V0LnNraXBDUkRzID0gdGhpcy5jbWRPcHRpb25zLmNyZHMgPT09IGZhbHNlOwogICAgICB9CiAgICAgIHZhciBtb3JlID0gW107CiAgICAgIHZhciBhdXRvID0gKCgoX3RoaXMkdmVyc2lvbjUgPSB0aGlzLnZlcnNpb24pID09PSBudWxsIHx8IF90aGlzJHZlcnNpb241ID09PSB2b2lkIDAgfHwgKF90aGlzJHZlcnNpb241ID0gX3RoaXMkdmVyc2lvbjUuYW5ub3RhdGlvbnMpID09PSBudWxsIHx8IF90aGlzJHZlcnNpb241ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyR2ZXJzaW9uNVtDQVRBTE9HX0FOTk9UQVRJT05TLkFVVE9fSU5TVEFMTF9HVktdKSB8fCAnJykuc3BsaXQoL1xzKixccyovKS5maWx0ZXIoZnVuY3Rpb24gKHgpIHsKICAgICAgICByZXR1cm4gISF4OwogICAgICB9KS5yZXZlcnNlKCk7CiAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihhdXRvKSwKICAgICAgICBfc3RlcDsKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgdmFyIGd2ciA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgdmFyIHByb3ZpZGVyID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snY2F0YWxvZy92ZXJzaW9uUHJvdmlkaW5nJ10oewogICAgICAgICAgICBndnI6IGd2ciwKICAgICAgICAgICAgcmVwb05hbWU6IHRoaXMuY2hhcnQucmVwb05hbWUsCiAgICAgICAgICAgIHJlcG9UeXBlOiB0aGlzLmNoYXJ0LnJlcG9UeXBlCiAgICAgICAgICB9KTsKICAgICAgICAgIGlmIChwcm92aWRlcikgewogICAgICAgICAgICBtb3JlLnB1c2gocHJvdmlkZXIpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgZXJyb3JzLnB1c2goIlRoaXMgY2hhcnQgcmVxdWlyZXMgYW5vdGhlciBjaGFydCB0aGF0IHByb3ZpZGVzICIuY29uY2F0KGd2ciwgIiwgYnV0IG5vbmUgd2FzIHdhcyBmb3VuZCIpKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIC8qIENoYXJ0IGN1c3RvbSBVSSBjb21wb25lbnRzIGhhdmUgdGhlIGFiaWxpdHkgdG8gZWRpdCBDUkQgY2hhcnQgdmFsdWVzIGVnIGdhdGVrZWVwZXItY3JkIGhhcyB2YWx1ZXMuZW5hYmxlUnVudGltZURlZmF1bHRTZWNjb21wUHJvZmlsZQogICAgICAgICAgbGlrZSB0aGUgbWFpbiBjaGFydCwgb25seSBDUkQgdmFsdWVzIHRoYXQgZGlmZmVyIGZyb20gZGVmYXVsdHMgc2hvdWxkIGJlIHNlbnQgb24gaW5zdGFsbC91cGdyYWRlCiAgICAgICAgICBDUkRzIHNob3VsZCBiZSBpbnN0YWxsZWQgd2l0aCB0aGUgc2FtZSBnbG9iYWwgdmFsdWVzIGFzIHRoZSBtYWluIGNoYXJ0CiAgICAgICAgKi8KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICB9CiAgICAgIHZhciBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5hdXRvSW5zdGFsbEluZm8pLAogICAgICAgIF9zdGVwMjsKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykgewogICAgICAgICAgdmFyIHZlcnNpb25JbmZvID0gX3N0ZXAyLnZhbHVlOwogICAgICAgICAgLy8gYWxsVmFsdWVzIGFyZSB0aGUgdmFsdWVzIHBvdGVudGlhbGx5IGNoYW5nZWQgaW4gdGhlIGluc3RhbGxhdGlvbiB1aTogYW55IHByZXZpb3VzbHkgY3VzdG9taXplZCB2YWx1ZXMgKyBkZWZhdWx0cwogICAgICAgICAgLy8gdmFsdWVzIGFyZSBkZWZhdWx0IHZhbHVlcyBmcm9tIHRoZSBjaGFydAogICAgICAgICAgdmFyIGFsbFZhbHVlcyA9IHZlcnNpb25JbmZvLmFsbFZhbHVlcywKICAgICAgICAgICAgY3JkVmFsdWVzID0gdmVyc2lvbkluZm8udmFsdWVzOwoKICAgICAgICAgIC8vIG9ubHkgc2F2ZSBjcmQgdmFsdWVzIHRoYXQgZGlmZmVyIGZyb20gdGhlIGRlZmF1bHRzIGRlZmluZWQgaW4gY2hhcnQgdmFsdWVzLnlhbWwKICAgICAgICAgIHZhciBjdXN0b21pemVkQ3JkVmFsdWVzID0gZGlmZihjcmRWYWx1ZXMsIGFsbFZhbHVlcyk7CgogICAgICAgICAgLy8gQ1JEIGdsb2JhbHMgc2hvdWxkIGJlIG92ZXJ3cml0dGVuIGJ5IG1haW4gY2hhcnQgZ2xvYmFscwogICAgICAgICAgLy8gd2Ugd2FudCB0byBhdm9pZCBpbmNsdWRpbmcgZ2xvYmFscyBwcmVzZW50IG9uIGNyZCB2YWx1ZXMgYW5kIG5vdCBtYWluIGNoYXJ0IHZhbHVlcwogICAgICAgICAgLy8gdGhhdCBjb3ZlcnMgdGhlIHNjZW5hcmlvIHdoZXJlIGEgZ2xvYmFsIHZhbHVlIHdhcyBjdXN0b21pemVkIG9uIGEgcHJldmlvdXMgaW5zdGFsbCAoYW5kIHNvIGlzIHByZXNlbnQgaW4gY3JkIGdsb2JhbCB2YWxzKSBhbmQgdGhlIHVzZXIgaGFzIHJldmVydGVkIGl0IHRvIGRlZmF1bHQgb24gdGhpcyB1cGRhdGUgKG5vIGxvbmdlciBwcmVzZW50IGluIG1haW4gY2hhcnQgZ2xvYmFsIHZhbHMpCiAgICAgICAgICB2YXIgY3JkVmFsdWVzVG9JbnN0YWxsID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBjdXN0b21pemVkQ3JkVmFsdWVzKSwge30sIHsKICAgICAgICAgICAgZ2xvYmFsOiB2YWx1ZXMuZ2xvYmFsCiAgICAgICAgICB9KTsKICAgICAgICAgIG91dC5jaGFydHMudW5zaGlmdCh7CiAgICAgICAgICAgIGNoYXJ0TmFtZTogdmVyc2lvbkluZm8uY2hhcnQubmFtZSwKICAgICAgICAgICAgdmVyc2lvbjogdmVyc2lvbkluZm8uY2hhcnQudmVyc2lvbiwKICAgICAgICAgICAgcmVsZWFzZU5hbWU6IHZlcnNpb25JbmZvLmNoYXJ0LmFubm90YXRpb25zW0NBVEFMT0dfQU5OT1RBVElPTlMuUkVMRUFTRV9OQU1FXSB8fCBjaGFydC5uYW1lLAogICAgICAgICAgICBwcm9qZWN0SWQ6IHRoaXMucHJvamVjdCwKICAgICAgICAgICAgdmFsdWVzOiBjcmRWYWx1ZXNUb0luc3RhbGwKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICAvKgogICAgICAgICAgJ21vcmUnIGNvbnRhaW5zIGFkZGl0aW9uYWwKICAgICAgICAgIGNoYXJ0cyB0aGF0IG1heSBub3QgYmUgQ1JEIGNoYXJ0cyBidXQgYXJlIGFsc28gbWVhbnQgdG8gYmUgaW5zdGFsbGVkIGF0CiAgICAgICAgICB0aGUgc2FtZSB0aW1lLgogICAgICAgICovCiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvcjIuZigpOwogICAgICB9CiAgICAgIGZvciAodmFyIF9pID0gMCwgX21vcmUgPSBtb3JlOyBfaSA8IF9tb3JlLmxlbmd0aDsgX2krKykgewogICAgICAgIHZhciBkZXBlbmRlbmN5ID0gX21vcmVbX2ldOwogICAgICAgIG91dC5jaGFydHMudW5zaGlmdCh7CiAgICAgICAgICBjaGFydE5hbWU6IGRlcGVuZGVuY3kubmFtZSwKICAgICAgICAgIHZlcnNpb246IGRlcGVuZGVuY3kudmVyc2lvbiwKICAgICAgICAgIHJlbGVhc2VOYW1lOiBkZXBlbmRlbmN5LmFubm90YXRpb25zW0NBVEFMT0dfQU5OT1RBVElPTlMuUkVMRUFTRV9OQU1FXSB8fCBkZXBlbmRlbmN5Lm5hbWUsCiAgICAgICAgICBwcm9qZWN0SWQ6IHRoaXMucHJvamVjdCwKICAgICAgICAgIHZhbHVlczogdGhpcy5hZGRHbG9iYWxWYWx1ZXNUbyh7CiAgICAgICAgICAgIGdsb2JhbDogdmFsdWVzLmdsb2JhbAogICAgICAgICAgfSksCiAgICAgICAgICBhbm5vdGF0aW9uczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtaWdyYXRlZEFubm90YXRpb25zKSwge30sIF9kZWZpbmVQcm9wZXJ0eShfZGVmaW5lUHJvcGVydHkoe30sIENBVEFMT0dfQU5OT1RBVElPTlMuU09VUkNFX1JFUE9fVFlQRSwgZGVwZW5kZW5jeS5yZXBvVHlwZSksIENBVEFMT0dfQU5OT1RBVElPTlMuU09VUkNFX1JFUE9fTkFNRSwgZGVwZW5kZW5jeS5yZXBvTmFtZSkpCiAgICAgICAgfSk7CiAgICAgIH0KICAgICAgcmV0dXJuIHsKICAgICAgICBlcnJvcnM6IGVycm9ycywKICAgICAgICBpbnB1dDogb3V0CiAgICAgIH07CiAgICB9LAogICAgdGFiQ2hhbmdlZDogZnVuY3Rpb24gdGFiQ2hhbmdlZCgpIHsKICAgICAgd2luZG93LnNjcm9sbFRvcCA9IDA7CiAgICB9LAogICAgdXBkYXRlU3RlcE9uZVJlYWR5OiBmdW5jdGlvbiB1cGRhdGVTdGVwT25lUmVhZHkoKSB7CiAgICAgIHZhciBva1JlcXVpcmVzID0gIXRoaXMucmVxdWlyZXMubGVuZ3RoOwogICAgICB2YXIgb2tDaGFydCA9ICEhdGhpcy5jaGFydDsKICAgICAgdGhpcy5zdGVwc1swXS5yZWFkeSA9IG9rUmVxdWlyZXMgJiYgb2tDaGFydDsKICAgIH0sCiAgICB1cGRhdGVTdGVwVHdvUmVhZHk6IGZ1bmN0aW9uIHVwZGF0ZVN0ZXBUd29SZWFkeSh1cGRhdGUpIHsKICAgICAgdGhpcy51cGRhdGVTdGVwKCdoZWxtVmFsdWVzJywgewogICAgICAgIHJlYWR5OiB1cGRhdGUKICAgICAgfSk7CiAgICB9LAogICAgZ2V0T3B0aW9uTGFiZWw6IGZ1bmN0aW9uIGdldE9wdGlvbkxhYmVsKG9wdCkgewogICAgICByZXR1cm4gb3B0ID09PSBudWxsIHx8IG9wdCA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0LmNoYXJ0TmFtZURpc3BsYXk7CiAgICB9LAogICAgc2hvd1JlYWRtZVdpbmRvdzogZnVuY3Rpb24gc2hvd1JlYWRtZVdpbmRvdygpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3dtL29wZW4nLCB7CiAgICAgICAgaWQ6IHRoaXMucmVhZG1lV2luZG93TmFtZSwKICAgICAgICBsYWJlbDogdGhpcy5yZWFkbWVXaW5kb3dOYW1lLAogICAgICAgIGljb246ICdmaWxlJywKICAgICAgICBjb21wb25lbnQ6ICdDaGFydFJlYWRtZScsCiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIHZlcnNpb25JbmZvOiB0aGlzLnZlcnNpb25JbmZvCiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgcm9vdDogdHJ1ZQogICAgICB9KTsKICAgICAgdGhpcy5zaG93blJlYWRtZVdpbmRvd3MucHVzaCh0aGlzLnJlYWRtZVdpbmRvd05hbWUpOwogICAgfSwKICAgIHVwZGF0ZVN0ZXA6IGZ1bmN0aW9uIHVwZGF0ZVN0ZXAoc3RlcE5hbWUsIHVwZGF0ZSkgewogICAgICB2YXIgc3RlcCA9IHRoaXMuc3RlcHMuZmluZChmdW5jdGlvbiAoc3RlcCkgewogICAgICAgIHJldHVybiBzdGVwLm5hbWUgPT09IHN0ZXBOYW1lOwogICAgICB9KTsKICAgICAgaWYgKHN0ZXApIHsKICAgICAgICBmb3IgKHZhciBwcm9wIGluIHVwZGF0ZSkgewogICAgICAgICAgVnVlLnNldChzdGVwLCBwcm9wLCB1cGRhdGVbcHJvcF0pOwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"names":["jsyaml","merge","isEqual","mapPref","DIFF","mapFeature","MULTI_CLUSTER","LEGACY","mapGetters","Banner","ButtonGroup","ChartReadme","Checkbox","LabeledSelect","LabeledInput","LabeledTooltip","LazyImage","Loading","NameNsDescription","ResourceCancelModal","Questions","Tabbed","UnitInput","YamlEditor","EDITOR_MODES","Wizard","TypeDescription","ChartMixin","ChildHook","BEFORE_SAVE_HOOKS","AFTER_SAVE_HOOKS","CATALOG","MANAGEMENT","DEFAULT_WORKSPACE","CAPI","CHART","FROM_CLUSTER","FROM_TOOLS","HIDE_SIDE_NAV","NAMESPACE","REPO","REPO_TYPE","VERSION","_FLAGGED","CATALOG_ANNOTATIONS","PROJECT","exceptionToErrorsArray","clone","diff","get","set","ignoreVariables","findBy","insertAt","Vue","saferDump","LINUX","WINDOWS","SETTING","VALUES_STATE","FORM","YAML","isPlainLayout","query","Object","keys","includes","name","layout","context","components","mixins","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$chart","_this$existing2","_this$existing","_this$chart2","ns","_ns$metadata$annotati","project","_this$versionInfo","_this$versionInfo2","_this$version","userValues","_this$existing$spec","_this$chartValues","_this$chartValues2","_this$chartValues3","_this$chartValues4","existingRegistry","wrap","_callee$","_context","prev","next","errors","fetchChart","t0","console","warn","fetchAutoInstallInfo","t1","showCustomRegistry","getClusterRegistry","clusterRegistry","sent","t2","getGlobalRegistry","globalRegistry","t3","defaultRegistrySetting","$store","dispatch","type","id","SERVER_URL","serverUrlSetting","t4","error","existing","forceNamespace","metadata","namespace","nameDisabled","$route","chart","targetNamespace","appNamespace","deployedAsLegacy","t5","legacyApp","t6","deployedAsMultiCluster","t7","mcapp","t8","getters","spec","appName","value","t9","abrupt","targetName","description","customCmdOpts","annotations","replace","t10","versionName","version","loadValuesComponent","loadChartSteps","loadedVersion","key","showingYaml","applyYamlToValues","loadedVersionValues","chartValues","values","removeGlobalValuesFrom","versionInfo","global","systemDefaultRegistry","cattle","customRegistrySetting","showCustomRegistryInput","valuesYaml","originalYamlValues","updateStepOneReady","preFormYamlOption","valuesComponent","hasQuestions","migratedApp","MIGRATED","stop","data","defaultCmdOpts","cleanupOnFail","crds","hooks","force","resetValues","openApi","wait","timeout","historyMax","previousYamlValues","mode","_objectSpread","autoInstallInfo","formYamlOption","showDiff","showValuesComponent","showQuestions","showSlideIn","shownReadmeWindows","componentHasTabs","showCommandStep","isNamespaceNew","stepBasic","label","t","subtext","descriptionKey","ready","weight","stepClusterTplVersion","stepValues","stepCommands","customSteps","legacyDefs","legacy","mcm","computed","inStore","features","namespaceIsNew","_this$value","all","want","showProject","isRancher","projectOpts","cluster","currentCluster","projects","out","filter","x","clusterName","map","nameDisplay","unshift","concat","charts","_this$existing3","_this2","current","matchingChart","chartName","hidden","showHidden","deprecated","showDeprecated","last","i","length","repoName","kind","repoNameDisplay","disabled","showSelectVersionOrChart","showNameEditor","showVersions","_this$chart3","versions","_this$value2","editorMode","DIFF_CODE","EDIT_CODE","showingYamlDiff","formYamlOptions","options","push","labelKey","dump","yamlDiffModeOptions","stepperName","_this$existing4","_this$chart4","chartNameDisplay","stepperSubtext","currentVersion","targetVersion","readmeWindowName","_this$version2","showingReadmeWindow","diffMode","step1Description","steps","find","s","action","step2Description","step3Description","_this$version3","TYPE","_CLUSTER_TPL","_this$filteredVersion","filteredVersions","apply","_toConsumableArray","sort","a","b","cmdOptions","namespaceNewAllowed","legacyEnabled","legacyFeatureRoute","params","product","resource","legacyAppRoute","windowsIncompatible","_this$chart5","_this$versionInfo3","incompatibleVersion","PERMITTED_OS","_this$versionInfo4","_global$cattle","undefined","watch","$routeQuery","neu","old","$fetch","valueMetadataNamespace","_ns$metadata$annotati2","$refs","cancelModal","show","updateValue","requires","warnings","mounted","_this3","_callee2","_callee2$","_context2","window","scrollTop","beforeDestroy","_this4","forEach","root","methods","_this5","_callee3","hasPermissionToSeeProvCluster","_provCluster","_provCluster2","mgmCluster","provClusterId","provCluster","_provCluster$agentCon","_mgmCluster$spec","rke1Registries","defaultRegistry","_callee3$","_context3","RANCHER_CLUSTER","isRke2","agentConfig","isRke1","rancherKubernetesEngineConfig","privateRegistries","registry","isDefault","url","_this6","_callee4","_callee4$","_context4","SYSTEM_DEFAULT_REGISTRY","yaml","_this7","_callee5","_this7$version","component","hasChartComponent","_loaded$default","loaded","_callee5$","_context5","COMPONENT","default","hasTabs","_this8","_callee6","_this8$version","_callee6$","_context6","Promise","cs","loadChartStep","customStep","_this9","_callee7","_loaded$default2","_loaded$default3","_loaded$default4","withFallBack","_callee7$","_context7","loading","selectChart","$router","applyQuery","_defineProperty","repoType","cancel","done","clusterToolsLocation","clustersLocation","chartLocation","appLocation","finish","btnCb","_this10","_callee8","isUpgrade","_this10$actionInput","input","res","operationId","_callee8$","_context8","applyHooks","actionInput","repo","doAction","operationNamespace","operationName","waitForOperation","OPERATION","operation","waitForLink","openLogs","addGlobalValuesTo","_projects$find","_this$serverUrlSettin","_cluster$spec","_cluster$spec2","systemProjectId","p","_p$spec","displayName","split","serverUrl","isWindows","workerOSs","pathPrefix","prefixPath","windowsPathPrefix","winPrefixPath","setIfNotSet","obj","val","_this$serverUrlSettin2","_cluster$spec3","_cluster$spec4","_values$global","_values$global2","_values$global3","deleteIfEqual","windows","load","err","_this$versionInfo5","_this$version4","_this$version5","fromChart","_this$applyYamlToValu","yamlErrors","form","JSON","parse","stringify","migratedAnnotations","releaseName","SOURCE_REPO_TYPE","SOURCE_REPO_NAME","noHooks","projectId","disableOpenAPIValidation","skipCRDs","more","auto","AUTO_INSTALL_GVK","reverse","_iterator","_createForOfIteratorHelper","_step","n","gvr","provider","e","f","_iterator2","_step2","allValues","crdValues","customizedCrdValues","crdValuesToInstall","RELEASE_NAME","_i","_more","dependency","tabChanged","okRequires","okChart","updateStepTwoReady","update","updateStep","getOptionLabel","opt","showReadmeWindow","icon","attrs","stepName","step","prop"],"sources":["node_modules/@rancher/shell/pages/c/_cluster/apps/charts/install.vue"],"sourcesContent":["<script>\nimport jsyaml from 'js-yaml';\nimport merge from 'lodash/merge';\nimport isEqual from 'lodash/isEqual';\nimport { mapPref, DIFF } from '@shell/store/prefs';\nimport { mapFeature, MULTI_CLUSTER, LEGACY } from '@shell/store/features';\nimport { mapGetters } from 'vuex';\nimport { Banner } from '@components/Banner';\nimport ButtonGroup from '@shell/components/ButtonGroup';\nimport ChartReadme from '@shell/components/ChartReadme';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { LabeledTooltip } from '@components/LabeledTooltip';\nimport LazyImage from '@shell/components/LazyImage';\nimport Loading from '@shell/components/Loading';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport ResourceCancelModal from '@shell/components/ResourceCancelModal';\nimport Questions from '@shell/components/Questions';\nimport Tabbed from '@shell/components/Tabbed';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport YamlEditor, { EDITOR_MODES } from '@shell/components/YamlEditor';\nimport Wizard from '@shell/components/Wizard';\nimport TypeDescription from '@shell/components/TypeDescription';\nimport ChartMixin from '@shell/mixins/chart';\nimport ChildHook, { BEFORE_SAVE_HOOKS, AFTER_SAVE_HOOKS } from '@shell/mixins/child-hook';\nimport { CATALOG, MANAGEMENT, DEFAULT_WORKSPACE, CAPI } from '@shell/config/types';\nimport {\n  CHART, FROM_CLUSTER, FROM_TOOLS, HIDE_SIDE_NAV, NAMESPACE, REPO, REPO_TYPE, VERSION, _FLAGGED\n} from '@shell/config/query-params';\nimport { CATALOG as CATALOG_ANNOTATIONS, PROJECT } from '@shell/config/labels-annotations';\n\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport { clone, diff, get, set } from '@shell/utils/object';\nimport { ignoreVariables } from './install.helpers';\nimport { findBy, insertAt } from '@shell/utils/array';\nimport Vue from 'vue';\nimport { saferDump } from '@shell/utils/create-yaml';\nimport { LINUX, WINDOWS } from '@shell/store/catalog';\nimport { SETTING } from '@shell/config/settings';\n\nconst VALUES_STATE = {\n  FORM: 'FORM',\n  YAML: 'YAML',\n  DIFF: 'DIFF'\n};\n\nfunction isPlainLayout(query) {\n  return Object.keys(query).includes(HIDE_SIDE_NAV);\n}\n\nexport default {\n  name: 'Install',\n\n  layout(context) {\n    return isPlainLayout(context.query) ? 'plain' : '';\n  },\n\n  components: {\n    Banner,\n    ButtonGroup,\n    ChartReadme,\n    Checkbox,\n    LabeledInput,\n    LabeledSelect,\n    LabeledTooltip,\n    LazyImage,\n    Loading,\n    NameNsDescription,\n    ResourceCancelModal,\n    Questions,\n    Tabbed,\n    UnitInput,\n    YamlEditor,\n    Wizard,\n    TypeDescription\n  },\n\n  mixins: [\n    ChildHook,\n    ChartMixin\n  ],\n\n  async fetch() {\n    this.errors = [];\n    // IMPORTANT! Any exception thrown before this.value is set will result in an empty page\n\n    /*\n      fetchChart is defined in shell/mixins. It first checks the URL\n      query for an app name and namespace. It uses those values to check\n      for a catalog app resource. If found, it sets the form to edit\n      mode. If not, it sets the form to create mode.\n\n      If the app and app namespace are not provided in the query,\n      it checks for target name and namespace values defined in the\n      Helm chart itself.\n    */\n    try {\n      await this.fetchChart();\n    } catch (e) {\n      console.warn('Unable to fetch chart: ', e); // eslint-disable-line no-console\n    }\n\n    try {\n      await this.fetchAutoInstallInfo();\n    } catch (e) {\n      console.warn('Unable to determine if other charts require install: ', e); // eslint-disable-line no-console\n    }\n\n    // If the chart doesn't contain system `systemDefaultRegistry` properties there's no point applying them\n    if (this.showCustomRegistry) {\n      // Note: Cluster scoped registry is only supported for node driver clusters\n      try {\n        this.clusterRegistry = await this.getClusterRegistry();\n      } catch (e) {\n        console.warn('Unable to get cluster registry: ', e); // eslint-disable-line no-console\n      }\n\n      try {\n        this.globalRegistry = await this.getGlobalRegistry();\n      } catch (e) {\n        console.warn('Unable to get global registry: ', e); // eslint-disable-line no-console\n      }\n      this.defaultRegistrySetting = this.clusterRegistry || this.globalRegistry;\n    }\n\n    try {\n      this.serverUrlSetting = await this.$store.dispatch('management/find', {\n        type: MANAGEMENT.SETTING,\n        id:   SETTING.SERVER_URL,\n      });\n    } catch (e) {\n      console.error('Unable to fetch `server-url` setting: ', e); // eslint-disable-line no-console\n    }\n\n    /*\n      Figure out the namespace where the chart is\n      being installed or upgraded.\n    */\n    if ( this.existing ) {\n      /*\n      If the Helm chart is already installed,\n      use the existing namespace by default.\n    */\n\n      this.forceNamespace = this.existing.metadata.namespace;\n      this.nameDisabled = true;\n    } else if (this.$route.query[FROM_CLUSTER] === _FLAGGED) {\n      /* For Fleet, use the fleet-default namespace. */\n      this.forceNamespace = DEFAULT_WORKSPACE;\n    } else if ( this.chart?.targetNamespace ) {\n      /* If a target namespace is defined in the chart,\n      set the target namespace as default. */\n      this.forceNamespace = this.chart.targetNamespace;\n    } else if ( this.query.appNamespace ) {\n      /* If a namespace is defined in the URL query,\n       use that namespace as default. */\n      this.forceNamespace = this.query.appNamespace;\n    } else {\n      this.forceNamespace = null;\n    }\n\n    /* Check if the app is deprecated. */\n    try {\n      this.legacyApp = this.existing ? await this.existing.deployedAsLegacy() : false;\n    } catch (e) {\n      this.legacyApp = false;\n      console.warn('Unable to determine if existing install is a legacy app: ', e); // eslint-disable-line no-console\n    }\n\n    /* Check if the app is a multicluster deprecated app.\n    (Multicluster apps were replaced by Fleet.) */\n\n    try {\n      this.mcapp = this.existing ? await this.existing.deployedAsMultiCluster() : false;\n    } catch (e) {\n      this.mcapp = false;\n      console.warn('Unable to determine if existing install is a mc app: ', e); // eslint-disable-line no-console\n    }\n\n    /* The form state is intialized as a chartInstallAction resource. */\n    try {\n      this.value = await this.$store.dispatch('cluster/create', {\n        type:     'chartInstallAction',\n        metadata: {\n          namespace: this.forceNamespace || this.$store.getters['defaultNamespace'],\n          name:      this.existing?.spec?.name || this.query.appName || '',\n        }\n      });\n    } catch (e) {\n      console.error('Unable to create object of type `chartInstallAction`: ', e); // eslint-disable-line no-console\n\n      // Nothing's going to work without a `value`. See https://github.com/rancher/dashboard/issues/9452 to handle this and other catches.\n      return;\n    }\n\n    /* Logic for when the Helm chart is not already installed */\n    if ( !this.existing) {\n      /*\n        The target name is used for Git repos for Fleet.\n        The target name indicates the name of the cluster\n        group that the chart is meant to be installed in.\n      */\n      if ( this.chart?.targetName ) {\n        /*\n          Set the name of the chartInstallAction\n          to the name of the cluster group\n          where the chart should be installed.\n        */\n        this.value.metadata.name = this.chart.targetName;\n        this.nameDisabled = true;\n      } else if ( this.query.appName ) {\n        this.value.metadata.name = this.query.appName;\n      } else {\n        this.nameDisabled = false;\n      }\n\n      if ( this.query.description ) {\n        this.customCmdOpts.description = this.query.description;\n      }\n    } /* End of logic for when chart is already installed */\n\n    /*\n      Logic for what to do if the user is installing\n      the Helm chart for the first time and a default\n      namespace has been set.\n    */\n    if (this.forceNamespace && !this.existing) {\n      let ns;\n\n      /*\n        Before moving forward, check to make sure the\n        default namespace exists and the logged-in user\n        has permission to see it.\n      */\n      try {\n        ns = await this.$store.dispatch('cluster/find', { type: NAMESPACE, id: this.forceNamespace });\n        const project = ns.metadata.annotations?.[PROJECT];\n\n        if (project) {\n          this.project = project.replace(':', '/');\n        }\n      } catch {}\n    }\n\n    /* If no chart by the given app name and namespace\n     can be found, or if no version is found, do nothing. */\n    if ( !this.chart || !this.query.versionName) {\n      return;\n    }\n\n    if ( this.version ) {\n      /*\n        Check if the Helm chart has provided the name\n        of a Vue component to use for configuring\n        chart values. If so, load that component.\n\n        This will set this.valuesComponent,\n        this.componentHasTabs and this.showValuesComponent.\n      */\n      await this.loadValuesComponent();\n    }\n\n    /*\n      Check if the Helm chart has indicated\n      that the user should fill out the chart values\n      through a wizard-style workflow. If so, load\n      the chart steps.\n    */\n    await this.loadChartSteps();\n\n    /*\n      this.loadedVersion will only be true if you select a non-defalut\n      option from the \"Version\" dropdown menu in Apps & Marketplace\n      when updating a previously installed app.\n    */\n    if ( !this.loadedVersion || this.loadedVersion !== this.version.key ) {\n      let userValues;\n\n      /*\n        When you select a version, a new chart is loaded. Then\n        Rancher anticipates that you probably want to port all of your\n        previously customized, non-default values from the old chart\n        version to the new chart version, so it applies the previous\n        chart's customization to the new chart values before\n        you see the values form on the next page in the workflow.\n      */\n      if ( this.loadedVersion ) {\n        if ( this.showingYaml ) {\n          this.applyYamlToValues();\n        }\n        /*\n          this.loadedVersionValues is taken from versionInfo,\n          which contains everything there is to know about a specific\n          version of a Helm chart, including all chart values,\n          chart metadata, a short app README and a more\n          version-specific README called the chart README.\n\n          Here we assume that any difference between the values in\n          two different Helm chart versions is a \"user value,\" or\n          a user-selected customization.\n        */\n        userValues = diff(this.loadedVersionValues, this.chartValues);\n      } else if ( this.existing ) {\n        /* For an already installed app, use the values from the previous install. */\n        userValues = clone(this.existing.spec?.values || {});\n      } else {\n        /* For an new app, start empty. */\n        userValues = {};\n      }\n\n      /*\n        Remove global values if they are identical to\n        the currently available information about the cluster\n        and Rancher settings.\n\n        Immediately before the Helm chart is installed or\n        upgraded, the global values are re-added.\n      */\n      this.removeGlobalValuesFrom(userValues);\n\n      /*\n        The merge() method is used to merge two or more objects\n        starting with the left-most to the right-most to create a\n        parent mapping object. When two keys are the same, the\n        generated object will have value for the rightmost key.\n        In this case, any values in userValues override any\n        matching values in versionInfo.\n      */\n      this.chartValues = merge(merge({}, this.versionInfo?.values || {}), userValues);\n\n      if (this.showCustomRegistry) {\n        /**\n         * The input to configure the registry should never be\n         * shown for third-party charts, which don't have Rancher\n         * global values.\n         */\n        const existingRegistry = this.chartValues?.global?.systemDefaultRegistry || this.chartValues?.global?.cattle?.systemDefaultRegistry;\n\n        delete this.chartValues?.global?.systemDefaultRegistry;\n        delete this.chartValues?.global?.cattle?.systemDefaultRegistry;\n\n        this.customRegistrySetting = existingRegistry || this.defaultRegistrySetting;\n        this.showCustomRegistryInput = !!this.customRegistrySetting;\n      }\n\n      /* Serializes an object as a YAML document */\n      this.valuesYaml = saferDump(this.chartValues);\n\n      /* For YAML diff */\n      if ( !this.loadedVersion ) {\n        this.originalYamlValues = this.valuesYaml;\n      }\n\n      this.loadedVersionValues = this.versionInfo?.values || {};\n      this.loadedVersion = this.version?.key;\n    }\n\n    /* Check if chart exists and if required values exist */\n    this.updateStepOneReady();\n\n    this.preFormYamlOption = this.valuesComponent || this.hasQuestions ? VALUES_STATE.FORM : VALUES_STATE.YAML;\n\n    /* Look for annotation to say this app is a legacy migrated app (we look in either place for now) */\n    this.migratedApp = (this.existing?.spec?.chart?.metadata?.annotations?.[CATALOG_ANNOTATIONS.MIGRATED] === 'true');\n  },\n\n  data() {\n    /* Helm CLI options that are not persisted on the back end,\n    but are used for the final install/upgrade operation. */\n    const defaultCmdOpts = {\n      cleanupOnFail: false,\n      crds:          true,\n      hooks:         true,\n      force:         false,\n      resetValues:   false,\n      openApi:       true,\n      wait:          true,\n      timeout:       600,\n      historyMax:    5,\n    };\n\n    return {\n      defaultRegistrySetting: '',\n      customRegistrySetting:  '',\n      serverUrlSetting:       null,\n      chartValues:            null,\n      clusterRegistry:        '',\n      originalYamlValues:     null,\n      previousYamlValues:     null,\n      errors:                 null,\n      existing:               null,\n      globalRegistry:         '',\n      forceNamespace:         null,\n      loadedVersion:          null,\n      loadedVersionValues:    null,\n      legacyApp:              null,\n      mcapp:                  null,\n      mode:                   null,\n      value:                  null,\n      valuesComponent:        null,\n      valuesYaml:             '',\n      project:                null,\n      migratedApp:            false,\n      defaultCmdOpts,\n      customCmdOpts:          { ...defaultCmdOpts },\n      autoInstallInfo:        [],\n\n      nameDisabled: false,\n\n      preFormYamlOption:       VALUES_STATE.YAML,\n      formYamlOption:          VALUES_STATE.YAML,\n      showDiff:                false,\n      showValuesComponent:     true,\n      showQuestions:           true,\n      showSlideIn:             false,\n      shownReadmeWindows:      [],\n      componentHasTabs:        false,\n      showCommandStep:         false,\n      showCustomRegistryInput: false,\n      isNamespaceNew:          false,\n\n      stepBasic: {\n        name:           'basics',\n        label:          this.t('catalog.install.steps.basics.label'),\n        subtext:        this.t('catalog.install.steps.basics.subtext'),\n        descriptionKey: 'catalog.install.steps.basics.description',\n        ready:          true,\n        weight:         30\n      },\n      stepClusterTplVersion: {\n        name:           'clusterTplVersion',\n        label:          this.t('catalog.install.steps.clusterTplVersion.label'),\n        subtext:        this.t('catalog.install.steps.clusterTplVersion.subtext'),\n        descriptionKey: 'catalog.install.steps.helmValues.description',\n        ready:          true,\n        weight:         30\n      },\n      stepValues: {\n        name:           'helmValues',\n        label:          this.t('catalog.install.steps.helmValues.label'),\n        subtext:        this.t('catalog.install.steps.helmValues.subtext'),\n        descriptionKey: 'catalog.install.steps.helmValues.description',\n        ready:          true,\n        weight:         20\n      },\n      stepCommands: {\n        name:           'helmCli',\n        label:          this.t('catalog.install.steps.helmCli.label'),\n        subtext:        this.t('catalog.install.steps.helmCli.subtext'),\n        descriptionKey: 'catalog.install.steps.helmCli.description',\n        ready:          true,\n        weight:         10\n      },\n\n      customSteps: [\n\n      ],\n\n      isPlainLayout: isPlainLayout(this.$route.query),\n\n      legacyDefs: {\n        legacy: this.t('catalog.install.error.legacy.category.legacy'),\n        mcm:    this.t('catalog.install.error.legacy.category.mcm')\n      }\n    };\n  },\n\n  computed: {\n    ...mapGetters({ inStore: 'catalog/inStore', features: 'features/get' }),\n    mcm: mapFeature(MULTI_CLUSTER),\n\n    /**\n     * Return list of variables to filter chart questions\n     */\n    ignoreVariables() {\n      return ignoreVariables(this.versionInfo);\n    },\n\n    namespaceIsNew() {\n      const all = this.$store.getters['cluster/all'](NAMESPACE);\n      const want = this.value?.metadata?.namespace;\n\n      if ( !want ) {\n        return false;\n      }\n\n      return !findBy(all, 'id', want);\n    },\n\n    showProject() {\n      return this.isRancher && !this.existing && this.forceNamespace;\n    },\n\n    projectOpts() {\n      const cluster = this.currentCluster;\n      const projects = this.$store.getters['management/all'](MANAGEMENT.PROJECT);\n\n      const out = projects.filter((x) => x.spec.clusterName === cluster?.id).map((project) => {\n        return {\n          id:    project.id,\n          label: project.nameDisplay,\n          value: project.id\n        };\n      });\n\n      out.unshift({\n        id:    'none',\n        label: `(${ this.t('generic.none') })`,\n        value: '',\n      });\n\n      return out;\n    },\n\n    charts() {\n      const current = this.existing?.matchingChart(true);\n\n      const out = this.$store.getters['catalog/charts'].filter((x) => {\n        if ( x.key === current?.key || x.chartName === current?.chartName ) {\n          return true;\n        }\n\n        if ( x.hidden && !this.showHidden ) {\n          return false;\n        }\n\n        if ( x.deprecated && !this.showDeprecated ) {\n          return false;\n        }\n\n        return true;\n      });\n\n      let last = '';\n\n      for ( let i = 0 ; i < out.length ; i++ ) {\n        if ( out[i].repoName !== last ) {\n          last = out[i].repoName;\n          insertAt(out, i, {\n            kind:     'label',\n            label:    out[i].repoNameDisplay,\n            disabled: true\n          });\n          i++;\n        }\n      }\n\n      return out;\n    },\n\n    showSelectVersionOrChart() {\n      // Allow the user to choose a version if the app exists OR they've come from tools\n      return this.existing || (FROM_TOOLS in this.$route.query);\n    },\n\n    showNameEditor() {\n      return !this.nameDisabled || !this.forceNamespace;\n    },\n\n    showVersions() {\n      return this.chart?.versions.length > 1;\n    },\n\n    targetNamespace() {\n      if ( this.forceNamespace ) {\n        return this.forceNamespace;\n      } else if ( this.value?.metadata.namespace ) {\n        return this.value.metadata.namespace;\n      }\n\n      return 'default';\n    },\n\n    editorMode() {\n      if ( this.showDiff ) {\n        return EDITOR_MODES.DIFF_CODE;\n      }\n\n      return EDITOR_MODES.EDIT_CODE;\n    },\n\n    showingYaml() {\n      return this.formYamlOption === VALUES_STATE.YAML || ( !this.valuesComponent && !this.hasQuestions );\n    },\n\n    showingYamlDiff() {\n      return this.formYamlOption === VALUES_STATE.DIFF;\n    },\n\n    formYamlOptions() {\n      const options = [];\n\n      if (this.valuesComponent || this.hasQuestions) {\n        options.push({\n          labelKey: 'catalog.install.section.chartOptions',\n          value:    VALUES_STATE.FORM,\n        });\n      }\n      options.push({\n        labelKey: 'catalog.install.section.valuesYaml',\n        value:    VALUES_STATE.YAML,\n      }, {\n        labelKey: 'catalog.install.section.diff',\n        value:    VALUES_STATE.DIFF,\n        // === quite obviously shouldn't work, but has been and still does. When the magic breaks address with heavier stringify/jsyaml.dump\n        disabled: this.formYamlOption === VALUES_STATE.FORM ? this.originalYamlValues === jsyaml.dump(this.chartValues || {}) : this.originalYamlValues === this.valuesYaml,\n      });\n\n      return options;\n    },\n\n    yamlDiffModeOptions() {\n      return [{\n        labelKey: 'resourceYaml.buttons.unified',\n        value:    'unified',\n      }, {\n        labelKey: 'resourceYaml.buttons.split',\n        value:    'split',\n      }];\n    },\n\n    stepperName() {\n      return this.existing?.nameDisplay || this.chart?.chartNameDisplay;\n    },\n\n    stepperSubtext() {\n      return this.existing && this.currentVersion !== this.targetVersion ? `${ this.currentVersion } > ${ this.targetVersion }` : this.targetVersion;\n    },\n\n    readmeWindowName() {\n      // Version can change, so allow multiple WM tabs for different versions\n      return `${ this.stepperName }-${ this.version?.version }`;\n    },\n\n    showingReadmeWindow() {\n      return !!this.$store.getters['wm/byId'](this.readmeWindowName);\n    },\n\n    diffMode: mapPref(DIFF),\n\n    step1Description() {\n      const descriptionKey = this.steps.find((s) => s.name === 'basics').descriptionKey;\n\n      return this.$store.getters['i18n/withFallback'](descriptionKey, { action: this.action, existing: !!this.existing }, '');\n    },\n\n    step2Description() {\n      const descriptionKey = this.steps.find((s) => s.name === 'helmValues').descriptionKey;\n\n      return this.$store.getters['i18n/withFallback'](descriptionKey, { action: this.action, existing: !!this.existing }, '');\n    },\n\n    step3Description() {\n      const descriptionKey = this.steps.find((s) => s.name === 'helmCli').descriptionKey;\n\n      return this.$store.getters['i18n/withFallback'](descriptionKey, { action: this.action, existing: !!this.existing }, '');\n    },\n\n    steps() {\n      const steps = [];\n\n      const type = this.version?.annotations?.[CATALOG_ANNOTATIONS.TYPE];\n\n      if ( type === CATALOG_ANNOTATIONS._CLUSTER_TPL ) {\n        if (this.filteredVersions?.length > 1) {\n          steps.push(this.stepClusterTplVersion);\n        }\n        steps.push({\n          ...this.stepValues,\n          label:          this.t('catalog.install.steps.clusterTplValues.label'),\n          subtext:        this.t('catalog.install.steps.clusterTplValues.subtext'),\n          descriptionKey: 'catalog.install.steps.clusterTplValues.description',\n        });\n      } else {\n        steps.push(\n          this.stepBasic,\n          this.stepValues,\n          ...this.customSteps\n        );\n      }\n\n      if (this.showCommandStep) {\n        steps.push(this.stepCommands);\n      }\n\n      return steps.sort((a, b) => (b.weight || 0) - (a.weight || 0));\n    },\n\n    cmdOptions() {\n      return this.showCommandStep ? this.customCmdOpts : this.defaultCmdOpts;\n    },\n\n    namespaceNewAllowed() {\n      return !this.existing && !this.forceNamespace;\n    },\n\n    legacyEnabled() {\n      // Check for the legacy feature flag in the settings\n      return this.features(LEGACY);\n    },\n\n    legacyFeatureRoute() {\n      return {\n        name:   'c-cluster-product-resource',\n        params: { product: 'settings', resource: 'management.cattle.io.feature' }\n      };\n    },\n\n    legacyAppRoute() {\n      return { name: 'c-cluster-legacy-project' };\n    },\n\n    windowsIncompatible() {\n      if (this.chart?.windowsIncompatible) {\n        return this.t('catalog.charts.windowsIncompatible');\n      }\n      if (this.versionInfo) {\n        const incompatibleVersion = !(this.versionInfo?.chart?.annotations?.[CATALOG_ANNOTATIONS.PERMITTED_OS] || LINUX).includes('windows');\n\n        if (incompatibleVersion && !this.chart.windowsIncompatible) {\n          return this.t('catalog.charts.versionWindowsIncompatible');\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Check if the chart contains `systemDefaultRegistry` properties.\n     * If not we shouldn't apply the setting, because if the option\n     * is exposed for third-party Helm charts, it confuses users because\n     * it shows a private registry setting that is never used\n     * by the chart they are installing. If not hidden, the setting\n     * does nothing, and if the user changes it, it will look like\n     * there is a bug in the UI when it doesn't work, because UI is\n     * exposing a feature that the chart does not have.\n     */\n    showCustomRegistry() {\n      const global = this.versionInfo?.values?.global || {};\n\n      return global.systemDefaultRegistry !== undefined || global.cattle?.systemDefaultRegistry !== undefined;\n    },\n\n  },\n\n  watch: {\n    '$route.query'(neu, old) {\n      if ( !isEqual(neu, old) ) {\n        this.$fetch();\n        this.showSlideIn = false;\n      }\n    },\n\n    'value.metadata.namespace'(neu, old) {\n      if (neu) {\n        const ns = this.$store.getters['cluster/byId'](NAMESPACE, this.value.metadata.namespace);\n\n        const project = ns?.metadata.annotations?.[PROJECT];\n\n        if (project) {\n          this.project = project.replace(':', '/');\n        }\n      }\n    },\n\n    preFormYamlOption(neu, old) {\n      if (neu === VALUES_STATE.FORM && this.valuesYaml !== this.previousYamlValues && !!this.$refs.cancelModal) {\n        this.$refs.cancelModal.show();\n      } else {\n        this.formYamlOption = neu;\n      }\n    },\n\n    formYamlOption(neu, old) {\n      switch (neu) {\n      case VALUES_STATE.FORM:\n        // Return to form, reset everything back to starting point\n        this.valuesYaml = this.previousYamlValues;\n\n        this.showValuesComponent = true;\n        this.showQuestions = true;\n\n        this.showDiff = false;\n        break;\n      case VALUES_STATE.YAML:\n        // Show the YAML preview\n        if (old === VALUES_STATE.FORM) {\n          this.valuesYaml = jsyaml.dump(this.chartValues || {});\n          this.previousYamlValues = this.valuesYaml;\n        }\n\n        this.showValuesComponent = false;\n        this.showQuestions = false;\n\n        this.showDiff = false;\n        break;\n      case VALUES_STATE.DIFF:\n        // Show the YAML diff\n        if (old === VALUES_STATE.FORM) {\n          this.valuesYaml = jsyaml.dump(this.chartValues || {});\n          this.previousYamlValues = this.valuesYaml;\n        }\n\n        this.showValuesComponent = false;\n        this.showQuestions = false;\n\n        this.updateValue(this.valuesYaml);\n        this.showDiff = true;\n        break;\n      }\n    },\n\n    requires() {\n      this.updateStepOneReady();\n    },\n\n    warnings() {\n      this.updateStepOneReady();\n    },\n\n  },\n\n  async mounted() {\n    // Load a Vue component named in the Helm chart\n    // for editing values\n    await this.loadValuesComponent();\n\n    // Load Helm chart info used for showing\n    // wizard steps\n    await this.loadChartSteps();\n\n    window.scrollTop = 0;\n\n    this.preFormYamlOption = this.valuesComponent || this.hasQuestions ? VALUES_STATE.FORM : VALUES_STATE.YAML;\n  },\n\n  beforeDestroy() {\n    this.shownReadmeWindows.forEach((name) => this.$store.dispatch('wm/close', name, { root: true }));\n  },\n\n  methods: {\n    async getClusterRegistry() {\n      const hasPermissionToSeeProvCluster = this.$store.getters[`management/schemaFor`](CAPI.RANCHER_CLUSTER);\n\n      if (hasPermissionToSeeProvCluster) {\n        const mgmCluster = this.$store.getters['currentCluster'];\n        const provClusterId = mgmCluster?.provClusterId;\n        let provCluster;\n\n        try {\n          provCluster = provClusterId ? await this.$store.dispatch('management/find', {\n            type: CAPI.RANCHER_CLUSTER,\n            id:   provClusterId\n          }) : {};\n        } catch (e) {\n          console.error(`Unable to fetch prov cluster '${ provClusterId }': `, e); // eslint-disable-line no-console\n        }\n\n        if (provCluster?.isRke2) { // isRke2 returns true for both RKE2 and K3s clusters.\n          // If a cluster scoped registry exists,\n          // it should be used by default.\n          const clusterRegistry = provCluster.agentConfig?.['system-default-registry'] || '';\n\n          if (clusterRegistry) {\n            return clusterRegistry;\n          }\n        }\n\n        if (provCluster?.isRke1) {\n          // For RKE1 clusters, the cluster scoped private registry is on the management\n          // cluster, not the provisioning cluster.\n          const rke1Registries = mgmCluster?.spec?.rancherKubernetesEngineConfig?.privateRegistries;\n\n          if (rke1Registries?.length > 0) {\n            const defaultRegistry = rke1Registries.find((registry) => {\n              return registry.isDefault;\n            });\n\n            return defaultRegistry.url;\n          }\n        }\n      }\n    },\n\n    async getGlobalRegistry() {\n      // Use the global registry as a fallback.\n      // If it is an empty string, the container\n      // runtime will pull images from docker.io.\n      const globalRegistry = await this.$store.dispatch('management/find', {\n        type: MANAGEMENT.SETTING,\n        id:   SETTING.SYSTEM_DEFAULT_REGISTRY,\n      });\n\n      return globalRegistry.value;\n    },\n\n    updateValue(value) {\n      if (this.$refs.yaml) {\n        this.$refs.yaml.updateValue(value);\n      }\n    },\n\n    async loadValuesComponent() {\n      // The const component is a string, for example, 'monitoring'.\n      const component = this.version?.annotations?.[CATALOG_ANNOTATIONS.COMPONENT];\n\n      // Load a values component for the UI if it is named in the Helm chart.\n      if ( component ) {\n        const hasChartComponent = this.$store.getters['type-map/hasCustomChart'](component);\n\n        if ( hasChartComponent ) {\n          this.valuesComponent = this.$store.getters['type-map/importChart'](component);\n          const loaded = await this.valuesComponent();\n\n          this.showValuesComponent = true;\n          this.componentHasTabs = loaded?.default?.hasTabs || false;\n        } else {\n          this.valuesComponent = null;\n          this.componentHasTabs = false;\n          this.showValuesComponent = false;\n        }\n      } else {\n        this.valuesComponent = null;\n        this.componentHasTabs = false;\n        this.showValuesComponent = false;\n      }\n    },\n\n    async loadChartSteps() {\n      const component = this.version?.annotations?.[CATALOG_ANNOTATIONS.COMPONENT];\n\n      if ( component ) {\n        const steps = await this.$store.getters['catalog/chartSteps'](component);\n\n        this.customSteps = await Promise.all( steps.map((cs) => this.loadChartStep(cs)));\n      }\n    },\n\n    async loadChartStep(customStep) {\n      const loaded = await customStep.component();\n      const withFallBack = this.$store.getters['i18n/withFallback'];\n\n      return {\n        name:      customStep.name,\n        label:     withFallBack(loaded?.default?.label, null, customStep.name),\n        subtext:   withFallBack(loaded?.default?.subtext, null, ''),\n        weight:    loaded?.default?.weight,\n        ready:     false,\n        hidden:    true,\n        loading:   true,\n        component: customStep.component,\n      };\n    },\n\n    selectChart(chart) {\n      if ( !chart ) {\n        return;\n      }\n\n      this.$router.applyQuery({\n        [REPO]:      chart.repoName,\n        [REPO_TYPE]: chart.repoType,\n        [CHART]:     chart.chartName,\n        [VERSION]:   chart.versions[0].version\n      });\n    },\n\n    cancel() {\n      if ( this.existing ) {\n        this.done();\n      } else if (this.$route.query[FROM_TOOLS] === _FLAGGED) {\n        this.$router.replace(this.clusterToolsLocation());\n      } else if (this.$route.query[FROM_CLUSTER] === _FLAGGED) {\n        this.$router.replace(this.clustersLocation());\n      } else {\n        this.$router.replace(this.chartLocation(false));\n      }\n    },\n\n    done() {\n      if ( this.$route.query[FROM_TOOLS] === _FLAGGED ) {\n        this.$router.replace(this.clusterToolsLocation());\n      } else if (this.$route.query[FROM_CLUSTER] === _FLAGGED) {\n        this.$router.replace(this.clustersLocation());\n      } else {\n        // If the create app process fails helm validation then we still get here... so until this is fixed new apps will be taken to the\n        // generic apps list (existing apps will be taken to their detail page)\n        this.$router.replace(this.appLocation());\n      }\n    },\n\n    async finish(btnCb) {\n      try {\n        const isUpgrade = !!this.existing;\n\n        this.errors = [];\n\n        await this.applyHooks(BEFORE_SAVE_HOOKS);\n\n        const { errors, input } = this.actionInput(isUpgrade);\n\n        if ( errors?.length ) {\n          this.errors = errors;\n          btnCb(false);\n\n          return;\n        }\n\n        const res = await this.repo.doAction((isUpgrade ? 'upgrade' : 'install'), input);\n        const operationId = `${ res.operationNamespace }/${ res.operationName }`;\n\n        // Non-admins without a cluster won't be able to fetch operations immediately\n        await this.repo.waitForOperation(operationId);\n\n        // Dynamically use store decided when loading catalog (covers standard user case when there's not cluster)\n        this.operation = await this.$store.dispatch(`${ this.inStore }/find`, {\n          type: CATALOG.OPERATION,\n          id:   operationId\n        });\n\n        try {\n          await this.operation.waitForLink('logs');\n          this.operation.openLogs();\n        } catch (e) {\n          // The wait times out eventually, move on...\n        }\n\n        await this.applyHooks(AFTER_SAVE_HOOKS);\n\n        btnCb(true);\n        this.done();\n      } catch (err) {\n        this.errors = exceptionToErrorsArray(err);\n        btnCb(false);\n      }\n    },\n\n    addGlobalValuesTo(values) {\n      let global = values.global;\n\n      if ( !global ) {\n        global = {};\n        set(values, 'global', global);\n      }\n\n      let cattle = global.cattle;\n\n      if ( !cattle ) {\n        cattle = {};\n        set(values.global, 'cattle', cattle);\n      }\n\n      const cluster = this.currentCluster;\n      const projects = this.$store.getters['management/all'](MANAGEMENT.PROJECT);\n      const systemProjectId = projects.find((p) => p.spec?.displayName === 'System')?.id?.split('/')?.[1] || '';\n\n      const serverUrl = this.serverUrlSetting?.value || '';\n      const isWindows = (cluster?.workerOSs || []).includes(WINDOWS);\n      const pathPrefix = cluster?.spec?.rancherKubernetesEngineConfig?.prefixPath || '';\n      const windowsPathPrefix = cluster?.spec?.rancherKubernetesEngineConfig?.winPrefixPath || '';\n\n      setIfNotSet(cattle, 'clusterId', cluster?.id);\n      setIfNotSet(cattle, 'clusterName', cluster?.nameDisplay);\n\n      if (this.showCustomRegistry) {\n        set(cattle, 'systemDefaultRegistry', this.customRegistrySetting);\n        set(global, 'systemDefaultRegistry', this.customRegistrySetting);\n      }\n\n      setIfNotSet(global, 'cattle.systemProjectId', systemProjectId);\n      setIfNotSet(cattle, 'url', serverUrl);\n      setIfNotSet(cattle, 'rkePathPrefix', pathPrefix);\n      setIfNotSet(cattle, 'rkeWindowsPathPrefix', windowsPathPrefix);\n\n      if ( isWindows ) {\n        setIfNotSet(cattle, 'windows.enabled', true);\n      }\n\n      return values;\n\n      function setIfNotSet(obj, key, val) {\n        if ( typeof get(obj, key) === 'undefined' ) {\n          set(obj, key, val);\n        }\n      }\n    },\n\n    removeGlobalValuesFrom(values) {\n      if ( !values ) {\n        return;\n      }\n\n      const cluster = this.$store.getters['currentCluster'];\n      const serverUrl = this.serverUrlSetting?.value || '';\n      const isWindows = (cluster?.workerOSs || []).includes(WINDOWS);\n      const pathPrefix = cluster?.spec?.rancherKubernetesEngineConfig?.prefixPath || '';\n      const windowsPathPrefix = cluster?.spec?.rancherKubernetesEngineConfig?.winPrefixPath || '';\n\n      if ( values.global?.cattle ) {\n        deleteIfEqual(values.global.cattle, 'clusterId', cluster?.id);\n        deleteIfEqual(values.global.cattle, 'clusterName', cluster?.nameDisplay);\n        deleteIfEqual(values.global.cattle, 'url', serverUrl);\n        deleteIfEqual(values.global.cattle, 'rkePathPrefix', pathPrefix);\n        deleteIfEqual(values.global.cattle, 'rkeWindowsPathPrefix', windowsPathPrefix);\n\n        if ( isWindows ) {\n          deleteIfEqual(values.global.cattle.windows, 'enabled', true);\n        }\n      }\n\n      if ( values.global?.cattle?.windows && !Object.keys(values.global.cattle.windows).length ) {\n        delete values.global.cattle.windows;\n      }\n\n      if ( values.global?.cattle && !Object.keys(values.global.cattle).length ) {\n        delete values.global.cattle;\n      }\n\n      if ( !Object.keys(values.global || {}).length ) {\n        delete values.global;\n      }\n\n      return values;\n\n      function deleteIfEqual(obj, key, val) {\n        if ( get(obj, key) === val ) {\n          delete obj[key];\n        }\n      }\n    },\n\n    applyYamlToValues() {\n      try {\n        this.chartValues = jsyaml.load(this.valuesYaml);\n      } catch (err) {\n        return { errors: exceptionToErrorsArray(err) };\n      }\n\n      return { errors: [] };\n    },\n\n    /*\n      actionInput determines what values Rancher finally sends\n      to the backend when installing or upgrading the app. It\n      injects Rancher-specific values into the chart values.\n    */\n    actionInput(isUpgrade) {\n      /* Default values defined in the Helm chart itself */\n      const fromChart = this.versionInfo?.values || {};\n\n      const errors = [];\n\n      if ( this.showingYaml || this.showingYamlDiff ) {\n        const { errors: yamlErrors } = this.applyYamlToValues();\n\n        errors.push(...yamlErrors);\n      }\n\n      /*\n        Only save the values that differ from the chart's standard values.yaml.\n        chartValues is created by applying the user's customized onto\n        the default chart values.\n      */\n      const values = diff(fromChart, this.chartValues);\n\n      /*\n        Refer to the developer docs at docs/developer/helm-chart-apps.md\n        for details on what values are injected and where they come from.\n      */\n\n      this.addGlobalValuesTo(values);\n\n      const form = JSON.parse(JSON.stringify(this.value));\n\n      /*\n        Migrated annotations are required to allow a deprecated legacy app to be\n        upgraded.\n      */\n      const migratedAnnotations = this.migratedApp ? { [CATALOG_ANNOTATIONS.MIGRATED]: 'true' } : {};\n\n      const chart = {\n        chartName:   this.chart.chartName,\n        version:     this.version?.version || this.query.versionName,\n        releaseName: form.metadata.name,\n        description: this.customCmdOpts.description,\n        annotations: {\n          ...migratedAnnotations,\n          [CATALOG_ANNOTATIONS.SOURCE_REPO_TYPE]: this.chart.repoType,\n          [CATALOG_ANNOTATIONS.SOURCE_REPO_NAME]: this.chart.repoName\n        },\n        values,\n      };\n\n      if ( isUpgrade ) {\n        chart.resetValues = this.cmdOptions.resetValues;\n      }\n\n      /*\n        Configure Helm CLI options for doing the install or\n        upgrade operation.\n      */\n      const out = {\n        charts:    [chart],\n        noHooks:   this.cmdOptions.hooks === false,\n        timeout:   this.cmdOptions.timeout > 0 ? `${ this.cmdOptions.timeout }s` : null,\n        wait:      this.cmdOptions.wait === true,\n        namespace: form.metadata.namespace,\n        projectId: this.project,\n      };\n\n      /*\n        Configure Helm CLI options that are specific to\n        installs or specific to upgrades.\n      */\n      if ( isUpgrade ) {\n        out.force = this.cmdOptions.force === true;\n        out.historyMax = this.cmdOptions.historyMax;\n        out.cleanupOnFail = this.cmdOptions.cleanupOnFail;\n      } else {\n        out.disableOpenAPIValidation = this.cmdOptions.openApi === false;\n        out.skipCRDs = this.cmdOptions.crds === false;\n      }\n\n      const more = [];\n\n      const auto = (this.version?.annotations?.[CATALOG_ANNOTATIONS.AUTO_INSTALL_GVK] || '').split(/\\s*,\\s*/).filter((x) => !!x).reverse();\n\n      for ( const gvr of auto ) {\n        const provider = this.$store.getters['catalog/versionProviding']({\n          gvr,\n          repoName: this.chart.repoName,\n          repoType: this.chart.repoType\n        });\n\n        if ( provider ) {\n          more.push(provider);\n        } else {\n          errors.push(`This chart requires another chart that provides ${ gvr }, but none was was found`);\n        }\n      }\n\n      /* Chart custom UI components have the ability to edit CRD chart values eg gatekeeper-crd has values.enableRuntimeDefaultSeccompProfile\n        like the main chart, only CRD values that differ from defaults should be sent on install/upgrade\n        CRDs should be installed with the same global values as the main chart\n      */\n      for (const versionInfo of this.autoInstallInfo) {\n        // allValues are the values potentially changed in the installation ui: any previously customized values + defaults\n        // values are default values from the chart\n        const { allValues, values: crdValues } = versionInfo;\n\n        // only save crd values that differ from the defaults defined in chart values.yaml\n        const customizedCrdValues = diff(crdValues, allValues);\n\n        // CRD globals should be overwritten by main chart globals\n        // we want to avoid including globals present on crd values and not main chart values\n        // that covers the scenario where a global value was customized on a previous install (and so is present in crd global vals) and the user has reverted it to default on this update (no longer present in main chart global vals)\n        const crdValuesToInstall = { ...customizedCrdValues, global: values.global };\n\n        out.charts.unshift({\n          chartName:   versionInfo.chart.name,\n          version:     versionInfo.chart.version,\n          releaseName: versionInfo.chart.annotations[CATALOG_ANNOTATIONS.RELEASE_NAME] || chart.name,\n          projectId:   this.project,\n          values:      crdValuesToInstall\n        });\n      }\n      /*\n        'more' contains additional\n        charts that may not be CRD charts but are also meant to be installed at\n        the same time.\n      */\n      for ( const dependency of more ) {\n        out.charts.unshift({\n          chartName:   dependency.name,\n          version:     dependency.version,\n          releaseName: dependency.annotations[CATALOG_ANNOTATIONS.RELEASE_NAME] || dependency.name,\n          projectId:   this.project,\n          values:      this.addGlobalValuesTo({ global: values.global }),\n          annotations: {\n            ...migratedAnnotations,\n            [CATALOG_ANNOTATIONS.SOURCE_REPO_TYPE]: dependency.repoType,\n            [CATALOG_ANNOTATIONS.SOURCE_REPO_NAME]: dependency.repoName\n          },\n        });\n      }\n\n      return { errors, input: out };\n    },\n\n    tabChanged() {\n      window.scrollTop = 0;\n    },\n\n    updateStepOneReady() {\n      const okRequires = !this.requires.length;\n      const okChart = !!this.chart;\n\n      this.steps[0].ready = okRequires && okChart;\n    },\n\n    updateStepTwoReady(update) {\n      this.updateStep('helmValues', { ready: update });\n    },\n\n    getOptionLabel(opt) {\n      return opt?.chartNameDisplay;\n    },\n\n    showReadmeWindow() {\n      this.$store.dispatch('wm/open', {\n        id:        this.readmeWindowName,\n        label:     this.readmeWindowName,\n        icon:      'file',\n        component: 'ChartReadme',\n        attrs:     { versionInfo: this.versionInfo }\n      }, { root: true });\n      this.shownReadmeWindows.push(this.readmeWindowName);\n    },\n\n    updateStep(stepName, update) {\n      const step = this.steps.find((step) => step.name === stepName);\n\n      if (step) {\n        for (const prop in update) {\n          Vue.set(step, prop, update[prop]);\n        }\n      }\n    }\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div\n    v-else-if=\"!legacyApp && !mcapp\"\n    class=\"install-steps pt-20\"\n    :class=\"{ 'isPlainLayout': isPlainLayout}\"\n  >\n    <TypeDescription resource=\"chart\" />\n    <Wizard\n      v-if=\"value\"\n      :steps=\"steps\"\n      :errors=\"errors\"\n      :edit-first-step=\"true\"\n      :banner-title=\"stepperName\"\n      :banner-title-subtext=\"stepperSubtext\"\n      :finish-mode=\"action\"\n      class=\"wizard\"\n      :class=\"{'windowsIncompatible': windowsIncompatible}\"\n      @cancel=\"cancel\"\n      @finish=\"finish\"\n    >\n      <template\n        v-for=\"customStep of customSteps\"\n        v-slot:[customStep.name]\n      >\n        <component\n          :is=\"customStep.component\"\n          :key=\"customStep.name\"\n          @update=\"updateStep(customStep.name, $event)\"\n          @errors=\"e=>errors.push(...e)\"\n        />\n      </template>\n      <template #bannerTitleImage>\n        <div>\n          <div class=\"logo-bg\">\n            <LazyImage\n              :src=\"chart ? chart.icon : ''\"\n              class=\"logo\"\n            />\n          </div>\n          <label\n            v-if=\"windowsIncompatible\"\n            class=\"os-label\"\n          >\n            {{ windowsIncompatible }}\n          </label>\n        </div>\n      </template>\n      <template #basics>\n        <div class=\"step__basic\">\n          <Banner\n            v-if=\"step1Description\"\n            color=\"info\"\n            class=\"description\"\n          >\n            <div>\n              <span>{{ step1Description }}</span>\n              <span\n                v-if=\"namespaceNewAllowed\"\n                class=\"mt-10\"\n              >\n                {{ t('catalog.install.steps.basics.nsCreationDescription', {}, true) }}\n              </span>\n            </div>\n          </Banner>\n          <div\n            v-if=\"requires.length || warnings.length\"\n            class=\"mb-15\"\n          >\n            <Banner\n              v-for=\"msg in requires\"\n              :key=\"msg\"\n              color=\"error\"\n            >\n              <span v-clean-html=\"msg\" />\n            </Banner>\n\n            <Banner\n              v-for=\"msg in warnings\"\n              :key=\"msg\"\n              color=\"warning\"\n            >\n              <span v-clean-html=\"msg\" />\n            </Banner>\n          </div>\n          <div\n            v-if=\"showSelectVersionOrChart\"\n            class=\"row mb-20\"\n          >\n            <div class=\"col span-4\">\n              <!-- We have a chart for the app, let the user select a new version -->\n              <LabeledSelect\n                v-if=\"chart\"\n                :label=\"t('catalog.install.version')\"\n                :value=\"query.versionName\"\n                :options=\"filteredVersions\"\n                :selectable=\"version => !version.disabled\"\n                @input=\"selectVersion\"\n              />\n              <!-- Can't find the chart for the app, let the user try to select one -->\n              <LabeledSelect\n                v-else\n                :label=\"t('catalog.install.chart')\"\n                :value=\"chart\"\n                :options=\"charts\"\n                :selectable=\"option => !option.disabled\"\n                :get-option-label=\"opt => getOptionLabel(opt)\"\n                option-key=\"key\"\n                @input=\"selectChart($event)\"\n              >\n                <template v-slot:option=\"opt\">\n                  <template v-if=\"opt.kind === 'divider'\">\n                    <hr>\n                  </template>\n                  <template v-else-if=\"opt.kind === 'label'\">\n                    <b style=\"position: relative; left: -2.5px;\">{{ opt.label }}</b>\n                  </template>\n                </template>\n              </LabeledSelect>\n            </div>\n          </div>\n          <NameNsDescription\n            v-model=\"value\"\n            :description-hidden=\"true\"\n            :mode=\"mode\"\n            :name-disabled=\"nameDisabled\"\n            :name-required=\"false\"\n            :name-ns-hidden=\"!showNameEditor\"\n            :force-namespace=\"forceNamespace\"\n            :namespace-new-allowed=\"namespaceNewAllowed\"\n            :extra-columns=\"showProject ? ['project'] : []\"\n            :show-spacer=\"false\"\n            :horizontal=\"false\"\n            @isNamespaceNew=\"isNamespaceNew = $event\"\n          >\n            <template\n              v-if=\"showProject\"\n              #project\n            >\n              <LabeledSelect\n                v-model=\"project\"\n                :disabled=\"!namespaceIsNew\"\n                :label=\"t('catalog.install.project')\"\n                option-key=\"id\"\n                :options=\"projectOpts\"\n                :tooltip=\"!namespaceIsNew ? t('catalog.install.namespaceIsInProject', {namespace: value.metadata.namespace}, true) : ''\"\n                :hover-tooltip=\"!namespaceIsNew\"\n                :status=\"'info'\"\n              />\n            </template>\n          </NameNsDescription>\n          <Checkbox\n            v-model=\"showCommandStep\"\n            class=\"mb-20\"\n            :label=\"t('catalog.install.steps.helmCli.checkbox', { action, existing: !!existing })\"\n          />\n\n          <Checkbox\n            v-if=\"showCustomRegistry\"\n            v-model=\"showCustomRegistryInput\"\n            class=\"mb-20\"\n            :label=\"t('catalog.chart.registry.custom.checkBoxLabel')\"\n            :tooltip=\"t('catalog.chart.registry.tooltip')\"\n          />\n          <div class=\"row\">\n            <div class=\"col span-6\">\n              <LabeledInput\n                v-if=\"showCustomRegistryInput\"\n                v-model=\"customRegistrySetting\"\n                label-key=\"catalog.chart.registry.custom.inputLabel\"\n                placeholder-key=\"catalog.chart.registry.custom.placeholder\"\n                :min-height=\"30\"\n              />\n            </div>\n          </div>\n          <div\n            class=\"step__values__controls--spacer\"\n            style=\"flex:1\"\n          >\n&nbsp;\n          </div>\n          <Banner\n            v-if=\"isNamespaceNew && value.metadata.namespace.length\"\n            color=\"info\"\n          >\n            <div v-clean-html=\"t('catalog.install.steps.basics.createNamespace', {namespace: value.metadata.namespace}, true) \" />\n          </Banner>\n        </div>\n      </template>\n      <template #clusterTplVersion>\n        <Banner\n          color=\"info\"\n          class=\"description\"\n        >\n          {{ t('catalog.install.steps.clusterTplVersion.description') }}\n        </Banner>\n        <div class=\"row mb-20\">\n          <div class=\"col span-4\">\n            <LabeledSelect\n              v-if=\"chart\"\n              :label=\"t('catalog.install.version')\"\n              :value=\"query.versionName\"\n              :options=\"filteredVersions\"\n              :selectable=\"version => !version.disabled\"\n              @input=\"selectVersion\"\n            />\n          </div>\n          <div class=\"step__values__controls--spacer\">\n&nbsp;\n          </div>\n          <div class=\"btn-group\">\n            <button\n              type=\"button\"\n              class=\"btn bg-primary btn-sm\"\n              :disabled=\"!hasReadme || showingReadmeWindow\"\n              @click=\"showSlideIn = !showSlideIn\"\n            >\n              {{ t('catalog.install.steps.helmValues.chartInfo.button') }}\n            </button>\n          </div>\n        </div>\n      </template>\n      <template #helmValues>\n        <Banner\n          v-if=\"step2Description\"\n          color=\"info\"\n          class=\"description\"\n        >\n          {{ step2Description }}\n        </Banner>\n        <div class=\"step__values__controls\">\n          <ButtonGroup\n            v-model=\"preFormYamlOption\"\n            data-testid=\"btn-group-options-view\"\n            :options=\"formYamlOptions\"\n            inactive-class=\"bg-disabled btn-sm\"\n            active-class=\"bg-primary btn-sm\"\n            :disabled=\"preFormYamlOption != formYamlOption\"\n          />\n          <div class=\"step__values__controls--spacer\">\n&nbsp;\n          </div>\n          <ButtonGroup\n            v-if=\"showDiff\"\n            v-model=\"diffMode\"\n            :options=\"yamlDiffModeOptions\"\n            inactive-class=\"bg-disabled btn-sm\"\n            active-class=\"bg-primary btn-sm\"\n          />\n          <div\n            v-if=\"hasReadme && !showingReadmeWindow\"\n            class=\"btn-group\"\n          >\n            <button\n              type=\"button\"\n              class=\"btn bg-primary btn-sm\"\n              @click=\"showSlideIn = !showSlideIn\"\n            >\n              {{ t('catalog.install.steps.helmValues.chartInfo.button') }}\n            </button>\n          </div>\n        </div>\n\n        <div class=\"scroll__container\">\n          <div class=\"scroll__content\">\n            <!-- Values (as Custom Component in ./shell/charts/) -->\n            <template v-if=\"valuesComponent && showValuesComponent\">\n              <Tabbed\n                v-if=\"componentHasTabs\"\n                ref=\"tabs\"\n                :side-tabs=\"true\"\n                :hide-single-tab=\"true\"\n                :class=\"{'with-name': showNameEditor}\"\n                class=\"step__values__content\"\n                @changed=\"tabChanged($event)\"\n              >\n                <component\n                  :is=\"valuesComponent\"\n                  v-model=\"chartValues\"\n                  :mode=\"mode\"\n                  :chart=\"chart\"\n                  class=\"step__values__content\"\n                  :existing=\"existing\"\n                  :version=\"version\"\n                  :version-info=\"versionInfo\"\n                  :auto-install-info=\"autoInstallInfo\"\n                  @warn=\"e=>errors.push(e)\"\n                  @register-before-hook=\"registerBeforeHook\"\n                  @register-after-hook=\"registerAfterHook\"\n                  @valid=\"updateStepTwoReady($event)\"\n                />\n              </Tabbed>\n              <template v-else>\n                <component\n                  :is=\"valuesComponent\"\n                  v-if=\"valuesComponent\"\n                  v-model=\"chartValues\"\n                  :mode=\"mode\"\n                  :chart=\"chart\"\n                  class=\"step__values__content\"\n                  :existing=\"existing\"\n                  :version=\"version\"\n                  :version-info=\"versionInfo\"\n                  :auto-install-info=\"autoInstallInfo\"\n                  @warn=\"e=>errors.push(e)\"\n                  @register-before-hook=\"registerBeforeHook\"\n                  @register-after-hook=\"registerAfterHook\"\n                />\n              </template>\n            </template>\n\n            <!-- Values (as Questions, abstracted component based on question.yaml configuration from repositories)  -->\n            <Tabbed\n              v-else-if=\"hasQuestions && showQuestions\"\n              ref=\"tabs\"\n              :side-tabs=\"true\"\n              :hide-single-tab=\"true\"\n              :class=\"{'with-name': showNameEditor}\"\n              class=\"step__values__content\"\n              @changed=\"tabChanged($event)\"\n            >\n              <Questions\n                v-model=\"chartValues\"\n                :in-store=\"inStore\"\n                :mode=\"mode\"\n                :source=\"versionInfo\"\n                :ignore-variables=\"ignoreVariables\"\n                tabbed=\"multiple\"\n                :target-namespace=\"targetNamespace\"\n              />\n            </Tabbed>\n            <!-- Values (as YAML) -->\n            <template v-else>\n              <YamlEditor\n                ref=\"yaml\"\n                v-model=\"valuesYaml\"\n                class=\"step__values__content\"\n                :scrolling=\"true\"\n                :initial-yaml-values=\"originalYamlValues\"\n                :editor-mode=\"editorMode\"\n                :hide-preview-buttons=\"true\"\n              />\n            </template>\n          </div>\n        </div>\n\n        <!-- Confirm loss of changes on toggle from yaml/preview to form -->\n        <ResourceCancelModal\n          ref=\"cancelModal\"\n          :is-cancel-modal=\"false\"\n          :is-form=\"true\"\n          @cancel-cancel=\"preFormYamlOption=formYamlOption\"\n          @confirm-cancel=\"formYamlOption = preFormYamlOption;\"\n        />\n      </template>\n      <template #helmCli>\n        <Banner\n          v-if=\"step3Description\"\n          color=\"info\"\n          class=\"description\"\n        >\n          {{ step3Description }}\n        </Banner>\n        <div>\n          <Checkbox\n            v-if=\"existing\"\n            v-model=\"customCmdOpts.cleanupOnFail\"\n            :label=\"t('catalog.install.helm.cleanupOnFail')\"\n          />\n        </div>\n        <div>\n          <Checkbox\n            v-if=\"!existing\"\n            v-model=\"customCmdOpts.crds\"\n            :label=\"t('catalog.install.helm.crds')\"\n          />\n        </div>\n        <div>\n          <Checkbox\n            v-model=\"customCmdOpts.hooks\"\n            :label=\"t('catalog.install.helm.hooks')\"\n          />\n        </div>\n        <div>\n          <Checkbox\n            v-if=\"existing\"\n            v-model=\"customCmdOpts.force\"\n            :label=\"t('catalog.install.helm.force')\"\n          />\n        </div>\n        <div>\n          <Checkbox\n            v-if=\"existing\"\n            v-model=\"customCmdOpts.resetValues\"\n            :label=\"t('catalog.install.helm.resetValues')\"\n          />\n        </div>\n        <div>\n          <Checkbox\n            v-if=\"!existing\"\n            v-model=\"customCmdOpts.openApi\"\n            :label=\"t('catalog.install.helm.openapi')\"\n          />\n        </div>\n        <div>\n          <Checkbox\n            v-model=\"customCmdOpts.wait\"\n            :label=\"t('catalog.install.helm.wait')\"\n          />\n        </div>\n        <div\n          style=\"display: block; max-width: 400px;\"\n          class=\"mt-10\"\n        >\n          <UnitInput\n            v-model.number=\"customCmdOpts.timeout\"\n            :label=\"t('catalog.install.helm.timeout.label')\"\n            :suffix=\"t('catalog.install.helm.timeout.unit', {value: customCmdOpts.timeout})\"\n          />\n        </div>\n        <div\n          style=\"display: block; max-width: 400px;\"\n          class=\"mt-10\"\n        >\n          <UnitInput\n            v-if=\"existing\"\n            v-model.number=\"customCmdOpts.historyMax\"\n            :label=\"t('catalog.install.helm.historyMax.label')\"\n            :suffix=\"t('catalog.install.helm.historyMax.unit', {value: customCmdOpts.historyMax})\"\n          />\n        </div>\n        <div\n          style=\"display: block; max-width: 400px;\"\n          class=\"mt-10\"\n        >\n          <LabeledInput\n            v-model=\"customCmdOpts.description\"\n            label-key=\"catalog.install.helm.description.label\"\n            placeholder-key=\"catalog.install.helm.description.placeholder\"\n            :min-height=\"30\"\n          />\n        </div>\n      </template>\n    </Wizard>\n    <div\n      class=\"slideIn\"\n      :class=\"{'hide': false, 'slideIn__show': showSlideIn}\"\n    >\n      <h2 class=\"slideIn__header\">\n        {{ t('catalog.install.steps.helmValues.chartInfo.label') }}\n        <div class=\"slideIn__header__buttons\">\n          <div\n            v-clean-tooltip=\"t('catalog.install.slideIn.dock')\"\n            class=\"slideIn__header__button\"\n            @click=\"showSlideIn = false; showReadmeWindow()\"\n          >\n            <i class=\"icon icon-dock\" />\n          </div>\n          <div\n            class=\"slideIn__header__button\"\n            @click=\"showSlideIn = false\"\n          >\n            <i class=\"icon icon-close\" />\n          </div>\n        </div>\n      </h2>\n      <ChartReadme\n        v-if=\"hasReadme\"\n        :version-info=\"versionInfo\"\n        class=\"chart-content__tabs\"\n      />\n    </div>\n  </div>\n\n  <!-- App is deployed as a Legacy or MultiCluster app, don't let user update from here -->\n  <div\n    v-else\n    class=\"install-steps\"\n    :class=\"{ 'isPlainLayout': isPlainLayout}\"\n  >\n    <div class=\"outer-container\">\n      <div class=\"header mb-20\">\n        <div class=\"title\">\n          <div class=\"top choice-banner\">\n            <div class=\"title\">\n              <!-- Logo -->\n              <slot name=\"bannerTitleImage\">\n                <div class=\"round-image\">\n                  <LazyImage\n                    :src=\"chart ? chart.icon : ''\"\n                    class=\"logo\"\n                  />\n                </div>\n              </slot>\n              <!-- Title with subtext -->\n              <div class=\"subtitle\">\n                <h2 v-if=\"stepperName\">\n                  {{ stepperName }}\n                </h2>\n                <span\n                  v-if=\"stepperSubtext\"\n                  class=\"subtext\"\n                >{{ stepperSubtext }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Banner\n        color=\"warning\"\n        class=\"description\"\n      >\n        <span v-if=\"!mcapp\">\n          {{ t('catalog.install.error.legacy.label', { legacyType: mcapp ? legacyDefs.mcm : legacyDefs.legacy }, true) }}\n        </span>\n        <template v-if=\"!legacyEnabled\">\n          <span v-clean-html=\"t('catalog.install.error.legacy.enableLegacy.prompt', true)\" />\n          <router-link :to=\"legacyFeatureRoute\">\n            {{ t('catalog.install.error.legacy.enableLegacy.goto') }}\n          </router-link>\n        </template>\n        <template v-else-if=\"mcapp\">\n          <span v-clean-html=\"t('catalog.install.error.legacy.mcmNotSupported')\" />\n        </template>\n        <template v-else>\n          <router-link :to=\"legacyAppRoute\">\n            <span v-clean-html=\"t('catalog.install.error.legacy.navigate')\" />\n          </router-link>\n        </template>\n      </Banner>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  $title-height: 50px;\n  $padding: 5px;\n  $slideout-width: 35%;\n\n  .install-steps {\n    padding-top: 0;\n    height: 0;\n    position: relative;\n    overflow: hidden;\n\n    &.isPlainLayout {\n      padding: 20px;\n    }\n\n    .description {\n      display: flex;\n      flex-direction: column;\n      margin-top: 0;\n    }\n  }\n\n  .wizard {\n    .logo-bg {\n      margin-right: 10px;\n      height: $title-height;\n      width: $title-height;\n      background-color: white;\n      border: $padding solid white;\n      border-radius: calc( 3 * var(--border-radius));\n      position: relative;\n    }\n\n    .logo {\n      max-height: $title-height - 2 * $padding;\n      max-width: $title-height - 2 * $padding;\n      position: absolute;\n      width: auto;\n      height: auto;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      margin: auto;\n    }\n\n    // Hack - We're adding an absolute tag under the logo that we want to consume space without breaking vertical alignment of row.\n    // W  ith the slots available this isn't possible without adding tag specific styles to the root wizard classes\n    &.windowsIncompatible {\n      ::v-deep .header {\n        padding-bottom: 15px;\n      }\n    }\n\n    .os-label {\n      position: absolute;\n      background-color: var(--warning-banner-bg);\n      color:var(--warning);\n      margin-top: 5px;\n    }\n\n  }\n\n  .step {\n    &__basic {\n      display: flex;\n      flex-direction: column;\n      flex: 1;\n\n      .spacer {\n        line-height: 2;\n      }\n    }\n    &__values {\n      &__controls {\n        display: flex;\n        margin-bottom: 15px;\n\n        & > *:not(:last-of-type) {\n          margin-right: $padding * 2;\n        }\n\n        &--spacer {\n          flex: 1\n        }\n\n      }\n\n      &__content {\n        flex: 1;\n\n        ::v-deep .tab-container {\n          overflow: auto;\n        }\n      }\n\n    }\n  }\n\n  .slideIn {\n    $slideout-width: 35%;\n\n    border-left: var(--header-border-size) solid var(--header-border);\n    position: absolute;\n    top: 0;\n    right: -$slideout-width;\n    height: 100%;\n    background-color: var(--topmenu-bg);\n    width: $slideout-width;\n    z-index: 10;\n    display: flex;\n    flex-direction: column;\n\n    padding: 10px;\n\n    transition: right .5s ease;\n\n    &__header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n\n      &__buttons {\n        display: flex;\n      }\n\n      &__button {\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 2px;\n        > i {\n          font-size: 20px;\n          opacity: 0.5;\n        }\n        &:hover {\n          background-color: var(--wm-closer-hover-bg);\n        }\n      }\n    }\n\n    .chart-content__tabs {\n      display: flex;\n      flex-direction: column;\n      flex: 1;\n\n      height: 0;\n\n      padding-bottom: 10px;\n\n      ::v-deep .chart-readmes {\n        flex: 1;\n        overflow: auto;\n      }\n    }\n\n    &__show {\n      right: 0;\n    }\n\n  }\n\n  .scroll {\n    &__container {\n      $yaml-height: 200px;\n      min-height: $yaml-height;\n      margin-bottom: 60px;\n      overflow: auto;\n      display: flex;\n      flex: 1;\n    }\n    &__content {\n      display: flex;\n      flex: 1;\n      overflow: auto;\n    }\n  }\n\n  ::v-deep .yaml-editor {\n    flex: 1\n  }\n\n.outer-container {\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  overflow: auto;\n}\n\n.header {\n  display: flex;\n  align-content: space-between;\n  align-items: center;\n\n  border-bottom: var(--header-border-size) solid var(--header-border);\n\n  & > .title {\n    flex: 1;\n    min-height: 75px;\n  }\n\n  .choice-banner {\n\n    flex-basis: 40%;\n    display: flex;\n    align-items: center;\n\n    &.top {\n\n      H2 {\n        margin: 0px;\n      }\n\n      .title{\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n\n        & > .subtitle {\n          margin: 0 20px;\n        }\n      }\n\n      .subtitle{\n        display: flex;\n        flex-direction: column;\n        & .subtext {\n          color: var(--input-label);\n        }\n      }\n\n    }\n\n    &:not(.top){\n      box-shadow: 0px 0px 12px 3px var(--box-bg);\n      flex-direction: row;\n      align-items: center;\n      justify-content: start;\n      &:hover{\n        outline: var(--outline-width) solid var(--outline);\n        cursor: pointer;\n      }\n    }\n\n    & .round-image {\n      min-width: 50px;\n      height: 50px;\n      margin: 10px 10px 10px 0;\n      border-radius: 50%;\n      overflow: hidden;\n      .logo {\n        min-width: 50px;\n        height: 50px;\n      }\n    }\n  }\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]}]}