{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/store/prefs.js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/store/prefs.js","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["SETTING","MANAGEMENT","STEVE","clone","Vue","definitions","prefsBeforeLogin","create","name","def","opt","arguments","length","undefined","parseJSON","asCookie","asUserPreference","options","inheritFrom","mangleRead","mangleWrite","mapPref","get","$store","getters","set","value","dispatch","key","CLUSTER","LAST_NAMESPACE","NAMESPACE_FILTERS","WORKSPACE","EXPANDED_GROUPS","FAVORITE_TYPES","PINNED_CLUSTERS","GROUP_RESOURCES","DIFF","THEME","x","replace","concat","PREFERS_SCHEME","LOCALE","KEYMAP","ROWS_PER_PAGE","LOGS_WRAP","LOGS_TIME","LOGS_RANGE","HIDE_REPOS","HIDE_DESC","HIDE_SENSITIVE","SHOW_PRE_RELEASE","SHOW_CHART_MODE","DATE_FORMAT","TIME_FORMAT","TIME_ZONE","DEV","VIEW_IN_API","ALL_NAMESPACES","THEME_SHORTCUT","LAST_VISITED","SEEN_WHATS_NEW","READ_WHATS_NEW","AFTER_LOGIN_ROUTE","HIDE_HOME_PAGE_CARDS","PLUGIN_DEVELOPER","_RKE1","_RKE2","PROVISIONER","MENU_MAX_CLUSTERS","SCALE_POOL_PROMPT","cookiePrefix","cookieOptions","maxAge","path","sameSite","secure","state","cookiesLoaded","data","definition","Error","user","defaultValue","slice","theme","rootState","rootGetters","setting","pcs","startsWith","substr","afterLoginRoute","afterLoginRoutePref","lastVisitedPref","clusterPref","params","product","cluster","match","clusterId","split","mutations","load","_ref","reset","_state$definitions$ke","setDefinition","_ref2","_ref2$definition","actions","_ref3","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","commit","server","_opt","checkLogin","_server","wrap","_callee$","_context","prev","next","val","_objectSpread","$cookies","toUpperCase","abrupt","sent","JSON","stringify","save","redirectUnauthorized","t0","type","status","stop","setTheme","_ref4","_callee2","_callee2$","_context2","loadCookies","_ref5","loadTheme","_ref6","watchDark","window","matchMedia","watchLight","watchNone","interval","nextHalfHour","Math","round","Date","getTime","setTimeout","matches","changed","fromClock","addListener","e","hour","getHours","loadServer","_ref7","ignoreKey","_callee3","_server2","all","_callee3$","_context3","PREFERENCE","url","force","watch","stream","root","console","error","Object","keys","forEach","t1","t2","done","parse","t3","setLastVisited","_ref8","route","doNotTrackLastVisited","toSave","getLoginRoute","toggleTheme","_ref9","setBrandStyle","_ref10","dark","managementReady","brandSetting","BRAND","brand","brandMeta","require","hasStylesheet","document","body","classList","add","_unused","_route$name","parts","routeParams","index","findIndex","p","param","join"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/store/prefs.js"],"sourcesContent":["import { SETTING } from '@shell/config/settings';\nimport { MANAGEMENT, STEVE } from '@shell/config/types';\nimport { clone } from '@shell/utils/object';\nimport Vue from 'vue';\n\nconst definitions = {};\n/**\n * Key/value of prefrences are stored before login here and cookies due lack of access permission.\n * Once user is logged in while setting asUserPreference, update stored before login Key/value to the backend in loadServer function.\n */\nlet prefsBeforeLogin = {};\n\nexport const create = function(name, def, opt = {}) {\n  const parseJSON = opt.parseJSON === true;\n  const asCookie = opt.asCookie === true;\n  const asUserPreference = opt.asUserPreference !== false;\n  const options = opt.options;\n  const inheritFrom = opt.inheritFrom;\n\n  definitions[name] = {\n    def,\n    options,\n    parseJSON,\n    asCookie,\n    asUserPreference,\n    inheritFrom, // if value is not defined on server, we can default it to another pref\n    mangleRead:  opt.mangleRead, // Alter the value read from the API (to match old Rancher expectations)\n    mangleWrite: opt.mangleWrite, // Alter the value written back to the API (ditto)\n  };\n\n  return name;\n};\n\nexport const mapPref = function(name) {\n  return {\n    get() {\n      return this.$store.getters['prefs/get'](name);\n    },\n\n    set(value) {\n      this.$store.dispatch('prefs/set', { key: name, value });\n    }\n  };\n};\n\n// --------------------\nconst parseJSON = true; // Shortcut for setting it below\nconst asCookie = true; // Store as a cookie so that it's available before auth + on server-side\n\n// Keys must be lowercase and valid dns label (a-z 0-9 -)\nexport const CLUSTER = create('cluster', '');\nexport const LAST_NAMESPACE = create('last-namespace', '');\nexport const NAMESPACE_FILTERS = create('ns-by-cluster', {}, { parseJSON });\nexport const WORKSPACE = create('workspace', '');\nexport const EXPANDED_GROUPS = create('open-groups', ['cluster', 'policy', 'rbac', 'serviceDiscovery', 'storage', 'workload'], { parseJSON });\nexport const FAVORITE_TYPES = create('fav-type', [], { parseJSON });\nexport const PINNED_CLUSTERS = create('pinned-clusters', [], { parseJSON });\nexport const GROUP_RESOURCES = create('group-by', 'namespace');\nexport const DIFF = create('diff', 'unified', { options: ['unified', 'split'] });\nexport const THEME = create('theme', 'auto', {\n  options:     ['light', 'auto', 'dark'],\n  asCookie,\n  parseJSON,\n  mangleRead:  (x) => x.replace(/^ui-/, ''),\n  mangleWrite: (x) => `ui-${ x }`,\n});\nexport const PREFERS_SCHEME = create('pcs', '', { asCookie, asUserPreference: false });\nexport const LOCALE = create('locale', 'en-us', { asCookie });\nexport const KEYMAP = create('keymap', 'sublime', { options: ['sublime', 'emacs', 'vim'] });\nexport const ROWS_PER_PAGE = create('per-page', 100, { options: [10, 25, 50, 100], parseJSON });\nexport const LOGS_WRAP = create('logs-wrap', true, { parseJSON });\nexport const LOGS_TIME = create('logs-time', true, { parseJSON });\nexport const LOGS_RANGE = create('logs-range', '30 minutes', { parseJSON });\nexport const HIDE_REPOS = create('hide-repos', [], { parseJSON });\nexport const HIDE_DESC = create('hide-desc', [], { parseJSON });\nexport const HIDE_SENSITIVE = create('hide-sensitive', true, { options: [true, false], parseJSON });\nexport const SHOW_PRE_RELEASE = create('show-pre-release', false, { options: [false, true], parseJSON });\nexport const SHOW_CHART_MODE = create('chart-mode', 'featured', { parseJSON });\n\nexport const DATE_FORMAT = create('date-format', 'ddd, MMM D YYYY', {\n  options: [\n    'ddd, MMM D YYYY',\n    'ddd, D MMM YYYY',\n    'D/M/YYYY',\n    'M/D/YYYY',\n    'YYYY-MM-DD'\n  ]\n});\n\nexport const TIME_FORMAT = create('time-format', 'h:mm:ss a', {\n  options: [\n    'h:mm:ss a',\n    'HH:mm:ss'\n  ]\n});\n\nexport const TIME_ZONE = create('time-zone', 'local');\n// DEV will be deprecated on v2.7.0, but is needed so that we can grab the value for the new settings that derived from it\n// such as: VIEW_IN_API, ALL_NAMESPACES, THEME_SHORTCUT\nexport const DEV = create('dev', false, { parseJSON });\nexport const VIEW_IN_API = create('view-in-api', false, { parseJSON, inheritFrom: DEV });\nexport const ALL_NAMESPACES = create('all-namespaces', false, { parseJSON, inheritFrom: DEV });\nexport const THEME_SHORTCUT = create('theme-shortcut', false, { parseJSON, inheritFrom: DEV });\nexport const LAST_VISITED = create('last-visited', 'home', { parseJSON });\nexport const SEEN_WHATS_NEW = create('seen-whatsnew', '', { parseJSON });\nexport const READ_WHATS_NEW = create('read-whatsnew', '', { parseJSON });\nexport const AFTER_LOGIN_ROUTE = create('after-login-route', 'home', { parseJSON } );\nexport const HIDE_HOME_PAGE_CARDS = create('home-page-cards', {}, { parseJSON } );\nexport const PLUGIN_DEVELOPER = create('plugin-developer', false, { parseJSON, inheritFrom: DEV }); // Is the user a plugin developer?\n\nexport const _RKE1 = 'rke1';\nexport const _RKE2 = 'rke2';\nexport const PROVISIONER = create('provisioner', _RKE2, { options: [_RKE1, _RKE2] });\n\n// Maximum number of clusters to show in the slide-in menu\nexport const MENU_MAX_CLUSTERS = 10;\n// Prompt for confirm when scaling down node pool in GUI and save the pref\nexport const SCALE_POOL_PROMPT = create('scale-pool-prompt', null, { parseJSON });\n// --------------------\n\nconst cookiePrefix = 'R_';\nconst cookieOptions = {\n  maxAge:   365 * 86400,\n  path:     '/',\n  sameSite: true,\n  secure:   true,\n};\n\nexport const state = function() {\n  return {\n    cookiesLoaded: false,\n    data:          {},\n    definitions,\n  };\n};\n\nexport const getters = {\n  get: (state) => (key) => {\n    const definition = state.definitions[key];\n\n    if (!definition) {\n      throw new Error(`Unknown preference: ${ key }`);\n    }\n\n    const user = state.data[key];\n\n    if (user !== undefined) {\n      return clone(user);\n    }\n\n    const def = clone(definition.def);\n\n    return def;\n  },\n\n  defaultValue: (state) => (key) => {\n    const definition = state.definitions[key];\n\n    if (!definition) {\n      throw new Error(`Unknown preference: ${ key }`);\n    }\n\n    return clone(definition.def);\n  },\n\n  options: (state) => (key) => {\n    const definition = state.definitions[key];\n\n    if (!definition) {\n      throw new Error(`Unknown preference: ${ key }`);\n    }\n\n    if (!definition.options) {\n      throw new Error(`Preference does not have options: ${ key }`);\n    }\n\n    return definition.options.slice();\n  },\n\n  theme: (state, getters, rootState, rootGetters) => {\n    const setting = rootGetters['management/byId'](MANAGEMENT.SETTING, SETTING.THEME);\n\n    if (setting?.value) {\n      return setting?.value;\n    }\n\n    let theme = getters['get'](THEME);\n    const pcs = getters['get'](PREFERS_SCHEME);\n\n    // console.log('Get Theme', theme, pcs);\n\n    // Ember UI uses this prefix\n    if ( theme.startsWith('ui-') ) {\n      theme = theme.substr(3);\n    }\n\n    if ( theme === 'auto' ) {\n      if ( pcs === 'light' || pcs === 'dark' ) {\n        return pcs;\n      }\n\n      return 'dark';\n    }\n\n    return theme;\n  },\n\n  afterLoginRoute: (state, getters) => {\n    const afterLoginRoutePref = getters['get'](AFTER_LOGIN_ROUTE);\n\n    if (typeof afterLoginRoutePref !== 'string') {\n      return afterLoginRoutePref;\n    }\n\n    switch (true) {\n    case (afterLoginRoutePref === 'home'):\n      return { name: 'home' };\n    case (afterLoginRoutePref === 'last-visited'): {\n      const lastVisitedPref = getters['get'](LAST_VISITED);\n\n      if (lastVisitedPref) {\n        return lastVisitedPref;\n      }\n      const clusterPref = getters['get'](CLUSTER);\n\n      return { name: 'c-cluster-explorer', params: { product: 'explorer', cluster: clusterPref } };\n    }\n    case (!!afterLoginRoutePref.match(/.+-dashboard$/)):\n    {\n      const clusterId = afterLoginRoutePref.split('-dashboard')[0];\n\n      return { name: 'c-cluster-explorer', params: { product: 'explorer', cluster: clusterId } };\n    }\n    default:\n      return { name: afterLoginRoutePref };\n    }\n  }\n};\n\nexport const mutations = {\n  load(state, { key, value }) {\n    Vue.set(state.data, key, value);\n  },\n\n  cookiesLoaded(state) {\n    state.cookiesLoaded = true;\n  },\n\n  reset(state) {\n    for (const key in state.definitions) {\n      if ( state.definitions[key]?.asCookie ) {\n        continue;\n      }\n      delete state.data[key];\n    }\n  },\n\n  setDefinition(state, { name, definition = {} }) {\n    state.definitions[name] = definition;\n  },\n};\n\nexport const actions = {\n  async set({\n    dispatch, commit, rootGetters, state\n  }, opt) {\n    let { key, value } = opt; // eslint-disable-line prefer-const\n    const definition = state.definitions[key];\n    let server;\n\n    if ( opt.val ) {\n      throw new Error('Use value, not val');\n    }\n\n    commit('load', { key, value });\n\n    if ( definition.asCookie ) {\n      const opt = {\n        ...cookieOptions,\n        parseJSON: definition.parseJSON === true\n      };\n\n      this.$cookies.set(`${ cookiePrefix }${ key }`.toUpperCase(), value, opt);\n    }\n\n    if ( definition.asUserPreference ) {\n      const checkLogin = rootGetters['auth/loggedIn'];\n\n      // Check for login status\n      if (!checkLogin) {\n        prefsBeforeLogin[key] = value;\n\n        return;\n      }\n\n      try {\n        server = await dispatch('loadServer', key); // There's no watch on prefs, so get before set...\n\n        if ( server?.data ) {\n          if ( definition.mangleWrite ) {\n            value = definition.mangleWrite(value);\n          }\n\n          if ( definition.parseJSON ) {\n            Vue.set(server.data, key, JSON.stringify(value));\n          } else {\n            Vue.set(server.data, key, value);\n          }\n\n          await server.save({ redirectUnauthorized: false });\n        }\n      } catch (e) {\n        // Well it failed, but not much to do about it...\n\n        // Return the error\n        return { type: e.type, status: e.status };\n      }\n    }\n  },\n\n  async setTheme({ dispatch }, val) {\n    await dispatch('set', { key: THEME, value: val });\n  },\n\n  loadCookies({ state, commit }) {\n    if ( state.cookiesLoaded ) {\n      return;\n    }\n\n    for (const key in state.definitions) {\n      const definition = state.definitions[key];\n\n      if ( !definition.asCookie ) {\n        continue;\n      }\n\n      const opt = { parseJSON: definition.parseJSON === true };\n      const value = this.$cookies.get(`${ cookiePrefix }${ key }`.toUpperCase(), opt);\n\n      if (value !== undefined) {\n        commit('load', { key, value });\n      }\n    }\n\n    commit('cookiesLoaded');\n  },\n\n  loadTheme({ dispatch }) {\n    const watchDark = window.matchMedia('(prefers-color-scheme: dark)');\n    const watchLight = window.matchMedia('(prefers-color-scheme: light)');\n    const watchNone = window.matchMedia('(prefers-color-scheme: no-preference)');\n\n    const interval = 30 * 60 * 1000;\n    const nextHalfHour = interval - Math.round(new Date().getTime()) % interval;\n\n    setTimeout(() => {\n      dispatch('loadTheme');\n    }, nextHalfHour);\n    // console.log('Update theme in', nextHalfHour, 'ms');\n\n    if ( watchDark.matches ) {\n      changed('dark');\n    } else if ( watchLight.matches ) {\n      changed('light');\n    } else {\n      changed(fromClock());\n    }\n\n    watchDark.addListener((e) => {\n      if ( e.matches ) {\n        changed('dark');\n      }\n    });\n\n    watchLight.addListener((e) => {\n      if ( e.matches ) {\n        changed('light');\n      }\n    });\n\n    watchNone.addListener((e) => {\n      if ( e.matches ) {\n        changed(fromClock());\n      }\n    });\n\n    function changed(value) {\n      // console.log('Prefers Theme:', value);\n      dispatch('set', { key: PREFERS_SCHEME, value });\n    }\n\n    function fromClock() {\n      const hour = new Date().getHours();\n\n      if ( hour < 7 || hour >= 18 ) {\n        return 'dark';\n      }\n\n      return 'light';\n    }\n  },\n\n  async loadServer( {\n    state, dispatch, commit, rootState, rootGetters\n  }, ignoreKey) {\n    let server = { data: {} };\n\n    try {\n      const all = await dispatch('management/findAll', {\n        type: STEVE.PREFERENCE,\n        opt:  {\n          url:                  'userpreferences',\n          force:                true,\n          watch:                false,\n          redirectUnauthorized: false,\n          stream:               false,\n        }\n      }, { root: true });\n\n      server = all?.[0];\n    } catch (e) {\n      console.error('Error loading preferences', e); // eslint-disable-line no-console\n\n      return;\n    }\n\n    if ( !server?.data ) {\n      return;\n    }\n\n    // if prefsBeforeLogin has values from login page, update the backend\n    if (Object.keys(prefsBeforeLogin).length > 0) {\n      Object.keys(prefsBeforeLogin).forEach((key) => {\n        server.data[key] = prefsBeforeLogin[key];\n      });\n\n      await server.save({ redirectUnauthorized: false });\n\n      // Clear prefsBeforeLogin, as we have now saved theses\n      prefsBeforeLogin = {};\n    }\n\n    for (const key in state.definitions) {\n      const definition = state.definitions[key];\n      let value = clone(server.data[key]);\n\n      if (value === undefined && definition.inheritFrom) {\n        value = clone(server.data[definition.inheritFrom]);\n      }\n\n      if ( value === undefined || key === ignoreKey) {\n        continue;\n      }\n\n      if ( definition.parseJSON ) {\n        try {\n          value = JSON.parse(value);\n        } catch (err) {\n          console.error('Error parsing server pref', key, value, err); // eslint-disable-line no-console\n          continue;\n        }\n      }\n\n      if ( definition.mangleRead ) {\n        value = definition.mangleRead(value);\n      }\n\n      commit('load', { key, value });\n    }\n\n    return server;\n  },\n\n  setLastVisited({ state, dispatch, getters }, route) {\n    if (!route) {\n      return;\n    }\n\n    // Only save the last visited page if the user has that set as the login route preference\n    const afterLoginRoutePref = getters['get'](AFTER_LOGIN_ROUTE);\n    const doNotTrackLastVisited = typeof afterLoginRoutePref !== 'string' || afterLoginRoutePref !== 'last-visited';\n\n    if (doNotTrackLastVisited) {\n      return;\n    }\n\n    const toSave = getLoginRoute(route);\n\n    return dispatch('set', { key: LAST_VISITED, value: toSave });\n  },\n\n  toggleTheme({ getters, dispatch }) {\n    const value = getters[THEME] === 'light' ? 'dark' : 'light';\n\n    return dispatch('set', { key: THEME, value });\n  },\n\n  setBrandStyle({ rootState, rootGetters }, dark = false) {\n    if (rootState.managementReady) {\n      try {\n        const brandSetting = rootGetters['management/byId'](MANAGEMENT.SETTING, SETTING.BRAND);\n\n        if (brandSetting && brandSetting.value && brandSetting.value !== '') {\n          const brand = brandSetting.value;\n\n          const brandMeta = require(`~shell/assets/brand/${ brand }/metadata.json`);\n          const hasStylesheet = brandMeta.hasStylesheet === 'true';\n\n          if (hasStylesheet) {\n            document.body.classList.add(brand);\n          } else {\n            // TODO option apply color at runtime\n          }\n        }\n      } catch {}\n    }\n  }\n};\n\nfunction getLoginRoute(route) {\n  let parts = route.name?.split('-') || [];\n  const params = {};\n  const routeParams = route.params || {};\n\n  // Find the 'resource' part of the route, if it is there\n  const index = parts.findIndex((p) => p === 'resource');\n\n  if (index >= 0) {\n    parts = parts.slice(0, index);\n  }\n\n  // Just keep the params that are needed\n  parts.forEach((param) => {\n    if (routeParams[param]) {\n      params[param] = routeParams[param];\n    }\n  });\n\n  return {\n    name: parts.join('-'),\n    params\n  };\n}\n"],"mappings":"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","ignoreList":[]}]}