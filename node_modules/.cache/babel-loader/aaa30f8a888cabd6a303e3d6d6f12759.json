{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--17-0!/home/ubuntu/suseconf/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/types/store/pagination.types.ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/types/store/pagination.types.ts","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["NAMESPACE_FILTER_NS_FULL_PREFIX","NAMESPACE_FILTER_P_FULL_PREFIX","PaginationFilterField","_createClass","_ref","field","value","_ref$equals","equals","_ref$exact","exact","_classCallCheck","PaginationParam","_ref2","param","_ref2$equals","_ref2$fields","fields","PaginationParamFilter","_PaginationParam","_ref3","_ref3$equals","_ref3$fields","_callSuper","_inherits","key","createSingleField","createMultipleFields","PaginationParamProjectOrNamespace","_PaginationParam2","_ref4","_ref4$equals","_ref4$projectOrNamesp","projectOrNamespace","safeFields","map","f","replace","PaginationArgs","_ref5","_ref5$page","page","_ref5$pageSize","pageSize","_ref5$sort","sort","_ref5$filters","filters","_ref5$projectsOrNames","projectsOrNamespaces","Array","isArray","FilterArgs","_PaginationArgs","_ref6","_ref6$sort","_ref6$filters","_ref6$projectsOrNames"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/types/store/pagination.types.ts"],"sourcesContent":["import { NAMESPACE_FILTER_NS_FULL_PREFIX, NAMESPACE_FILTER_P_FULL_PREFIX } from '@shell/utils/namespace-filter';\n\n// Pagination Typing\n// These structures are designed to offer both convenience and flexibility based on a common structure and are\n// converted to the url param format as per https://github.com/rancher/steve.\n//\n// Simple use cases such as filtering by a single param should be easy to use.\n// More complex filtering (and'ing and 'or'ing multiple fields) is also supported.\n//\n// The top level object `PaginationArgs` contains all properties that will be converted to url params\n//\n// The two important / complex params are currently\n// - `filter` https://github.com/rancher/steve?tab=readme-ov-file#filter\n//   - represented by `PaginationParamFilter extends PaginationParam`\n//   - Examples\n//     - filter=metadata.name=123\n//     - filter=metadata.name=123,metadata.name=456 (name is 123 OR 456)\n//     - filter=metadata.name=123&filter=metadata.namespace=abc (name 123 AND namespace abc)\n// - `projectsornamespaces` https://github.com/rancher/steve?tab=readme-ov-file#projectsornamespaces\n//   - represented by `PaginationParamProjectOrNamespace extends PaginationParam`\n//   - Examples\n//     - projectsornamespaces=123\n//     - projectsornamespaces=123,456 (projects or namespaces that have id 123 OR 456)\n//\n//\n// Some of the types below are defined using classes instead of TS types/interfaces\n// - Avoid making complex json objects by using clearer instance constructors\n//   - Better documented\n//   - Defaults (a lot of the time convenience > utility)\n// - Adds some kind of typing in pure js docs\n//   - class ctor links to definition, instead of object just being a random json blob)\n//   - helps VSCode jsdoc highlighting\n\n/**\n * Sort the pagination result\n *\n * For more information regarding the API see https://github.com/rancher/steve?tab=readme-ov-file#sort\n */\nexport interface PaginationSort {\n  /**\n   * Name of field within the object to sort by\n   */\n  field: string,\n  asc: boolean\n}\n\n/**\n * Filter the pagination result by these specific fields\n *\n * For example\n *\n * - metadata.name=test\n * - metadata.namespace!=system\n *\n * For more information regarding the API see https://github.com/rancher/steve?tab=readme-ov-file#query-parameters\n */\nexport class PaginationFilterField {\n  /**\n   * Name of field within the object to filter by for example the x of x=y\n   *\n   * This can be optional for some (projectsornamespaces)\n   */\n  field?: string;\n  /**\n   * Value of field within the object to filter by for example the y of x=y\n   */\n  value: string;\n  /**\n   * Equality field within the object to filter by for example the `=` or `!=` of x=y\n   */\n  equals: boolean;\n  /**\n   * Match the field exactly. False for partial matches\n   *\n   * Value: pod1\n   * Exact: true. \"p\" no, \"pod\", no, \"pod1\" yes\n   * Exact: false. \"p\" yes, \"pod\", yes, \"pod1\" yes\n   */\n  exact: boolean;\n\n  constructor(\n    {\n      field, value, equals = true, exact = true\n    }:\n    { field?: string; value: string; equals?: boolean; exact?: boolean;}\n  ) {\n    this.field = field;\n    this.value = value;\n    this.equals = equals;\n    this.exact = exact;\n  }\n}\n\n/**\n * Represents filter like params, for example\n *\n * - `filter=abc!=xyz&def=123`\n * - `projectsornamespace!=p-3456`\n *\n * ### Params\n * #### Filter\n * - For more information regarding the API see https://github.com/rancher/steve?tab=readme-ov-file#filter\n *\n * #### Projects Or Namespace\n * - For more information regarding the API see https://github.com/rancher/steve?tab=readme-ov-file#projectsornamespaces\n *\n * ### Combining Params\n * Params can be combined in two logical ways\n *\n * 1) AND\n *    - Used when you would like to filter by something like a=1 AND b=2 AND c=3\n *    - To do this multiple instances of `PaginationParam` are used in an array\n *      - Object Structure\n *        ```\n *        [\n *          PaginationParam,\n *          PaginationParam,\n *          PaginationParam\n *        ]\n *        ```\n *      - Results in url\n *        ```\n *        filter=a=1&filter=b=2&filter=c=3\n *        ```\n *      - Examples\n *        - `filter=metadata.namespace=abc&filter=metadata.name=123,property=123`\n * 2) OR\n *    - Used when you would like to filter by something like a=1 OR b=2 OR c=3\n *    - To do this multiple fields within a single PaginationParam is used\n *      - Object Structure\n *        ```\n *        [\n *          PaginationParam {\n *            PaginationFilterField,\n *            PaginationFilterField,\n *            PaginationFilterField\n *          }\n *        ]\n *        ```\n *      - Results in url\n *        ```\n *        filter=a=1,b=2,c=3\n *        ```\n *\n *      - For example `filter=a=1,b=2,c=3`\n *\n *\n * This structure should give enough flexibility to cover all uses.\n *\n *\n */\nexport abstract class PaginationParam {\n  /**\n   * Query Param. For example `filter` or `projectsornamespaces`\n   */\n  param: string;\n  /**\n   * should fields equal param.\n   *\n   * For example projectsornamexspaces=x or projectsornamexspaces!=x\n   */\n  equals: boolean;\n  /**\n   * Fields to filter by\n   *\n   * For example metadata.namespace=abc OR metadata.namespace=xyz\n   */\n  fields: PaginationFilterField[];\n\n  constructor(\n    { param, equals = true, fields = [] }:\n    {\n      param: string;\n      /**\n       * should param equal fields\n       *\n       * For definition see {@link PaginationParam} `equals`\n       */\n      equals?: boolean;\n      /**\n       * Collection of fields to filter by\n       *\n       * For definition see {@link PaginationParam} `fields`\n       */\n      fields?: PaginationFilterField[];\n  }) {\n    this.param = param;\n    this.equals = equals;\n    this.fields = fields;\n  }\n}\n\n/**\n * This is a convenience class for the `filter` param which works some magic, adds defaults and converts to the required PaginationParam format\n *\n * See description for {@link PaginationParam} for how multiple of these can be combined together to AND or OR together\n *\n * For more information regarding the API see https://github.com/rancher/steve?tab=readme-ov-file#filter\n */\nexport class PaginationParamFilter extends PaginationParam {\n  constructor(\n    { equals = true, fields = [] }:\n    {\n      /**\n       * should param equal fields\n       *\n       * For definition see {@link PaginationParam} `equals`\n       */\n      equals?: boolean;\n      /**\n       * Collection of fields to filter by.\n       *\n       * Fields are ORd together\n       *\n       * For definition see {@link PaginationParam} `fields`\n       */\n      fields?: PaginationFilterField[];\n    }\n  ) {\n    super({\n      param: 'filter',\n      equals,\n      fields\n    });\n  }\n\n  /**\n   * Convenience method when you just want an instance of {@link PaginationParamFilter} with a simple `filter=x=y` param\n   */\n  static createSingleField(field: { field?: string; value: string; equals?: boolean; }): PaginationParam {\n    return new PaginationParamFilter({ fields: [new PaginationFilterField(field)] });\n  }\n\n  /**\n   * Convenience method when you just want an instance of {@link PaginationParamFilter} with a simple `filter=a=1,b=2,c=3` PaginationParam\n   *\n   * These will be OR'd together\n   */\n  static createMultipleFields(fields: PaginationFilterField[]): PaginationParam {\n    return new PaginationParamFilter({ fields });\n  }\n}\n\n/**\n * This is a convenience class for the `projectsornamespaces` param which works some magic, adds defaults and converts to the required PaginationParam format\n *\n * See description for {@link PaginationParam} for how multiple of these can be combined together to AND or OR together\n *\n * For more information regarding the API see https://github.com/rancher/steve?tab=readme-ov-file#projectsornamespaces\n */\nexport class PaginationParamProjectOrNamespace extends PaginationParam {\n  constructor(\n    { equals = true, projectOrNamespace = [] }:\n    {\n      /**\n       * should param equal fields\n       * For definition see {@link PaginationParam} `equals`\n       */\n      equals?: boolean;\n       /**\n       * Collection of projects / namespace id's to filter by\n       *\n       * These are OR'd together\n       *\n       * For clarification on definition see {@link PaginationFilterField}\n       */\n      projectOrNamespace?: string[];\n    }\n  ) {\n    const safeFields = projectOrNamespace.map((f) => {\n      return new PaginationFilterField({\n        value: f\n          .replace(NAMESPACE_FILTER_NS_FULL_PREFIX, '')\n          .replace(NAMESPACE_FILTER_P_FULL_PREFIX, '')\n      });\n    });\n\n    super({\n      param:  'projectsornamespaces',\n      equals,\n      fields: safeFields\n    });\n  }\n}\n\n/**\n * Pagination settings sent to actions and persisted to store\n *\n * Use this for making pagination requests that utilise the new vai cache backed API\n */\nexport class PaginationArgs {\n  /**\n   * Page number to fetch\n   */\n  page: number | null;\n  /**\n   * Number of results in the page\n   */\n  pageSize?: number | null;\n  /**\n   * Sort the results\n   *\n   * For more info see {@link PaginationSort}\n   */\n  sort: PaginationSort[];\n  /**\n   * A collection of `filter` params\n   *\n   * For more info see {@link PaginationParamFilter}\n   */\n  filters: PaginationParamFilter[];\n  /**\n   * A collection of `projectsornamespace` params\n   *\n   * For more info see {@link PaginationParamProjectOrNamespace}\n   */\n  projectsOrNamespaces: PaginationParamProjectOrNamespace[];\n\n  /**\n   * Creates an instance of PaginationArgs.\n   *\n   * Contains defaults to avoid creating complex json objects all the time\n   */\n  constructor({\n    page = 1,\n    pageSize = 10,\n    sort = [],\n    filters = [],\n    projectsOrNamespaces = [],\n  }:\n  // This would be neater as just Partial<PaginationArgs> but we lose all jsdoc\n  {\n    /**\n     * For definition see {@link PaginationArgs} `page`\n     */\n    page?: number | null,\n    /**\n     * For definition see {@link PaginationArgs} `pageSize`\n     */\n    pageSize?: number | null,\n    /**\n     * For definition see {@link PaginationArgs} `sort`\n     */\n    sort?: PaginationSort[],\n    /**\n     * Automatically wrap if not an array\n     *\n     * For definition see {@link PaginationArgs} `filters`\n     */\n    filters?: PaginationParamFilter | PaginationParamFilter[],\n    /**\n     * Automatically wrap if not an array\n     *\n     * For definition see {@link PaginationArgs} `projectsOrNamespaces`\n     */\n    projectsOrNamespaces?: PaginationParamProjectOrNamespace | PaginationParamProjectOrNamespace[],\n  }) {\n    this.page = page;\n    this.pageSize = pageSize;\n    this.sort = sort;\n    if (filters) {\n      this.filters = Array.isArray(filters) ? filters : [filters];\n    } else {\n      this.filters = [];\n    }\n    if (projectsOrNamespaces) {\n      this.projectsOrNamespaces = Array.isArray(projectsOrNamespaces) ? projectsOrNamespaces : [projectsOrNamespaces];\n    } else {\n      this.projectsOrNamespaces = [];\n    }\n  }\n}\n\n/**\n * Wrapper around {@link PaginationArgs}\n *\n * Use this for making requests that utilise filtering backed by the new vai cache backed API\n */\nexport class FilterArgs extends PaginationArgs {\n  /**\n     * Creates an instance of PaginationArgs.\n     *\n     * Contains defaults to avoid creating complex json objects all the time\n     */\n  constructor({\n    sort = [],\n    filters = [],\n    projectsOrNamespaces = [],\n  }:\n  // This would be neater as just Partial<PaginationArgs> but we lose all jsdoc\n  {\n    /**\n     * For definition see {@link PaginationArgs} `sort`\n     */\n    sort?: PaginationSort[],\n    /**\n     * Automatically wrap if not an array\n     *\n     * For definition see {@link PaginationArgs} `filters`\n     */\n    filters?: PaginationParamFilter | PaginationParamFilter[],\n    /**\n     * Automatically wrap if not an array\n     *\n     * For definition see {@link PaginationArgs} `projectsOrNamespaces`\n     */\n    projectsOrNamespaces?: PaginationParamProjectOrNamespace | PaginationParamProjectOrNamespace[],\n  }) {\n    super({\n      page: null, pageSize: null, sort, filters, projectsOrNamespaces\n    });\n  }\n}\n\n/**\n * Overall result of a pagination request.\n *\n * Does not contain actual resources but overall stats (count, pages, etc)\n */\nexport interface StorePaginationResult {\n  count: number,\n  pages: number,\n  /**\n   * The last time the resource was updated. Used to assist list watching for changes\n   */\n  timestamp: number,\n}\n\nexport interface StorePaginationRequest {\n  /**\n   * The single namespace to filter results by (as part of url path, not pagination params)\n   */\n  namespace?: string,\n  /**\n   * The set of pagination args used to create the request\n   */\n  pagination: PaginationArgs\n}\n\n/**\n * Pagination settings\n * - what was requested\n * - what was received (minus actual resources)\n *\n * Object is persisted to store\n */\nexport interface StorePagination {\n  /**\n   * Collection of args that is used to make the request\n   */\n  request: StorePaginationRequest,\n\n  /**\n   * Information in the response outside of the actual resources returned\n   */\n  result: StorePaginationResult\n}\n"],"mappings":"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","ignoreList":[]}]}