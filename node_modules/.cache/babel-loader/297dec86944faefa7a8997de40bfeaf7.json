{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/management.cattle.io.user.js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/management.cattle.io.user.js","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["NORMAN","HybridModel","cleanHybridResources","User","_HybridModel","data","ctx","_this","rehydrateNamespace","arguments","length","undefined","setClone","_classCallCheck","_description","description","_callSuper","_inherits","_createClass","key","value","cleanResource","desc","clean","get","_iterator","_createForOfIteratorHelper","principalIds","_step","s","n","done","p","startsWith","err","e","f","currentPrincipal","$rootGetters","find","_this2","map","id","PRINCIPAL","filter","displayName","username","name","nameDisplay","concat","principals","isSystem","isLocal","provider","_iterator2","_step2","idx","indexOf","driver","substr","toLowerCase","split","_this$metadata","enabled","metadata","state","set","toJSON","_get","_getPrototypeOf","prototype","call","_save","_asyncToGenerator","_regeneratorRuntime","mark","_callee","opt","clone","wrap","_callee$","_context","prev","next","$dispatch","resource","sent","canRefreshAccess","abrupt","stop","save","_x","apply","_setEnabled","_callee2","_callee2$","_context2","norman","root","setEnabled","_x2","_activate","_callee3","_callee3$","_context3","activate","_activateBulk","_callee4","items","_callee4$","_context4","Promise","all","item","activateBulk","_x3","_deactivate","_callee5","_callee5$","_context5","deactivate","_deactivateBulk","_callee6","_callee6$","_context6","deactivateBulk","_x4","_refreshGroupMembership","_callee7","user","_callee7$","_context7","type","USER","doAction","refreshGroupMembership","canActivate","stateOk","permissionOk","hasLink","isCurrentUser","action","label","t","icon","bulkable","bulkAction","weight","divider","_toConsumableArray","formatter","content","_details","_this$norman","_this$norman2","remove","_this$norman3","default"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/management.cattle.io.user.js"],"sourcesContent":["import { NORMAN } from '@shell/config/types';\nimport HybridModel, { cleanHybridResources } from '@shell/plugins/steve/hybrid-class';\n\nexport default class User extends HybridModel {\n  // Preserve description\n  constructor(data, ctx, rehydrateNamespace = null, setClone = false) {\n    const _description = data.description;\n\n    super(data, ctx, rehydrateNamespace, setClone);\n    this.description = _description;\n  }\n\n  // Clean the Norman properties, but keep description\n  cleanResource(data) {\n    const desc = data.description;\n    const clean = cleanHybridResources(data);\n\n    clean._description = desc;\n\n    return clean;\n  }\n\n  get isSystem() {\n    for ( const p of this.principalIds || [] ) {\n      if ( p.startsWith('system://') ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  get isCurrentUser() {\n    const currentPrincipal = this.$rootGetters['auth/principalId'];\n\n    return !!(this.principalIds || []).find((p) => p === currentPrincipal);\n  }\n\n  get principals() {\n    return this.principalIds\n      .map((id) => this.$rootGetters['rancher/byId'](NORMAN.PRINCIPAL, id))\n      .filter((p) => p);\n  }\n\n  get nameDisplay() {\n    return this.displayName || this.username || this.id;\n  }\n\n  get labelForSelect() {\n    const name = this.nameDisplay;\n    const id = this.id;\n\n    if ( name === id ) {\n      return id;\n    } else {\n      return `${ name } (${ id })`;\n    }\n  }\n\n  get provider() {\n    const principals = this.principalIds || [];\n    let isSystem = false;\n    let isLocal = true;\n    let provider = '';\n\n    for ( const p of principals ) {\n      const idx = p.indexOf(':');\n      const driver = p.substr(0, idx).toLowerCase().split('_')[0];\n\n      if ( driver === 'system' ) {\n        isSystem = true;\n      } else if ( driver === 'local' ) {\n        // Do nothing, defaults to local\n      } else {\n        isLocal = false;\n\n        if ( provider ) {\n          provider = 'multiple';\n        } else {\n          provider = driver;\n        }\n      }\n    }\n\n    let key;\n\n    if ( isSystem ) {\n      key = 'system';\n    } else if ( isLocal ) {\n      key = 'local';\n    } else {\n      key = provider;\n    }\n\n    return key;\n  }\n\n  get providerDisplay() {\n    return this.$rootGetters['i18n/withFallback'](`model.authConfig.provider.\"${ this.provider }\"`, null, this.provider);\n  }\n\n  get state() {\n    if ( this.enabled === false ) {\n      return 'inactive';\n    }\n\n    return this.metadata?.state?.name || 'unknown';\n  }\n\n  get description() {\n    return this._description;\n  }\n\n  set description(value) {\n    this._description = value;\n  }\n\n  // Ensure when we clone that we preserve the description\n  toJSON() {\n    const data = super.toJSON();\n\n    data.description = this._description;\n    delete data._description;\n\n    return data;\n  }\n\n  async save(opt) {\n    const clone = await this.$dispatch('clone', { resource: this });\n\n    // Remove local properties\n    delete clone.canRefreshAccess;\n\n    return clone._save(opt);\n  }\n\n  async setEnabled(enabled) {\n    const clone = await this.$dispatch('rancher/clone', { resource: this.norman }, { root: true });\n\n    clone.enabled = enabled;\n    await clone.save();\n  }\n\n  async activate() {\n    await this.setEnabled(true);\n  }\n\n  async activateBulk(items) {\n    await Promise.all(items.map((item) => item.setEnabled(true)));\n  }\n\n  async deactivate() {\n    await this.setEnabled(false);\n  }\n\n  async deactivateBulk(items) {\n    await Promise.all(items.map((item) => item.setEnabled(false)));\n  }\n\n  async refreshGroupMembership() {\n    const user = await this.$dispatch('rancher/find', {\n      type: NORMAN.USER,\n      id:   this.id,\n    }, { root: true });\n\n    await user.doAction('refreshauthprovideraccess');\n  }\n\n  canActivate(state) {\n    const stateOk = state ? this.state === 'inactive' : this.state === 'active';\n    const permissionOk = this.hasLink('update'); // Not canUpdate, only gate on api not whether editable pages should be visible\n\n    return stateOk && permissionOk && !this.isCurrentUser;\n  }\n\n  get _availableActions() {\n    return [\n      {\n        action:     'activate',\n        label:      this.t('action.activate'),\n        icon:       'icon icon-play',\n        bulkable:   true,\n        bulkAction: 'activateBulk',\n        enabled:    this.canActivate(true),\n        weight:     2\n      },\n      {\n        action:     'deactivate',\n        label:      this.t('action.deactivate'),\n        icon:       'icon icon-pause',\n        bulkable:   true,\n        bulkAction: 'deactivateBulk',\n        enabled:    this.canActivate(false),\n        weight:     1\n      },\n      {\n        action:  'refreshGroupMembership',\n        label:   this.t('authGroups.actions.refresh'),\n        icon:    'icon icon-refresh',\n        enabled: this.canRefreshAccess\n      },\n      { divider: true },\n      ...super._availableActions,\n    ];\n  }\n\n  get details() {\n    return [\n      {\n        label:     this.t('user.detail.username'),\n        formatter: 'CopyToClipboard',\n        content:   this.username\n      },\n      ...this._details\n    ];\n  }\n\n  get confirmRemove() {\n    return true;\n  }\n\n  get norman() {\n    return this.$rootGetters['rancher/byId'](NORMAN.USER, this.id);\n  }\n\n  get canDelete() {\n    return this.norman?.hasLink('remove') && !this.isCurrentUser;\n  }\n\n  get canUpdate() {\n    return this.norman?.hasLink('update');\n  }\n\n  remove() {\n    return this.norman?.remove();\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}