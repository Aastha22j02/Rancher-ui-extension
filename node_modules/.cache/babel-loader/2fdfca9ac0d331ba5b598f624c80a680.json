{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/models/catalog.cattle.io.clusterrepo.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/models/catalog.cattle.io.clusterrepo.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Vue","parse","CATALOG","insertAt","CATALOG_TYPE","SteveModel","ClusterRepo","_SteveModel","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","applyDefaults","spec","set","url","get","out","_superPropGet","divider","action","label","t","icon","enabled","links","update","bulkable","_refresh","_asyncToGenerator","_regeneratorRuntime","mark","_callee","now","wrap","_callee$","_context","prev","next","Date","toISOString","replace","forceUpdate","save","waitForState","$dispatch","force","reset","root","stop","refresh","apply","_this$spec","gitRepo","_this$spec$url","hasExplicitOciUrl","split","hasInsecurePlainHttp","Object","prototype","hasOwnProperty","call","_this$spec2","_this$spec3","_this$spec4","_this$spec5","parsed","ok","host","toLowerCase","endsWith","isRancherSource","metadata","name","isRancher","isPartner","_this$metadata","color","parseInt","annotations","COLOR","isNaN","concat","_this$metadata2","state","isOciType","_this$metadata3","$rootGetters","_this$status","status","_this$spec6","gitBranch","content","typeDisplay","downloadTime","formatter","formatterOpts","addSuffix","_this$metadata4","_this$status2","_objectSpread","transitioning","generation","observedGeneration","undefined","waitForOperation","operationId","timeout","_this","interval","length","waitForTestFn","$getters","OPERATION","type","id","default"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/models/catalog.cattle.io.clusterrepo.js"],"sourcesContent":["import Vue from 'vue';\nimport { parse } from '@shell/utils/url';\nimport { CATALOG } from '@shell/config/labels-annotations';\nimport { insertAt } from '@shell/utils/array';\nimport { CATALOG as CATALOG_TYPE } from '@shell/config/types';\n\nimport SteveModel from '@shell/plugins/steve/steve-class';\n\nexport default class ClusterRepo extends SteveModel {\n  applyDefaults() {\n    if ( !this.spec ) {\n      Vue.set(this, 'spec', { url: '' });\n    }\n  }\n\n  get _availableActions() {\n    const out = super._availableActions;\n\n    insertAt(out, 0, { divider: true });\n\n    insertAt(out, 0, {\n      action:   'refresh',\n      label:    this.t('action.refresh'),\n      icon:     'icon icon-refresh',\n      enabled:  !!this.links.update,\n      bulkable: true,\n    });\n\n    return out;\n  }\n\n  async refresh() {\n    const now = (new Date()).toISOString().replace(/\\.\\d+Z$/, 'Z');\n\n    this.spec.forceUpdate = now;\n    await this.save();\n\n    await this.waitForState('active', 10000, 1000);\n\n    this.$dispatch('catalog/load', { force: true, reset: true }, { root: true });\n  }\n\n  get isGit() {\n    return !!this.spec?.gitRepo;\n  }\n\n  get isOciType() {\n    const hasExplicitOciUrl = this.spec.url?.split(':')[0] === 'oci';\n    // insecurePlainHttp is only valid for OCI URL's and allows insecure connections to registries without enforcing TLS checks\n    const hasInsecurePlainHttp = Object.prototype.hasOwnProperty.call(this.spec, ('insecurePlainHttp'));\n\n    return hasExplicitOciUrl || hasInsecurePlainHttp;\n  }\n\n  get isRancherSource() {\n    let parsed;\n\n    if ( this.spec?.url && this.spec?.gitRepo ) {\n      // Well that's suspicious...\n      return false;\n    }\n\n    if ( this.spec?.url ) {\n      parsed = parse(this.spec.url);\n      if ( parsed && ok(parsed.host) ) {\n        return true;\n      }\n    }\n\n    if ( this.spec?.gitRepo ) {\n      parsed = parse(this.spec.gitRepo);\n      if ( parsed && ok(parsed.host) ) {\n        return true;\n      }\n    }\n\n    return false;\n\n    function ok(host) {\n      host = (host || '').toLowerCase();\n\n      return host === 'rancher.io' || host.endsWith('.rancher.io');\n    }\n  }\n\n  get isRancher() {\n    return this.isRancherSource && this.metadata.name === 'rancher-charts';\n  }\n\n  get isPartner() {\n    return this.isRancherSource && this.metadata.name === 'rancher-partner-charts';\n  }\n\n  get color() {\n    if ( this.isRancher ) {\n      return 'rancher';\n    } else if ( this.isPartner ) {\n      return 'partner';\n    } else {\n      const color = parseInt(this.metadata?.annotations?.[CATALOG.COLOR], 10);\n\n      if ( isNaN(color) || color <= 0 || color > 8 ) {\n        return null;\n      }\n\n      return `color${ color }`;\n    }\n  }\n\n  get canLoad() {\n    return this.metadata?.state?.name === 'active';\n  }\n\n  get typeDisplay() {\n    if ( this.spec.gitRepo ) {\n      return 'git';\n    } else if ( this.spec.url ) {\n      return this.isOciType ? 'oci' : 'http';\n    } else {\n      return '?';\n    }\n  }\n\n  get nameDisplay() {\n    const name = this.metadata?.name;\n    const key = `catalog.repo.name.\"${ name }\"`;\n\n    return this.$rootGetters['i18n/withFallback'](key, null, name);\n  }\n\n  get urlDisplay() {\n    return this.status?.url || this.spec.gitRepo || this.spec.url;\n  }\n\n  get branchDisplay() {\n    return this.spec?.gitBranch || '(default)';\n  }\n\n  get details() {\n    return [\n      {\n        label:   'Type',\n        content: this.typeDisplay,\n      },\n      {\n        label:         'Downloaded',\n        content:       this.status.downloadTime,\n        formatter:     'LiveDate',\n        formatterOpts: { addSuffix: true },\n      },\n    ];\n  }\n\n  get stateObj() {\n    return this.metadata?.state ? {\n      ...this.metadata.state,\n      transitioning: this.metadata.generation > this.status?.observedGeneration ? false : this.metadata.state.transitioning\n    } : undefined;\n  }\n\n  waitForOperation(operationId, timeout, interval = 2000) {\n    return this.waitForTestFn(() => {\n      if (!this.$getters['schemaFor'](CATALOG_TYPE.OPERATION)) {\n        return false;\n      }\n      if (this.$getters['byId'](CATALOG_TYPE.OPERATION, operationId)) {\n        return true;\n      }\n      this.$dispatch('find', {\n        type: CATALOG_TYPE.OPERATION,\n        id:   operationId\n      });\n    }, `catalog operation fetch`, timeout, interval);\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}