{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/models/cluster.x-k8s.io.machine.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/models/cluster.x-k8s.io.machine.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ADDRESSES","CAPI","NODE","CAPI_LABELS","MACHINE_ROLES","NAME","EXPLORER","listNodeRoles","escapeHtml","insertAt","findBy","get","downloadUrl","SteveModel","notOnlyOfRole","current","all","foundType","isControlPlane","isEtcd","Object","keys","length","_iterator","_createForOfIteratorHelper","_step","_loop","m","value","forEach","type","v","_ret","s","n","done","err","e","f","CapiMachine","_SteveModel","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","out","_superPropGet","openSsh","action","enabled","links","shell","isRunning","icon","label","downloadKeys","sshkeys","t","forceRemove","altAction","isRemoveForceable","scaleDown","bulkAction","canScaleDown","bulkable","divider","name","nameDisplay","$dispatch","id","concat","component","attrs","machine","pod","root","toggleForceRemoveModal","resources","undefined","componentProps","_forceMachineRemove","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","machineRef","sent","setAnnotation","FORCE_MACHINE_REMOVE","save","stop","forceMachineRemove","apply","toggleScaleDownModal","modalWidth","_machineRef","_callee2","ref","kind","_callee2$","_context2","spec","infrastructureRef","namespace","toLowerCase","abrupt","clusterName","clusterId","metadata","cluster","$rootGetters","RANCHER_CLUSTER","_this$metadata","labels","DEPLOYMENT_NAME","poolId","poolName","MACHINE_DEPLOYMENT","_this$metadata2","_this$status","_this$cluster","kubeId","status","nodeRef","params","product","resource","_this$cluster2","_this$metadata3","WORKER","CONTROL_PLANE","ETCD","conditions","reasonMessage","reason","_this$pool","_this$cluster3","canUpdate","pool","machines","isWorker","_this$status2","phase","_this$status3","internal","addresses","find","_ref","INTERNAL_IP","address","_this$status4","external","_ref2","EXTERNAL_IP","default"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/models/cluster.x-k8s.io.machine.js"],"sourcesContent":["import { ADDRESSES, CAPI, NODE } from '@shell/config/types';\nimport { CAPI as CAPI_LABELS, MACHINE_ROLES } from '@shell/config/labels-annotations';\nimport { NAME as EXPLORER } from '@shell/config/product/explorer';\nimport { listNodeRoles } from '@shell/models/cluster/node';\nimport { escapeHtml } from '@shell/utils/string';\nimport { insertAt, findBy } from '@shell/utils/array';\nimport { get } from '@shell/utils/object';\nimport { downloadUrl } from '@shell/utils/download';\nimport SteveModel from '@shell/plugins/steve/steve-class';\n\n/**\n * Prevent scaling down control plane or etcd machines to zero\n *\n * @param {machine | machineDeployment} current\n * @param {machine[]} all\n * @returns\n */\nexport function notOnlyOfRole(current, all) {\n  // This is a little overly optimised but avoids iterating over all machines every time\n\n  const foundType = { };\n\n  if (current.isControlPlane) {\n    foundType.isControlPlane = false;\n  }\n  if (current.isEtcd) {\n    foundType.isEtcd = false;\n  }\n  if (Object.keys(foundType).length === 0) {\n    return true; // It's neither type, so can always scale down\n  }\n\n  // If we have more than one of the required types then it's not the last of that type and can be scaled down\n  for (const m of all) {\n    Object.keys(foundType).forEach((type) => {\n      // Have we found this type?\n      if (m[type]) {\n        if (foundType[type]) {\n          // Another of this type exists, we don't need to check for it further\n          delete foundType[type];\n        } else {\n          // Record that we've found type\n          foundType[type] = true;\n        }\n      }\n    });\n\n    // Are there no types left to look for?\n    if (Object.keys(foundType).length === 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexport default class CapiMachine extends SteveModel {\n  get _availableActions() {\n    const out = super._availableActions;\n\n    const openSsh = {\n      action:  'openSsh',\n      enabled: !!this.links.shell && this.isRunning,\n      icon:    'icon icon-fw icon-chevron-right',\n      label:   'SSH Shell',\n    };\n    const downloadKeys = {\n      action:  'downloadKeys',\n      enabled: !!this.links.sshkeys,\n      icon:    'icon icon-fw icon-download',\n      label:   this.t('node.actions.downloadSSHKey'),\n    };\n    const forceRemove = {\n      action:    'toggleForceRemoveModal',\n      altAction: 'forceMachineRemove',\n      enabled:   !!this.isRemoveForceable,\n      label:     this.t('node.actions.forceDelete'),\n      icon:      'icon icon-trash',\n    };\n    const scaleDown = {\n      action:     'toggleScaleDownModal',\n      bulkAction: 'toggleScaleDownModal',\n      enabled:    !!this.canScaleDown,\n      icon:       'icon icon-minus icon-fw',\n      label:      this.t('node.actions.scaleDown'),\n      bulkable:   true\n    };\n\n    insertAt(out, 0, { divider: true });\n    insertAt(out, 0, downloadKeys);\n    insertAt(out, 0, openSsh);\n    insertAt(out, 0, scaleDown);\n    insertAt(out, 0, forceRemove);\n\n    return out;\n  }\n\n  get canClone() {\n    return false;\n  }\n\n  openSsh(name) {\n    const label = name || this.nameDisplay;\n\n    this.$dispatch('wm/open', {\n      id:        `${ this.id }-ssh`,\n      label,\n      icon:      'terminal',\n      component: 'MachineSsh',\n      attrs:     { machine: this, pod: {} }\n    }, { root: true });\n  }\n\n  downloadKeys() {\n    downloadUrl(this.links.sshkeys);\n  }\n\n  toggleForceRemoveModal(resources = this) {\n    this.$dispatch('promptModal', {\n      componentProps: { machine: resources },\n      component:      'ForceMachineRemoveDialog'\n    });\n  }\n\n  async forceMachineRemove() {\n    const machine = await this.machineRef();\n\n    machine.setAnnotation(CAPI_LABELS.FORCE_MACHINE_REMOVE, 'true');\n    await machine.save();\n  }\n\n  toggleScaleDownModal(resources = this) {\n    this.$dispatch('promptModal', {\n      resources,\n      component:  'ScaleMachineDownDialog',\n      modalWidth: '450px'\n    });\n  }\n\n  async machineRef() {\n    const ref = this.spec.infrastructureRef;\n    const id = `${ ref.namespace }/${ ref.name }`;\n    const kind = `rke-machine.cattle.io.${ ref.kind.toLowerCase() }`;\n\n    return await this.$dispatch('find', { type: kind, id });\n  }\n\n  get cluster() {\n    if ( !this.spec.clusterName ) {\n      return null;\n    }\n\n    const clusterId = `${ this.metadata.namespace }/${ this.spec.clusterName }`;\n\n    const cluster = this.$rootGetters['management/byId'](CAPI.RANCHER_CLUSTER, clusterId);\n\n    return cluster;\n  }\n\n  get poolName() {\n    return this.metadata?.labels?.[ CAPI_LABELS.DEPLOYMENT_NAME ] || '';\n  }\n\n  get poolId() {\n    const poolId = `${ this.metadata.namespace }/${ this.poolName }`;\n\n    return poolId;\n  }\n\n  get pool() {\n    return this.$rootGetters['management/byId'](CAPI.MACHINE_DEPLOYMENT, this.poolId);\n  }\n\n  get operatingSystem() {\n    return this.metadata?.labels['cattle.io/os'] || 'linux';\n  }\n\n  get kubeNodeDetailLocation() {\n    const kubeId = this.status?.nodeRef?.name;\n    const cluster = this.cluster?.status?.clusterName;\n\n    if ( kubeId && cluster ) {\n      return {\n        name:   'c-cluster-product-resource-id',\n        params: {\n          cluster:  this.cluster.status.clusterName,\n          product:  EXPLORER,\n          resource: NODE,\n          id:       kubeId\n        }\n      };\n    }\n\n    return kubeId;\n  }\n\n  get groupByLabel() {\n    const name = this.cluster?.nameDisplay || this.spec.clusterName;\n\n    return this.$rootGetters['i18n/t']('resourceTable.groupLabel.cluster', { name: escapeHtml(name) });\n  }\n\n  get labels() {\n    return this.metadata?.labels || {};\n  }\n\n  get isWorker() {\n    return `${ this.labels[MACHINE_ROLES.WORKER] }` === 'true';\n  }\n\n  get isControlPlane() {\n    return `${ this.labels[MACHINE_ROLES.CONTROL_PLANE] }` === 'true';\n  }\n\n  get isEtcd() {\n    return `${ this.labels[MACHINE_ROLES.ETCD] }` === 'true';\n  }\n\n  get isRemoveForceable() {\n    const conditions = get(this, 'status.conditions');\n    const reasonMessage = (findBy(conditions, 'type', 'InfrastructureReady') || {}).reason;\n\n    if (reasonMessage === 'DeleteError') {\n      return true;\n    }\n\n    return null;\n  }\n\n  get canScaleDown() {\n    if (!this.canUpdate || !this.pool?.canUpdate) {\n      return false;\n    }\n\n    return notOnlyOfRole(this, this.cluster?.machines);\n  }\n\n  get roles() {\n    const { isControlPlane, isWorker, isEtcd } = this;\n\n    return listNodeRoles(isControlPlane, isWorker, isEtcd, this.t('generic.all'));\n  }\n\n  get isRunning() {\n    return this.status?.phase === 'Running';\n  }\n\n  get internalIp() {\n    // This shows in the IP address column for RKE2 nodes in the\n    // list of nodes in the cluster detail page of Cluster Management.\n    const internal = this.status?.addresses?.find(({ type }) => {\n      return type === ADDRESSES.INTERNAL_IP;\n    })?.address;\n\n    if (internal) {\n      return internal;\n    }\n\n    return this.t('generic.none');\n  }\n\n  get externalIp() {\n    const external = this.status?.addresses?.find(({ type }) => {\n      return type === ADDRESSES.EXTERNAL_IP;\n    })?.address;\n\n    if (external) {\n      return external;\n    }\n\n    return this.t('generic.none');\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}