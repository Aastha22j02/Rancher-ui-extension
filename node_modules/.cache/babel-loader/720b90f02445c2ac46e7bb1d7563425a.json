{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/utils/grafana.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/utils/grafana.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["haveV2Monitoring","parse","parseUrl","addParam","CATALOG","MONITORING_VERSION_ALT_URL","getClusterPrefix","monitoringVersion","clusterId","includes","concat","computeDashboardUrl","embedUrl","params","modifyPrefix","arguments","length","undefined","url","newUrl","path","query","viewPanel","orgId","Object","entries","forEach","entry","dashboardExists","_x","_x2","_x3","_x4","_dashboardExists","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee","store","storeName","projectId","prefix","delimiter","uid","_args","wrap","_callee$","_context","prev","next","getters","abrupt","split","dispatch","redirectUnauthorized","t0","stop","allDashboardsExist","_x5","_x6","_x7","_allDashboardsExist","_callee2","embeddedUrls","res","_res","existPromises","_args2","_callee2$","_context2","APP","type","id","sent","currentVersion","map","Promise","all","every","exists","queryGrafana","range","step","start","end","hasLeader","_x8","_x9","_x10","_hasLeader","_callee3","_response$data$result","response","_callee3$","_context3","Date","now","data","result","values","leaderChanges","_x11","_x12","_x13","_leaderChanges","_callee4","_response$data$result2","_callee4$","_context4","failedProposals","_x14","_x15","_x16","_failedProposals","_callee5","_response$data$result3","_callee5$","_context5"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/utils/grafana.js"],"sourcesContent":["import { haveV2Monitoring } from '@shell/utils/monitoring';\r\nimport { parse as parseUrl, addParam } from '@shell/utils/url';\r\nimport { CATALOG } from '@shell/config/types';\r\n\r\n// these two versions of monitoring included a bug fix attempt that required the local cluster to use a different url\r\n// the solution going forward doesn't require this, see https://github.com/rancher/dashboard/issues/8885\r\nconst MONITORING_VERSION_ALT_URL = ['100.2.0+up40.1.2', '102.0.0+up40.1.2'];\r\n\r\nexport function getClusterPrefix(monitoringVersion, clusterId) {\r\n  if (MONITORING_VERSION_ALT_URL.includes(monitoringVersion)) {\r\n    return `/k8s/clusters/${ clusterId }`;\r\n  }\r\n\r\n  return clusterId === 'local' ? '' : `/k8s/clusters/${ clusterId }`;\r\n}\r\n\r\nexport function computeDashboardUrl(monitoringVersion, embedUrl, clusterId, params, modifyPrefix = true) {\r\n  const url = parseUrl(embedUrl);\r\n\r\n  let newUrl = modifyPrefix ? `${ getClusterPrefix(monitoringVersion, clusterId) }${ url.path }` : url.path;\r\n\r\n  if (url.query.viewPanel) {\r\n    newUrl = addParam(newUrl, 'viewPanel', url.query.viewPanel);\r\n  }\r\n  newUrl = addParam(newUrl, 'orgId', url.query.orgId);\r\n  newUrl = addParam(newUrl, 'kiosk', null);\r\n\r\n  Object.entries(params).forEach((entry) => {\r\n    newUrl = addParam(newUrl, entry[0], entry[1]);\r\n  });\r\n\r\n  return newUrl;\r\n}\r\n\r\nexport async function dashboardExists(monitoringVersion, store, clusterId, embedUrl, storeName = 'cluster', projectId = null) {\r\n  if ( !haveV2Monitoring(store.getters) ) {\r\n    return false;\r\n  }\r\n\r\n  const url = parseUrl(embedUrl);\r\n  let prefix = `${ getClusterPrefix(monitoringVersion, clusterId) }/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/`;\r\n  let delimiter = 'http:rancher-monitoring-grafana:80/proxy/';\r\n\r\n  if (projectId) {\r\n    prefix = `${ getClusterPrefix(monitoringVersion, clusterId) }/api/v1/namespaces/cattle-project-${ projectId }-monitoring/services/http:cattle-project-${ projectId }-monitoring-grafana:80/proxy/`;\r\n    delimiter = `http:cattle-project-${ projectId }-monitoring-grafana:80/proxy/`;\r\n  }\r\n  const path = url.path.split(delimiter)[1];\r\n  const uid = path.split('/')[1];\r\n  const newUrl = `${ prefix }api/dashboards/uid/${ uid }`;\r\n\r\n  try {\r\n    await store.dispatch(`${ storeName }/request`, { url: newUrl, redirectUnauthorized: false });\r\n\r\n    return true;\r\n  } catch (ex) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function allDashboardsExist(store, clusterId, embeddedUrls, storeName = 'cluster', projectId = null) {\r\n  let res;\r\n\r\n  let monitoringVersion = '';\r\n\r\n  if (!projectId && store.getters[`${ storeName }/canList`](CATALOG.APP)) {\r\n    try {\r\n      res = await store.dispatch(`${ storeName }/find`, {\r\n        type: CATALOG.APP,\r\n        id:   'cattle-monitoring-system/rancher-monitoring'\r\n      });\r\n    } catch (err) {\r\n    }\r\n\r\n    monitoringVersion = res?.currentVersion;\r\n  }\r\n\r\n  const existPromises = embeddedUrls.map((url) => dashboardExists(monitoringVersion, store, clusterId, url, storeName, projectId));\r\n\r\n  return (await Promise.all(existPromises)).every((exists) => exists);\r\n}\r\n\r\nexport function queryGrafana(monitoringVersion, dispatch, clusterId, query, range, step) {\r\n  const url = `${ getClusterPrefix(monitoringVersion, clusterId) }/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/api/datasources/proxy/1/api/v1/query_range?query=${ query }&start=${ range.start }&end=${ range.end }&step=${ step }`;\r\n\r\n  return dispatch('cluster/request', { url, redirectUnauthorized: false });\r\n}\r\n\r\nexport async function hasLeader(monitoringVersion, dispatch, clusterId) {\r\n  const end = Date.now() / 1000;\r\n  const start = end - (5 * 60);\r\n\r\n  const response = await queryGrafana(monitoringVersion, dispatch, clusterId, 'max(etcd_server_has_leader)', { start, end }, 30);\r\n\r\n  return response.data.result[0]?.values?.[0]?.[1] === '1';\r\n}\r\n\r\nexport async function leaderChanges(monitoringVersion, dispatch, clusterId) {\r\n  const end = Date.now() / 1000;\r\n  const start = end - (60 * 60);\r\n\r\n  const response = await queryGrafana(monitoringVersion, dispatch, clusterId, 'max(etcd_server_leader_changes_seen_total)', { start, end }, 30);\r\n\r\n  return response.data.result[0]?.values?.[0]?.[1] || 0;\r\n}\r\n\r\nexport async function failedProposals(monitoringVersion, dispatch, clusterId) {\r\n  const end = Date.now() / 1000;\r\n  const start = end - (60 * 60);\r\n\r\n  const response = await queryGrafana(monitoringVersion, dispatch, clusterId, 'sum(etcd_server_proposals_failed_total)', { start, end }, 30);\r\n\r\n  return response.data.result[0]?.values?.[0]?.[1] || 0;\r\n}\r\n"],"mappings":"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","ignoreList":[]}]}