{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/tabs/registries/RegistryConfigs.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/tabs/registries/RegistryConfigs.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ArrayListGrouped","set","LabeledInput","Checkbox","SelectOrCreateAuthSecret","CreateEditView","SecretSelector","SECRET_TYPES","TYPES","components","mixins","props","mode","type","String","required","value","Object","clusterRegisterBeforeHook","Function","data","_this$value$spec$rkeC","configMap","spec","rkeConfig","registries","configs","entries","defaultAddValue","hostname","authConfigSecretName","caBundle","insecureSkipVerify","tlsSecretName","_configMap$hostname$i","_configMap$hostname$a","_configMap$hostname$c","_configMap$hostname$t","push","_objectSpread","computed","TLS","get","mounted","window","z","methods","update","_iterator","_createForOfIteratorHelper","_step","s","n","done","entry","h","err","e","f","$emit","wrapRegisterBeforeHook","fn","wrapFn","_wrapFn","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","_args","wrap","_callee$","_context","prev","next","sent","abrupt","Promise","resolve","setTimeout","stop","_len","length","args","Array","_key","concat"],"sources":["node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/tabs/registries/RegistryConfigs.vue"],"sourcesContent":["<script>\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\nimport { set } from '@shell/utils/object';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport SelectOrCreateAuthSecret from '@shell/components/form/SelectOrCreateAuthSecret';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport SecretSelector from '@shell/components/form/SecretSelector';\nimport { SECRET_TYPES as TYPES } from '@shell/config/secret';\n\nexport default {\n  components: {\n    ArrayListGrouped,\n    LabeledInput,\n    Checkbox,\n    SelectOrCreateAuthSecret,\n    SecretSelector,\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    mode: {\n      type:     String,\n      required: true,\n    },\n\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    clusterRegisterBeforeHook: {\n      // We use this hook instead of the create hook from the CreateEditView\n      // mixin because this is a form within a form, therefore we\n      // need the hook from the parent component.\n      type:     Function,\n      required: true\n    }\n  },\n\n  data() {\n    const configMap = this.value.spec.rkeConfig?.registries?.configs || {};\n    const entries = [];\n\n    const defaultAddValue = {\n      hostname:             '',\n      authConfigSecretName: null,\n      caBundle:             '',\n      insecureSkipVerify:   false,\n      tlsSecretName:        null,\n    };\n\n    for ( const hostname in configMap ) {\n      if (configMap[hostname]) {\n        configMap[hostname].insecureSkipVerify = configMap[hostname].insecureSkipVerify ?? defaultAddValue.insecureSkipVerify;\n        configMap[hostname].authConfigSecretName = configMap[hostname].authConfigSecretName ?? defaultAddValue.authConfigSecretName;\n        configMap[hostname].caBundle = configMap[hostname].caBundle ?? defaultAddValue.caBundle;\n        configMap[hostname].tlsSecretName = configMap[hostname].tlsSecretName ?? defaultAddValue.tlsSecretName;\n      }\n      entries.push({\n        hostname,\n        ...configMap[hostname],\n      });\n    }\n\n    return { entries, defaultAddValue };\n  },\n\n  computed: {\n    TLS: {\n      get() {\n        return TYPES.TLS;\n      },\n    },\n  },\n\n  mounted() {\n    window.z = this;\n  },\n\n  // created() {\n  //   set(this.value, 'spec.rkeConfig.registries.configs', {});\n  // },\n\n  methods: {\n    update() {\n      const configs = {};\n\n      for ( const entry of this.entries ) {\n        const h = entry.hostname;\n\n        if ( !h || configs[h] ) {\n          continue;\n        }\n\n        configs[h] = { ...entry };\n        delete configs[h].hostname;\n      }\n\n      set(this.value, 'spec.rkeConfig.registries.configs', configs);\n      this.$emit('updateConfigs', configs);\n    },\n\n    wrapRegisterBeforeHook(fn, ...args) {\n      async function wrapFn(...params) {\n        const result = await fn(...params);\n\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(result);\n          }, 50);\n        });\n      }\n      this.clusterRegisterBeforeHook(wrapFn, ...args);\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <h3>\n      {{ t('registryConfig.header') }}\n      <i\n        v-clean-tooltip=\"t('registryConfig.toolTip')\"\n        class=\"icon icon-info\"\n      />\n    </h3>\n    <p class=\"mb-20\">\n      {{ t('registryConfig.description') }}\n    </p>\n    <ArrayListGrouped\n      v-model=\"entries\"\n      :add-label=\"t('registryConfig.addLabel')\"\n      :default-add-value=\"defaultAddValue\"\n      :initial-empty-row=\"true\"\n      :mode=\"mode\"\n      data-testid=\"registry-authentication\"\n      @input=\"update\"\n    >\n      <template #default=\"{row, i}\">\n        <div class=\"row\">\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"row.value.hostname\"\n              label=\"Registry Hostname\"\n              :mode=\"mode\"\n              :data-testid=\"`registry-auth-host-input-${i}`\"\n            />\n\n            <SelectOrCreateAuthSecret\n              :key=\"`${row.value.hostname}-${row.value.authConfigSecretName}`\"\n              v-model=\"row.value.authConfigSecretName\"\n              :register-before-hook=\"wrapRegisterBeforeHook\"\n              :append-unique-id-to-hook=\"true\"\n              in-store=\"management\"\n              :allow-ssh=\"false\"\n              :allow-rke=\"true\"\n              :vertical=\"true\"\n              :namespace=\"value.metadata.namespace\"\n              :mode=\"mode\"\n              generate-name=\"registryconfig-auth-\"\n              :data-testid=\"`registry-auth-select-or-create-${i}`\"\n              :cache-secrets=\"true\"\n            />\n          </div>\n          <div class=\"col span-6\">\n            <SecretSelector\n              v-model=\"row.value.tlsSecretName\"\n              in-store=\"management\"\n              :mode=\"mode\"\n              :types=\"[TLS]\"\n              :namespace=\"value.metadata.namespace\"\n              secret-name-label=\"TLS Secret\"\n            />\n\n            <LabeledInput\n              v-model=\"row.value.caBundle\"\n              class=\"mt-20\"\n              type=\"multiline\"\n              label=\"CA Cert Bundle\"\n              :mode=\"mode\"\n            />\n\n            <div>\n              <Checkbox\n                v-model=\"row.value.insecureSkipVerify\"\n                class=\"mt-10\"\n                :mode=\"mode\"\n                label=\"Skip TLS Verifications\"\n              />\n            </div>\n          </div>\n        </div>\n      </template>\n    </ArrayListGrouped>\n  </div>\n</template>\n"],"mappings":"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","ignoreList":[]}]}