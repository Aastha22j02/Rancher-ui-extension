{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/list/fleet.cattle.io.clusterregistrationtoken.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/list/fleet.cattle.io.clusterregistrationtoken.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwpmdW5jdGlvbiBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihyLCBlKSB7IHZhciB0ID0gInVuZGVmaW5lZCIgIT0gdHlwZW9mIFN5bWJvbCAmJiByW1N5bWJvbC5pdGVyYXRvcl0gfHwgclsiQEBpdGVyYXRvciJdOyBpZiAoIXQpIHsgaWYgKEFycmF5LmlzQXJyYXkocikgfHwgKHQgPSBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkocikpIHx8IGUgJiYgciAmJiAibnVtYmVyIiA9PSB0eXBlb2Ygci5sZW5ndGgpIHsgdCAmJiAociA9IHQpOyB2YXIgX24gPSAwLCBGID0gZnVuY3Rpb24gRigpIHt9OyByZXR1cm4geyBzOiBGLCBuOiBmdW5jdGlvbiBuKCkgeyByZXR1cm4gX24gPj0gci5sZW5ndGggPyB7IGRvbmU6ICEwIH0gOiB7IGRvbmU6ICExLCB2YWx1ZTogcltfbisrXSB9OyB9LCBlOiBmdW5jdGlvbiBlKHIpIHsgdGhyb3cgcjsgfSwgZjogRiB9OyB9IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBpdGVyYXRlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iKTsgfSB2YXIgbywgYSA9ICEwLCB1ID0gITE7IHJldHVybiB7IHM6IGZ1bmN0aW9uIHMoKSB7IHQgPSB0LmNhbGwocik7IH0sIG46IGZ1bmN0aW9uIG4oKSB7IHZhciByID0gdC5uZXh0KCk7IHJldHVybiBhID0gci5kb25lLCByOyB9LCBlOiBmdW5jdGlvbiBlKHIpIHsgdSA9ICEwLCBvID0gcjsgfSwgZjogZnVuY3Rpb24gZigpIHsgdHJ5IHsgYSB8fCBudWxsID09IHQucmV0dXJuIHx8IHQucmV0dXJuKCk7IH0gZmluYWxseSB7IGlmICh1KSB0aHJvdyBvOyB9IH0gfTsgfQpmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkociwgYSkgeyBpZiAocikgeyBpZiAoInN0cmluZyIgPT0gdHlwZW9mIHIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShyLCBhKTsgdmFyIHQgPSB7fS50b1N0cmluZy5jYWxsKHIpLnNsaWNlKDgsIC0xKTsgcmV0dXJuICJPYmplY3QiID09PSB0ICYmIHIuY29uc3RydWN0b3IgJiYgKHQgPSByLmNvbnN0cnVjdG9yLm5hbWUpLCAiTWFwIiA9PT0gdCB8fCAiU2V0IiA9PT0gdCA/IEFycmF5LmZyb20ocikgOiAiQXJndW1lbnRzIiA9PT0gdCB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdCh0KSA/IF9hcnJheUxpa2VUb0FycmF5KHIsIGEpIDogdm9pZCAwOyB9IH0KZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkociwgYSkgeyAobnVsbCA9PSBhIHx8IGEgPiByLmxlbmd0aCkgJiYgKGEgPSByLmxlbmd0aCk7IGZvciAodmFyIGUgPSAwLCBuID0gQXJyYXkoYSk7IGUgPCBhOyBlKyspIG5bZV0gPSByW2VdOyByZXR1cm4gbjsgfQppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb24uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICIvaG9tZS91YnVudHUvc3VzZWNvbi0yMDI0LWV4dC1kZW1vL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvci9pbmRleC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgRkxFRVQgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IHsgQmFubmVyIH0gZnJvbSAnQGNvbXBvbmVudHMvQmFubmVyJzsKaW1wb3J0IFJlc291cmNlVGFibGUgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvUmVzb3VyY2VUYWJsZSc7CmltcG9ydCB7IGlzSGFydmVzdGVyQ2x1c3RlciB9IGZyb20gJ0BzaGVsbC91dGlscy9jbHVzdGVyJzsKaW1wb3J0IFJlc291cmNlRmV0Y2ggZnJvbSAnQHNoZWxsL21peGlucy9yZXNvdXJjZS1mZXRjaCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTGlzdENsdXN0ZXJHcm91cCcsCiAgY29tcG9uZW50czogewogICAgQmFubmVyOiBCYW5uZXIsCiAgICBSZXNvdXJjZVRhYmxlOiBSZXNvdXJjZVRhYmxlCiAgfSwKICBtaXhpbnM6IFtSZXNvdXJjZUZldGNoXSwKICBwcm9wczogewogICAgcmVzb3VyY2U6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHNjaGVtYTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgdXNlUXVlcnlQYXJhbXNGb3JTaW1wbGVGaWx0ZXJpbmc6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIGZldGNoOiBmdW5jdGlvbiBmZXRjaCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gX3RoaXMuJGZldGNoVHlwZShfdGhpcy5yZXNvdXJjZSk7CiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGlmICghX3RoaXMuJHN0b3JlLmdldHRlcnNbJ21hbmFnZW1lbnQvc2NoZW1hRm9yJ10oRkxFRVQuQ0xVU1RFUikpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L2FsbCddKEZMRUVULkNMVVNURVIpOwogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBfdGhpcy5hbGxGbGVldCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBhbGxGbGVldDogW10KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgaGFydmVzdGVyQ2x1c3RlcnM6IGZ1bmN0aW9uIGhhcnZlc3RlckNsdXN0ZXJzKCkgewogICAgICB2YXIgaGFydmVzdGVyID0ge307CiAgICAgIHRoaXMuYWxsRmxlZXQuZm9yRWFjaChmdW5jdGlvbiAoYykgewogICAgICAgIGlmIChpc0hhcnZlc3RlckNsdXN0ZXIoYykpIHsKICAgICAgICAgIGhhcnZlc3RlcltjLm1ldGFkYXRhLnVpZF0gPSBjOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiBoYXJ2ZXN0ZXI7CiAgICB9LAogICAgdG9rZW5zOiBmdW5jdGlvbiB0b2tlbnMoKSB7CiAgICAgIHZhciBoYXJ2ZXN0ZXIgPSB0aGlzLmhhcnZlc3RlckNsdXN0ZXJzOwogICAgICByZXR1cm4gdGhpcy5yb3dzLmZpbHRlcihmdW5jdGlvbiAodG9rZW4pIHsKICAgICAgICB2YXIgX3Rva2VuJG1ldGFkYXRhOwogICAgICAgIHZhciByZWZzID0gKChfdG9rZW4kbWV0YWRhdGEgPSB0b2tlbi5tZXRhZGF0YSkgPT09IG51bGwgfHwgX3Rva2VuJG1ldGFkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdG9rZW4kbWV0YWRhdGEub3duZXJSZWZlcmVuY2VzKSB8fCBbXTsKICAgICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIocmVmcyksCiAgICAgICAgICBfc3RlcDsKICAgICAgICB0cnkgewogICAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgdmFyIG93bmVyID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICAgIGlmIChoYXJ2ZXN0ZXJbb3duZXIudWlkXSkgewogICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0pOwogICAgfSwKICAgIGhpZGRlbjogZnVuY3Rpb24gaGlkZGVuKCkgewogICAgICByZXR1cm4gdGhpcy5yb3dzLmxlbmd0aCAtIHRoaXMudG9rZW5zLmxlbmd0aDsKICAgIH0KICB9LAogIC8vIG92ZXJyaWRlIHdpdGggcmVsZXZhbnQgaW5mbyBmb3IgdGhlIGxvYWRpbmcgaW5kaWNhdG9yIHNpbmNlIHRoaXMgZG9lc24ndCB1c2UgaXQncyBvd24gbWFzdGhlYWQKICAkbG9hZGluZ1Jlc291cmNlczogZnVuY3Rpb24gJGxvYWRpbmdSZXNvdXJjZXMoKSB7CiAgICAvLyByZXN1bHRzIGFyZSBmaWx0ZXJlZCBzbyB3ZSB3b3VsZG4ndCBnZXQgdGhlIGNvcnJlY3QgY291bnQgb24gaW5kaWNhdG9yLi4uCiAgICByZXR1cm4gewogICAgICBsb2FkSW5kZXRlcm1pbmF0ZTogdHJ1ZQogICAgfTsKICB9Cn07"},{"version":3,"names":["FLEET","Banner","ResourceTable","isHarvesterCluster","ResourceFetch","name","components","mixins","props","resource","type","String","required","schema","Object","useQueryParamsForSimpleFiltering","Boolean","default","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$fetchType","$store","getters","CLUSTER","allFleet","sent","stop","data","computed","harvesterClusters","harvester","forEach","c","metadata","uid","tokens","rows","filter","token","_token$metadata","refs","ownerReferences","_iterator","_createForOfIteratorHelper","_step","s","n","done","owner","value","err","e","f","hidden","length","$loadingResources","loadIndeterminate"],"sources":["node_modules/@rancher/shell/list/fleet.cattle.io.clusterregistrationtoken.vue"],"sourcesContent":["<script>\nimport { FLEET } from '@shell/config/types';\nimport { Banner } from '@components/Banner';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport { isHarvesterCluster } from '@shell/utils/cluster';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\n\nexport default {\n  name:       'ListClusterGroup',\n  components: { Banner, ResourceTable },\n  mixins:     [ResourceFetch],\n  props:      {\n    resource: {\n      type:     String,\n      required: true,\n    },\n    schema: {\n      type:     Object,\n      required: true,\n    },\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  async fetch() {\n    await this.$fetchType(this.resource);\n    if (this.$store.getters['management/schemaFor']( FLEET.CLUSTER )) {\n      this.allFleet = await this.$store.getters['management/all'](FLEET.CLUSTER);\n    }\n  },\n\n  data() {\n    return { allFleet: [] };\n  },\n\n  computed: {\n    harvesterClusters() {\n      const harvester = {};\n\n      this.allFleet.forEach((c) => {\n        if (isHarvesterCluster(c)) {\n          harvester[c.metadata.uid] = c;\n        }\n      });\n\n      return harvester;\n    },\n    tokens() {\n      const harvester = this.harvesterClusters;\n\n      return this.rows.filter((token) => {\n        const refs = token.metadata?.ownerReferences || [];\n\n        for (const owner of refs) {\n          if (harvester[owner.uid]) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    },\n\n    hidden() {\n      return this.rows.length - this.tokens.length;\n    }\n  },\n  // override with relevant info for the loading indicator since this doesn't use it's own masthead\n  $loadingResources() {\n    // results are filtered so we wouldn't get the correct count on indicator...\n    return { loadIndeterminate: true };\n  },\n};\n</script>\n\n<template>\n  <div>\n    <Banner\n      v-if=\"hidden\"\n      color=\"info\"\n      :label=\"t('fleet.tokens.harvester', {count: hidden} )\"\n    />\n    <ResourceTable\n      v-bind=\"$attrs\"\n      :schema=\"schema\"\n      :rows=\"tokens\"\n      :loading=\"loading\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n    />\n  </div>\n</template>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA,SAAAA,KAAA;AACA,SAAAC,MAAA;AACA,OAAAC,aAAA;AACA,SAAAC,kBAAA;AACA,OAAAC,aAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAL,MAAA,EAAAA,MAAA;IAAAC,aAAA,EAAAA;EAAA;EACAK,MAAA,GAAAH,aAAA;EACAI,KAAA;IACAC,QAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,MAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,QAAA;IACA;IACAG,gCAAA;MACAL,IAAA,EAAAM,OAAA;MACAC,OAAA;IACA;EACA;EAEAC,KAAA,WAAAA,MAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,UAAAC,QAAA;MAAA,OAAAF,mBAAA,CAAAG,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OACAT,KAAA,CAAAU,UAAA,CAAAV,KAAA,CAAAV,QAAA;UAAA;YAAA,KACAU,KAAA,CAAAW,MAAA,CAAAC,OAAA,yBAAA/B,KAAA,CAAAgC,OAAA;cAAAN,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OACAT,KAAA,CAAAW,MAAA,CAAAC,OAAA,mBAAA/B,KAAA,CAAAgC,OAAA;UAAA;YAAAb,KAAA,CAAAc,QAAA,GAAAP,QAAA,CAAAQ,IAAA;UAAA;UAAA;YAAA,OAAAR,QAAA,CAAAS,IAAA;QAAA;MAAA,GAAAZ,OAAA;IAAA;EAEA;EAEAa,IAAA,WAAAA,KAAA;IACA;MAAAH,QAAA;IAAA;EACA;EAEAI,QAAA;IACAC,iBAAA,WAAAA,kBAAA;MACA,IAAAC,SAAA;MAEA,KAAAN,QAAA,CAAAO,OAAA,WAAAC,CAAA;QACA,IAAAtC,kBAAA,CAAAsC,CAAA;UACAF,SAAA,CAAAE,CAAA,CAAAC,QAAA,CAAAC,GAAA,IAAAF,CAAA;QACA;MACA;MAEA,OAAAF,SAAA;IACA;IACAK,MAAA,WAAAA,OAAA;MACA,IAAAL,SAAA,QAAAD,iBAAA;MAEA,YAAAO,IAAA,CAAAC,MAAA,WAAAC,KAAA;QAAA,IAAAC,eAAA;QACA,IAAAC,IAAA,KAAAD,eAAA,GAAAD,KAAA,CAAAL,QAAA,cAAAM,eAAA,uBAAAA,eAAA,CAAAE,eAAA;QAAA,IAAAC,SAAA,GAAAC,0BAAA,CAEAH,IAAA;UAAAI,KAAA;QAAA;UAAA,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA;YAAA,IAAAC,KAAA,GAAAJ,KAAA,CAAAK,KAAA;YACA,IAAAnB,SAAA,CAAAkB,KAAA,CAAAd,GAAA;cACA;YACA;UACA;QAAA,SAAAgB,GAAA;UAAAR,SAAA,CAAAS,CAAA,CAAAD,GAAA;QAAA;UAAAR,SAAA,CAAAU,CAAA;QAAA;QAEA;MACA;IACA;IAEAC,MAAA,WAAAA,OAAA;MACA,YAAAjB,IAAA,CAAAkB,MAAA,QAAAnB,MAAA,CAAAmB,MAAA;IACA;EACA;EACA;EACAC,iBAAA,WAAAA,kBAAA;IACA;IACA;MAAAC,iBAAA;IAAA;EACA;AACA","ignoreList":[]}]}