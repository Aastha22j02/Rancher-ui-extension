{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/models/secret.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/models/secret.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["r","CERTMANAGER","KUBERNETES","base64Decode","base64Encode","removeObjects","SERVICE_ACCOUNT","set","NAME","MANAGER","SteveModel","colorForState","stateDisplay","STATES_ENUM","diffFrom","day","steveCleanForDownload","TYPES","OPAQUE","SERVICE_ACCT","DOCKER","DOCKER_JSON","BASIC","SSH","TLS","BOOTSTRAP","ISTIO_TLS","HELM_RELEASE","FLEET_CLUSTER","CLOUD_CREDENTIAL","RKE_AUTH_CONFIG","certExpiringPeriod","Secret","_SteveModel","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_cachedCertInfo","_inherits","_createClass","key","get","_type","metadata","namespace","generateName","_this$metadata$annota","annotations","ISSUER","isCertificate","_this$cachedCertInfo","cachedCertInfo","issuer","_this$cachedCertInfo2","notAfter","_this$cachedCertInfo3","cn","unrepeatedSans","certState","EXPIRING","EXPIRED","out","label","t","content","typeDisplay","_this$metadata","name","SERVICE_ACCOUNT_NAME","push","formatter","formatterOpts","value","type","plusMoreNames","n","class","dateClass","hasLink","$rootGetters","isEditable","keys","_toConsumableArray","Object","data","binaryData","join","encodedJSON","decodedJSON","auths","JSON","parse","domain","e","certInfo","keysDisplay","username","sshUser","_this$metadata2","pub","startsWith","match","parts","replace","split","fallback","pem","notBefore","sans","x","END_MARKER","certs","first","X509","readCertPEM","issuerString","getIssuerString","slice","indexOf","zulutodate","getNotBefore","getNotAfter","cnString","getSubjectString","_unused","getExtSubjectAltName","_certInfo$sans","_certInfo$sans2","filter","commonBases","map","substr","displaySans","array","expiration","timeThen","valueOf","timeNow","Date","now","timeTilExpiration","_this$cachedCertInfo4","k","_this2","isMap","_typeof","neu","_defineProperty","_this3","string","undefined","color","cleanForSave","forNew","val","_superPropGet","_cleanForDownload","_asyncToGenerator","_regeneratorRuntime","mark","_callee","yaml","wrap","_callee$","_context","prev","next","abrupt","rootKeys","stop","cleanForDownload","_x","apply","default"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/models/secret.js"],"sourcesContent":["import r from 'jsrsasign';\nimport { CERTMANAGER, KUBERNETES } from '@shell/config/labels-annotations';\nimport { base64Decode, base64Encode } from '@shell/utils/crypto';\nimport { removeObjects } from '@shell/utils/array';\nimport { SERVICE_ACCOUNT } from '@shell/config/types';\nimport { set } from '@shell/utils/object';\nimport { NAME as MANAGER } from '@shell/config/product/manager';\nimport SteveModel from '@shell/plugins/steve/steve-class';\nimport { colorForState, stateDisplay, STATES_ENUM } from '@shell/plugins/dashboard-store/resource-class';\nimport { diffFrom } from '@shell/utils/time';\nimport day from 'dayjs';\nimport { steveCleanForDownload } from '@shell/plugins/steve/resource-utils';\n\nexport const TYPES = {\n  OPAQUE:           'Opaque',\n  SERVICE_ACCT:     'kubernetes.io/service-account-token',\n  DOCKER:           'kubernetes.io/dockercfg',\n  DOCKER_JSON:      'kubernetes.io/dockerconfigjson',\n  BASIC:            'kubernetes.io/basic-auth',\n  SSH:              'kubernetes.io/ssh-auth',\n  TLS:              'kubernetes.io/tls',\n  BOOTSTRAP:        'bootstrap.kubernetes.io/token',\n  ISTIO_TLS:        'istio.io/key-and-cert',\n  HELM_RELEASE:     'helm.sh/release.v1',\n  FLEET_CLUSTER:    'fleet.cattle.io/cluster-registration-values',\n  CLOUD_CREDENTIAL: 'provisioning.cattle.io/cloud-credential',\n  RKE_AUTH_CONFIG:  'rke.cattle.io/auth-config'\n};\n\n/** Class a cert as expiring if in eight days */\nconst certExpiringPeriod = 1000 * 60 * 60 * 24 * 8;\n\nexport default class Secret extends SteveModel {\n  _cachedCertInfo;\n\n  get hasSensitiveData() {\n    return true;\n  }\n\n  get isCertificate() {\n    return this._type === TYPES.TLS;\n  }\n\n  get isRegistry() {\n    return this._type === TYPES.DOCKER_JSON;\n  }\n\n  get isCloudCredential() {\n    return this._type === TYPES.CLOUD_CREDENTIAL || (this.metadata.namespace === 'cattle-global-data' && this.metadata.generateName === 'cc-');\n  }\n\n  get issuer() {\n    const { metadata:{ annotations = {} } } = this;\n\n    if (annotations[CERTMANAGER.ISSUER]) {\n      return annotations[CERTMANAGER.ISSUER];\n    } else if (this.isCertificate) {\n      return this.cachedCertInfo?.issuer;\n    } else {\n      return null;\n    }\n  }\n\n  get notAfter() {\n    if (this.isCertificate) {\n      return this.cachedCertInfo?.notAfter;\n    } else {\n      return null;\n    }\n  }\n\n  get cn() {\n    if (this.isCertificate) {\n      return this.cachedCertInfo?.cn;\n    }\n\n    return null;\n  }\n\n  // show plus n more for cert names\n  get plusMoreNames() {\n    if (this.isCertificate) {\n      return this.unrepeatedSans.length;\n    }\n\n    return null;\n  }\n\n  // use text-warning' or 'text-error' if cert is expiring within 8 days or is expired\n  get dateClass() {\n    if (this.isCertificate) {\n      switch (this.certState) {\n      case STATES_ENUM.EXPIRING:\n        return 'text-warning';\n      case STATES_ENUM.EXPIRED:\n        return 'text-error';\n      default:\n        return '';\n      }\n    }\n\n    return null;\n  }\n\n  get details() {\n    const out = [\n      {\n        label:   this.t('secret.type'),\n        content: this.typeDisplay\n      }\n    ];\n\n    if ( this._type === TYPES.SERVICE_ACCT ) {\n      const name = this.metadata?.annotations?.[KUBERNETES.SERVICE_ACCOUNT_NAME];\n\n      if ( name ) {\n        out.push({\n          label:         'Service Account',\n          formatter:     'LinkName',\n          formatterOpts: {\n            value:     name,\n            type:      SERVICE_ACCOUNT,\n            namespace: this.namespace,\n          },\n          content: name,\n        });\n      }\n    }\n\n    if (this.cn) {\n      out.push({\n        label:   this.t('secret.certificate.cn'),\n        content: this.plusMoreNames ? `${ this.cn } ${ this.t('secret.certificate.plusMore', { n: this.plusMoreNames }) }` : this.cn\n      });\n    }\n\n    if (this.issuer) {\n      out.push({\n        label:   this.t('secret.certificate.issuer'),\n        content: this.issuer\n      });\n    }\n\n    if (this.notAfter) {\n      out.push({\n        label:         'Expires',\n        formatter:     'Date',\n        formatterOpts: { class: this.dateClass },\n        content:       this.notAfter\n      });\n    }\n\n    return out;\n  }\n\n  get canUpdate() {\n    if ( !this.hasLink('update') ) {\n      return false;\n    }\n\n    if ( this._type === TYPES.SERVICE_ACCT ) {\n      return false;\n    }\n\n    return this.$rootGetters['type-map/optionsFor'](this.type).isEditable;\n  }\n\n  get keysDisplay() {\n    const keys = [\n      ...Object.keys(this.data || []),\n      ...Object.keys(this.binaryData || [])\n    ];\n\n    if ( !keys.length ) {\n      return '(none)';\n    }\n\n    // if ( keys.length >= 4 ) {\n    //   return `${keys[0]}, ${keys[1]}, ${keys[2]} and ${keys.length - 3} more`;\n    // }\n\n    return keys.join(', ');\n  }\n\n  // decode some secret data to show in list view\n  get dataPreview() {\n    if (this._type === TYPES.DOCKER_JSON) {\n      const encodedJSON = this.data['.dockerconfigjson'];\n\n      if (encodedJSON) {\n        const decodedJSON = base64Decode(encodedJSON);\n\n        try {\n          const auths = JSON.parse(decodedJSON).auths;\n          const out = [];\n\n          for (const domain in auths) {\n            out.push(domain);\n          }\n\n          return out.join(', ');\n        } catch (e) {\n          return decodedJSON;\n        }\n      }\n    } else if (this._type === TYPES.TLS) {\n      return this.certInfo || this.keysDisplay;\n    } else if ( this._type === TYPES.BASIC ) {\n      return base64Decode(this.data.username);\n    } else if ( this._type === TYPES.SSH ) {\n      return this.sshUser;\n    } else if ( this._type === TYPES.SERVICE_ACCT ) {\n      return this.metadata?.annotations?.['kubernetes.io/service-account.name'];\n    }\n\n    return this.keysDisplay;\n  }\n\n  get sshUser() {\n    if ( this._type !== TYPES.SSH ) {\n      return null;\n    }\n\n    const pub = base64Decode(this.data['ssh-publickey']);\n\n    if ( !pub ) {\n      return null;\n    }\n\n    if ( pub.startsWith('----') ) {\n      // PEM format\n      const match = pub.match(/from OpenSSH by ([^\"]+)\"/);\n\n      if ( match ) {\n        return match[1];\n      }\n    } else if ( pub.startsWith('ssh-') ) {\n      // OpenSSH format\n      const parts = pub.replace(/\\n/g, '').split(/\\s+/);\n\n      if ( parts && parts.length === 3 ) {\n        return parts[2];\n      }\n    }\n\n    return null;\n  }\n\n  get subTypeDisplay() {\n    const type = this._type || '';\n    const fallback = type.replace(/^kubernetes.io\\//, '');\n\n    return this.$rootGetters['i18n/withFallback'](`secret.types.\"${ type }\"`, null, fallback);\n  }\n\n  // parse TLS certs and return issuer, notAfter, cn, sans\n  get certInfo() {\n    const pem = base64Decode(this.data['tls.crt']);\n    let issuer, notBefore, notAfter, cn, sans, x;\n    const END_MARKER = '-----END CERTIFICATE-----';\n\n    if (pem) {\n      const certs = pem.split(END_MARKER);\n      let first = pem;\n\n      if (certs.length > 1) {\n        first = `${ certs[0] }${ END_MARKER }`;\n      }\n\n      try {\n        x = new r.X509();\n\n        x.readCertPEM(first);\n        const issuerString = x.getIssuerString();\n\n        issuer = issuerString.slice(issuerString.indexOf('CN=') + 3);\n        notBefore = r.zulutodate(x.getNotBefore());\n        notAfter = r.zulutodate(x.getNotAfter());\n\n        const cnString = x.getSubjectString();\n\n        cn = cnString.slice(cnString.indexOf('CN=') + 3);\n      } catch {\n        return null;\n      }\n\n      try {\n        sans = x.getExtSubjectAltName();\n      } catch (e) {\n        sans = [];\n      }\n\n      const certInfo = {\n        issuer, notBefore, notAfter, cn, sans\n      };\n\n      return certInfo;\n    }\n\n    return null;\n  }\n\n  get cachedCertInfo() {\n    if (!this._cachedCertInfo) {\n      this._cachedCertInfo = this.certInfo;\n    }\n\n    return this._cachedCertInfo;\n  }\n\n  // use for + n more name display\n  get unrepeatedSans() {\n    if (this._type === TYPES.TLS ) {\n      const certInfo = this.cachedCertInfo;\n\n      if (certInfo?.sans?.filter) {\n        const commonBases = certInfo?.sans\n          .filter((name) => name.indexOf('*.') === 0 || name.indexOf('www.') === 0)\n          .map((name) => name.substr(name.indexOf('.')));\n        const displaySans = removeObjects(certInfo?.sans, commonBases);\n\n        return displaySans;\n      }\n\n      return certInfo?.sans?.array || certInfo?.sans || [];\n    }\n\n    return null;\n  }\n\n  get timeTilExpiration() {\n    if (this._type === TYPES.TLS) {\n      const certInfo = this.cachedCertInfo;\n\n      if (!certInfo?.notAfter) {\n        return null;\n      }\n\n      const expiration = certInfo.notAfter;\n      const timeThen = expiration.valueOf();\n      const timeNow = Date.now();\n\n      const timeTilExpiration = timeThen - timeNow;\n\n      return timeTilExpiration < 0 ? 0 : timeTilExpiration;\n    }\n\n    return null;\n  }\n\n  get timeTilExpirationDate() {\n    return this.timeTilExpiration > 0 ? this.cachedCertInfo?.notAfter?.valueOf() : null;\n  }\n\n  get decodedData() {\n    const out = {};\n\n    for ( const k in this.data || {} ) {\n      out[k] = base64Decode(this.data[k]);\n    }\n\n    return out;\n  }\n\n  get setData() {\n    return (key, value) => { // or (mapOfNewData)\n      const isMap = key && typeof key === 'object';\n\n      if ( !this.data || isMap ) {\n        set(this, 'data', {});\n      }\n\n      let neu;\n\n      if ( isMap ) {\n        neu = key;\n      } else {\n        neu = { [key]: value };\n      }\n\n      for ( const k in neu ) {\n        // The key is quoted so that keys like '.dockerconfigjson' that contain dot don't get parsed into an object path\n        set(this.data, `\"${ k }\"`, base64Encode(neu[k]));\n      }\n    };\n  }\n\n  get doneRoute() {\n    if ( this.$rootGetters['currentProduct'].name === MANAGER ) {\n      return 'c-cluster-manager-secret';\n    } else {\n      return 'c-cluster-product-resource';\n    }\n  }\n\n  get certLifetime() {\n    if (this._type === TYPES.TLS) {\n      const certInfo = this.cachedCertInfo;\n\n      if (certInfo) {\n        return diffFrom(day(certInfo.notBefore), day(certInfo.notAfter), (key, args) => this.t(key, args)).string;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Get the model `state` for secrets of type cert\n   */\n  get certState() {\n    if (this._type !== TYPES.TLS) {\n      return undefined;\n    }\n\n    if (typeof this.timeTilExpiration !== 'number' || this.timeTilExpiration > certExpiringPeriod ) {\n      return '';\n    } else if (this.timeTilExpiration > 0) {\n      return STATES_ENUM.EXPIRING;\n    } else {\n      return STATES_ENUM.EXPIRED;\n    }\n  }\n\n  /**\n   * Get the model `state display` for secrets of type cert\n   */\n  get certStateDisplay() {\n    if (this._type !== TYPES.TLS) {\n      return undefined;\n    }\n\n    return stateDisplay(this.certState);\n  }\n\n  /**\n   * Get the model `state background` for secrets of type cert\n   */\n  get certStateBackground() {\n    if (this._type !== TYPES.TLS) {\n      return undefined;\n    }\n\n    const color = colorForState(this.certState);\n\n    return color.replace('text-', 'bg-');\n  }\n\n  cleanForSave(data, forNew) {\n    const val = super.cleanForSave(data, forNew);\n\n    // Secrets on create with _type will return validation error\n    // Secrets on edit without _type will return http error\n    if (forNew) {\n      delete val._type;\n    }\n\n    return val;\n  }\n\n  async cleanForDownload(yaml) {\n    // secret resource contains the type attribute\n    // ref: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/secret-v1/\n    // ref: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types\n\n    return steveCleanForDownload(yaml, { rootKeys: ['id', 'links', 'actions'] });\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}