{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/mixins/auth-config.js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/mixins/auth-config.js","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_EDIT","NORMAN","MANAGEMENT","AFTER_SAVE_HOOKS","BEFORE_SAVE_HOOKS","BASE_SCOPES","addObject","findBy","set","exceptionToErrorsArray","difference","beforeCreate","query","$route","mode","$router","applyQuery","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","mixinFetch","stop","data","isEnabling","editConfig","model","serverSetting","errors","originalModel","principals","authConfigName","params","id","computed","doneLocationOverride","name","serverUrl","window","location","origin","baseUrl","concat","tls","hostname","principal","displayName","t","NAME","AUTH_CONFIG","showCancel","enabled","methods","_this2","_callee2","_callee2$","_context2","$store","dispatch","type","opt","url","force","sent","SETTING","PRINCIPAL","value","resource","openLdapConfig","showLdap","configType","rancherApiHost","length","$set","applyDefaults","save","btnCb","_this3","_callee3","wasEnabled","obj","code","newModel","oldKeys","newKeys","missingNewKeys","_callee3$","_context3","applyHooks","toSave","provider","body","accessMode","doAction","redirectUnauthorized","Object","keys","forEach","key","allowedPrincipalIds","includes","commit","console","warn","ignoreFields","reloadModel","t0","disable","_this4","_callee4","clone","_callee4$","_context4","hasAction","_this5","_callee5","_callee5$","_context5","abrupt","goToEdit","cancel","_this6","go","then","cloned","endsWith","slice","keycloakoidc"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/mixins/auth-config.js"],"sourcesContent":["import { _EDIT } from '@shell/config/query-params';\nimport { NORMAN, MANAGEMENT } from '@shell/config/types';\nimport { AFTER_SAVE_HOOKS, BEFORE_SAVE_HOOKS } from '@shell/mixins/child-hook';\nimport { BASE_SCOPES } from '@shell/store/auth';\nimport { addObject, findBy } from '@shell/utils/array';\nimport { set } from '@shell/utils/object';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport difference from 'lodash/difference';\n\nexport default {\n  beforeCreate() {\n    const { query } = this.$route;\n\n    if (query.mode !== _EDIT) {\n      this.$router.applyQuery({ mode: _EDIT });\n    }\n  },\n\n  async fetch() {\n    await this.mixinFetch();\n  },\n\n  data() {\n    return {\n      isEnabling:     false,\n      editConfig:     false,\n      model:          null,\n      serverSetting:  null,\n      errors:         [],\n      originalModel:  null,\n      principals:     [],\n      authConfigName: this.$route.params.id,\n    };\n  },\n\n  computed: {\n    doneLocationOverride() {\n      return {\n        name:   this.$route.name,\n        params: this.$route.params\n      };\n    },\n\n    serverUrl() {\n      // Client-side rendered: use the current window location\n      return window.location.origin;\n    },\n\n    baseUrl() {\n      return `${ this.model.tls ? 'https://' : 'http://' }${ this.model.hostname }`;\n    },\n\n    principal() {\n      return findBy(this.principals, 'me', true) || {};\n    },\n\n    displayName() {\n      return this.t(`model.authConfig.provider.${ this.NAME }`);\n    },\n\n    NAME() {\n      return this.$route.params.id;\n    },\n\n    AUTH_CONFIG() {\n      return MANAGEMENT.AUTH_CONFIG;\n    },\n\n    showCancel() {\n      return this.editConfig || !this.model.enabled;\n    }\n  },\n\n  methods: {\n    async mixinFetch() {\n      this.authConfigName = this.$route.params.id;\n\n      this.originalModel = await this.$store.dispatch('rancher/find', {\n        type: NORMAN.AUTH_CONFIG,\n        id:   this.authConfigName,\n        opt:  { url: `/v3/${ NORMAN.AUTH_CONFIG }/${ this.authConfigName }`, force: true }\n      });\n\n      const serverUrl = await this.$store.dispatch('management/find', {\n        type: MANAGEMENT.SETTING,\n        id:   'server-url',\n        opt:  { url: `/v1/${ MANAGEMENT.SETTING }/server-url` }\n      });\n\n      this.principals = await this.$store.dispatch('rancher/findAll', {\n        type: NORMAN.PRINCIPAL,\n        opt:  { url: '/v3/principals', force: true }\n      });\n\n      if ( serverUrl ) {\n        this.serverSetting = serverUrl.value;\n      }\n      this.model = await this.$store.dispatch(`rancher/clone`, { resource: this.originalModel });\n      if (this.model.openLdapConfig) {\n        this.showLdap = true;\n      }\n      if (this.value.configType === 'saml') {\n        if (!this.model.rancherApiHost || !this.model.rancherApiHost.length) {\n          this.$set(this.model, 'rancherApiHost', this.serverUrl);\n        }\n      }\n\n      if (!this.model.enabled) {\n        this.applyDefaults();\n      }\n    },\n\n    async save(btnCb) {\n      await this.applyHooks(BEFORE_SAVE_HOOKS);\n\n      const configType = this.value.configType;\n\n      this.errors = [];\n      const wasEnabled = this.model.enabled;\n\n      if (!wasEnabled) {\n        this.isEnabling = true;\n      }\n      let obj = this.toSave;\n\n      if (!obj) {\n        obj = this.model;\n      }\n      try {\n        if (this.editConfig || !wasEnabled) {\n          if (configType === 'oauth' || configType === 'oidc') {\n            const code = await this.$store.dispatch('auth/test', { provider: this.model.id, body: this.model });\n\n            obj.code = code;\n          }\n\n          if (configType === 'saml') {\n            if (!this.model.accessMode) {\n              this.model.accessMode = 'unrestricted';\n            }\n            if (this.model.openLdapConfig && !this.showLdap) {\n              delete this.model.openLdapConfig;\n            }\n            await this.model.save();\n            await this.$store.dispatch('auth/test', { provider: this.model.id, body: this.model });\n            this.model.enabled = true;\n          } else {\n            this.model.enabled = true;\n            if (!this.model.accessMode) {\n              this.model.accessMode = 'unrestricted';\n            }\n            await this.model.doAction('testAndApply', obj, { redirectUnauthorized: false });\n          }\n\n          // Reload auth config to get any changes made during testAndApply\n          const newModel = await this.$store.dispatch('rancher/find', {\n            type: NORMAN.AUTH_CONFIG,\n            id:   this.authConfigName,\n            opt:  { url: `/v3/${ NORMAN.AUTH_CONFIG }/${ this.authConfigName }`, force: true }\n          });\n\n          // We want to find and add keys that are in the original model that are missing from the new model.\n          // This is specifically intended for adding secretKeys which aren't returned when fetching. One example\n          // is the applicationSecret key that is present for azureAD auth.\n          const oldKeys = Object.keys(this.model);\n          const newKeys = Object.keys(newModel);\n          const missingNewKeys = difference(oldKeys, newKeys);\n\n          missingNewKeys.forEach((key) => {\n            newModel[key] = this.model[key];\n          });\n\n          this.model = await this.$store.dispatch(`rancher/clone`, { resource: newModel });\n\n          // Reload principals to get the new ones from the provider (including 'me')\n          this.principals = await this.$store.dispatch('rancher/findAll', {\n            type: NORMAN.PRINCIPAL,\n            opt:  { url: '/v3/principals', force: true }\n          });\n\n          this.model.allowedPrincipalIds = this.model.allowedPrincipalIds || [];\n\n          if ( this.principal) {\n            if (!this.model.allowedPrincipalIds.includes(this.principal.id) ) {\n              addObject(this.model.allowedPrincipalIds, this.principal.id);\n            }\n            // Session has switched to new 'me', ensure we react\n            this.$store.commit('auth/loggedInAs', this.principal.id);\n          } else {\n            console.warn(`Unable to find principal marked as 'me'`); // eslint-disable-line no-console\n          }\n        }\n        if (wasEnabled && configType === 'oauth') {\n          await this.model.save({ ignoreFields: ['oauthCredential', 'serviceAccountCredential'] });\n        } else {\n          await this.model.save();\n        }\n        await this.reloadModel();\n        this.isEnabling = false;\n        this.editConfig = false;\n        await this.applyHooks(AFTER_SAVE_HOOKS);\n\n        btnCb(true);\n      } catch (err) {\n        this.errors = exceptionToErrorsArray(err);\n        btnCb(false);\n        this.model.enabled = wasEnabled;\n        this.isEnabling = false;\n      }\n    },\n\n    async disable() {\n      try {\n        if (this.model.hasAction('disable')) {\n          await this.model.doAction('disable');\n        } else {\n          const clone = await this.$store.dispatch(`rancher/clone`, { resource: this.model });\n\n          clone.enabled = false;\n          await clone.save();\n        }\n        await this.reloadModel();\n        // Covers case where user disables... then enables in same visit to page\n        this.applyDefaults();\n\n        this.principals = await this.$store.dispatch('rancher/findAll', {\n          type: NORMAN.PRINCIPAL,\n          opt:  { url: '/v3/principals', force: true }\n        });\n        this.showLdap = false;\n      } catch (err) {\n        this.errors = [err];\n      }\n    },\n\n    async reloadModel() {\n      this.originalModel = await this.$store.dispatch('rancher/find', {\n        type: NORMAN.AUTH_CONFIG,\n        id:   this.NAME,\n        opt:  { url: `/v3/${ NORMAN.AUTH_CONFIG }/${ this.NAME }`, force: true }\n      });\n\n      this.model = await this.$store.dispatch(`rancher/clone`, { resource: this.originalModel });\n\n      return this.model;\n    },\n\n    goToEdit() {\n      this.editConfig = true;\n    },\n\n    cancel() {\n      // go back to provider selection screen\n      if (!this.model.enabled) {\n        this.$router.go(-1);\n      } else {\n        // must be cancelling edit of an enabled config; reset any changes and return to add users/groups view for that config\n        this.$store.dispatch(`rancher/clone`, { resource: this.originalModel }).then((cloned) => {\n          this.model = cloned;\n          this.editConfig = false;\n        });\n      }\n    },\n\n    applyDefaults() {\n      switch (this.value.configType) {\n      case 'oidc': {\n        const serverUrl = this.serverUrl.endsWith('/') ? this.serverUrl.slice(0, this.serverUrl.length - 1) : this.serverUrl;\n\n        // AuthConfig\n        set(this.model, 'accessMode', 'unrestricted'); // This should remain as unrestricted, enabling will fail otherwise\n\n        // KeyCloakOIDCConfig --> OIDCConfig\n        set(this.model, 'rancherUrl', `${ serverUrl }/verify-auth`);\n        set(this.model, 'scope', BASE_SCOPES.keycloakoidc[0]);\n        break;\n      }\n\n      case 'saml':\n        set(this.model, 'accessMode', 'unrestricted');\n        break;\n      case 'ldap':\n        set(this.model, 'servers', []);\n        set(this.model, 'accessMode', 'unrestricted');\n        set(this.model, 'starttls', false);\n        if (this.model.id === 'activedirectory') {\n          set(this.model, 'disabledStatusBitmask', 2);\n        } else {\n          set(this.model, 'disabledStatusBitmask', 0);\n        }\n        break;\n      default:\n        break;\n      }\n    }\n  },\n};\n"],"mappings":"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","ignoreList":[]}]}