{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/c/_cluster/logging/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/c/_cluster/logging/index.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICIvaG9tZS91YnVudHUvc3VzZWNvbi0yMDI0LWV4dC1kZW1vL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvci9pbmRleC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UuanMiOwppbXBvcnQgeyBOQU1FLCBDSEFSVF9OQU1FIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9wcm9kdWN0L2xvZ2dpbmcnOwppbXBvcnQgSW5zdGFsbFJlZGlyZWN0IGZyb20gJ0BzaGVsbC91dGlscy9pbnN0YWxsLXJlZGlyZWN0JzsKaW1wb3J0IHsgTE9HR0lORyB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgU29ydGFibGVUYWJsZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Tb3J0YWJsZVRhYmxlJzsKaW1wb3J0IHsgYWxsSGFzaCB9IGZyb20gJ0BzaGVsbC91dGlscy9wcm9taXNlJzsKaW1wb3J0IHsgQ09ORklHVVJFRF9QUk9WSURFUlMsIENMVVNURVJfT1VUUFVULCBPVVRQVVQsIE5BTUVTUEFDRSwgTkFNRSBhcyBOQU1FX0NPTCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdGFibGUtaGVhZGVycyc7CmltcG9ydCBDaGFydEhlYWRpbmcgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvQ2hhcnRIZWFkaW5nJzsKZXhwb3J0IGRlZmF1bHQgewogIG1pZGRsZXdhcmU6IEluc3RhbGxSZWRpcmVjdChOQU1FLCBDSEFSVF9OQU1FKSwKICBjb21wb25lbnRzOiB7CiAgICBDaGFydEhlYWRpbmc6IENoYXJ0SGVhZGluZywKICAgIFNvcnRhYmxlVGFibGU6IFNvcnRhYmxlVGFibGUKICB9LAogIGZldGNoOiBmdW5jdGlvbiBmZXRjaCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGdldEFsbE9yRGVmYXVsdCwgaGFzaDsKICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGdldEFsbE9yRGVmYXVsdCA9IGZ1bmN0aW9uIGdldEFsbE9yRGVmYXVsdCh0eXBlKSB7CiAgICAgICAgICAgICAgdmFyIGhhc0FjY2VzcyA9IF90aGlzLiRzdG9yZS5nZXR0ZXJzWyJjbHVzdGVyL3NjaGVtYUZvciJdKHR5cGUpOwogICAgICAgICAgICAgIHJldHVybiBoYXNBY2Nlc3MgPyBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvZmluZEFsbCcsIHsKICAgICAgICAgICAgICAgIHR5cGU6IHR5cGUKICAgICAgICAgICAgICB9KSA6IFByb21pc2UucmVzb2x2ZShbXSk7CiAgICAgICAgICAgIH07CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYWxsSGFzaCh7CiAgICAgICAgICAgICAgY2x1c3RlckZsb3dzOiBnZXRBbGxPckRlZmF1bHQoTE9HR0lORy5DTFVTVEVSX0ZMT1cpLAogICAgICAgICAgICAgIGZsb3dzOiBnZXRBbGxPckRlZmF1bHQoTE9HR0lORy5GTE9XKSwKICAgICAgICAgICAgICBjbHVzdGVyT3V0cHV0czogZ2V0QWxsT3JEZWZhdWx0KExPR0dJTkcuQ0xVU1RFUl9PVVRQVVQpLAogICAgICAgICAgICAgIG91dHB1dHM6IGdldEFsbE9yRGVmYXVsdChMT0dHSU5HLk9VVFBVVCkKICAgICAgICAgICAgfSk7CiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGhhc2ggPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBfdGhpcy5jbHVzdGVyRmxvd3MgPSBoYXNoLmNsdXN0ZXJGbG93cyB8fCBbXTsKICAgICAgICAgICAgX3RoaXMuZmxvd3MgPSBoYXNoLmZsb3dzIHx8IFtdOwogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2x1c3RlckZsb3dzOiBbXSwKICAgICAgZmxvd3M6IFtdLAogICAgICBuYW1lc3BhY2VGbG93VGFibGVIZWFkZXJzOiBbTkFNRVNQQUNFLCBOQU1FX0NPTCwgT1VUUFVULCBDTFVTVEVSX09VVFBVVCwgQ09ORklHVVJFRF9QUk9WSURFUlNdLAogICAgICBjbHVzdGVyRmxvd1RhYmxlSGVhZGVyczogW05BTUVfQ09MLCBDTFVTVEVSX09VVFBVVCwgQ09ORklHVVJFRF9QUk9WSURFUlNdCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGhhc0NsdXN0ZXJGbG93QWNjZXNzOiBmdW5jdGlvbiBoYXNDbHVzdGVyRmxvd0FjY2VzcygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbImNsdXN0ZXIvc2NoZW1hRm9yIl0oTE9HR0lORy5DTFVTVEVSX0ZMT1cpOwogICAgfQogIH0KfTs="},{"version":3,"names":["NAME","CHART_NAME","InstallRedirect","LOGGING","SortableTable","allHash","CONFIGURED_PROVIDERS","CLUSTER_OUTPUT","OUTPUT","NAMESPACE","NAME_COL","ChartHeading","middleware","components","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","getAllOrDefault","hash","wrap","_callee$","_context","prev","next","type","hasAccess","$store","getters","dispatch","Promise","resolve","clusterFlows","CLUSTER_FLOW","flows","FLOW","clusterOutputs","outputs","sent","stop","data","namespaceFlowTableHeaders","clusterFlowTableHeaders","computed","hasClusterFlowAccess"],"sources":["node_modules/@rancher/shell/pages/c/_cluster/logging/index.vue"],"sourcesContent":["<script>\nimport { NAME, CHART_NAME } from '@shell/config/product/logging';\nimport InstallRedirect from '@shell/utils/install-redirect';\nimport { LOGGING } from '@shell/config/types';\nimport SortableTable from '@shell/components/SortableTable';\nimport { allHash } from '@shell/utils/promise';\nimport {\n  CONFIGURED_PROVIDERS, CLUSTER_OUTPUT, OUTPUT, NAMESPACE, NAME as NAME_COL\n} from '@shell/config/table-headers';\nimport ChartHeading from '@shell/components/ChartHeading';\n\nexport default {\n  middleware: InstallRedirect(NAME, CHART_NAME),\n  components: { ChartHeading, SortableTable },\n  async fetch() {\n    const getAllOrDefault = (type) => {\n      const hasAccess = this.$store.getters[`cluster/schemaFor`](type);\n\n      return hasAccess ? this.$store.dispatch('cluster/findAll', { type }) : Promise.resolve([]);\n    };\n\n    const hash = await allHash({\n      clusterFlows:   getAllOrDefault(LOGGING.CLUSTER_FLOW),\n      flows:          getAllOrDefault(LOGGING.FLOW),\n      clusterOutputs: getAllOrDefault(LOGGING.CLUSTER_OUTPUT),\n      outputs:        getAllOrDefault(LOGGING.OUTPUT),\n    });\n\n    this.clusterFlows = hash.clusterFlows || [];\n    this.flows = hash.flows || [];\n  },\n\n  data() {\n    return {\n      clusterFlows:              [],\n      flows:                     [],\n      namespaceFlowTableHeaders: [\n        NAMESPACE,\n        NAME_COL,\n        OUTPUT,\n        CLUSTER_OUTPUT,\n        CONFIGURED_PROVIDERS\n      ],\n      clusterFlowTableHeaders: [\n        NAME_COL, CLUSTER_OUTPUT, CONFIGURED_PROVIDERS\n      ]\n    };\n  },\n\n  computed: {\n    hasClusterFlowAccess() {\n      return this.$store.getters[`cluster/schemaFor`](LOGGING.CLUSTER_FLOW);\n    }\n  },\n};\n</script>\n\n<template>\n  <div class=\"logging\">\n    <ChartHeading\n      :label=\"t('logging.overview.poweredBy')\"\n      url=\"https://github.com/banzaicloud/logging-operator\"\n    />\n    <div class=\"spacer\" />\n    <div v-if=\"hasClusterFlowAccess\">\n      <h2>{{ t('logging.overview.clusterLevel') }}</h2>\n      <SortableTable\n        class=\"sortable-table\"\n        :headers=\"clusterFlowTableHeaders\"\n        :rows=\"clusterFlows\"\n        :row-actions=\"false\"\n        :search=\"false\"\n        :table-actions=\"false\"\n        key-field=\"id\"\n      />\n    </div>\n    <h2 :class=\"{ 'mt-20': hasClusterFlowAccess }\">\n      {{ t('logging.overview.namespaceLevel') }}\n    </h2>\n    <SortableTable\n      class=\"sortable-table\"\n      :headers=\"namespaceFlowTableHeaders\"\n      :rows=\"flows\"\n      :row-actions=\"false\"\n      :search=\"false\"\n      :table-actions=\"false\"\n      key-field=\"id\"\n    />\n  </div>\n</template>\n"],"mappings":";;;;;AACA,SAAAA,IAAA,EAAAC,UAAA;AACA,OAAAC,eAAA;AACA,SAAAC,OAAA;AACA,OAAAC,aAAA;AACA,SAAAC,OAAA;AACA,SACAC,oBAAA,EAAAC,cAAA,EAAAC,MAAA,EAAAC,SAAA,EAAAT,IAAA,IAAAU,QAAA,QACA;AACA,OAAAC,YAAA;AAEA;EACAC,UAAA,EAAAV,eAAA,CAAAF,IAAA,EAAAC,UAAA;EACAY,UAAA;IAAAF,YAAA,EAAAA,YAAA;IAAAP,aAAA,EAAAA;EAAA;EACAU,KAAA,WAAAA,MAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,UAAAC,QAAA;MAAA,IAAAC,eAAA,EAAAC,IAAA;MAAA,OAAAJ,mBAAA,CAAAK,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YACAN,eAAA,YAAAA,gBAAAO,IAAA;cACA,IAAAC,SAAA,GAAAb,KAAA,CAAAc,MAAA,CAAAC,OAAA,sBAAAH,IAAA;cAEA,OAAAC,SAAA,GAAAb,KAAA,CAAAc,MAAA,CAAAE,QAAA;gBAAAJ,IAAA,EAAAA;cAAA,KAAAK,OAAA,CAAAC,OAAA;YACA;YAAAT,QAAA,CAAAE,IAAA;YAAA,OAEArB,OAAA;cACA6B,YAAA,EAAAd,eAAA,CAAAjB,OAAA,CAAAgC,YAAA;cACAC,KAAA,EAAAhB,eAAA,CAAAjB,OAAA,CAAAkC,IAAA;cACAC,cAAA,EAAAlB,eAAA,CAAAjB,OAAA,CAAAI,cAAA;cACAgC,OAAA,EAAAnB,eAAA,CAAAjB,OAAA,CAAAK,MAAA;YACA;UAAA;YALAa,IAAA,GAAAG,QAAA,CAAAgB,IAAA;YAOAzB,KAAA,CAAAmB,YAAA,GAAAb,IAAA,CAAAa,YAAA;YACAnB,KAAA,CAAAqB,KAAA,GAAAf,IAAA,CAAAe,KAAA;UAAA;UAAA;YAAA,OAAAZ,QAAA,CAAAiB,IAAA;QAAA;MAAA,GAAAtB,OAAA;IAAA;EACA;EAEAuB,IAAA,WAAAA,KAAA;IACA;MACAR,YAAA;MACAE,KAAA;MACAO,yBAAA,GACAlC,SAAA,EACAC,QAAA,EACAF,MAAA,EACAD,cAAA,EACAD,oBAAA,CACA;MACAsC,uBAAA,GACAlC,QAAA,EAAAH,cAAA,EAAAD,oBAAA;IAEA;EACA;EAEAuC,QAAA;IACAC,oBAAA,WAAAA,qBAAA;MACA,YAAAjB,MAAA,CAAAC,OAAA,sBAAA3B,OAAA,CAAAgC,YAAA;IACA;EACA;AACA","ignoreList":[]}]}