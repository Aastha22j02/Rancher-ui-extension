{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/store/aws.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/store/aws.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["sortBy","randomStr","FetchHttpHandler","isArray","addObjects","state","instanceTypes","clientInfo","Handler","cloudCredentialId","_classCallCheck","_createClass","key","value","handle","httpRequest","_FetchHttpHandler$pro","headers","concat","endpoint","path","startsWith","hostname","protocol","window","location","port","_len","arguments","length","args","Array","_key","prototype","call","apply","credentialDefaultProvider","accessKey","secretKey","out","accessKeyId","secretAccessKey","getters","defaultRegion","defaultInstanceType","mutations","setInstanceTypes","_ref","types","actions","ec2Lib","eksLib","kmsLib","iamLib","ec2","_ref2","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","region","lib","client","wrap","_callee$","_context","prev","next","sent","EC2","requestHandler","abrupt","stop","eks","_ref4","_ref5","_callee2","_callee2$","_context2","EKS","kms","_ref6","_ref7","_callee3","_callee3$","_context3","KMS","iam","_ref8","_ref9","_callee4","_callee4$","_context4","IAM","describeInstanceTypes","_ref10","_ref11","_callee5","_client$config","_rootGetters$awsClie","_rootGetters$awsClie2","rootGetters","commit","data","groups","list","_iterator","_step","row","apiName","instanceClass","groupLabel","storageSize","storageUnit","storageType","storageInfo","_storageInfo$Disks","disk","_callee5$","_context5","config","cmd","default","_createForOfIteratorHelper","s","n","done","InstanceType","split","toLowerCase","InstanceStorageInfo","TotalSizeInGB","Disks","NvmeSupport","Type","push","currentGeneration","CurrentGeneration","memoryBytes","MemoryInfo","SizeInMiB","supportedUsageClasses","SupportedUsageClasses","label","cpu","VCpuInfo","DefaultVCpus","memory","err","e","f","depaginateList","ctx","_ref12","_callee6","opt","hasNext","_loop","_callee6$","_context7","res","_loop$","_context6","Object","keys","find","x","NextToken","delegateYield","defaultRegions","_callee7","_callee7$","_context8"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/store/aws.js"],"sourcesContent":["import { sortBy } from '@shell/utils/sort';\nimport { randomStr } from '@shell/utils/string';\nimport { FetchHttpHandler } from '@aws-sdk/fetch-http-handler';\nimport { isArray, addObjects } from '@shell/utils/array';\n\nexport const state = () => {\n  return {\n    instanceTypes: [],\n    clientInfo:    null\n  };\n};\n\nclass Handler {\n  constructor(cloudCredentialId) {\n    this.cloudCredentialId = (cloudCredentialId || '');\n  }\n\n  handle(httpRequest, ...args) {\n    httpRequest.headers['x-api-headers-restrict'] = 'Content-Length';\n\n    if ( this.cloudCredentialId ) {\n      httpRequest.headers['x-api-cattleauth-header'] = `awsv4 credID=${ this.cloudCredentialId }`;\n    } else {\n      httpRequest.headers['x-api-auth-header'] = httpRequest.headers['authorization'];\n    }\n\n    delete httpRequest.headers['authorization'];\n\n    httpRequest.headers['content-type'] = `rancher:${ httpRequest.headers['content-type'] }`;\n\n    const endpoint = `/meta/proxy/`;\n\n    if ( !httpRequest.path.startsWith(endpoint) ) {\n      httpRequest.path = endpoint + httpRequest.hostname + httpRequest.path;\n    }\n\n    httpRequest.protocol = window.location.protocol;\n    httpRequest.hostname = window.location.hostname;\n    httpRequest.port = window.location.port;\n\n    return FetchHttpHandler.prototype.handle.call(this, httpRequest, ...args);\n  }\n}\n\nfunction credentialDefaultProvider(accessKey, secretKey) {\n  return function() {\n    // The SDK will complain if these aren't set, so fill them with something\n    // even though the cloudCredential will be used eventually\n    const out = {\n      accessKeyId:     accessKey || randomStr(),\n      secretAccessKey: secretKey || randomStr(),\n    };\n\n    return out;\n  };\n}\n\nexport const getters = {\n  // You could override these to do something based on the user, maybe.\n  defaultRegion() {\n    return 'us-west-2';\n  },\n\n  defaultInstanceType() {\n    return 't3a.medium';\n  },\n\n  instanceTypes(state) {\n    return state.instanceTypes;\n  },\n\n  clientInfo(state) {\n    return state.clientInfo;\n  }\n};\n\nexport const mutations = {\n  setInstanceTypes(state, { types, clientInfo }) {\n    state.instanceTypes = types;\n    state.clientInfo = clientInfo;\n  }\n};\n\nexport const actions = {\n  ec2Lib() {\n    return import(/* webpackChunkName: \"aws-ec2\" */ '@aws-sdk/client-ec2');\n  },\n\n  eksLib() {\n    return import(/* webpackChunkName: \"aws-eks\" */ '@aws-sdk/client-eks');\n  },\n\n  kmsLib() {\n    return import(/* webpackChunkName: \"aws-kms\" */ '@aws-sdk/client-kms');\n  },\n\n  iamLib() {\n    return import(/* webpackChunkName: \"aws-iam\" */ '@aws-sdk/client-iam');\n  },\n\n  async ec2({ dispatch }, {\n    region, cloudCredentialId, accessKey, secretKey\n  }) {\n    const lib = await dispatch('ec2Lib');\n\n    const client = new lib.EC2({\n      region,\n      credentialDefaultProvider: credentialDefaultProvider(accessKey, secretKey),\n      requestHandler:            new Handler(cloudCredentialId),\n    });\n\n    return client;\n  },\n\n  async eks({ dispatch }, {\n    region, cloudCredentialId, accessKey, secretKey\n  }) {\n    const lib = await dispatch('eksLib');\n\n    const client = new lib.EKS({\n      region,\n      credentialDefaultProvider: credentialDefaultProvider(accessKey, secretKey),\n      requestHandler:            new Handler(cloudCredentialId),\n    });\n\n    return client;\n  },\n\n  async kms({ dispatch }, {\n    region, cloudCredentialId, accessKey, secretKey\n  }) {\n    const lib = await dispatch('kmsLib');\n\n    const client = new lib.KMS({\n      region,\n      credentialDefaultProvider: credentialDefaultProvider(accessKey, secretKey),\n      requestHandler:            new Handler(cloudCredentialId),\n    });\n\n    return client;\n  },\n\n  async iam({ dispatch }, {\n    region, cloudCredentialId, accessKey, secretKey\n  }) {\n    const lib = await dispatch('iamLib');\n\n    const client = new lib.IAM({\n      region,\n      credentialDefaultProvider: credentialDefaultProvider(accessKey, secretKey),\n      requestHandler:            new Handler(cloudCredentialId),\n    });\n\n    return client;\n  },\n\n  async describeInstanceTypes({\n    dispatch, rootGetters, state, commit\n  }, { client }) {\n    const cloudCredentialId = client?.config?.requestHandler?.cloudCredentialId;\n    const region = await client.config.region();\n\n    if (cloudCredentialId === rootGetters['aws/clientInfo']?.cloudCredentialId && region === rootGetters['aws/clientInfo']?.region) {\n      return rootGetters['aws/instanceTypes'];\n    }\n    const data = await dispatch('depaginateList', { client, cmd: 'describeInstanceTypes' });\n\n    const groups = (await import(/* webpackChunkName: \"aws-data\" */'@shell/assets/data/ec2-instance-groups.json')).default;\n    const list = [];\n\n    for ( const row of data ) {\n      const apiName = row.InstanceType;\n      const instanceClass = apiName.split('.')[0].toLowerCase();\n      const groupLabel = groups[instanceClass] || 'Unknown';\n\n      let storageSize = 0;\n      let storageUnit = 'GB';\n      let storageType = null;\n      const storageInfo = row.InstanceStorageInfo;\n\n      if ( storageInfo) {\n        storageSize = storageInfo.TotalSizeInGB;\n        const disk = storageInfo.Disks?.[0];\n\n        if ( storageInfo.NvmeSupport === 'supported' ) {\n          storageType = 'NVMe';\n        } else if ( disk?.Type === 'ssd' ) {\n          storageType = 'SSD';\n        } else if ( disk?.Type === 'hdd' ) {\n          storageType = 'HDD';\n        } else {\n          storageType = 'Unknown';\n        }\n\n        if ( storageSize > 1000 ) {\n          storageSize /= 1000;\n          storageUnit = 'TB';\n        }\n      } else {\n        // storageSize == 0 shows EBS-Only\n      }\n\n      list.push({\n        apiName,\n        currentGeneration:     row.CurrentGeneration || false,\n        groupLabel,\n        instanceClass,\n        memoryBytes:           row.MemoryInfo.SizeInMiB * 1024 * 1024,\n        supportedUsageClasses: row.SupportedUsageClasses,\n        label:                 rootGetters['i18n/t']('cluster.machineConfig.aws.sizeLabel', {\n          apiName,\n          cpu:    row.VCpuInfo.DefaultVCpus,\n          memory: row.MemoryInfo.SizeInMiB / 1024,\n          storageSize,\n          storageUnit,\n          storageType,\n        }),\n      });\n    }\n\n    const out = sortBy(list, ['currentGeneration:desc', 'groupLabel', 'instanceClass', 'memoryBytes', 'apiName']);\n\n    commit('setInstanceTypes', { types: out, clientInfo: { region, cloudCredentialId } });\n\n    return out;\n  },\n\n  async depaginateList(ctx, {\n    client, cmd, key, opt\n  }) {\n    let hasNext = true;\n    const out = [];\n\n    opt = opt || {};\n\n    while ( hasNext ) {\n      const res = await client[cmd](opt);\n\n      if ( !key ) {\n        key = Object.keys(res).find((x) => isArray(res[x]));\n      }\n\n      addObjects(out, res[key]);\n      opt.NextToken = res.NextToken;\n      hasNext = !!res.NextToken;\n    }\n\n    return out;\n  },\n\n  async defaultRegions() {\n    const data = (await import(/* webpackChunkName: \"aws-data\" */'@shell/assets/data/aws-regions.json')).default;\n\n    return data;\n  }\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,OAAO,EAAEC,UAAU,QAAQ,oBAAoB;AAExD,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;EACzB,OAAO;IACLC,aAAa,EAAE,EAAE;IACjBC,UAAU,EAAK;EACjB,CAAC;AACH,CAAC;AAAC,IAEIC,OAAO;EACX,SAAAA,QAAYC,iBAAiB,EAAE;IAAAC,eAAA,OAAAF,OAAA;IAC7B,IAAI,CAACC,iBAAiB,GAAIA,iBAAiB,IAAI,EAAG;EACpD;EAAC,OAAAE,YAAA,CAAAH,OAAA;IAAAI,GAAA;IAAAC,KAAA,EAED,SAAAC,MAAMA,CAACC,WAAW,EAAW;MAAA,IAAAC,qBAAA;MAC3BD,WAAW,CAACE,OAAO,CAAC,wBAAwB,CAAC,GAAG,gBAAgB;MAEhE,IAAK,IAAI,CAACR,iBAAiB,EAAG;QAC5BM,WAAW,CAACE,OAAO,CAAC,yBAAyB,CAAC,mBAAAC,MAAA,CAAoB,IAAI,CAACT,iBAAiB,CAAG;MAC7F,CAAC,MAAM;QACLM,WAAW,CAACE,OAAO,CAAC,mBAAmB,CAAC,GAAGF,WAAW,CAACE,OAAO,CAAC,eAAe,CAAC;MACjF;MAEA,OAAOF,WAAW,CAACE,OAAO,CAAC,eAAe,CAAC;MAE3CF,WAAW,CAACE,OAAO,CAAC,cAAc,CAAC,cAAAC,MAAA,CAAeH,WAAW,CAACE,OAAO,CAAC,cAAc,CAAC,CAAG;MAExF,IAAME,QAAQ,iBAAiB;MAE/B,IAAK,CAACJ,WAAW,CAACK,IAAI,CAACC,UAAU,CAACF,QAAQ,CAAC,EAAG;QAC5CJ,WAAW,CAACK,IAAI,GAAGD,QAAQ,GAAGJ,WAAW,CAACO,QAAQ,GAAGP,WAAW,CAACK,IAAI;MACvE;MAEAL,WAAW,CAACQ,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACF,QAAQ;MAC/CR,WAAW,CAACO,QAAQ,GAAGE,MAAM,CAACC,QAAQ,CAACH,QAAQ;MAC/CP,WAAW,CAACW,IAAI,GAAGF,MAAM,CAACC,QAAQ,CAACC,IAAI;MAAC,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EArBnBC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;MAAA;MAuBzB,OAAO,CAAAhB,qBAAA,GAAAd,gBAAgB,CAAC+B,SAAS,CAACnB,MAAM,EAACoB,IAAI,CAAAC,KAAA,CAAAnB,qBAAA,GAAC,IAAI,EAAED,WAAW,EAAAG,MAAA,CAAKY,IAAI,EAAC;IAC3E;EAAC;AAAA;AAGH,SAASM,yBAAyBA,CAACC,SAAS,EAAEC,SAAS,EAAE;EACvD,OAAO,YAAW;IAChB;IACA;IACA,IAAMC,GAAG,GAAG;MACVC,WAAW,EAAMH,SAAS,IAAIpC,SAAS,CAAC,CAAC;MACzCwC,eAAe,EAAEH,SAAS,IAAIrC,SAAS,CAAC;IAC1C,CAAC;IAED,OAAOsC,GAAG;EACZ,CAAC;AACH;AAEA,OAAO,IAAMG,OAAO,GAAG;EACrB;EACAC,aAAa,WAAbA,aAAaA,CAAA,EAAG;IACd,OAAO,WAAW;EACpB,CAAC;EAEDC,mBAAmB,WAAnBA,mBAAmBA,CAAA,EAAG;IACpB,OAAO,YAAY;EACrB,CAAC;EAEDtC,aAAa,WAAbA,aAAaA,CAACD,KAAK,EAAE;IACnB,OAAOA,KAAK,CAACC,aAAa;EAC5B,CAAC;EAEDC,UAAU,WAAVA,UAAUA,CAACF,KAAK,EAAE;IAChB,OAAOA,KAAK,CAACE,UAAU;EACzB;AACF,CAAC;AAED,OAAO,IAAMsC,SAAS,GAAG;EACvBC,gBAAgB,WAAhBA,gBAAgBA,CAACzC,KAAK,EAAA0C,IAAA,EAAyB;IAAA,IAArBC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAEzC,UAAU,GAAAwC,IAAA,CAAVxC,UAAU;IACzCF,KAAK,CAACC,aAAa,GAAG0C,KAAK;IAC3B3C,KAAK,CAACE,UAAU,GAAGA,UAAU;EAC/B;AACF,CAAC;AAED,OAAO,IAAM0C,OAAO,GAAG;EACrBC,MAAM,WAANA,MAAMA,CAAA,EAAG;IACP,OAAO,MAAM,CAAC,iCAAkC,qBAAqB,CAAC;EACxE,CAAC;EAEDC,MAAM,WAANA,MAAMA,CAAA,EAAG;IACP,OAAO,MAAM,CAAC,iCAAkC,qBAAqB,CAAC;EACxE,CAAC;EAEDC,MAAM,WAANA,MAAMA,CAAA,EAAG;IACP,OAAO,MAAM,CAAC,iCAAkC,qBAAqB,CAAC;EACxE,CAAC;EAEDC,MAAM,WAANA,MAAMA,CAAA,EAAG;IACP,OAAO,MAAM,CAAC,iCAAkC,qBAAqB,CAAC;EACxE,CAAC;EAEKC,GAAG,WAAHA,GAAGA,CAAAC,KAAA,EAAAC,KAAA,EAEN;IAAA,OAAAC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAAC,QAAA;MAAA,IAAAC,QAAA,EAAAC,MAAA,EAAArD,iBAAA,EAAA4B,SAAA,EAAAC,SAAA,EAAAyB,GAAA,EAAAC,MAAA;MAAA,OAAAN,mBAAA,CAAAO,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAFSR,QAAQ,GAAAN,KAAA,CAARM,QAAQ;YAClBC,MAAM,GAAAN,KAAA,CAANM,MAAM,EAAErD,iBAAiB,GAAA+C,KAAA,CAAjB/C,iBAAiB,EAAE4B,SAAS,GAAAmB,KAAA,CAATnB,SAAS,EAAEC,SAAS,GAAAkB,KAAA,CAATlB,SAAS;YAAA6B,QAAA,CAAAE,IAAA;YAAA,OAE7BR,QAAQ,CAAC,QAAQ,CAAC;UAAA;YAA9BE,GAAG,GAAAI,QAAA,CAAAG,IAAA;YAEHN,MAAM,GAAG,IAAID,GAAG,CAACQ,GAAG,CAAC;cACzBT,MAAM,EAANA,MAAM;cACN1B,yBAAyB,EAAEA,yBAAyB,CAACC,SAAS,EAAEC,SAAS,CAAC;cAC1EkC,cAAc,EAAa,IAAIhE,OAAO,CAACC,iBAAiB;YAC1D,CAAC,CAAC;YAAA,OAAA0D,QAAA,CAAAM,MAAA,WAEKT,MAAM;UAAA;UAAA;YAAA,OAAAG,QAAA,CAAAO,IAAA;QAAA;MAAA,GAAAd,OAAA;IAAA;EACf,CAAC;EAEKe,GAAG,WAAHA,GAAGA,CAAAC,KAAA,EAAAC,KAAA,EAEN;IAAA,OAAApB,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAAmB,SAAA;MAAA,IAAAjB,QAAA,EAAAC,MAAA,EAAArD,iBAAA,EAAA4B,SAAA,EAAAC,SAAA,EAAAyB,GAAA,EAAAC,MAAA;MAAA,OAAAN,mBAAA,CAAAO,IAAA,UAAAc,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAZ,IAAA,GAAAY,SAAA,CAAAX,IAAA;UAAA;YAFSR,QAAQ,GAAAe,KAAA,CAARf,QAAQ;YAClBC,MAAM,GAAAe,KAAA,CAANf,MAAM,EAAErD,iBAAiB,GAAAoE,KAAA,CAAjBpE,iBAAiB,EAAE4B,SAAS,GAAAwC,KAAA,CAATxC,SAAS,EAAEC,SAAS,GAAAuC,KAAA,CAATvC,SAAS;YAAA0C,SAAA,CAAAX,IAAA;YAAA,OAE7BR,QAAQ,CAAC,QAAQ,CAAC;UAAA;YAA9BE,GAAG,GAAAiB,SAAA,CAAAV,IAAA;YAEHN,MAAM,GAAG,IAAID,GAAG,CAACkB,GAAG,CAAC;cACzBnB,MAAM,EAANA,MAAM;cACN1B,yBAAyB,EAAEA,yBAAyB,CAACC,SAAS,EAAEC,SAAS,CAAC;cAC1EkC,cAAc,EAAa,IAAIhE,OAAO,CAACC,iBAAiB;YAC1D,CAAC,CAAC;YAAA,OAAAuE,SAAA,CAAAP,MAAA,WAEKT,MAAM;UAAA;UAAA;YAAA,OAAAgB,SAAA,CAAAN,IAAA;QAAA;MAAA,GAAAI,QAAA;IAAA;EACf,CAAC;EAEKI,GAAG,WAAHA,GAAGA,CAAAC,KAAA,EAAAC,KAAA,EAEN;IAAA,OAAA3B,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAA0B,SAAA;MAAA,IAAAxB,QAAA,EAAAC,MAAA,EAAArD,iBAAA,EAAA4B,SAAA,EAAAC,SAAA,EAAAyB,GAAA,EAAAC,MAAA;MAAA,OAAAN,mBAAA,CAAAO,IAAA,UAAAqB,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAnB,IAAA,GAAAmB,SAAA,CAAAlB,IAAA;UAAA;YAFSR,QAAQ,GAAAsB,KAAA,CAARtB,QAAQ;YAClBC,MAAM,GAAAsB,KAAA,CAANtB,MAAM,EAAErD,iBAAiB,GAAA2E,KAAA,CAAjB3E,iBAAiB,EAAE4B,SAAS,GAAA+C,KAAA,CAAT/C,SAAS,EAAEC,SAAS,GAAA8C,KAAA,CAAT9C,SAAS;YAAAiD,SAAA,CAAAlB,IAAA;YAAA,OAE7BR,QAAQ,CAAC,QAAQ,CAAC;UAAA;YAA9BE,GAAG,GAAAwB,SAAA,CAAAjB,IAAA;YAEHN,MAAM,GAAG,IAAID,GAAG,CAACyB,GAAG,CAAC;cACzB1B,MAAM,EAANA,MAAM;cACN1B,yBAAyB,EAAEA,yBAAyB,CAACC,SAAS,EAAEC,SAAS,CAAC;cAC1EkC,cAAc,EAAa,IAAIhE,OAAO,CAACC,iBAAiB;YAC1D,CAAC,CAAC;YAAA,OAAA8E,SAAA,CAAAd,MAAA,WAEKT,MAAM;UAAA;UAAA;YAAA,OAAAuB,SAAA,CAAAb,IAAA;QAAA;MAAA,GAAAW,QAAA;IAAA;EACf,CAAC;EAEKI,GAAG,WAAHA,GAAGA,CAAAC,KAAA,EAAAC,KAAA,EAEN;IAAA,OAAAlC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAAiC,SAAA;MAAA,IAAA/B,QAAA,EAAAC,MAAA,EAAArD,iBAAA,EAAA4B,SAAA,EAAAC,SAAA,EAAAyB,GAAA,EAAAC,MAAA;MAAA,OAAAN,mBAAA,CAAAO,IAAA,UAAA4B,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA1B,IAAA,GAAA0B,SAAA,CAAAzB,IAAA;UAAA;YAFSR,QAAQ,GAAA6B,KAAA,CAAR7B,QAAQ;YAClBC,MAAM,GAAA6B,KAAA,CAAN7B,MAAM,EAAErD,iBAAiB,GAAAkF,KAAA,CAAjBlF,iBAAiB,EAAE4B,SAAS,GAAAsD,KAAA,CAATtD,SAAS,EAAEC,SAAS,GAAAqD,KAAA,CAATrD,SAAS;YAAAwD,SAAA,CAAAzB,IAAA;YAAA,OAE7BR,QAAQ,CAAC,QAAQ,CAAC;UAAA;YAA9BE,GAAG,GAAA+B,SAAA,CAAAxB,IAAA;YAEHN,MAAM,GAAG,IAAID,GAAG,CAACgC,GAAG,CAAC;cACzBjC,MAAM,EAANA,MAAM;cACN1B,yBAAyB,EAAEA,yBAAyB,CAACC,SAAS,EAAEC,SAAS,CAAC;cAC1EkC,cAAc,EAAa,IAAIhE,OAAO,CAACC,iBAAiB;YAC1D,CAAC,CAAC;YAAA,OAAAqF,SAAA,CAAArB,MAAA,WAEKT,MAAM;UAAA;UAAA;YAAA,OAAA8B,SAAA,CAAApB,IAAA;QAAA;MAAA,GAAAkB,QAAA;IAAA;EACf,CAAC;EAEKI,qBAAqB,WAArBA,qBAAqBA,CAAAC,MAAA,EAAAC,MAAA,EAEZ;IAAA,OAAAzC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAAwC,SAAA;MAAA,IAAAC,cAAA,EAAAC,oBAAA,EAAAC,qBAAA;MAAA,IAAAzC,QAAA,EAAA0C,WAAA,EAAAlG,KAAA,EAAAmG,MAAA,EAAAxC,MAAA,EAAAvD,iBAAA,EAAAqD,MAAA,EAAA2C,IAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,GAAA,EAAAC,OAAA,EAAAC,aAAA,EAAAC,UAAA,EAAAC,WAAA,EAAAC,WAAA,EAAAC,WAAA,EAAAC,WAAA,EAAAC,kBAAA,EAAAC,IAAA,EAAAhF,GAAA;MAAA,OAAAmB,mBAAA,CAAAO,IAAA,UAAAuD,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAArD,IAAA,GAAAqD,SAAA,CAAApD,IAAA;UAAA;YADbR,QAAQ,GAAAoC,MAAA,CAARpC,QAAQ,EAAE0C,WAAW,GAAAN,MAAA,CAAXM,WAAW,EAAElG,KAAK,GAAA4F,MAAA,CAAL5F,KAAK,EAAEmG,MAAM,GAAAP,MAAA,CAANO,MAAM;YACjCxC,MAAM,GAAAkC,MAAA,CAANlC,MAAM;YACHvD,iBAAiB,GAAGuD,MAAM,aAANA,MAAM,gBAAAoC,cAAA,GAANpC,MAAM,CAAE0D,MAAM,cAAAtB,cAAA,gBAAAA,cAAA,GAAdA,cAAA,CAAgB5B,cAAc,cAAA4B,cAAA,uBAA9BA,cAAA,CAAgC3F,iBAAiB;YAAAgH,SAAA,CAAApD,IAAA;YAAA,OACtDL,MAAM,CAAC0D,MAAM,CAAC5D,MAAM,CAAC,CAAC;UAAA;YAArCA,MAAM,GAAA2D,SAAA,CAAAnD,IAAA;YAAA,MAER7D,iBAAiB,OAAA4F,oBAAA,GAAKE,WAAW,CAAC,gBAAgB,CAAC,cAAAF,oBAAA,uBAA7BA,oBAAA,CAA+B5F,iBAAiB,KAAIqD,MAAM,OAAAwC,qBAAA,GAAKC,WAAW,CAAC,gBAAgB,CAAC,cAAAD,qBAAA,uBAA7BA,qBAAA,CAA+BxC,MAAM;cAAA2D,SAAA,CAAApD,IAAA;cAAA;YAAA;YAAA,OAAAoD,SAAA,CAAAhD,MAAA,WACrH8B,WAAW,CAAC,mBAAmB,CAAC;UAAA;YAAAkB,SAAA,CAAApD,IAAA;YAAA,OAEtBR,QAAQ,CAAC,gBAAgB,EAAE;cAAEG,MAAM,EAANA,MAAM;cAAE2D,GAAG,EAAE;YAAwB,CAAC,CAAC;UAAA;YAAjFlB,IAAI,GAAAgB,SAAA,CAAAnD,IAAA;YAAAmD,SAAA,CAAApD,IAAA;YAAA,OAEY,MAAM,CAAC,kCAAkC,6CAA6C,CAAC;UAAA;YAAvGqC,MAAM,GAAAe,SAAA,CAAAnD,IAAA,CAAmGsD,OAAO;YAChHjB,IAAI,GAAG,EAAE;YAAAC,SAAA,GAAAiB,0BAAA,CAEIpB,IAAI;YAAA;cAAvB,KAAAG,SAAA,CAAAkB,CAAA,MAAAjB,KAAA,GAAAD,SAAA,CAAAmB,CAAA,IAAAC,IAAA,GAA0B;gBAAdlB,GAAG,GAAAD,KAAA,CAAAhG,KAAA;gBACPkG,OAAO,GAAGD,GAAG,CAACmB,YAAY;gBAC1BjB,aAAa,GAAGD,OAAO,CAACmB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;gBACnDlB,UAAU,GAAGP,MAAM,CAACM,aAAa,CAAC,IAAI,SAAS;gBAEjDE,WAAW,GAAG,CAAC;gBACfC,WAAW,GAAG,IAAI;gBAClBC,WAAW,GAAG,IAAI;gBAChBC,WAAW,GAAGP,GAAG,CAACsB,mBAAmB;gBAE3C,IAAKf,WAAW,EAAE;kBAChBH,WAAW,GAAGG,WAAW,CAACgB,aAAa;kBACjCd,IAAI,IAAAD,kBAAA,GAAGD,WAAW,CAACiB,KAAK,cAAAhB,kBAAA,uBAAjBA,kBAAA,CAAoB,CAAC,CAAC;kBAEnC,IAAKD,WAAW,CAACkB,WAAW,KAAK,WAAW,EAAG;oBAC7CnB,WAAW,GAAG,MAAM;kBACtB,CAAC,MAAM,IAAK,CAAAG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiB,IAAI,MAAK,KAAK,EAAG;oBACjCpB,WAAW,GAAG,KAAK;kBACrB,CAAC,MAAM,IAAK,CAAAG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiB,IAAI,MAAK,KAAK,EAAG;oBACjCpB,WAAW,GAAG,KAAK;kBACrB,CAAC,MAAM;oBACLA,WAAW,GAAG,SAAS;kBACzB;kBAEA,IAAKF,WAAW,GAAG,IAAI,EAAG;oBACxBA,WAAW,IAAI,IAAI;oBACnBC,WAAW,GAAG,IAAI;kBACpB;gBACF,CAAC,MAAM;kBACL;gBAAA;gBAGFR,IAAI,CAAC8B,IAAI,CAAC;kBACR1B,OAAO,EAAPA,OAAO;kBACP2B,iBAAiB,EAAM5B,GAAG,CAAC6B,iBAAiB,IAAI,KAAK;kBACrD1B,UAAU,EAAVA,UAAU;kBACVD,aAAa,EAAbA,aAAa;kBACb4B,WAAW,EAAY9B,GAAG,CAAC+B,UAAU,CAACC,SAAS,GAAG,IAAI,GAAG,IAAI;kBAC7DC,qBAAqB,EAAEjC,GAAG,CAACkC,qBAAqB;kBAChDC,KAAK,EAAkB1C,WAAW,CAAC,QAAQ,CAAC,CAAC,qCAAqC,EAAE;oBAClFQ,OAAO,EAAPA,OAAO;oBACPmC,GAAG,EAAKpC,GAAG,CAACqC,QAAQ,CAACC,YAAY;oBACjCC,MAAM,EAAEvC,GAAG,CAAC+B,UAAU,CAACC,SAAS,GAAG,IAAI;oBACvC5B,WAAW,EAAXA,WAAW;oBACXC,WAAW,EAAXA,WAAW;oBACXC,WAAW,EAAXA;kBACF,CAAC;gBACH,CAAC,CAAC;cACJ;YAAC,SAAAkC,GAAA;cAAA1C,SAAA,CAAA2C,CAAA,CAAAD,GAAA;YAAA;cAAA1C,SAAA,CAAA4C,CAAA;YAAA;YAEKjH,GAAG,GAAGvC,MAAM,CAAC2G,IAAI,EAAE,CAAC,wBAAwB,EAAE,YAAY,EAAE,eAAe,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;YAE7GH,MAAM,CAAC,kBAAkB,EAAE;cAAExD,KAAK,EAAET,GAAG;cAAEhC,UAAU,EAAE;gBAAEuD,MAAM,EAANA,MAAM;gBAAErD,iBAAiB,EAAjBA;cAAkB;YAAE,CAAC,CAAC;YAAC,OAAAgH,SAAA,CAAAhD,MAAA,WAE/ElC,GAAG;UAAA;UAAA;YAAA,OAAAkF,SAAA,CAAA/C,IAAA;QAAA;MAAA,GAAAyB,QAAA;IAAA;EACZ,CAAC;EAEKsD,cAAc,WAAdA,cAAcA,CAACC,GAAG,EAAAC,MAAA,EAErB;IAAA,OAAAlG,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAAiG,SAAA;MAAA,IAAA5F,MAAA,EAAA2D,GAAA,EAAA/G,GAAA,EAAAiJ,GAAA,EAAAC,OAAA,EAAAvH,GAAA,EAAAwH,KAAA;MAAA,OAAArG,mBAAA,CAAAO,IAAA,UAAA+F,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA7F,IAAA,GAAA6F,SAAA,CAAA5F,IAAA;UAAA;YADDL,MAAM,GAAA2F,MAAA,CAAN3F,MAAM,EAAE2D,GAAG,GAAAgC,MAAA,CAAHhC,GAAG,EAAE/G,GAAG,GAAA+I,MAAA,CAAH/I,GAAG,EAAEiJ,GAAG,GAAAF,MAAA,CAAHE,GAAG;YAEjBC,OAAO,GAAG,IAAI;YACZvH,GAAG,GAAG,EAAE;YAEdsH,GAAG,GAAGA,GAAG,IAAI,CAAC,CAAC;YAACE,KAAA,gBAAArG,mBAAA,CAAAC,IAAA,UAAAoG,MAAA;cAAA,IAAAG,GAAA;cAAA,OAAAxG,mBAAA,CAAAO,IAAA,UAAAkG,OAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAAhG,IAAA,GAAAgG,SAAA,CAAA/F,IAAA;kBAAA;oBAAA+F,SAAA,CAAA/F,IAAA;oBAAA,OAGIL,MAAM,CAAC2D,GAAG,CAAC,CAACkC,GAAG,CAAC;kBAAA;oBAA5BK,GAAG,GAAAE,SAAA,CAAA9F,IAAA;oBAET,IAAK,CAAC1D,GAAG,EAAG;sBACVA,GAAG,GAAGyJ,MAAM,CAACC,IAAI,CAACJ,GAAG,CAAC,CAACK,IAAI,CAAC,UAACC,CAAC;wBAAA,OAAKrK,OAAO,CAAC+J,GAAG,CAACM,CAAC,CAAC,CAAC;sBAAA,EAAC;oBACrD;oBAEApK,UAAU,CAACmC,GAAG,EAAE2H,GAAG,CAACtJ,GAAG,CAAC,CAAC;oBACzBiJ,GAAG,CAACY,SAAS,GAAGP,GAAG,CAACO,SAAS;oBAC7BX,OAAO,GAAG,CAAC,CAACI,GAAG,CAACO,SAAS;kBAAC;kBAAA;oBAAA,OAAAL,SAAA,CAAA1F,IAAA;gBAAA;cAAA,GAAAqF,KAAA;YAAA;UAAA;YAAA,KATpBD,OAAO;cAAAG,SAAA,CAAA5F,IAAA;cAAA;YAAA;YAAA,OAAA4F,SAAA,CAAAS,aAAA,CAAAX,KAAA;UAAA;YAAAE,SAAA,CAAA5F,IAAA;YAAA;UAAA;YAAA,OAAA4F,SAAA,CAAAxF,MAAA,WAYRlC,GAAG;UAAA;UAAA;YAAA,OAAA0H,SAAA,CAAAvF,IAAA;QAAA;MAAA,GAAAkF,QAAA;IAAA;EACZ,CAAC;EAEKe,cAAc,WAAdA,cAAcA,CAAA,EAAG;IAAA,OAAAlH,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAAiH,SAAA;MAAA,IAAAnE,IAAA;MAAA,OAAA/C,mBAAA,CAAAO,IAAA,UAAA4G,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA1G,IAAA,GAAA0G,SAAA,CAAAzG,IAAA;UAAA;YAAAyG,SAAA,CAAAzG,IAAA;YAAA,OACD,MAAM,CAAC,kCAAkC,qCAAqC,CAAC;UAAA;YAA7FoC,IAAI,GAAAqE,SAAA,CAAAxG,IAAA,CAA2FsD,OAAO;YAAA,OAAAkD,SAAA,CAAArG,MAAA,WAErGgC,IAAI;UAAA;UAAA;YAAA,OAAAqE,SAAA,CAAApG,IAAA;QAAA;MAAA,GAAAkG,QAAA;IAAA;EACb;AACF,CAAC","ignoreList":[]}]}