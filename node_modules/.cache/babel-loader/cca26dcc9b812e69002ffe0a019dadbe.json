{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/models/management.cattle.io.user.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/models/management.cattle.io.user.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["NORMAN","HybridModel","cleanHybridResources","day","User","_HybridModel","data","ctx","_this","rehydrateNamespace","arguments","length","undefined","setClone","_classCallCheck","_description","description","_callSuper","_inherits","_createClass","key","value","cleanResource","desc","clean","get","_iterator","_createForOfIteratorHelper","principalIds","_step","s","n","done","p","startsWith","err","e","f","currentPrincipal","$rootGetters","find","_this2","map","id","PRINCIPAL","filter","displayName","username","name","nameDisplay","concat","principals","isSystem","isLocal","provider","_iterator2","_step2","idx","indexOf","driver","substr","toLowerCase","split","_this$metadata","metadata","labels","_this$metadata2","state","userDisabledIn","_this$metadata3","_this$metadata4","enabled","t","set","toJSON","_superPropGet","_save","_asyncToGenerator","_regeneratorRuntime","mark","_callee","opt","clone","wrap","_callee$","_context","prev","next","$dispatch","resource","sent","canRefreshAccess","abrupt","stop","save","_x","apply","_setEnabled","_callee2","_callee2$","_context2","norman","root","setEnabled","_x2","_activate","_callee3","_callee3$","_context3","activate","_activateBulk","_callee4","items","_callee4$","_context4","Promise","all","item","activateBulk","_x3","_deactivate","_callee5","_callee5$","_context5","deactivate","_deactivateBulk","_callee6","_callee6$","_context6","deactivateBulk","_x4","_refreshGroupMembership","_callee7","user","_callee7$","_context7","type","USER","doAction","refreshGroupMembership","canActivate","stateOk","permissionOk","hasLink","isCurrentUser","action","label","icon","bulkable","bulkAction","weight","divider","_toConsumableArray","formatter","content","separator","formatterOpts","addSuffix","suffix","userLastLogin","isCountdown","userDisabledInDisplay","userDeletedIn","_details","_this$norman","_this$norman2","remove","_this$norman3","default"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/models/management.cattle.io.user.js"],"sourcesContent":["import { NORMAN } from '@shell/config/types';\nimport HybridModel, { cleanHybridResources } from '@shell/plugins/steve/hybrid-class';\nimport day from 'dayjs';\n\nexport default class User extends HybridModel {\n  // Preserve description\n  constructor(data, ctx, rehydrateNamespace = null, setClone = false) {\n    const _description = data.description;\n\n    super(data, ctx, rehydrateNamespace, setClone);\n    this.description = _description;\n  }\n\n  // Clean the Norman properties, but keep description\n  cleanResource(data) {\n    const desc = data.description;\n    const clean = cleanHybridResources(data);\n\n    clean._description = desc;\n\n    return clean;\n  }\n\n  get isSystem() {\n    for ( const p of this.principalIds || [] ) {\n      if ( p.startsWith('system://') ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  get isCurrentUser() {\n    const currentPrincipal = this.$rootGetters['auth/principalId'];\n\n    return !!(this.principalIds || []).find((p) => p === currentPrincipal);\n  }\n\n  get principals() {\n    return this.principalIds\n      .map((id) => this.$rootGetters['rancher/byId'](NORMAN.PRINCIPAL, id))\n      .filter((p) => p);\n  }\n\n  get nameDisplay() {\n    return this.displayName || this.username || this.id;\n  }\n\n  get labelForSelect() {\n    const name = this.nameDisplay;\n    const id = this.id;\n\n    if ( name === id ) {\n      return id;\n    } else {\n      return `${ name } (${ id })`;\n    }\n  }\n\n  get provider() {\n    const principals = this.principalIds || [];\n    let isSystem = false;\n    let isLocal = true;\n    let provider = '';\n\n    for ( const p of principals ) {\n      const idx = p.indexOf(':');\n      const driver = p.substr(0, idx).toLowerCase().split('_')[0];\n\n      if ( driver === 'system' ) {\n        isSystem = true;\n      } else if ( driver === 'local' ) {\n        // Do nothing, defaults to local\n      } else {\n        isLocal = false;\n\n        if ( provider ) {\n          provider = 'multiple';\n        } else {\n          provider = driver;\n        }\n      }\n    }\n\n    let key;\n\n    if ( isSystem ) {\n      key = 'system';\n    } else if ( isLocal ) {\n      key = 'local';\n    } else {\n      key = provider;\n    }\n\n    return key;\n  }\n\n  get providerDisplay() {\n    return this.$rootGetters['i18n/withFallback'](`model.authConfig.provider.\"${ this.provider }\"`, null, this.provider);\n  }\n\n  /**\n   * Gets the last-login label in milliseconds\n   * @returns {number}\n   */\n  get userLastLogin() {\n    return this.metadata?.labels?.['cattle.io/last-login'] * 1000;\n  }\n\n  /**\n   * Gets the disabled-after label in milliseconds\n   * @returns {number}\n   */\n  get userDisabledIn() {\n    return this.metadata?.labels?.['cattle.io/disable-after'] * 1000;\n  }\n\n  /**\n   * Provides a display value for the userDisabledIn date based on the user\n   * state.\n   */\n  get userDisabledInDisplay() {\n    return this.state === 'inactive' ? null : this.userDisabledIn;\n  }\n\n  /**\n   * Gets the delete-after label in milliseconds\n   * @returns {number}\n   */\n  get userDeletedIn() {\n    return this.metadata?.labels?.['cattle.io/delete-after'] * 1000;\n  }\n\n  get state() {\n    if ( this.enabled === false ) {\n      return 'inactive';\n    }\n\n    return this.metadata?.state?.name || 'unknown';\n  }\n\n  get stateDisplay() {\n    switch (this.state) {\n    case 'inactive':\n      return this.t('user.state.inactive');\n    case 'active':\n      return this.t('user.state.active');\n    case 'unknown':\n      return this.t('user.state.unknown');\n    default:\n      return this.state;\n    }\n  }\n\n  get description() {\n    return this._description;\n  }\n\n  set description(value) {\n    this._description = value;\n  }\n\n  // Ensure when we clone that we preserve the description\n  toJSON() {\n    const data = super.toJSON();\n\n    data.description = this._description;\n    delete data._description;\n\n    return data;\n  }\n\n  async save(opt) {\n    const clone = await this.$dispatch('clone', { resource: this });\n\n    // Remove local properties\n    delete clone.canRefreshAccess;\n\n    return clone._save(opt);\n  }\n\n  async setEnabled(enabled) {\n    const clone = await this.$dispatch('rancher/clone', { resource: this.norman }, { root: true });\n\n    clone.enabled = enabled;\n    await clone.save();\n  }\n\n  async activate() {\n    await this.setEnabled(true);\n  }\n\n  async activateBulk(items) {\n    await Promise.all(items.map((item) => item.setEnabled(true)));\n  }\n\n  async deactivate() {\n    await this.setEnabled(false);\n  }\n\n  async deactivateBulk(items) {\n    await Promise.all(items.map((item) => item.setEnabled(false)));\n  }\n\n  async refreshGroupMembership() {\n    const user = await this.$dispatch('rancher/find', {\n      type: NORMAN.USER,\n      id:   this.id,\n    }, { root: true });\n\n    await user.doAction('refreshauthprovideraccess');\n  }\n\n  canActivate(state) {\n    const stateOk = state ? this.state === 'inactive' : this.state === 'active';\n    const permissionOk = this.hasLink('update'); // Not canUpdate, only gate on api not whether editable pages should be visible\n\n    return stateOk && permissionOk && !this.isCurrentUser;\n  }\n\n  get _availableActions() {\n    return [\n      {\n        action:     'activate',\n        label:      this.t('action.enable'),\n        icon:       'icon icon-play',\n        bulkable:   true,\n        bulkAction: 'activateBulk',\n        enabled:    this.canActivate(true),\n        weight:     2\n      },\n      {\n        action:     'deactivate',\n        label:      this.t('action.disable'),\n        icon:       'icon icon-pause',\n        bulkable:   true,\n        bulkAction: 'deactivateBulk',\n        enabled:    this.canActivate(false),\n        weight:     1\n      },\n      {\n        action:  'refreshGroupMembership',\n        label:   this.t('authGroups.actions.refresh'),\n        icon:    'icon icon-refresh',\n        enabled: this.canRefreshAccess\n      },\n      { divider: true },\n      ...super._availableActions,\n    ];\n  }\n\n  get details() {\n    return [\n      {\n        label:     this.t('user.detail.username'),\n        formatter: 'CopyToClipboard',\n        content:   this.username\n      },\n      { separator: true },\n      {\n        label:         this.t('tableHeaders.userLastLogin'),\n        formatter:     'LiveDate',\n        formatterOpts: { addSuffix: true, suffix: `${ this.t('suffix.ago') } (${ day(this.userLastLogin) })` },\n        content:       this.userLastLogin,\n      },\n      {\n        label:         this.t('tableHeaders.userDisabledIn'),\n        formatter:     'LiveDate',\n        formatterOpts: { isCountdown: true },\n        content:       this.userDisabledInDisplay,\n      },\n      {\n        label:         this.t('tableHeaders.userDeletedIn'),\n        formatter:     'LiveDate',\n        formatterOpts: { isCountdown: true },\n        content:       this.userDeletedIn,\n      },\n      ...this._details\n    ];\n  }\n\n  get confirmRemove() {\n    return true;\n  }\n\n  get norman() {\n    return this.$rootGetters['rancher/byId'](NORMAN.USER, this.id);\n  }\n\n  get canDelete() {\n    return this.norman?.hasLink('remove') && !this.isCurrentUser;\n  }\n\n  get canUpdate() {\n    return this.norman?.hasLink('update');\n  }\n\n  remove() {\n    return this.norman?.remove();\n  }\n}\n"],"mappings":"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","ignoreList":[]}]}