{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/store/github.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/store/github.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["GITHUB_BASE_API","MAX_RESULTS","fetchGithubAPI","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","endpoint","response","resetTime","wrap","_callee$","_context","prev","next","fetch","concat","sent","status","Date","headers","get","Error","ok","json","abrupt","stop","_x","apply","arguments","getters","actions","apiList","ctx","_ref2","_callee2","username","repo","branch","_response","_yield$error$json","_callee2$","_context2","t0","items","t1","t3","t2","t4","fetchRecentRepos","_ref3","_arguments","_callee3","commit","dispatch","_ref4","res","_callee3$","_context3","length","undefined","fetchRepoDetails","_ref5","_arguments2","_callee4","_ref6","_callee4$","_context4","name","fetchBranches","_ref7","_ref8","_callee5","_callee5$","_context5","fetchCommits","_ref9","_callee6","_callee6$","_context6","search","_ref10","_ref11","_callee7","_callee7$","_context7","_objectSpread","hasError","message"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/store/github.js"],"sourcesContent":["const GITHUB_BASE_API = 'https://api.github.com';\nconst MAX_RESULTS = 100; // max number of results is 100\n\nconst fetchGithubAPI = async(endpoint) => {\n  const response = await fetch(`${ GITHUB_BASE_API }/${ endpoint }`);\n\n  // If rate-limit is exceeded, we should wait until the rate limit is reset\n  if (response.status === 403) {\n    const resetTime = new Date(response.headers.get('X-RateLimit-Reset') * 1000);\n\n    throw new Error(`Rate limit exceeded. Try again at ${ resetTime }`);\n  }\n\n  if (!response.ok) {\n    throw response;\n  }\n\n  return await response.json();\n};\n\nexport const getters = {};\n\nexport const actions = {\n  async apiList(ctx, {\n    username, endpoint, repo, branch\n  }) {\n    try {\n      switch (endpoint) {\n      case 'branches': {\n        return await fetchGithubAPI(`repos/${ username }/${ repo }/branches?per_page=${ MAX_RESULTS }`);\n      }\n      case 'repo': {\n        return await fetchGithubAPI(`repos/${ username }/${ repo }`);\n      }\n      case 'commits': {\n        return await fetchGithubAPI(`repos/${ username }/${ repo }/commits?sha=${ branch }&sort=updated&per_page=${ MAX_RESULTS }`);\n      }\n      case 'recentRepos': {\n        return await fetchGithubAPI(`users/${ username }/repos?per_page=${ MAX_RESULTS }`);\n      }\n      case 'search': {\n        // Fetch for a specific branches\n        if (username && repo && branch) {\n          const response = await fetchGithubAPI(`repos/${ username }/${ repo }/branches/${ branch }`);\n\n          return [response];\n        }\n\n        // Fetch for repos\n        const response = await fetchGithubAPI(`search/repositories?q=repo:${ username }/${ repo }`);\n\n        if (response) {\n          return response.items;\n        }\n      }\n      }\n    } catch (error) {\n      throw await error.json() ?? Error(`Error fetching ${ endpoint }`);\n    }\n  },\n\n  async fetchRecentRepos({ commit, dispatch }, { username } = {}) {\n    const res = await dispatch('apiList', { username, endpoint: 'recentRepos' });\n\n    return res;\n  },\n\n  async fetchRepoDetails({ commit, dispatch }, { username, repo } = {}) {\n    const res = await dispatch('apiList', {\n      username, endpoint: 'repo', repo: repo.name\n    });\n\n    return res;\n  },\n\n  async fetchBranches({ commit, dispatch }, { repo, username }) {\n    const res = await dispatch('apiList', {\n      username, endpoint: 'branches', repo: repo.name\n    });\n\n    return res;\n  },\n\n  async fetchCommits(ctx, { repo, username, branch }) {\n    const { dispatch } = ctx;\n    const res = await dispatch('apiList', {\n      username, endpoint: 'commits', repo: repo.name, branch: branch.name\n    });\n\n    return res;\n  },\n  async search({ dispatch }, { repo, username, branch }) {\n    try {\n      const res = await dispatch('apiList', {\n        username, endpoint: 'search', repo: repo?.name, branch: branch?.name\n      });\n\n      return {\n        ...res,\n        hasError: false,\n      };\n    } catch (error) {\n      return {\n        message:  error.message,\n        hasError: true\n      };\n    }\n  },\n};\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAMA,eAAe,GAAG,wBAAwB;AAChD,IAAMC,WAAW,GAAG,GAAG,CAAC,CAAC;;AAEzB,IAAMC,cAAc;EAAA,IAAAC,IAAA,GAAAC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,CAAG,SAAAC,QAAMC,QAAQ;IAAA,IAAAC,QAAA,EAAAC,SAAA;IAAA,OAAAL,mBAAA,CAAAM,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OACZC,KAAK,IAAAC,MAAA,CAAKjB,eAAe,OAAAiB,MAAA,CAAMT,QAAQ,CAAG,CAAC;QAAA;UAA5DC,QAAQ,GAAAI,QAAA,CAAAK,IAAA;UAAA,MAGVT,QAAQ,CAACU,MAAM,KAAK,GAAG;YAAAN,QAAA,CAAAE,IAAA;YAAA;UAAA;UACnBL,SAAS,GAAG,IAAIU,IAAI,CAACX,QAAQ,CAACY,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC;UAAA,MAEtE,IAAIC,KAAK,sCAAAN,MAAA,CAAuCP,SAAS,CAAG,CAAC;QAAA;UAAA,IAGhED,QAAQ,CAACe,EAAE;YAAAX,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACRN,QAAQ;QAAA;UAAAI,QAAA,CAAAE,IAAA;UAAA,OAGHN,QAAQ,CAACgB,IAAI,CAAC,CAAC;QAAA;UAAA,OAAAZ,QAAA,CAAAa,MAAA,WAAAb,QAAA,CAAAK,IAAA;QAAA;QAAA;UAAA,OAAAL,QAAA,CAAAc,IAAA;MAAA;IAAA,GAAApB,OAAA;EAAA,CAC7B;EAAA,gBAfKL,cAAcA,CAAA0B,EAAA;IAAA,OAAAzB,IAAA,CAAA0B,KAAA,OAAAC,SAAA;EAAA;AAAA,GAenB;AAED,OAAO,IAAMC,OAAO,GAAG,CAAC,CAAC;AAEzB,OAAO,IAAMC,OAAO,GAAG;EACfC,OAAO,WAAPA,OAAOA,CAACC,GAAG,EAAAC,KAAA,EAEd;IAAA,OAAA/B,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAA8B,SAAA;MAAA,IAAAC,QAAA,EAAA7B,QAAA,EAAA8B,IAAA,EAAAC,MAAA,EAAAC,SAAA,EAAA/B,QAAA,EAAAgC,iBAAA;MAAA,OAAApC,mBAAA,CAAAM,IAAA,UAAA+B,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA7B,IAAA,GAAA6B,SAAA,CAAA5B,IAAA;UAAA;YADDsB,QAAQ,GAAAF,KAAA,CAARE,QAAQ,EAAE7B,QAAQ,GAAA2B,KAAA,CAAR3B,QAAQ,EAAE8B,IAAI,GAAAH,KAAA,CAAJG,IAAI,EAAEC,MAAM,GAAAJ,KAAA,CAANI,MAAM;YAAAI,SAAA,CAAA7B,IAAA;YAAA6B,SAAA,CAAAC,EAAA,GAGtBpC,QAAQ;YAAAmC,SAAA,CAAA5B,IAAA,GAAA4B,SAAA,CAAAC,EAAA,KACX,UAAU,OAAAD,SAAA,CAAAC,EAAA,KAGV,MAAM,OAAAD,SAAA,CAAAC,EAAA,KAGN,SAAS,QAAAD,SAAA,CAAAC,EAAA,KAGT,aAAa,QAAAD,SAAA,CAAAC,EAAA,KAGb,QAAQ;YAAA;UAAA;YAAAD,SAAA,CAAA5B,IAAA;YAAA,OAXEb,cAAc,UAAAe,MAAA,CAAWoB,QAAQ,OAAApB,MAAA,CAAMqB,IAAI,yBAAArB,MAAA,CAAwBhB,WAAW,CAAG,CAAC;UAAA;YAAA,OAAA0C,SAAA,CAAAjB,MAAA,WAAAiB,SAAA,CAAAzB,IAAA;UAAA;YAAAyB,SAAA,CAAA5B,IAAA;YAAA,OAGlFb,cAAc,UAAAe,MAAA,CAAWoB,QAAQ,OAAApB,MAAA,CAAMqB,IAAI,CAAG,CAAC;UAAA;YAAA,OAAAK,SAAA,CAAAjB,MAAA,WAAAiB,SAAA,CAAAzB,IAAA;UAAA;YAAAyB,SAAA,CAAA5B,IAAA;YAAA,OAG/Cb,cAAc,UAAAe,MAAA,CAAWoB,QAAQ,OAAApB,MAAA,CAAMqB,IAAI,mBAAArB,MAAA,CAAkBsB,MAAM,6BAAAtB,MAAA,CAA4BhB,WAAW,CAAG,CAAC;UAAA;YAAA,OAAA0C,SAAA,CAAAjB,MAAA,WAAAiB,SAAA,CAAAzB,IAAA;UAAA;YAAAyB,SAAA,CAAA5B,IAAA;YAAA,OAG9Gb,cAAc,UAAAe,MAAA,CAAWoB,QAAQ,sBAAApB,MAAA,CAAqBhB,WAAW,CAAG,CAAC;UAAA;YAAA,OAAA0C,SAAA,CAAAjB,MAAA,WAAAiB,SAAA,CAAAzB,IAAA;UAAA;YAAA,MAI9EmB,QAAQ,IAAIC,IAAI,IAAIC,MAAM;cAAAI,SAAA,CAAA5B,IAAA;cAAA;YAAA;YAAA4B,SAAA,CAAA5B,IAAA;YAAA,OACLb,cAAc,UAAAe,MAAA,CAAWoB,QAAQ,OAAApB,MAAA,CAAMqB,IAAI,gBAAArB,MAAA,CAAesB,MAAM,CAAG,CAAC;UAAA;YAArF9B,SAAQ,GAAAkC,SAAA,CAAAzB,IAAA;YAAA,OAAAyB,SAAA,CAAAjB,MAAA,WAEP,CAACjB,SAAQ,CAAC;UAAA;YAAAkC,SAAA,CAAA5B,IAAA;YAAA,OAIIb,cAAc,+BAAAe,MAAA,CAAgCoB,QAAQ,OAAApB,MAAA,CAAMqB,IAAI,CAAG,CAAC;UAAA;YAArF7B,QAAQ,GAAAkC,SAAA,CAAAzB,IAAA;YAAA,KAEVT,QAAQ;cAAAkC,SAAA,CAAA5B,IAAA;cAAA;YAAA;YAAA,OAAA4B,SAAA,CAAAjB,MAAA,WACHjB,QAAQ,CAACoC,KAAK;UAAA;YAAAF,SAAA,CAAA5B,IAAA;YAAA;UAAA;YAAA4B,SAAA,CAAA7B,IAAA;YAAA6B,SAAA,CAAAG,EAAA,GAAAH,SAAA;YAAAA,SAAA,CAAA5B,IAAA;YAAA,OAKb4B,SAAA,CAAAG,EAAA,CAAMrB,IAAI,CAAC,CAAC;UAAA;YAAAkB,SAAA,CAAAI,EAAA,GAAAN,iBAAA,GAAAE,SAAA,CAAAzB,IAAA;YAAAyB,SAAA,CAAAK,EAAA,GAAAL,SAAA,CAAAI,EAAA;YAAA,KAAAJ,SAAA,CAAAK,EAAA;cAAAL,SAAA,CAAA5B,IAAA;cAAA;YAAA;YAAA4B,SAAA,CAAAK,EAAA,GAAAP,iBAAA;UAAA;YAAA,KAAAE,SAAA,CAAAK,EAAA;cAAAL,SAAA,CAAA5B,IAAA;cAAA;YAAA;YAAA4B,SAAA,CAAAM,EAAA,GAAAR,iBAAA;YAAAE,SAAA,CAAA5B,IAAA;YAAA;UAAA;YAAA4B,SAAA,CAAAM,EAAA,GAAI1B,KAAK,mBAAAN,MAAA,CAAoBT,QAAQ,CAAG,CAAC;UAAA;YAAA,MAAAmC,SAAA,CAAAM,EAAA;UAAA;UAAA;YAAA,OAAAN,SAAA,CAAAhB,IAAA;QAAA;MAAA,GAAAS,QAAA;IAAA;EAErE,CAAC;EAEKc,gBAAgB,WAAhBA,gBAAgBA,CAAAC,KAAA,EAA0C;IAAA,IAAAC,UAAA,GAAAtB,SAAA;IAAA,OAAA1B,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAA+C,SAAA;MAAA,IAAAC,MAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAnB,QAAA,EAAAoB,GAAA;MAAA,OAAApD,mBAAA,CAAAM,IAAA,UAAA+C,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA7C,IAAA,GAAA6C,SAAA,CAAA5C,IAAA;UAAA;YAAvCuC,MAAM,GAAAH,KAAA,CAANG,MAAM,EAAEC,QAAQ,GAAAJ,KAAA,CAARI,QAAQ;YAAAC,KAAA,GAAAJ,UAAA,CAAAQ,MAAA,QAAAR,UAAA,QAAAS,SAAA,GAAAT,UAAA,MAAmB,CAAC,CAAC,EAAff,QAAQ,GAAAmB,KAAA,CAARnB,QAAQ;YAAAsB,SAAA,CAAA5C,IAAA;YAAA,OACnCwC,QAAQ,CAAC,SAAS,EAAE;cAAElB,QAAQ,EAARA,QAAQ;cAAE7B,QAAQ,EAAE;YAAc,CAAC,CAAC;UAAA;YAAtEiD,GAAG,GAAAE,SAAA,CAAAzC,IAAA;YAAA,OAAAyC,SAAA,CAAAjC,MAAA,WAEF+B,GAAG;UAAA;UAAA;YAAA,OAAAE,SAAA,CAAAhC,IAAA;QAAA;MAAA,GAAA0B,QAAA;IAAA;EACZ,CAAC;EAEKS,gBAAgB,WAAhBA,gBAAgBA,CAAAC,KAAA,EAAgD;IAAA,IAAAC,WAAA,GAAAlC,SAAA;IAAA,OAAA1B,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAA2D,SAAA;MAAA,IAAAX,MAAA,EAAAC,QAAA,EAAAW,KAAA,EAAA7B,QAAA,EAAAC,IAAA,EAAAmB,GAAA;MAAA,OAAApD,mBAAA,CAAAM,IAAA,UAAAwD,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAtD,IAAA,GAAAsD,SAAA,CAAArD,IAAA;UAAA;YAA7CuC,MAAM,GAAAS,KAAA,CAANT,MAAM,EAAEC,QAAQ,GAAAQ,KAAA,CAARR,QAAQ;YAAAW,KAAA,GAAAF,WAAA,CAAAJ,MAAA,QAAAI,WAAA,QAAAH,SAAA,GAAAG,WAAA,MAAyB,CAAC,CAAC,EAArB3B,QAAQ,GAAA6B,KAAA,CAAR7B,QAAQ,EAAEC,IAAI,GAAA4B,KAAA,CAAJ5B,IAAI;YAAA8B,SAAA,CAAArD,IAAA;YAAA,OACzCwC,QAAQ,CAAC,SAAS,EAAE;cACpClB,QAAQ,EAARA,QAAQ;cAAE7B,QAAQ,EAAE,MAAM;cAAE8B,IAAI,EAAEA,IAAI,CAAC+B;YACzC,CAAC,CAAC;UAAA;YAFIZ,GAAG,GAAAW,SAAA,CAAAlD,IAAA;YAAA,OAAAkD,SAAA,CAAA1C,MAAA,WAIF+B,GAAG;UAAA;UAAA;YAAA,OAAAW,SAAA,CAAAzC,IAAA;QAAA;MAAA,GAAAsC,QAAA;IAAA;EACZ,CAAC;EAEKK,aAAa,WAAbA,aAAaA,CAAAC,KAAA,EAAAC,KAAA,EAA2C;IAAA,OAAApE,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAAmE,SAAA;MAAA,IAAAnB,MAAA,EAAAC,QAAA,EAAAjB,IAAA,EAAAD,QAAA,EAAAoB,GAAA;MAAA,OAAApD,mBAAA,CAAAM,IAAA,UAAA+D,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA7D,IAAA,GAAA6D,SAAA,CAAA5D,IAAA;UAAA;YAAxCuC,MAAM,GAAAiB,KAAA,CAANjB,MAAM,EAAEC,QAAQ,GAAAgB,KAAA,CAARhB,QAAQ;YAAMjB,IAAI,GAAAkC,KAAA,CAAJlC,IAAI,EAAED,QAAQ,GAAAmC,KAAA,CAARnC,QAAQ;YAAAsC,SAAA,CAAA5D,IAAA;YAAA,OACtCwC,QAAQ,CAAC,SAAS,EAAE;cACpClB,QAAQ,EAARA,QAAQ;cAAE7B,QAAQ,EAAE,UAAU;cAAE8B,IAAI,EAAEA,IAAI,CAAC+B;YAC7C,CAAC,CAAC;UAAA;YAFIZ,GAAG,GAAAkB,SAAA,CAAAzD,IAAA;YAAA,OAAAyD,SAAA,CAAAjD,MAAA,WAIF+B,GAAG;UAAA;UAAA;YAAA,OAAAkB,SAAA,CAAAhD,IAAA;QAAA;MAAA,GAAA8C,QAAA;IAAA;EACZ,CAAC;EAEKG,YAAY,WAAZA,YAAYA,CAAC1C,GAAG,EAAA2C,KAAA,EAA8B;IAAA,OAAAzE,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAAwE,SAAA;MAAA,IAAAxC,IAAA,EAAAD,QAAA,EAAAE,MAAA,EAAAgB,QAAA,EAAAE,GAAA;MAAA,OAAApD,mBAAA,CAAAM,IAAA,UAAAoE,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAlE,IAAA,GAAAkE,SAAA,CAAAjE,IAAA;UAAA;YAA1BuB,IAAI,GAAAuC,KAAA,CAAJvC,IAAI,EAAED,QAAQ,GAAAwC,KAAA,CAARxC,QAAQ,EAAEE,MAAM,GAAAsC,KAAA,CAANtC,MAAM;YACtCgB,QAAQ,GAAKrB,GAAG,CAAhBqB,QAAQ;YAAAyB,SAAA,CAAAjE,IAAA;YAAA,OACEwC,QAAQ,CAAC,SAAS,EAAE;cACpClB,QAAQ,EAARA,QAAQ;cAAE7B,QAAQ,EAAE,SAAS;cAAE8B,IAAI,EAAEA,IAAI,CAAC+B,IAAI;cAAE9B,MAAM,EAAEA,MAAM,CAAC8B;YACjE,CAAC,CAAC;UAAA;YAFIZ,GAAG,GAAAuB,SAAA,CAAA9D,IAAA;YAAA,OAAA8D,SAAA,CAAAtD,MAAA,WAIF+B,GAAG;UAAA;UAAA;YAAA,OAAAuB,SAAA,CAAArD,IAAA;QAAA;MAAA,GAAAmD,QAAA;IAAA;EACZ,CAAC;EACKG,MAAM,WAANA,MAAMA,CAAAC,MAAA,EAAAC,MAAA,EAA2C;IAAA,OAAA/E,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,UAAA8E,SAAA;MAAA,IAAA7B,QAAA,EAAAjB,IAAA,EAAAD,QAAA,EAAAE,MAAA,EAAAkB,GAAA;MAAA,OAAApD,mBAAA,CAAAM,IAAA,UAAA0E,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAxE,IAAA,GAAAwE,SAAA,CAAAvE,IAAA;UAAA;YAAxCwC,QAAQ,GAAA2B,MAAA,CAAR3B,QAAQ;YAAMjB,IAAI,GAAA6C,MAAA,CAAJ7C,IAAI,EAAED,QAAQ,GAAA8C,MAAA,CAAR9C,QAAQ,EAAEE,MAAM,GAAA4C,MAAA,CAAN5C,MAAM;YAAA+C,SAAA,CAAAxE,IAAA;YAAAwE,SAAA,CAAAvE,IAAA;YAAA,OAE7BwC,QAAQ,CAAC,SAAS,EAAE;cACpClB,QAAQ,EAARA,QAAQ;cAAE7B,QAAQ,EAAE,QAAQ;cAAE8B,IAAI,EAAEA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE+B,IAAI;cAAE9B,MAAM,EAAEA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE8B;YAClE,CAAC,CAAC;UAAA;YAFIZ,GAAG,GAAA6B,SAAA,CAAApE,IAAA;YAAA,OAAAoE,SAAA,CAAA5D,MAAA,WAAA6D,aAAA,CAAAA,aAAA,KAKJ9B,GAAG;cACN+B,QAAQ,EAAE;YAAK;UAAA;YAAAF,SAAA,CAAAxE,IAAA;YAAAwE,SAAA,CAAA1C,EAAA,GAAA0C,SAAA;YAAA,OAAAA,SAAA,CAAA5D,MAAA,WAGV;cACL+D,OAAO,EAAGH,SAAA,CAAA1C,EAAA,CAAM6C,OAAO;cACvBD,QAAQ,EAAE;YACZ,CAAC;UAAA;UAAA;YAAA,OAAAF,SAAA,CAAA3D,IAAA;QAAA;MAAA,GAAAyD,QAAA;IAAA;EAEL;AACF,CAAC","ignoreList":[]}]}