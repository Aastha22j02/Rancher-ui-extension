{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--17-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/rke2.test.ts","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/rke2.test.ts","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mount","shallowMount","rke2","defaultStubs","CruResource","template","Banner","LabeledSelect","ACE","AgentEnv","AgentConfiguration","ArrayList","ArrayListGrouped","BadgeState","Checkbox","ClusterMembershipEditor","DrainOptions","LabeledInput","Labels","Loading","MachinePool","MatchExpressions","NameNsDescription","Questions","RadioGroup","RegistryConfigs","RegistryMirrors","S3Config","SelectCredential","SelectOrCreateAuthSecret","Tab","Tabbed","UnitInput","YamlEditor","MemberRoles","Basics","Etcd","Networking","Upgrade","Registries","AddOnConfig","Advanced","mockAgentArgs","options","profile","anything","defaultComputed","showForm","versionOptions","id","value","serverArgs","agentArgs","charts","defaultGetters","currentStore","jest","fn","defaultMocks","$fetchState","pending","$route","name","query","AS","defaultSpec","rkeConfig","etcd","disableSnapshots","chartValues","describe","beforeEach","spyOn","console","mockImplementation","it","each","provider","result","k8s","wrapper","propsData","mode","spec","_objectSpread","kubernetesVersion","agentConfig","selectedVersion","computed","mocks","$store","getters","stubs","expect","vm","validationPassed","toBe","data","credentialId","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","initSpecs","machinePools","forEach","p","drainBeforeDelete","stop","skip","_callee2","defaultAgentConfig","_callee2$","_context2","dispatch","managementFindAll","clusterAgentDeploymentCustomization","overrideAffinity","appendTolerations","overrideResourceRequirements","fleetAgentDeploymentCustomization","setData","rke2Versions","props","toContain","_callee3","agent","_callee3$","_context3","find","fetch","call","element","toBeDefined"],"sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/rke2.test.ts"],"sourcesContent":["import { mount, shallowMount } from '@vue/test-utils';\nimport rke2 from '@shell/edit/provisioning.cattle.io.cluster/rke2.vue';\n\n/**\n * DISCLAIMER ***************************************************************************************\n * Declarations should not be done outside the tests!!\n * This component is overwhelming for test and requires too much initialization.\n * In this way the tests are more readable and we can avoid annoying repetitions.\n ****************************************************************************************************\n */\nconst defaultStubs = {\n  CruResource:              { template: '<div><slot></slot></div>' }, // Required to render the slot content\n  Banner:                   true,\n  LabeledSelect:            true,\n  ACE:                      true,\n  AgentEnv:                 true,\n  AgentConfiguration:       true,\n  ArrayList:                true,\n  ArrayListGrouped:         true,\n  BadgeState:               true,\n  Checkbox:                 true,\n  ClusterMembershipEditor:  true,\n  DrainOptions:             true,\n  LabeledInput:             true,\n  Labels:                   true,\n  Loading:                  true,\n  MachinePool:              true,\n  MatchExpressions:         true,\n  NameNsDescription:        true,\n  Questions:                true,\n  RadioGroup:               true,\n  RegistryConfigs:          true,\n  RegistryMirrors:          true,\n  S3Config:                 true,\n  SelectCredential:         true,\n  SelectOrCreateAuthSecret: true,\n  Tab:                      true,\n  Tabbed:                   true,\n  UnitInput:                true,\n  YamlEditor:               true,\n  MemberRoles:              true,\n  Basics:                   true,\n  Etcd:                     true,\n  Networking:               true,\n  Upgrade:                  true,\n  Registries:               true,\n  AddOnConfig:              true,\n  Advanced:                 true\n};\n\nconst mockAgentArgs = { 'cloud-provider-name': { options: [], profile: { options: [{ anything: 'yes' }] } } };\n\nconst defaultComputed = {\n  showForm() {\n    return true;\n  },\n  versionOptions() {\n    return [\n      {\n        id: 'v1.25.0+rke2r1', value: 'v1.25.0+rke2r1', serverArgs: {}, agentArgs: mockAgentArgs, charts: {}\n      },\n      {\n        id: 'v1.24.0+rke2r1', value: 'v1.24.0+rke2r1', serverArgs: {}, agentArgs: mockAgentArgs, charts: {}\n      },\n      {\n        id: 'v1.23.0+rke2r1', value: 'v1.23.0+rke2r1', serverArgs: {}, agentArgs: mockAgentArgs, charts: {}\n      },\n      {\n        id: 'v1.25.0+k3s1', value: 'v1.25.0+k3s1', serverArgs: {}, agentArgs: mockAgentArgs, charts: {}\n      },\n      {\n        id: 'v1.24.0+k3s1', value: 'v1.24.0+k3s1', serverArgs: {}, agentArgs: mockAgentArgs, charts: {}\n      }\n    ];\n  }\n};\n\nconst defaultGetters = {\n  currentStore:                     () => 'current_store',\n  'management/schemaFor':           jest.fn(),\n  'current_store/all':              jest.fn(),\n  'i18n/t':                         jest.fn(),\n  'i18n/withFallback':              jest.fn(),\n  'plugins/cloudProviderForDriver': jest.fn()\n};\n\nconst defaultMocks = {\n  $fetchState: { pending: false },\n  $route:      {\n    name:  'anything',\n    query: { AS: 'yaml' },\n  },\n};\n\nconst defaultSpec = {\n  rkeConfig:   { etcd: { disableSnapshots: false } },\n  chartValues: {},\n};\n\ndescribe('component: rke2', () => {\n  /**\n   * DISCLAIMER ***************************************************************************************\n   * Logs are prevented to avoid polluting the test output.\n   ****************************************************************************************************\n  */\n  // eslint-disable-next-line jest/no-hooks\n  beforeEach(() => {\n    jest.spyOn(console, 'log').mockImplementation(() => { });\n  });\n\n  it.each([\n    ['custom', true],\n    ['anything else', false] // without proper data, machine pool is always not present\n  ])('should allow creation of RKE2 cluster with provider %p if pool machines are missing (%p)', (provider, result) => {\n    const k8s = 'v1.25.0+rke2r1';\n    const wrapper = mount(rke2, {\n      propsData: {\n        mode:  'create',\n        value: {\n          spec: {\n            ...defaultSpec,\n            kubernetesVersion: k8s,\n\n          },\n          agentConfig: { 'cloud-provider-name': 'any' }\n        },\n        selectedVersion: { agentArgs: mockAgentArgs },\n        provider,\n      },\n      computed: defaultComputed,\n      mocks:    {\n        ...defaultMocks,\n        $store: { getters: defaultGetters },\n      },\n      stubs: defaultStubs\n    });\n\n    expect((wrapper.vm as any).validationPassed).toBe(result);\n  });\n\n  it('should allow creation of K3 clusters if pool machines are missing', () => {\n    const k8s = 'v1.25.0+k3s1';\n    const wrapper = mount(rke2, {\n      propsData: {\n        mode:  'create',\n        value: {\n          spec: {\n            ...defaultSpec,\n            kubernetesVersion: k8s\n          },\n          agentConfig: { 'cloud-provider-name': 'any' }\n        },\n        provider: 'custom'\n      },\n      data:     () => ({ credentialId: 'I am authenticated' }),\n      computed: defaultComputed,\n      mocks:    {\n        ...defaultMocks,\n        $store: { getters: defaultGetters },\n      },\n      stubs: defaultStubs\n    });\n\n    expect((wrapper.vm as any).validationPassed).toBe(true);\n  });\n\n  it('should initialize machine pools with drain before delete true', async() => {\n    const k8s = 'v1.25.0+k3s1';\n    const wrapper = mount(rke2, {\n      propsData: {\n        mode:  'create',\n        value: {\n          spec: {\n            ...defaultSpec,\n            kubernetesVersion: k8s\n          },\n          agentConfig: { 'cloud-provider-name': 'any' }\n        },\n        provider: 'custom'\n      },\n      data:     () => ({ credentialId: 'I am authenticated' }),\n      computed: defaultComputed,\n      mocks:    {\n        ...defaultMocks,\n        $store: { getters: defaultGetters },\n      },\n      stubs: defaultStubs\n    });\n\n    await wrapper.vm.initSpecs();\n\n    wrapper.vm.machinePools.forEach((p: any) => expect(p.drainBeforeDelete).toBe(true));\n  });\n\n  // TODO: Complete test after implementing fetch https://github.com/rancher/dashboard/issues/9322\n  // eslint-disable-next-line jest/no-disabled-tests\n  describe.skip('should initialize agent configuration values', () => {\n    it('adding default values if none', async() => {\n      const wrapper = shallowMount(rke2, {\n        propsData: {\n          mode:  'create',\n          value: {\n            spec:        { ...defaultSpec },\n            agentConfig: { 'cloud-provider-name': 'any' }\n          },\n          provider: 'custom'\n        },\n        computed: defaultComputed,\n        mocks:    {\n          ...defaultMocks,\n          $store: {\n            getters:  defaultGetters,\n            dispatch: {\n              'management/request': jest.fn(),\n              'management/find':    jest.fn(),\n              'management/findAll': () => ([]),\n            }\n          },\n        },\n        stubs: defaultStubs\n      });\n      const defaultAgentConfig = {\n        clusterAgentDeploymentCustomization: {\n          overrideAffinity:             {},\n          appendTolerations:            [],\n          overrideResourceRequirements: {}\n        },\n        fleetAgentDeploymentCustomization: {\n          overrideAffinity:             {},\n          appendTolerations:            [],\n          overrideResourceRequirements: {}\n        }\n      };\n\n      // Setting RKE to avoid calls\n      wrapper.setData({ rke2Versions: [] });\n\n      // await rke2.fetch.call(wrapper.vm);\n\n      expect(wrapper.props().value.spec).toContain(defaultAgentConfig);\n    });\n\n    it('should display agent configuration tab', async() => {\n      const wrapper = shallowMount(rke2, {\n        propsData: {\n          mode:  'create',\n          value: {\n            spec:        { ...defaultSpec },\n            agentConfig: { 'cloud-provider-name': 'any' }\n          },\n          provider: 'custom'\n        },\n        computed: defaultComputed,\n        mocks:    {\n          ...defaultMocks,\n          $store: {\n            getters:  defaultGetters,\n            dispatch: {\n              'management/request': jest.fn(),\n              'management/find':    jest.fn(),\n              'management/findAll': () => ([]),\n            }\n          },\n        },\n        stubs: defaultStubs\n      });\n      const agent = wrapper.find('[data-testid=\"rke2-cluster-agent-config\"]');\n\n      // Setting RKE to avoid calls\n      wrapper.setData({ rke2Versions: [] });\n\n      await rke2.fetch.call(wrapper.vm);\n\n      expect(agent.element).toBeDefined();\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}]}