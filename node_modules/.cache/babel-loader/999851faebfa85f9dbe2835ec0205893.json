{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/models/catalog.cattle.io.app.js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/models/catalog.cattle.io.app.js","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["NAMESPACE","NAME","REPO","REPO_TYPE","CHART","VERSION","_VIEW","FROM_TOOLS","_FLAGGED","CATALOG","CATALOG_ANNOTATIONS","FLEET","compare","isPrerelease","sortable","filterBy","MANAGEMENT","NORMAN","SHOW_PRE_RELEASE","set","SteveModel","compatibleVersionsFor","CatalogApp","_SteveModel","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","showMasthead","mode","applyDefaults","get","out","_superPropGet","upgrade","action","enabled","icon","label","t","unshift","upgradeAvailable","name","matchingChart","includeHidden","_this$spec","_chart$metadata","_chart$metadata2","_chart$metadata3","chart","spec","chartName","metadata","preferRepoType","annotations","SOURCE_REPO_TYPE","preferRepoName","SOURCE_REPO_NAME","match","$rootGetters","_this$spec2","version","_this$spec3","_this$spec4","_this$spec5","_versions","MANAGED","BUNDLE_ID","workerOSs","showPreRelease","thisVersion","versions","filter","v","newestChart","newestVersion","cleanupVersion","_this$spec6","versionInChart","find","compatibleVersions","thisVersionCompatible","currentVersionCompatible","goToUpgrade","forceVersion","fromTools","_this$spec7","versionName","query","_defineProperty","namespace","repoName","repoType","currentRouter","push","params","product","cluster","_this$spec8","_this$spec9","first","info","firstDeployed","last","lastDeployed","formatter","content","_this$spec10","_this$metadata","id","_this$spec11","concat","versionDisplay","_this$spec12","_remove","_asyncToGenerator","_regeneratorRuntime","mark","_callee","opt","res","operation","_args","wrap","_callee$","_context","prev","next","length","undefined","doAction","sent","$dispatch","type","OPERATION","operationNamespace","operationName","waitForLink","openLogs","t0","stop","remove","apply","_this","_callee2","crd","_callee2$","_context2","AUTO_INSTALL","replace","APP","abrupt","hasAction","_this$metadata2","relationships","_this2","_callee3","mcapps","_callee3$","_context3","MULTI_CLUSTER_APP","root","catch","Error","mcapp","_mcapp$spec","targets","target","_this2$metadata","appName","_this3","_callee4","_this3$spec","_this3$spec$values$gl","clusterName","projectName","_this3$metadata","_this3$metadata2","legacyApp","_callee4$","_context4","values","global","url","default","substr","hash"],"sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/models/catalog.cattle.io.app.js"],"sourcesContent":["import {\n  NAMESPACE, NAME, REPO, REPO_TYPE, CHART, VERSION, _VIEW, FROM_TOOLS, _FLAGGED\n} from '@shell/config/query-params';\nimport { CATALOG as CATALOG_ANNOTATIONS, FLEET } from '@shell/config/labels-annotations';\nimport { compare, isPrerelease, sortable } from '@shell/utils/version';\nimport { filterBy } from '@shell/utils/array';\nimport { CATALOG, MANAGEMENT, NORMAN } from '@shell/config/types';\nimport { SHOW_PRE_RELEASE } from '@shell/store/prefs';\nimport { set } from '@shell/utils/object';\n\nimport SteveModel from '@shell/plugins/steve/steve-class';\nimport { compatibleVersionsFor } from '@shell/store/catalog';\n\nexport default class CatalogApp extends SteveModel {\n  showMasthead(mode) {\n    return mode === _VIEW;\n  }\n\n  applyDefaults() {\n    set(this, 'disableOpenApiValidation', false);\n    set(this, 'noHooks', false);\n    set(this, 'skipCRDs', false);\n    set(this, 'timeout', 300);\n    set(this, 'wait', true);\n  }\n\n  get _availableActions() {\n    const out = super._availableActions;\n\n    const upgrade = {\n      action:  'goToUpgrade',\n      enabled: true,\n      icon:    'icon icon-fw icon-edit',\n      label:   this.t('catalog.install.action.goToUpgrade'),\n    };\n\n    out.unshift(upgrade);\n\n    return out;\n  }\n\n  get warnDeletionMessage() {\n    if (this.upgradeAvailable === false) {\n      return this.t('catalog.delete.warning.managed', { name: this.name });\n    }\n\n    return null;\n  }\n\n  matchingChart(includeHidden) {\n    const chart = this.spec?.chart;\n\n    if ( !chart ) {\n      return;\n    }\n\n    const chartName = chart.metadata?.name;\n    const preferRepoType = chart.metadata?.annotations?.[CATALOG_ANNOTATIONS.SOURCE_REPO_TYPE];\n    const preferRepoName = chart.metadata?.annotations?.[CATALOG_ANNOTATIONS.SOURCE_REPO_NAME];\n    const match = this.$rootGetters['catalog/chart']({\n      chartName,\n      preferRepoType,\n      preferRepoName,\n      includeHidden\n    });\n\n    return match;\n  }\n\n  get currentVersion() {\n    return this.spec?.chart?.metadata?.version;\n  }\n\n  get upgradeAvailable() {\n    // false = does not apply (managed by fleet)\n    // null = no upgrade found\n    // object = version available to upgrade to\n\n    if (\n      this.spec?.chart?.metadata?.annotations?.[CATALOG_ANNOTATIONS.MANAGED] ||\n      this.spec?.chart?.metadata?.annotations?.[FLEET.BUNDLE_ID]\n    ) {\n      // Things managed by fleet shouldn't show upgrade available even if there might be.\n      return false;\n    }\n    const chart = this.matchingChart(false);\n\n    if ( !chart ) {\n      return null;\n    }\n\n    const workerOSs = this.$rootGetters['currentCluster'].workerOSs;\n\n    const showPreRelease = this.$rootGetters['prefs/get'](SHOW_PRE_RELEASE);\n\n    const thisVersion = this.spec?.chart?.metadata?.version;\n    let versions = chart.versions;\n\n    if (!showPreRelease) {\n      versions = chart.versions.filter((v) => !isPrerelease(v.version));\n    }\n\n    versions = compatibleVersionsFor(chart, workerOSs, showPreRelease);\n\n    const newestChart = versions?.[0];\n    const newestVersion = newestChart?.version;\n\n    if ( !thisVersion || !newestVersion ) {\n      return null;\n    }\n\n    if ( compare(thisVersion, newestVersion) < 0 ) {\n      return cleanupVersion(newestVersion);\n    }\n\n    return null;\n  }\n\n  get upgradeAvailableSort() {\n    const version = this.upgradeAvailable;\n\n    if ( !version ) {\n      return '~'; // Tilde sorts after all numbers and letters\n    }\n\n    return sortable(version);\n  }\n\n  get currentVersionCompatible() {\n    const workerOSs = this.$rootGetters['currentCluster'].workerOSs;\n\n    const chart = this.matchingChart(false);\n    const thisVersion = this.spec?.chart?.metadata?.version;\n\n    if (!chart) {\n      return true;\n    }\n\n    const versionInChart = chart.versions.find((version) => version.version === thisVersion);\n\n    if (!versionInChart) {\n      return true;\n    }\n    const compatibleVersions = compatibleVersionsFor(chart, workerOSs, true) || [];\n\n    const thisVersionCompatible = !!compatibleVersions.find((version) => version.version === thisVersion);\n\n    return thisVersionCompatible;\n  }\n\n  get stateDescription() {\n    if (this.currentVersionCompatible) {\n      return null;\n    }\n    if (this.upgradeAvailable) {\n      return this.t('catalog.os.versionIncompatible');\n    }\n\n    return this.t('catalog.os.chartIncompatible');\n  }\n\n  goToUpgrade(forceVersion, fromTools) {\n    const match = this.matchingChart(true);\n    const versionName = this.spec?.chart?.metadata?.version;\n    const query = {\n      [NAMESPACE]: this.metadata.namespace,\n      [NAME]:      this.metadata.name,\n      [VERSION]:   forceVersion || versionName,\n    };\n\n    if ( match ) {\n      query[REPO] = match.repoName;\n      query[REPO_TYPE] = match.repoType;\n      query[CHART] = match.chartName;\n    }\n\n    if ( fromTools ) {\n      query[FROM_TOOLS] = _FLAGGED;\n    }\n\n    this.currentRouter().push({\n      name:   'c-cluster-apps-charts-install',\n      params: {\n        product: this.$rootGetters['productId'],\n        cluster: this.$rootGetters['clusterId'],\n      },\n      query,\n    });\n  }\n\n  get details() {\n    const t = this.$rootGetters['i18n/t'];\n\n    const first = this.spec?.info?.firstDeployed;\n    const last = this.spec?.info?.lastDeployed;\n\n    if ( first && last && first !== last ) {\n      return [\n        {\n          label:     t('model.\"catalog.cattle.io.app\".lastDeployed'),\n          formatter: 'LiveDate',\n          content:   last,\n        },\n      ];\n    }\n\n    return [];\n  }\n\n  get nameDisplay() {\n    const out = this.spec?.name || this.metadata?.name || this.id || '';\n\n    return out;\n  }\n\n  get chartDisplay() {\n    const name = this.spec?.chart?.metadata?.name || '?';\n\n    return `${ name }:${ this.versionDisplay }`;\n  }\n\n  get versionDisplay() {\n    return cleanupVersion(this.spec?.chart?.metadata?.version);\n  }\n\n  get versionSort() {\n    return sortable(this.versionDisplay);\n  }\n\n  async remove(opt = {}) {\n    const res = await this.doAction('uninstall', opt);\n\n    const operation = await this.$dispatch('find', {\n      type: CATALOG.OPERATION,\n      id:   `${ res.operationNamespace }/${ res.operationName }`\n    });\n\n    try {\n      await operation.waitForLink('logs');\n      operation.openLogs();\n    } catch (e) {\n      // The wait times out eventually, move on...\n    }\n  }\n\n  get relatedResourcesToRemove() {\n    return async() => {\n      const crd = this.spec.chart.metadata.annotations[CATALOG_ANNOTATIONS.AUTO_INSTALL].replace('=match', '');\n\n      return await this.$dispatch('find', {\n        type: CATALOG.APP,\n        id:   `${ this.metadata.namespace }/${ crd }`\n      });\n    };\n  }\n\n  get canDelete() {\n    return this.hasAction('uninstall');\n  }\n\n  get deployedResources() {\n    return filterBy(this.metadata?.relationships || [], 'rel', 'helmresource');\n  }\n\n  get deployedAsMultiCluster() {\n    return async() => {\n      try {\n        const mcapps = await this.$dispatch('management/findAll', { type: MANAGEMENT.MULTI_CLUSTER_APP }, { root: true })\n          .catch(() => {\n            throw new Error(\"You don't have permission to list multi-cluster apps\");\n          });\n\n        if (mcapps) {\n          return mcapps.find((mcapp) => mcapp.spec?.targets?.find((target) => target.appName === this.metadata?.name));\n        }\n      } catch (e) {}\n\n      return false;\n    };\n  }\n\n  get deployedAsLegacy() {\n    return async() => {\n      if (this.spec?.values?.global) {\n        const { clusterName, projectName } = this.spec.values.global;\n\n        if (clusterName && projectName) {\n          try {\n            const legacyApp = await this.$dispatch('rancher/find', {\n              type: NORMAN.APP,\n              id:   `${ projectName }:${ this.metadata?.name }`,\n              opt:  { url: `/v3/project/${ clusterName }:${ projectName }/apps/${ projectName }:${ this.metadata?.name }` }\n            }, { root: true });\n\n            if (legacyApp) {\n              return legacyApp;\n            }\n          } catch (e) {}\n        }\n      }\n\n      return false;\n    };\n  }\n}\n\nfunction cleanupVersion(version) {\n  if ( !version ) {\n    return '?';\n  }\n\n  if ( version.match(/^v/i) ) {\n    version = version.substr(1);\n  }\n\n  const hash = version.match(/[0-9a-f]{32,}/);\n\n  if ( hash ) {\n    version = version.replace(hash[0], hash[0].substr(0, 7));\n  }\n\n  return version;\n}\n"],"mappings":"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","ignoreList":[]}]}