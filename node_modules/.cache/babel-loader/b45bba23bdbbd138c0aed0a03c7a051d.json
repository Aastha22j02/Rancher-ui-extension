{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/fleet/FleetBundles.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/fleet/FleetBundles.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICIvaG9tZS91YnVudHUvc3VzZWNvbmYvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgeyBGTEVFVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgeyBCYW5uZXIgfSBmcm9tICdAY29tcG9uZW50cy9CYW5uZXInOwppbXBvcnQgTG9hZGluZyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Mb2FkaW5nJzsKaW1wb3J0IFJlc291cmNlVGFibGUgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvUmVzb3VyY2VUYWJsZSc7CmltcG9ydCB7IENSRUFUSU9OX0RBVEUsIFNUQVRFLCBOQU1FLCBGTEVFVF9CVU5ETEVfTEFTVF9VUERBVEVEIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90YWJsZS1oZWFkZXJzJzsKaW1wb3J0IHsgaXNIYXJ2ZXN0ZXJDbHVzdGVyIH0gZnJvbSAnQHNoZWxsL3V0aWxzL2NsdXN0ZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0ZsZWV0QnVuZGxlcycsCiAgY29tcG9uZW50czogewogICAgQmFubmVyOiBCYW5uZXIsCiAgICBMb2FkaW5nOiBMb2FkaW5nLAogICAgUmVzb3VyY2VUYWJsZTogUmVzb3VyY2VUYWJsZQogIH0sCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9LAogIGZldGNoOiBmdW5jdGlvbiBmZXRjaCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgaWYgKCFfdGhpcy4kc3RvcmUuZ2V0dGVyc1snbWFuYWdlbWVudC9zY2hlbWFGb3InXShGTEVFVC5DTFVTVEVSKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gX3RoaXMuJHN0b3JlLmdldHRlcnNbJ21hbmFnZW1lbnQvYWxsJ10oRkxFRVQuQ0xVU1RFUik7CiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIF90aGlzLmFsbEZsZWV0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFsbEZsZWV0OiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBhbGxCdW5kbGVzSW5SZXBvOiBmdW5jdGlvbiBhbGxCdW5kbGVzSW5SZXBvKCkgewogICAgICAvLyBnaXRyZXBvIG1vZGVsIGhhcyBnZXR0ZXIgZm9yIGl0cyBidW5kbGVzLgogICAgICByZXR1cm4gdGhpcy52YWx1ZS5idW5kbGVzIHx8IFtdOwogICAgfSwKICAgIHNjaGVtYTogZnVuY3Rpb24gc2NoZW1hKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1snbWFuYWdlbWVudC9zY2hlbWFGb3InXShGTEVFVC5CVU5ETEUpOwogICAgfSwKICAgIHJlcG9OYW1lOiBmdW5jdGlvbiByZXBvTmFtZSgpIHsKICAgICAgcmV0dXJuIHRoaXMudmFsdWUubWV0YWRhdGEubmFtZTsKICAgIH0sCiAgICBoYXJ2ZXN0ZXJDbHVzdGVyczogZnVuY3Rpb24gaGFydmVzdGVyQ2x1c3RlcnMoKSB7CiAgICAgIHZhciBoYXJ2ZXN0ZXIgPSB7fTsKICAgICAgdGhpcy5hbGxGbGVldC5mb3JFYWNoKGZ1bmN0aW9uIChjKSB7CiAgICAgICAgaWYgKGlzSGFydmVzdGVyQ2x1c3RlcihjKSkgewogICAgICAgICAgaGFydmVzdGVyW2MubWV0YWRhdGEubmFtZV0gPSBjOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiBoYXJ2ZXN0ZXI7CiAgICB9LAogICAgYnVuZGxlczogZnVuY3Rpb24gYnVuZGxlcygpIHsKICAgICAgdmFyIGhhcnZlc3RlciA9IHRoaXMuaGFydmVzdGVyQ2x1c3RlcnM7CiAgICAgIHJldHVybiB0aGlzLmFsbEJ1bmRsZXNJblJlcG8uZmlsdGVyKGZ1bmN0aW9uIChidW5kbGUpIHsKICAgICAgICB2YXIgX2J1bmRsZSRzcGVjOwogICAgICAgIHZhciB0YXJnZXRzID0gKChfYnVuZGxlJHNwZWMgPSBidW5kbGUuc3BlYykgPT09IG51bGwgfHwgX2J1bmRsZSRzcGVjID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYnVuZGxlJHNwZWMudGFyZ2V0cykgfHwgW107CgogICAgICAgIC8vIEZpbHRlciBvdXQgYW55IGJ1bmRsZSB0aGF0IGhhcyBvbmUgdGFyZ2V0IHdob3NlIGNsdXN0ZXIgaXMgYSBoYXJ2ZXN0ZXIgY2x1c3RlcgogICAgICAgIGlmICh0YXJnZXRzLmxlbmd0aCA9PT0gMSkgewogICAgICAgICAgcmV0dXJuICFoYXJ2ZXN0ZXJbdGFyZ2V0c1swXS5jbHVzdGVyTmFtZV07CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9KTsKICAgIH0sCiAgICBoaWRkZW46IGZ1bmN0aW9uIGhpZGRlbigpIHsKICAgICAgcmV0dXJuIHRoaXMuYWxsQnVuZGxlc0luUmVwby5sZW5ndGggLSB0aGlzLmJ1bmRsZXMubGVuZ3RoOwogICAgfSwKICAgIGhlYWRlcnM6IGZ1bmN0aW9uIGhlYWRlcnMoKSB7CiAgICAgIHZhciBvdXQgPSBbU1RBVEUsIE5BTUUsIHsKICAgICAgICBuYW1lOiAnZGVwbG95bWVudHNSZWFkeScsCiAgICAgICAgbGFiZWxLZXk6ICd0YWJsZUhlYWRlcnMuYnVuZGxlRGVwbG95bWVudHNSZWFkeScsCiAgICAgICAgdmFsdWU6ICdzdGF0dXMuZGlzcGxheS5yZWFkeUNsdXN0ZXJzJywKICAgICAgICBzb3J0OiAnc3RhdHVzLmRpc3BsYXkucmVhZHlDbHVzdGVycycsCiAgICAgICAgc2VhcmNoOiBbJ3N0YXR1cy5zdW1tYXJ5LnJlYWR5JywgJ3N0YXR1cy5zdW1tYXJ5LmRlc2lyZWRSZWFkeSddCiAgICAgIH0sIEZMRUVUX0JVTkRMRV9MQVNUX1VQREFURUQsIENSRUFUSU9OX0RBVEVdOwogICAgICByZXR1cm4gb3V0OwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZGlzcGxheVdhcm5pbmc6IGZ1bmN0aW9uIGRpc3BsYXlXYXJuaW5nKHJvdykgewogICAgICB2YXIgX3JvdyRzdGF0dXM7CiAgICAgIHJldHVybiAhISgoX3JvdyRzdGF0dXMgPSByb3cuc3RhdHVzKSAhPT0gbnVsbCAmJiBfcm93JHN0YXR1cyAhPT0gdm9pZCAwICYmIF9yb3ckc3RhdHVzLnN1bW1hcnkpICYmIHJvdy5zdGF0dXMuc3VtbWFyeS5kZXNpcmVkUmVhZHkgIT09IHJvdy5zdGF0dXMuc3VtbWFyeS5yZWFkeTsKICAgIH0KICB9Cn07"},{"version":3,"names":["FLEET","Banner","Loading","ResourceTable","CREATION_DATE","STATE","NAME","FLEET_BUNDLE_LAST_UPDATED","isHarvesterCluster","name","components","props","value","type","Object","required","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$store","getters","CLUSTER","allFleet","sent","stop","data","computed","allBundlesInRepo","bundles","schema","BUNDLE","repoName","metadata","harvesterClusters","harvester","forEach","c","filter","bundle","_bundle$spec","targets","spec","length","clusterName","hidden","headers","out","labelKey","sort","search","methods","displayWarning","row","_row$status","status","summary","desiredReady","ready"],"sources":["node_modules/@rancher/shell/components/fleet/FleetBundles.vue"],"sourcesContent":["<script>\nimport { FLEET } from '@shell/config/types';\nimport { Banner } from '@components/Banner';\nimport Loading from '@shell/components/Loading';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport {\n  CREATION_DATE,\n  STATE,\n  NAME,\n  FLEET_BUNDLE_LAST_UPDATED,\n} from '@shell/config/table-headers';\nimport { isHarvesterCluster } from '@shell/utils/cluster';\n\nexport default {\n  name: 'FleetBundles',\n\n  components: {\n    Banner, Loading, ResourceTable\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n  },\n\n  async fetch() {\n    if (this.$store.getters['management/schemaFor']( FLEET.CLUSTER )) {\n      this.allFleet = await this.$store.getters['management/all'](FLEET.CLUSTER);\n    }\n  },\n\n  data() {\n    return { allFleet: [] };\n  },\n\n  computed: {\n\n    allBundlesInRepo() {\n      // gitrepo model has getter for its bundles.\n      return this.value.bundles || [];\n    },\n\n    schema() {\n      return this.$store.getters['management/schemaFor']( FLEET.BUNDLE );\n    },\n\n    repoName() {\n      return this.value.metadata.name;\n    },\n\n    harvesterClusters() {\n      const harvester = {};\n\n      this.allFleet.forEach((c) => {\n        if (isHarvesterCluster(c)) {\n          harvester[c.metadata.name] = c;\n        }\n      });\n\n      return harvester;\n    },\n\n    bundles() {\n      const harvester = this.harvesterClusters;\n\n      return this.allBundlesInRepo.filter((bundle) => {\n        const targets = bundle.spec?.targets || [];\n\n        // Filter out any bundle that has one target whose cluster is a harvester cluster\n        if (targets.length === 1) {\n          return !harvester[targets[0].clusterName];\n        }\n\n        return true;\n      });\n    },\n\n    hidden() {\n      return this.allBundlesInRepo.length - this.bundles.length;\n    },\n\n    headers() {\n      const out = [\n        STATE,\n        NAME,\n        {\n          name:     'deploymentsReady',\n          labelKey: 'tableHeaders.bundleDeploymentsReady',\n          value:    'status.display.readyClusters',\n          sort:     'status.display.readyClusters',\n          search:   ['status.summary.ready', 'status.summary.desiredReady'],\n        },\n        FLEET_BUNDLE_LAST_UPDATED,\n        CREATION_DATE,\n      ];\n\n      return out;\n    },\n  },\n  methods: {\n    displayWarning(row) {\n      return !!row.status?.summary && (row.status.summary.desiredReady !== row.status.summary.ready);\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <Loading v-if=\"$fetchState.pending\" />\n    <div v-else>\n      <Banner\n        v-if=\"hidden\"\n        color=\"info\"\n        :label=\"t('fleet.bundles.harvester', {count: hidden} )\"\n      />\n      <ResourceTable\n        :schema=\"schema\"\n        :headers=\"headers\"\n        :rows=\"bundles\"\n      >\n        <template #cell:deploymentsReady=\"{row}\">\n          <span\n            v-if=\"displayWarning(row)\"\n            class=\"text-warning\"\n          >\n            {{ row.status.summary.ready }}/{{ row.status.summary.desiredReady }}</span>\n          <span v-else-if=\"row.status\">{{ row.status.summary.desiredReady }}</span>\n        </template>\n      </ResourceTable>\n    </div>\n  </div>\n</template>\n"],"mappings":"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","ignoreList":[]}]}