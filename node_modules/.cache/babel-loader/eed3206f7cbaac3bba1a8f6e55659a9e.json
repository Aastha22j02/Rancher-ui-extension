{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/secret/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/secret/index.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["SECRET_TYPES","TYPES","MANAGEMENT","NAMESPACE","DEFAULT_WORKSPACE","CreateEditView","NameNsDescription","LabeledInput","LabeledSelect","CruResource","CLOUD_CREDENTIAL","_CLONE","_CREATE","_EDIT","_FLAGGED","Loading","Tabbed","Tab","Labels","HIDE_SENSITIVE","CAPI","clear","uniq","NAME","MANAGER","SelectIconGrid","sortBy","ucFirst","creatableTypes","OPAQUE","DOCKER_JSON","TLS","SSH","BASIC","name","components","mixins","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","isCloud","$store","dispatch","type","NODE_DRIVER","nodeDrivers","sent","stop","data","newCloudCred","$route","query","editCloudCred","mode","value","_type","cloneCloudCred","realMode","liveValue","metadata","namespace","$set","secretTypes","label","disabled","kind","Object","values","forEach","t","push","secretType","initialSecretType","computed","isCustomSecretCreate","showCustomSecretType","typeKey","dataComponent","require","concat","default","driverName","_this$value$metadata","driver","annotations","CREDENTIAL_DRIVER","cloudComponent","getters","secretSubTypes","_this2","out","machineTypes","filter","x","spec","active","map","displayName","id","_iterator","_createForOfIteratorHelper","_step","s","n","done","bannerImage","bannerAbbrv","e","initialDisplayFor","typeDisplay","err","f","_i","_creatableTypes","length","description","docLink","namespaces","obj","nameDisplay","hideSensitiveData","dataLabel","doneRoute","methods","saveSecret","btnCb","_this3","_callee2","_this3$$refs$cloudCom","res","_callee2$","_context2","errors","$refs","test","abrupt","t0","save","selectType","setAnnotation","$emit","fallback","replace","substr","selectCustomType"],"sources":["node_modules/@rancher/shell/edit/secret/index.vue"],"sourcesContent":["<script>\nimport { SECRET_TYPES as TYPES } from '@shell/config/secret';\nimport { MANAGEMENT, NAMESPACE, DEFAULT_WORKSPACE } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport CruResource from '@shell/components/CruResource';\nimport {\n  CLOUD_CREDENTIAL, _CLONE, _CREATE, _EDIT, _FLAGGED\n} from '@shell/config/query-params';\nimport Loading from '@shell/components/Loading';\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport Labels from '@shell/components/form/Labels';\nimport { HIDE_SENSITIVE } from '@shell/store/prefs';\nimport { CAPI } from '@shell/config/labels-annotations';\nimport { clear, uniq } from '@shell/utils/array';\nimport { NAME as MANAGER } from '@shell/config/product/manager';\nimport SelectIconGrid from '@shell/components/SelectIconGrid';\nimport { sortBy } from '@shell/utils/sort';\nimport { ucFirst } from '@shell/utils/string';\n\nconst creatableTypes = [\n  TYPES.OPAQUE,\n  TYPES.DOCKER_JSON,\n  TYPES.TLS,\n  TYPES.SSH,\n  TYPES.BASIC,\n];\n\nexport default {\n  name: 'CruSecret',\n\n  components: {\n    LabeledInput,\n    LabeledSelect,\n    Loading,\n    NameNsDescription,\n    CruResource,\n    Tabbed,\n    Tab,\n    Labels,\n    SelectIconGrid\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    if ( this.isCloud ) {\n      this.nodeDrivers = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.NODE_DRIVER });\n    }\n  },\n\n  data() {\n    const newCloudCred = this.$route.query[CLOUD_CREDENTIAL] === _FLAGGED;\n    const editCloudCred = this.mode === _EDIT && this.value._type === TYPES.CLOUD_CREDENTIAL;\n    const cloneCloudCred = this.realMode === _CLONE && this.liveValue._type === TYPES.CLOUD_CREDENTIAL;\n    const isCloud = newCloudCred || editCloudCred || cloneCloudCred;\n\n    if ( newCloudCred ) {\n      this.value.metadata.namespace = DEFAULT_WORKSPACE;\n\n      this.$set(this.value.metadata, 'name', '');\n\n      this.$set(this.value, 'data', {});\n    }\n\n    const secretTypes = [\n      {\n        label: 'Custom',\n        value: 'custom'\n      },\n      {\n        label:    'divider',\n        disabled: true,\n        kind:     'divider'\n      }\n    ];\n\n    Object.values(TYPES).forEach((t) => {\n      secretTypes.push({\n        label: t,\n        value: t\n      });\n    });\n\n    return {\n      isCloud,\n      nodeDrivers:       null,\n      secretTypes,\n      secretType:        this.value._type,\n      initialSecretType: this.value._type\n    };\n  },\n\n  computed: {\n    isCustomSecretCreate() {\n      return this.mode === _CREATE && this.$route.query.type === 'custom';\n    },\n    showCustomSecretType() {\n      return this.secretType === 'custom';\n    },\n    typeKey() {\n      if ( this.isCloud ) {\n        return 'cloud';\n      }\n\n      switch ( this.value._type ) {\n      case TYPES.TLS: return 'tls';\n      case TYPES.BASIC: return 'basic';\n      case TYPES.DOCKER_JSON: return 'registry';\n      case TYPES.SSH: return 'ssh';\n      }\n\n      return 'generic';\n    },\n\n    dataComponent() {\n      return require(`@shell/edit/secret/${ this.typeKey }`).default;\n    },\n\n    driverName() {\n      const driver = this.value.metadata?.annotations?.[CAPI.CREDENTIAL_DRIVER];\n\n      return driver;\n    },\n\n    cloudComponent() {\n      if (this.$store.getters['type-map/hasCustomCloudCredentialComponent'](this.driverName)) {\n        return this.$store.getters['type-map/importCloudCredential'](this.driverName);\n      }\n\n      return this.$store.getters['type-map/importCloudCredential']('generic');\n    },\n\n    // array of id, label, description, initials for type selection step\n    secretSubTypes() {\n      const out = [];\n\n      // Cloud credentials\n      if ( this.isCloud ) {\n        const machineTypes = uniq(this.nodeDrivers\n          .filter((x) => x.spec.active)\n          .map((x) => x.spec.displayName || x.id)\n          .map((x) => this.$store.getters['plugins/credentialDriverFor'](x))\n        );\n\n        for ( const id of machineTypes ) {\n          let bannerImage, bannerAbbrv;\n\n          try {\n            bannerImage = require(`~shell/assets/images/providers/${ id }.svg`);\n          } catch (e) {\n            bannerImage = null;\n            bannerAbbrv = this.initialDisplayFor(id);\n          }\n\n          out.push({\n            id,\n            label: this.typeDisplay(CAPI.CREDENTIAL_DRIVER, id),\n            bannerImage,\n            bannerAbbrv\n          });\n        }\n      } else {\n        // Other kinds\n        for ( const id of creatableTypes ) {\n          out.push({\n            id,\n            label:       this.typeDisplay(id),\n            bannerAbbrv: this.initialDisplayFor(id),\n            description: this.t(`secret.typeDescriptions.'${ id }'.description`),\n            docLink:     this.t(`secret.typeDescriptions.'${ id }'.docLink`)\n          });\n        }\n\n        out.push({\n          id:          'custom',\n          label:       this.t('secret.customType'),\n          bannerAbbrv: this.initialDisplayFor('custom'),\n          description: this.t('secret.typeDescriptions.custom.description')\n        });\n      }\n\n      return sortBy(out, 'label');\n    },\n\n    namespaces() {\n      return this.$store.getters['cluster/all'](NAMESPACE).map((obj) => {\n        return {\n          label: obj.nameDisplay,\n          value: obj.id,\n        };\n      });\n    },\n\n    hideSensitiveData() {\n      return this.$store.getters['prefs/get'](HIDE_SENSITIVE);\n    },\n\n    dataLabel() {\n      switch (this.value._type) {\n      case TYPES.TLS:\n        return this.t('secret.certificate.certificate');\n      case TYPES.SSH:\n        return this.t('secret.ssh.keys');\n      case TYPES.BASIC:\n        return this.t('secret.authentication');\n      default:\n        return this.t('secret.data');\n      }\n    },\n\n    doneRoute() {\n      if ( this.$store.getters['currentProduct'].name === MANAGER ) {\n        return 'c-cluster-manager-secret';\n      } else {\n        return 'c-cluster-product-resource';\n      }\n    },\n  },\n\n  methods: {\n    async saveSecret(btnCb) {\n      if ( this.errors ) {\n        clear(this.errors);\n      }\n\n      if ( typeof this.$refs.cloudComponent?.test === 'function' ) {\n        try {\n          const res = await this.$refs.cloudComponent.test();\n\n          if ( !res || res?.errors) {\n            if (res?.errors) {\n              this.errors = res.errors;\n            } else {\n              this.errors = ['Authentication test failed, please check your credentials'];\n            }\n            btnCb(false);\n\n            return;\n          }\n        } catch (e) {\n          this.errors = [e];\n          btnCb(false);\n\n          return;\n        }\n      }\n\n      return this.save(btnCb);\n    },\n\n    selectType(type) {\n      let driver;\n\n      if ( this.isCloud ) {\n        if ( type === TYPES.CLOUD_CREDENTIAL ) {\n          // Clone goes through here\n          driver = this.driverName;\n        } else {\n          driver = type;\n          type = TYPES.CLOUD_CREDENTIAL;\n        }\n\n        if ( this.mode === _CREATE ) {\n          this.value.setAnnotation(CAPI.CREDENTIAL_DRIVER, driver);\n        }\n      }\n\n      this.$set(this.value, '_type', type);\n      this.$emit('set-subtype', this.typeDisplay(type, driver));\n\n      this.secretType = type;\n\n      if (this.mode === _CREATE && type === 'custom') {\n        this.$set(this.value, '_type', '');\n      }\n    },\n\n    typeDisplay(type, driver) {\n      if ( type === CAPI.CREDENTIAL_DRIVER ) {\n        return this.$store.getters['i18n/withFallback'](`cluster.provider.\"${ driver }\"`, null, driver);\n      } else {\n        const fallback = type.replace(/^kubernetes.io\\//, '');\n\n        return this.$store.getters['i18n/withFallback'](`secret.types.\"${ type }\"`, null, fallback);\n      }\n    },\n\n    initialDisplayFor(type) {\n      const fallback = (ucFirst(this.typeDisplay(type) || '').replace(/[^A-Z]/g, '') || type).substr(0, 3);\n\n      return this.$store.getters['i18n/withFallback'](`secret.initials.\"${ type }\"`, null, fallback);\n    },\n\n    selectCustomType(type) {\n      if (type !== 'custom') {\n        this.$set(this.value, '_type', type);\n      }\n    }\n  },\n};\n</script>\n\n<template>\n  <form class=\"filled-height\">\n    <Loading v-if=\"$fetchState.pending\" />\n    <CruResource\n      v-else\n      :mode=\"mode\"\n      :validation-passed=\"true\"\n      :selected-subtype=\"value._type\"\n      :resource=\"value\"\n      :errors=\"errors\"\n      :done-route=\"doneRoute\"\n      :subtypes=\"secretSubTypes\"\n      @finish=\"saveSecret\"\n      @select-type=\"selectType\"\n      @error=\"e=>errors = e\"\n    >\n      <NameNsDescription\n        v-model=\"value\"\n        :mode=\"mode\"\n        :namespaced=\"!isCloud\"\n      />\n\n      <div\n        v-if=\"isCustomSecretCreate\"\n        class=\"row\"\n      >\n        <div class=\"col span-3\">\n          <LabeledSelect\n            v-model=\"secretType\"\n            :options=\"secretTypes\"\n            :searchable=\"false\"\n            :mode=\"mode\"\n            :multiple=\"false\"\n            :reduce=\"(e) => e.value\"\n            label-key=\"secret.type\"\n            required\n            @input=\"selectCustomType\"\n          />\n        </div>\n\n        <div class=\"col span-3\">\n          <LabeledInput\n            v-if=\"showCustomSecretType\"\n            ref=\"customType\"\n            v-model=\"value._type\"\n            v-focus\n            label-key=\"secret.customType\"\n            :mode=\"mode\"\n            required\n          />\n        </div>\n      </div>\n\n      <div class=\"spacer\" />\n      <component\n        :is=\"cloudComponent\"\n        v-if=\"isCloud\"\n        ref=\"cloudComponent\"\n        :driver-name=\"driverName\"\n        :value=\"value\"\n        :mode=\"mode\"\n        :hide-sensitive-data=\"hideSensitiveData\"\n      />\n      <Tabbed\n        v-else\n        :side-tabs=\"true\"\n        default-tab=\"data\"\n      >\n        <Tab\n          name=\"data\"\n          :label=\"dataLabel\"\n          :weight=\"99\"\n        >\n          <component\n            :is=\"dataComponent\"\n            :value=\"value\"\n            :mode=\"mode\"\n            :hide-sensitive-data=\"hideSensitiveData\"\n          />\n        </Tab>\n        <Tab\n          name=\"labels\"\n          label-key=\"generic.labelsAndAnnotations\"\n          :weight=\"-1\"\n        >\n          <Labels\n            v-model=\"value\"\n            :mode=\"mode\"\n          />\n        </Tab>\n      </Tabbed>\n    </CruResource>\n  </form>\n</template>\n\n<style lang='scss'>\n</style>\n"],"mappings":"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","ignoreList":[]}]}