{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/index.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/babel.config.js","mtime":1725268750245},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICIvaG9tZS91YnVudHUvc3VzZWNvbi0yMDI0LWV4dC1kZW1vL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvci9pbmRleC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHRocm90dGxlIGZyb20gJ2xvZGFzaC90aHJvdHRsZSc7CmltcG9ydCBDcmVhdGVFZGl0VmlldyBmcm9tICdAc2hlbGwvbWl4aW5zL2NyZWF0ZS1lZGl0LXZpZXcnOwppbXBvcnQgTmFtZU5zRGVzY3JpcHRpb24gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9OYW1lTnNEZXNjcmlwdGlvbic7CmltcG9ydCBUYWIgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvVGFiYmVkL1RhYic7CmltcG9ydCBUYWJiZWQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvVGFiYmVkJzsKaW1wb3J0IENydVJlc291cmNlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0NydVJlc291cmNlJzsKaW1wb3J0IHsgQmFubmVyIH0gZnJvbSAnQGNvbXBvbmVudHMvQmFubmVyJzsKaW1wb3J0IExhYmVscyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0xhYmVscyc7CmltcG9ydCB7IE5BTUVTUEFDRSwgUE9EIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IGNvbnZlcnQsIG1hdGNoaW5nLCBzaW1wbGlmeSB9IGZyb20gJ0BzaGVsbC91dGlscy9zZWxlY3Rvcic7CmltcG9ydCB7IENoZWNrYm94IH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9DaGVja2JveCc7CmltcG9ydCB7IGFkZE9iamVjdCwgcmVtb3ZlT2JqZWN0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2FycmF5JzsKaW1wb3J0IE1hdGNoRXhwcmVzc2lvbnMgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9NYXRjaEV4cHJlc3Npb25zJzsKaW1wb3J0IFBvbGljeVJ1bGVzIGZyb20gJ0BzaGVsbC9lZGl0L25ldHdvcmtpbmcuazhzLmlvLm5ldHdvcmtwb2xpY3kvUG9saWN5UnVsZXMnOwppbXBvcnQgUmVzb3VyY2VUYWJsZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9SZXNvdXJjZVRhYmxlJzsKaW1wb3J0IHsgYWxsSGFzaCB9IGZyb20gJ0BzaGVsbC91dGlscy9wcm9taXNlJzsKdmFyIFBPTElDWV9UWVBFUyA9IHsKICBJTkdSRVNTOiAnSW5ncmVzcycsCiAgRUdSRVNTOiAnRWdyZXNzJwp9OwpleHBvcnQgZGVmYXVsdCB7CiAgLy8gUHJvcHMgYXJlIGZvdW5kIGluIENyZWF0ZUVkaXRWaWV3CiAgLy8gcHJvcHM6IHt9LAoKICBjb21wb25lbnRzOiB7CiAgICBCYW5uZXI6IEJhbm5lciwKICAgIENoZWNrYm94OiBDaGVja2JveCwKICAgIENydVJlc291cmNlOiBDcnVSZXNvdXJjZSwKICAgIExhYmVsczogTGFiZWxzLAogICAgTWF0Y2hFeHByZXNzaW9uczogTWF0Y2hFeHByZXNzaW9ucywKICAgIE5hbWVOc0Rlc2NyaXB0aW9uOiBOYW1lTnNEZXNjcmlwdGlvbiwKICAgIFBvbGljeVJ1bGVzOiBQb2xpY3lSdWxlcywKICAgIFJlc291cmNlVGFibGU6IFJlc291cmNlVGFibGUsCiAgICBUYWI6IFRhYiwKICAgIFRhYmJlZDogVGFiYmVkCiAgfSwKICBtaXhpbnM6IFtDcmVhdGVFZGl0Vmlld10sCiAgZmV0Y2g6IGZ1bmN0aW9uIGZldGNoKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgaGFzaDsKICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gYWxsSGFzaCh7CiAgICAgICAgICAgICAgYWxsUG9kczogX3RoaXMuJHN0b3JlLmRpc3BhdGNoKCdjbHVzdGVyL2ZpbmRBbGwnLCB7CiAgICAgICAgICAgICAgICB0eXBlOiBQT0QKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBhbGxOYW1lc3BhY2VzOiBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvZmluZEFsbCcsIHsKICAgICAgICAgICAgICAgIHR5cGU6IE5BTUVTUEFDRQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pOwogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBoYXNoID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgX3RoaXMuYWxsUG9kcyA9IGhhc2guYWxsUG9kczsKICAgICAgICAgICAgX3RoaXMuYWxsTmFtZXNwYWNlcyA9IGhhc2guYWxsTmFtZXNwYWNlczsKICAgICAgICAgICAgX3RoaXMudXBkYXRlTWF0Y2hpbmdQb2RzKCk7CiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICBpZiAoIXRoaXMudmFsdWUuc3BlYykgewogICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZSwgJ3NwZWMnLCB7CiAgICAgICAgcG9saWN5VHlwZXM6IFtdLAogICAgICAgIHBvZFNlbGVjdG9yOiB7CiAgICAgICAgICBtYXRjaEV4cHJlc3Npb25zOiBbXSwKICAgICAgICAgIG1hdGNoTGFiZWxzOiB7fQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgICB2YXIgbWF0Y2hpbmdQb2RzID0gewogICAgICBtYXRjaGVkOiAwLAogICAgICBtYXRjaGVzOiBbXSwKICAgICAgbm9uZTogdHJ1ZSwKICAgICAgc2FtcGxlOiBudWxsLAogICAgICB0b3RhbDogMAogICAgfTsKICAgIHJldHVybiB7CiAgICAgIFBPRDogUE9ELAogICAgICBtYXRjaGluZ1BvZHM6IG1hdGNoaW5nUG9kcywKICAgICAgYWxsUG9kczogW10sCiAgICAgIGFsbE5hbWVzcGFjZXM6IFtdLAogICAgICBwb2RUYWJsZUhlYWRlcnM6IHRoaXMuJHN0b3JlLmdldHRlcnNbJ3R5cGUtbWFwL2hlYWRlcnNGb3InXSh0aGlzLiRzdG9yZS5nZXR0ZXJzWydjbHVzdGVyL3NjaGVtYUZvciddKFBPRCkpCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHBvZFNjaGVtYTogZnVuY3Rpb24gcG9kU2NoZW1hKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1snY2x1c3Rlci9zY2hlbWFGb3InXShQT0QpOwogICAgfSwKICAgIGhhc0luZ3Jlc3NQb2xpY2llczogewogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gdGhpcy52YWx1ZS5zcGVjLnBvbGljeVR5cGVzLmluY2x1ZGVzKFBPTElDWV9UWVBFUy5JTkdSRVNTKTsKICAgICAgfSwKICAgICAgc2V0OiBmdW5jdGlvbiBzZXQoaGFzSW5ncmVzc1BvbGljaWVzKSB7CiAgICAgICAgdmFyIHBvbGljeVR5cGVzID0gdGhpcy52YWx1ZS5zcGVjLnBvbGljeVR5cGVzOwogICAgICAgIGlmIChoYXNJbmdyZXNzUG9saWNpZXMpIHsKICAgICAgICAgIGFkZE9iamVjdChwb2xpY3lUeXBlcywgUE9MSUNZX1RZUEVTLklOR1JFU1MpOwogICAgICAgICAgaWYgKCF0aGlzLnZhbHVlLnNwZWMuaW5ncmVzcykgewogICAgICAgICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZS5zcGVjLCAnaW5ncmVzcycsIFtdKTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgcG9saWN5VHlwZXMgPSByZW1vdmVPYmplY3QocG9saWN5VHlwZXMsIFBPTElDWV9UWVBFUy5JTkdSRVNTKTsKICAgICAgICAgIHRoaXMuJGRlbGV0ZSh0aGlzLnZhbHVlLnNwZWMsICdpbmdyZXNzJyk7CiAgICAgICAgfQogICAgICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLnNwZWMsICdwb2xpY3lUeXBlcycsIHBvbGljeVR5cGVzKTsKICAgICAgfQogICAgfSwKICAgIGhhc0VncmVzc1BvbGljaWVzOiB7CiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIHJldHVybiB0aGlzLnZhbHVlLnNwZWMucG9saWN5VHlwZXMuaW5jbHVkZXMoUE9MSUNZX1RZUEVTLkVHUkVTUyk7CiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gc2V0KGhhc0VncmVzc1BvbGljaWVzKSB7CiAgICAgICAgdmFyIHBvbGljeVR5cGVzID0gdGhpcy52YWx1ZS5zcGVjLnBvbGljeVR5cGVzOwogICAgICAgIGlmIChoYXNFZ3Jlc3NQb2xpY2llcykgewogICAgICAgICAgYWRkT2JqZWN0KHBvbGljeVR5cGVzLCBQT0xJQ1lfVFlQRVMuRUdSRVNTKTsKICAgICAgICAgIGlmICghdGhpcy52YWx1ZS5zcGVjLmVncmVzcykgewogICAgICAgICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZS5zcGVjLCAnZWdyZXNzJywgW10pOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBwb2xpY3lUeXBlcyA9IHJlbW92ZU9iamVjdChwb2xpY3lUeXBlcywgUE9MSUNZX1RZUEVTLkVHUkVTUyk7CiAgICAgICAgICB0aGlzLiRkZWxldGUodGhpcy52YWx1ZS5zcGVjLCAnZWdyZXNzJyk7CiAgICAgICAgfQogICAgICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLnNwZWMsICdwb2xpY3lUeXBlcycsIHBvbGljeVR5cGVzKTsKICAgICAgfQogICAgfSwKICAgIHBvZFNlbGVjdG9yRXhwcmVzc2lvbnM6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgcmV0dXJuIGNvbnZlcnQodGhpcy52YWx1ZS5zcGVjLnBvZFNlbGVjdG9yLm1hdGNoTGFiZWxzIHx8IHt9LCB0aGlzLnZhbHVlLnNwZWMucG9kU2VsZWN0b3IubWF0Y2hFeHByZXNzaW9ucyB8fCBbXSk7CiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gc2V0KHBvZFNlbGVjdG9yRXhwcmVzc2lvbnMpIHsKICAgICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZS5zcGVjLCAncG9kU2VsZWN0b3InLCBzaW1wbGlmeShwb2RTZWxlY3RvckV4cHJlc3Npb25zKSk7CiAgICAgIH0KICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAndmFsdWUubWV0YWRhdGEubmFtZXNwYWNlJzogJ3VwZGF0ZU1hdGNoaW5nUG9kcycsCiAgICAndmFsdWUuc3BlYy5wb2RTZWxlY3Rvcic6ICd1cGRhdGVNYXRjaGluZ1BvZHMnCiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVNYXRjaGluZ1BvZHM6IHRocm90dGxlKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXMsCiAgICAgICAgX21hdGNoJDsKICAgICAgdmFyIGFsbEluTmFtZXNwYWNlID0gdGhpcy5hbGxQb2RzLmZpbHRlcihmdW5jdGlvbiAocG9kKSB7CiAgICAgICAgcmV0dXJuIHBvZC5tZXRhZGF0YS5uYW1lc3BhY2UgPT09IF90aGlzMi52YWx1ZS5tZXRhZGF0YS5uYW1lc3BhY2U7CiAgICAgIH0pOwogICAgICB2YXIgbWF0Y2ggPSBtYXRjaGluZyhhbGxJbk5hbWVzcGFjZSwgdGhpcy5wb2RTZWxlY3RvckV4cHJlc3Npb25zKTsKICAgICAgdmFyIG1hdGNoZWQgPSBtYXRjaC5sZW5ndGggfHwgMDsKICAgICAgdmFyIHNhbXBsZSA9IChfbWF0Y2gkID0gbWF0Y2hbMF0pID09PSBudWxsIHx8IF9tYXRjaCQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9tYXRjaCQubmFtZURpc3BsYXk7CiAgICAgIHRoaXMubWF0Y2hpbmdQb2RzID0gewogICAgICAgIG1hdGNoZWQ6IG1hdGNoZWQsCiAgICAgICAgbWF0Y2hlczogbWF0Y2gsCiAgICAgICAgbm9uZTogbWF0Y2hlZCA9PT0gMCwKICAgICAgICBzYW1wbGU6IHNhbXBsZSwKICAgICAgICB0b3RhbDogYWxsSW5OYW1lc3BhY2UubGVuZ3RoCiAgICAgIH07CiAgICB9LCAyNTAsIHsKICAgICAgbGVhZGluZzogdHJ1ZQogICAgfSkKICB9Cn07"},{"version":3,"names":["throttle","CreateEditView","NameNsDescription","Tab","Tabbed","CruResource","Banner","Labels","NAMESPACE","POD","convert","matching","simplify","Checkbox","addObject","removeObject","MatchExpressions","PolicyRules","ResourceTable","allHash","POLICY_TYPES","INGRESS","EGRESS","components","mixins","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","hash","wrap","_callee$","_context","prev","next","allPods","$store","dispatch","type","allNamespaces","sent","updateMatchingPods","stop","data","value","spec","$set","policyTypes","podSelector","matchExpressions","matchLabels","matchingPods","matched","matches","none","sample","total","podTableHeaders","getters","computed","podSchema","hasIngressPolicies","get","includes","set","ingress","$delete","hasEgressPolicies","egress","podSelectorExpressions","watch","methods","_this2","_match$","allInNamespace","filter","pod","metadata","namespace","match","length","nameDisplay","leading"],"sources":["node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/index.vue"],"sourcesContent":["<script>\nimport throttle from 'lodash/throttle';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport Tabbed from '@shell/components/Tabbed';\nimport CruResource from '@shell/components/CruResource';\nimport { Banner } from '@components/Banner';\nimport Labels from '@shell/components/form/Labels';\nimport { NAMESPACE, POD } from '@shell/config/types';\nimport { convert, matching, simplify } from '@shell/utils/selector';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { addObject, removeObject } from '@shell/utils/array';\nimport MatchExpressions from '@shell/components/form/MatchExpressions';\nimport PolicyRules from '@shell/edit/networking.k8s.io.networkpolicy/PolicyRules';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport { allHash } from '@shell/utils/promise';\n\nconst POLICY_TYPES = {\n  INGRESS: 'Ingress',\n  EGRESS:  'Egress',\n};\n\nexport default {\n  // Props are found in CreateEditView\n  // props: {},\n\n  components: {\n    Banner,\n    Checkbox,\n    CruResource,\n    Labels,\n    MatchExpressions,\n    NameNsDescription,\n    PolicyRules,\n    ResourceTable,\n    Tab,\n    Tabbed,\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    const hash = await allHash({\n      allPods:       this.$store.dispatch('cluster/findAll', { type: POD }),\n      allNamespaces: this.$store.dispatch('cluster/findAll', { type: NAMESPACE }),\n    });\n\n    this.allPods = hash.allPods;\n    this.allNamespaces = hash.allNamespaces;\n\n    this.updateMatchingPods();\n  },\n\n  data() {\n    if ( !this.value.spec ) {\n      this.$set(this.value, 'spec', {\n        policyTypes: [],\n        podSelector: {\n          matchExpressions: [],\n          matchLabels:      {},\n        }\n      });\n    }\n\n    const matchingPods = {\n      matched: 0,\n      matches: [],\n      none:    true,\n      sample:  null,\n      total:   0,\n    };\n\n    return {\n      POD,\n      matchingPods,\n      allPods:         [],\n      allNamespaces:   [],\n      podTableHeaders: this.$store.getters['type-map/headersFor'](\n        this.$store.getters['cluster/schemaFor'](POD)\n      ),\n    };\n  },\n\n  computed: {\n    podSchema() {\n      return this.$store.getters['cluster/schemaFor'](POD);\n    },\n    hasIngressPolicies: {\n      get() {\n        return this.value.spec.policyTypes.includes(POLICY_TYPES.INGRESS);\n      },\n      set(hasIngressPolicies) {\n        let policyTypes = this.value.spec.policyTypes;\n\n        if (hasIngressPolicies) {\n          addObject(policyTypes, POLICY_TYPES.INGRESS);\n          if (!this.value.spec.ingress) {\n            this.$set(this.value.spec, 'ingress', []);\n          }\n        } else {\n          policyTypes = removeObject(policyTypes, POLICY_TYPES.INGRESS);\n          this.$delete(this.value.spec, 'ingress');\n        }\n\n        this.$set(this.value.spec, 'policyTypes', policyTypes);\n      }\n    },\n    hasEgressPolicies: {\n      get() {\n        return this.value.spec.policyTypes.includes(POLICY_TYPES.EGRESS);\n      },\n      set(hasEgressPolicies) {\n        let policyTypes = this.value.spec.policyTypes;\n\n        if (hasEgressPolicies) {\n          addObject(policyTypes, POLICY_TYPES.EGRESS);\n          if (!this.value.spec.egress) {\n            this.$set(this.value.spec, 'egress', []);\n          }\n        } else {\n          policyTypes = removeObject(policyTypes, POLICY_TYPES.EGRESS);\n          this.$delete(this.value.spec, 'egress');\n        }\n\n        this.$set(this.value.spec, 'policyTypes', policyTypes);\n      }\n    },\n    podSelectorExpressions: {\n      get() {\n        return convert(\n          this.value.spec.podSelector.matchLabels || {},\n          this.value.spec.podSelector.matchExpressions || []\n        );\n      },\n      set(podSelectorExpressions) {\n        this.$set(this.value.spec, 'podSelector', simplify(podSelectorExpressions));\n      }\n    },\n  },\n\n  watch: {\n    'value.metadata.namespace': 'updateMatchingPods',\n    'value.spec.podSelector':   'updateMatchingPods',\n  },\n\n  methods: {\n    updateMatchingPods: throttle(function() {\n      const allInNamespace = this.allPods.filter((pod) => pod.metadata.namespace === this.value.metadata.namespace);\n      const match = matching(allInNamespace, this.podSelectorExpressions);\n      const matched = match.length || 0;\n      const sample = match[0]?.nameDisplay;\n\n      this.matchingPods = {\n        matched,\n        matches: match,\n        none:    matched === 0,\n        sample,\n        total:   allInNamespace.length,\n      };\n    }, 250, { leading: true }),\n  },\n};\n</script>\n\n<template>\n  <CruResource\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"true\"\n    :errors=\"errors\"\n    @error=\"(e) => (errors = e)\"\n    @finish=\"save\"\n    @cancel=\"done\"\n  >\n    <NameNsDescription\n      v-if=\"!isView\"\n      :value=\"value\"\n      :mode=\"mode\"\n    />\n\n    <div class=\"row mb-40\">\n      <div class=\"col span-12\">\n        <Tabbed :side-tabs=\"true\">\n          <Tab\n            name=\"ingress\"\n            label-key=\"networkpolicy.ingress.label\"\n            :show-header=\"false\"\n            :weight=\"3\"\n          >\n            <h2 class=\"\">\n              {{ t('networkpolicy.ingress.label') }}\n            </h2>\n            <Checkbox\n              v-model=\"hasIngressPolicies\"\n              class=\"mt-20 mb-10\"\n              :mode=\"mode\"\n              :label=\"t('networkpolicy.ingress.enable')\"\n            />\n            <PolicyRules\n              v-if=\"hasIngressPolicies\"\n              v-model=\"value\"\n              type=\"ingress\"\n              :mode=\"mode\"\n              :all-namespaces=\"allNamespaces\"\n              :all-pods=\"allPods\"\n            />\n          </Tab>\n          <Tab\n            name=\"egress\"\n            label-key=\"networkpolicy.egress.label\"\n            :show-header=\"false\"\n            :weight=\"2\"\n          >\n            <h2>\n              {{ t('networkpolicy.egress.label') }}\n            </h2>\n            <Checkbox\n              v-model=\"hasEgressPolicies\"\n              class=\"mt-20 mb-10\"\n              :mode=\"mode\"\n              :label=\"t('networkpolicy.egress.enable')\"\n            />\n            <PolicyRules\n              v-if=\"hasEgressPolicies\"\n              v-model=\"value\"\n              type=\"egress\"\n              :mode=\"mode\"\n              :all-namespaces=\"allNamespaces\"\n              :all-pods=\"allPods\"\n            />\n          </Tab>\n          <Tab\n            name=\"selectors\"\n            label-key=\"networkpolicy.selectors.label\"\n            :show-header=\"false\"\n            :weight=\"1\"\n          >\n            <h2>\n              {{ t('networkpolicy.selectors.label') }}\n              <i\n                v-clean-tooltip=\"t('networkpolicy.selectors.hint')\"\n                class=\"icon icon-info\"\n              />\n            </h2>\n            <div class=\"row\">\n              <div class=\"col span-12\">\n                <MatchExpressions\n                  v-model=\"podSelectorExpressions\"\n                  :mode=\"mode\"\n                  :show-remove=\"false\"\n                  :type=\"POD\"\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col span-12\">\n                <Banner color=\"success\">\n                  <span v-clean-html=\"t('networkpolicy.selectors.matchingPods.matchesSome', matchingPods)\" />\n                </Banner>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col span-12\">\n                <ResourceTable\n                  :rows=\"matchingPods.matches\"\n                  :headers=\"podTableHeaders\"\n                  key-field=\"id\"\n                  :table-actions=\"false\"\n                  :schema=\"podSchema\"\n                  :groupable=\"false\"\n                  :search=\"false\"\n                />\n              </div>\n            </div>\n          </Tab>\n          <Tab\n            name=\"labels-and-annotations\"\n            :label=\"t('networkpolicy.labelsAnnotations.label', {}, true)\"\n            :weight=\"-1\"\n          >\n            <Labels\n              :default-container-class=\"'labels-and-annotations-container'\"\n              :value=\"value\"\n              :mode=\"mode\"\n              :display-side-by-side=\"false\"\n            />\n          </Tab>\n        </Tabbed>\n      </div>\n    </div>\n  </CruResource>\n</template>\n"],"mappings":";;;;;;;AACA,OAAAA,QAAA;AACA,OAAAC,cAAA;AACA,OAAAC,iBAAA;AACA,OAAAC,GAAA;AACA,OAAAC,MAAA;AACA,OAAAC,WAAA;AACA,SAAAC,MAAA;AACA,OAAAC,MAAA;AACA,SAAAC,SAAA,EAAAC,GAAA;AACA,SAAAC,OAAA,EAAAC,QAAA,EAAAC,QAAA;AACA,SAAAC,QAAA;AACA,SAAAC,SAAA,EAAAC,YAAA;AACA,OAAAC,gBAAA;AACA,OAAAC,WAAA;AACA,OAAAC,aAAA;AACA,SAAAC,OAAA;AAEA,IAAAC,YAAA;EACAC,OAAA;EACAC,MAAA;AACA;AAEA;EACA;EACA;;EAEAC,UAAA;IACAjB,MAAA,EAAAA,MAAA;IACAO,QAAA,EAAAA,QAAA;IACAR,WAAA,EAAAA,WAAA;IACAE,MAAA,EAAAA,MAAA;IACAS,gBAAA,EAAAA,gBAAA;IACAd,iBAAA,EAAAA,iBAAA;IACAe,WAAA,EAAAA,WAAA;IACAC,aAAA,EAAAA,aAAA;IACAf,GAAA,EAAAA,GAAA;IACAC,MAAA,EAAAA;EACA;EAEAoB,MAAA,GAAAvB,cAAA;EAEAwB,KAAA,WAAAA,MAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,UAAAC,QAAA;MAAA,IAAAC,IAAA;MAAA,OAAAH,mBAAA,CAAAI,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OACAjB,OAAA;cACAkB,OAAA,EAAAX,KAAA,CAAAY,MAAA,CAAAC,QAAA;gBAAAC,IAAA,EAAA/B;cAAA;cACAgC,aAAA,EAAAf,KAAA,CAAAY,MAAA,CAAAC,QAAA;gBAAAC,IAAA,EAAAhC;cAAA;YACA;UAAA;YAHAuB,IAAA,GAAAG,QAAA,CAAAQ,IAAA;YAKAhB,KAAA,CAAAW,OAAA,GAAAN,IAAA,CAAAM,OAAA;YACAX,KAAA,CAAAe,aAAA,GAAAV,IAAA,CAAAU,aAAA;YAEAf,KAAA,CAAAiB,kBAAA;UAAA;UAAA;YAAA,OAAAT,QAAA,CAAAU,IAAA;QAAA;MAAA,GAAAd,OAAA;IAAA;EACA;EAEAe,IAAA,WAAAA,KAAA;IACA,UAAAC,KAAA,CAAAC,IAAA;MACA,KAAAC,IAAA,MAAAF,KAAA;QACAG,WAAA;QACAC,WAAA;UACAC,gBAAA;UACAC,WAAA;QACA;MACA;IACA;IAEA,IAAAC,YAAA;MACAC,OAAA;MACAC,OAAA;MACAC,IAAA;MACAC,MAAA;MACAC,KAAA;IACA;IAEA;MACAjD,GAAA,EAAAA,GAAA;MACA4C,YAAA,EAAAA,YAAA;MACAhB,OAAA;MACAI,aAAA;MACAkB,eAAA,OAAArB,MAAA,CAAAsB,OAAA,wBACA,KAAAtB,MAAA,CAAAsB,OAAA,sBAAAnD,GAAA,CACA;IACA;EACA;EAEAoD,QAAA;IACAC,SAAA,WAAAA,UAAA;MACA,YAAAxB,MAAA,CAAAsB,OAAA,sBAAAnD,GAAA;IACA;IACAsD,kBAAA;MACAC,GAAA,WAAAA,IAAA;QACA,YAAAlB,KAAA,CAAAC,IAAA,CAAAE,WAAA,CAAAgB,QAAA,CAAA7C,YAAA,CAAAC,OAAA;MACA;MACA6C,GAAA,WAAAA,IAAAH,kBAAA;QACA,IAAAd,WAAA,QAAAH,KAAA,CAAAC,IAAA,CAAAE,WAAA;QAEA,IAAAc,kBAAA;UACAjD,SAAA,CAAAmC,WAAA,EAAA7B,YAAA,CAAAC,OAAA;UACA,UAAAyB,KAAA,CAAAC,IAAA,CAAAoB,OAAA;YACA,KAAAnB,IAAA,MAAAF,KAAA,CAAAC,IAAA;UACA;QACA;UACAE,WAAA,GAAAlC,YAAA,CAAAkC,WAAA,EAAA7B,YAAA,CAAAC,OAAA;UACA,KAAA+C,OAAA,MAAAtB,KAAA,CAAAC,IAAA;QACA;QAEA,KAAAC,IAAA,MAAAF,KAAA,CAAAC,IAAA,iBAAAE,WAAA;MACA;IACA;IACAoB,iBAAA;MACAL,GAAA,WAAAA,IAAA;QACA,YAAAlB,KAAA,CAAAC,IAAA,CAAAE,WAAA,CAAAgB,QAAA,CAAA7C,YAAA,CAAAE,MAAA;MACA;MACA4C,GAAA,WAAAA,IAAAG,iBAAA;QACA,IAAApB,WAAA,QAAAH,KAAA,CAAAC,IAAA,CAAAE,WAAA;QAEA,IAAAoB,iBAAA;UACAvD,SAAA,CAAAmC,WAAA,EAAA7B,YAAA,CAAAE,MAAA;UACA,UAAAwB,KAAA,CAAAC,IAAA,CAAAuB,MAAA;YACA,KAAAtB,IAAA,MAAAF,KAAA,CAAAC,IAAA;UACA;QACA;UACAE,WAAA,GAAAlC,YAAA,CAAAkC,WAAA,EAAA7B,YAAA,CAAAE,MAAA;UACA,KAAA8C,OAAA,MAAAtB,KAAA,CAAAC,IAAA;QACA;QAEA,KAAAC,IAAA,MAAAF,KAAA,CAAAC,IAAA,iBAAAE,WAAA;MACA;IACA;IACAsB,sBAAA;MACAP,GAAA,WAAAA,IAAA;QACA,OAAAtD,OAAA,CACA,KAAAoC,KAAA,CAAAC,IAAA,CAAAG,WAAA,CAAAE,WAAA,QACA,KAAAN,KAAA,CAAAC,IAAA,CAAAG,WAAA,CAAAC,gBAAA,MACA;MACA;MACAe,GAAA,WAAAA,IAAAK,sBAAA;QACA,KAAAvB,IAAA,MAAAF,KAAA,CAAAC,IAAA,iBAAAnC,QAAA,CAAA2D,sBAAA;MACA;IACA;EACA;EAEAC,KAAA;IACA;IACA;EACA;EAEAC,OAAA;IACA9B,kBAAA,EAAA3C,QAAA;MAAA,IAAA0E,MAAA;QAAAC,OAAA;MACA,IAAAC,cAAA,QAAAvC,OAAA,CAAAwC,MAAA,WAAAC,GAAA;QAAA,OAAAA,GAAA,CAAAC,QAAA,CAAAC,SAAA,KAAAN,MAAA,CAAA5B,KAAA,CAAAiC,QAAA,CAAAC,SAAA;MAAA;MACA,IAAAC,KAAA,GAAAtE,QAAA,CAAAiE,cAAA,OAAAL,sBAAA;MACA,IAAAjB,OAAA,GAAA2B,KAAA,CAAAC,MAAA;MACA,IAAAzB,MAAA,IAAAkB,OAAA,GAAAM,KAAA,iBAAAN,OAAA,uBAAAA,OAAA,CAAAQ,WAAA;MAEA,KAAA9B,YAAA;QACAC,OAAA,EAAAA,OAAA;QACAC,OAAA,EAAA0B,KAAA;QACAzB,IAAA,EAAAF,OAAA;QACAG,MAAA,EAAAA,MAAA;QACAC,KAAA,EAAAkB,cAAA,CAAAM;MACA;IACA;MAAAE,OAAA;IAAA;EACA;AACA","ignoreList":[]}]}