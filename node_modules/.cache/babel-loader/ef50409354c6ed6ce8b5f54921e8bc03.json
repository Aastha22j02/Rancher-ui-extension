{"remainingRequest":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js??ref--16-1!/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/helm.cattle.io.projecthelmchart.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/helm.cattle.io.projecthelmchart.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/babel.config.js","mtime":1725343995893},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Tabbed","createEditView","CruResource","Questions","CONFIG_MAP","NAMESPACE","LabeledSelect","LabeledInput","Loading","jsyaml","components","mixins","props","value","type","Object","required","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_federatorSystemNames","inStore","federatorSystemNamespacesConfigMap","wrap","_callee$","_context","prev","next","$store","dispatch","getters","id","sent","systemNamespaces","JSON","parse","data","namespaces","concat","filter","namespaceFilter","map","namespaceMapper","loading","stop","spec","values","$set","selectedNamespaceQuestions","watch","currentNamespace","neu","old","_this2","_callee2","_neu$metadata","_res$data","_jsyaml$load","configMapRelationship","res","questionsYaml","_callee2$","_context2","abrupt","metadata","relationships","find","relationship","toType","toId","load","questions","computed","_this3","namespace","_this3$value","methods","getNamespaceConfigMapId","_this$currentNamespac","_this$systemNamespace","_this$systemNamespace2","_namespace$metadata","excludeProjects","_toConsumableArray","systemProjectLabelValues","projectReleaseLabelValue","project","labels","includes","projectId","_namespace$project","_objectSpread","configMapId","label","displayName"],"sources":["node_modules/@rancher/shell/edit/helm.cattle.io.projecthelmchart.vue"],"sourcesContent":["<script>\nimport Tabbed from '@shell/components/Tabbed';\nimport createEditView from '@shell/mixins/create-edit-view';\nimport CruResource from '@shell/components/CruResource';\nimport Questions from '@shell/components/Questions';\nimport { CONFIG_MAP, NAMESPACE } from '@shell/config/types';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport Loading from '@shell/components/Loading';\nimport jsyaml from 'js-yaml';\n\nexport default {\n  components: {\n    CruResource,\n    LabeledSelect,\n    LabeledInput,\n    Tabbed,\n    Questions,\n    Loading\n  },\n\n  mixins: [createEditView],\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n  },\n\n  async fetch() {\n    await this.$store.dispatch('catalog/load');\n    const inStore = this.$store.getters['currentStore'](NAMESPACE);\n    const federatorSystemNamespacesConfigMap = await this.$store.dispatch('cluster/find', { type: CONFIG_MAP, id: 'cattle-monitoring-system/prometheus-federator-system-namespaces' });\n\n    this.systemNamespaces = JSON.parse(federatorSystemNamespacesConfigMap?.data?.['system-namespaces.json']);\n\n    this.namespaces = this.$store.getters[`${ inStore }/all`](NAMESPACE)\n      .filter(this.namespaceFilter)\n      .map(this.namespaceMapper);\n\n    this.loading = false;\n  },\n\n  data() {\n    if (!this.value.spec.values) {\n      this.$set(this.value.spec, 'values', {});\n    }\n\n    return {\n      systemNamespaces:           null,\n      namespaces:                 [],\n      loading:                    true,\n      inStore:                    this.$store.getters['currentStore'](),\n      selectedNamespaceQuestions: null,\n    };\n  },\n\n  watch: {\n    /**\n     * Given the current namespace, fetch a specific secret from within which will contain a questions.yaml\n     */\n    async currentNamespace(neu, old) {\n      if (!neu) {\n        return;\n      }\n\n      const configMapRelationship = neu.metadata?.relationships.find((relationship) => relationship?.toType === CONFIG_MAP);\n\n      if (!configMapRelationship?.toId) {\n        return;\n      }\n\n      const res = await this.$store.dispatch(`${ this.inStore }/find`, { type: CONFIG_MAP, id: configMapRelationship.toId });\n      const questionsYaml = res?.data?.['questions.yaml'];\n\n      if (!questionsYaml) {\n        return;\n      }\n      this.selectedNamespaceQuestions = jsyaml.load(questionsYaml)?.questions;\n    }\n  },\n\n  computed: {\n    currentNamespace() {\n      return this.namespaces.find((namespace) => namespace.id === this.value?.metadata?.namespace);\n    }\n  },\n\n  methods: {\n    getNamespaceConfigMapId(namespace) {\n      return this.currentNamespace?.metadata?.relationships.find((relationship) => relationship?.toType === 'configmap')?.toId;\n    },\n    namespaceFilter(namespace) {\n      const excludeProjects = [...this.systemNamespaces?.systemProjectLabelValues || [], this.systemNamespaces?.projectReleaseLabelValue];\n\n      return namespace?.project && namespace?.metadata?.labels?.['helm.cattle.io/helm-project-operated'] && !excludeProjects.includes(namespace.projectId);\n    },\n    namespaceMapper(namespace) {\n      return {\n        ...namespace,\n        configMapId: this.getNamespaceConfigMapId(namespace),\n        label:       namespace?.project?.spec?.displayName,\n        value:       namespace?.id,\n      };\n    }\n  }\n};\n</script>\n\n<template>\n  <CruResource\n    v-if=\"!loading\"\n    :done-route=\"doneRoute\"\n    :resource=\"value\"\n    :mode=\"mode\"\n    :errors=\"errors\"\n    :apply-hooks=\"applyHooks\"\n    @finish=\"save\"\n  >\n    <div class=\"row\">\n      <div class=\"col span-6\">\n        <LabeledSelect\n          v-model=\"value.metadata.namespace\"\n          :label=\"t('namespace.project.label')\"\n          :options=\"namespaces\"\n          required\n        />\n      </div>\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.metadata.description\"\n          :label=\"t('nameNsDescription.description.label')\"\n        />\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col span-12\">\n        <Tabbed\n          v-if=\"!!currentNamespace && selectedNamespaceQuestions\"\n          ref=\"tabs\"\n          :side-tabs=\"true\"\n        >\n          <Questions\n            v-model=\"value.spec.values\"\n            tabbed=\"multiple\"\n            :target-namespace=\"value.metadata.namespace\"\n            :source=\"selectedNamespaceQuestions\"\n          />\n        </Tabbed>\n      </div>\n    </div>\n  </CruResource>\n  <Loading v-else />\n</template>\n\n<style lang=\"scss\" scoped>\n.row {\n  margin-bottom: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}