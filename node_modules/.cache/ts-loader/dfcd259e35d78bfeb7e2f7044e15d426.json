{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/__tests__/workload.test.ts","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/__tests__/workload.test.ts","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFdvcmtsb2FkIGZyb20gJ0BzaGVsbC9tb2RlbHMvd29ya2xvYWQuanMnOwppbXBvcnQgeyBzdGV2ZUNsYXNzSnVua09iamVjdCB9IGZyb20gJ0BzaGVsbC9wbHVnaW5zL3N0ZXZlL19fdGVzdHNfXy91dGlscy9zdGV2ZS1tb2Nrcyc7CmRlc2NyaWJlKCdjbGFzczogV29ya2xvYWQnLCAoKSA9PiB7CiAgICBkZXNjcmliZSgnZ2l2ZW4gY3VzdG9tIHdvcmtsb2FkIGtleXMnLCAoKSA9PiB7CiAgICAgICAgY29uc3QgY3VzdG9tQ29udGFpbmVySW1hZ2UgPSAnaW1hZ2UnOwogICAgICAgIGNvbnN0IGN1c3RvbUNvbnRhaW5lciA9IHsKICAgICAgICAgICAgaW1hZ2U6IGN1c3RvbUNvbnRhaW5lckltYWdlLAogICAgICAgICAgICBfX2FjdGl2ZTogJ3doYXRldmVyJywKICAgICAgICAgICAgYWN0aXZlOiAnd2hhdGV2ZXInLAogICAgICAgICAgICBfaW5pdDogJ3doYXRldmVyJywKICAgICAgICAgICAgZXJyb3I6ICd3aGF0ZXZlcicsCiAgICAgICAgfTsKICAgICAgICBjb25zdCBjdXN0b21Xb3JrbG9hZCA9IHsKICAgICAgICAgICAgLi4uc3RldmVDbGFzc0p1bmtPYmplY3QsCiAgICAgICAgICAgIHR5cGU6ICcxMjNhYnYnLAogICAgICAgICAgICBfX3JlaHlkcmF0ZTogJ3doYXRldmVyJywKICAgICAgICAgICAgX19jbG9uZTogJ3doYXRldmVyJywKICAgICAgICAgICAgc3BlYzogewogICAgICAgICAgICAgICAgdGVtcGxhdGU6IHsKICAgICAgICAgICAgICAgICAgICBzcGVjOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lcnM6IFtjdXN0b21Db250YWluZXJdLAogICAgICAgICAgICAgICAgICAgICAgICBpbml0Q29udGFpbmVyczogW2N1c3RvbUNvbnRhaW5lcl0sCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBjdXN0b21Xb3JrbG9hZC5tZXRhZGF0YS5uYW1lID0gJ2FiYyc7CiAgICAgICAgaXQoJ3Nob3VsZCBrZWVwIGludGVybmFsIGtleXMnLCAoKSA9PiB7CiAgICAgICAgICAgIGNvbnN0IHdvcmtsb2FkID0gbmV3IFdvcmtsb2FkKGN1c3RvbVdvcmtsb2FkLCB7CiAgICAgICAgICAgICAgICBnZXR0ZXJzOiB7IHNjaGVtYUZvcjogKCkgPT4gKHsgbGlua0ZvcjogamVzdC5mbigpIH0pIH0sCiAgICAgICAgICAgICAgICBkaXNwYXRjaDogamVzdC5mbigpLAogICAgICAgICAgICAgICAgcm9vdEdldHRlcnM6IHsgJ2kxOG4vdCc6IGplc3QuZm4oKSB9LAogICAgICAgICAgICB9KTsKICAgICAgICAgICAgZXhwZWN0KHsgLi4ud29ya2xvYWQgfSkudG9TdHJpY3RFcXVhbChjdXN0b21Xb3JrbG9hZCk7CiAgICAgICAgfSk7CiAgICAgICAgZGVzY3JpYmUoJ21ldGhvZDogc2F2ZScsICgpID0+IHsKICAgICAgICAgICAgaXQoJ3Nob3VsZCByZW1vdmUgYWxsIHRoZSBpbnRlcm5hbCBrZXlzJywgYXN5bmMgKCkgPT4gewogICAgICAgICAgICAgICAgY29uc3QgZGlzcGF0Y2ggPSBqZXN0LmZuKCk7CiAgICAgICAgICAgICAgICBjb25zdCB3b3JrbG9hZCA9IG5ldyBXb3JrbG9hZChjdXN0b21Xb3JrbG9hZCwgewogICAgICAgICAgICAgICAgICAgIGdldHRlcnM6IHsgc2NoZW1hRm9yOiAoKSA9PiAoeyBsaW5rRm9yOiBqZXN0LmZuKCkgfSkgfSwKICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaCwKICAgICAgICAgICAgICAgICAgICByb290R2V0dGVyczogewogICAgICAgICAgICAgICAgICAgICAgICAnaTE4bi90JzogamVzdC5mbigpLAogICAgICAgICAgICAgICAgICAgICAgICAnaTE4bi9leGlzdHMnOiAoKSA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNvbnN0IGV4cGVjdGF0aW9uID0gewogICAgICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhYmMnLAogICAgICAgICAgICAgICAgICAgICAgICBmaWVsZHM6ICd3aGF0ZXZlcicsCiAgICAgICAgICAgICAgICAgICAgICAgIHJlc291cmNlVmVyc2lvbjogJ3doYXRldmVyJywKICAgICAgICAgICAgICAgICAgICAgICAgY2x1c3Rlck5hbWU6ICd3aGF0ZXZlcicsCiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0aW9uR3JhY2VQZXJpb2RTZWNvbmRzOiAnd2hhdGV2ZXInLAogICAgICAgICAgICAgICAgICAgICAgICBnZW5lcmF0ZU5hbWU6ICd3aGF0ZXZlcicsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBzcGVjOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcGVjOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyczogW3sgaW1hZ2U6IGN1c3RvbUNvbnRhaW5lckltYWdlIH1dLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXRDb250YWluZXJzOiBbeyBpbWFnZTogY3VzdG9tQ29udGFpbmVySW1hZ2UgfV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBhd2FpdCB3b3JrbG9hZC5zYXZlKCk7CiAgICAgICAgICAgICAgICBjb25zdCBvcHQgPSB7CiAgICAgICAgICAgICAgICAgICAgZGF0YTogZXhwZWN0YXRpb24sCiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICAgICBhY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICAgICAgICAgICAgICAgIHVybDogdW5kZWZpbmVkLAogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIC8vIERhdGEgc2VudCBzaG91bGQgaGF2ZSBiZWVuIGNsZWFuZWQKICAgICAgICAgICAgICAgIGV4cGVjdChkaXNwYXRjaCkudG9IYXZlQmVlbkNhbGxlZFdpdGgoJ3JlcXVlc3QnLCB7IG9wdCwgdHlwZTogY3VzdG9tV29ya2xvYWQudHlwZSB9KTsKICAgICAgICAgICAgICAgIC8vIE9yaWdpbmFsIHdvcmtsb2FkIG1vZGVsIHNob3VsZCByZW1haW4gdW5jaGFuZ2VkCiAgICAgICAgICAgICAgICBleHBlY3QoeyAuLi53b3JrbG9hZCB9KS50b1N0cmljdEVxdWFsKGN1c3RvbVdvcmtsb2FkKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICB9KTsKfSk7Cg=="},{"version":3,"file":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/__tests__/workload.test.ts","sourceRoot":"","sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/models/__tests__/workload.test.ts"],"names":[],"mappings":"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","sourcesContent":["import Workload from '@shell/models/workload.js';\nimport { steveClassJunkObject } from '@shell/plugins/steve/__tests__/utils/steve-mocks';\n\ndescribe('class: Workload', () => {\n  describe('given custom workload keys', () => {\n    const customContainerImage = 'image';\n    const customContainer = {\n      image:    customContainerImage,\n      __active: 'whatever',\n      active:   'whatever',\n      _init:    'whatever',\n      error:    'whatever',\n    };\n    const customWorkload = {\n      ...steveClassJunkObject,\n      type:        '123abv',\n      __rehydrate: 'whatever',\n      __clone:     'whatever',\n      spec:        {\n        template: {\n          spec: {\n            containers:     [customContainer],\n            initContainers: [customContainer],\n          }\n        }\n      }\n    };\n\n    customWorkload.metadata.name = 'abc';\n\n    it('should keep internal keys', () => {\n      const workload = new Workload(customWorkload, {\n        getters:     { schemaFor: () => ({ linkFor: jest.fn() }) },\n        dispatch:    jest.fn(),\n        rootGetters: { 'i18n/t': jest.fn() },\n      });\n\n      expect({ ...workload }).toStrictEqual(customWorkload);\n    });\n\n    describe('method: save', () => {\n      it('should remove all the internal keys', async() => {\n        const dispatch = jest.fn();\n        const workload = new Workload(customWorkload, {\n          getters:     { schemaFor: () => ({ linkFor: jest.fn() }) },\n          dispatch,\n          rootGetters: {\n            'i18n/t':      jest.fn(),\n            'i18n/exists': () => true,\n          },\n        });\n        const expectation = {\n          metadata: {\n            name:                       'abc',\n            fields:                     'whatever',\n            resourceVersion:            'whatever',\n            clusterName:                'whatever',\n            deletionGracePeriodSeconds: 'whatever',\n            generateName:               'whatever',\n          },\n          spec: {\n            template: {\n              spec: {\n                containers:     [{ image: customContainerImage }],\n                initContainers: [{ image: customContainerImage }]\n              }\n            }\n          }\n        };\n\n        await workload.save();\n\n        const opt = {\n          data:    expectation,\n          headers: {\n            accept:         'application/json',\n            'content-type': 'application/json',\n          },\n          method: 'post',\n          url:    undefined,\n        };\n\n        // Data sent should have been cleaned\n        expect(dispatch).toHaveBeenCalledWith('request', { opt, type: customWorkload.type });\n\n        // Original workload model should remain unchanged\n        expect({ ...workload }).toStrictEqual(customWorkload);\n      });\n    });\n  });\n});\n"]}]}