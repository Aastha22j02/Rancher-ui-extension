{"remainingRequest":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/logging.banzaicloud.io.output/__tests__/logging.banzaicloud.io.output.test.ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/logging.banzaicloud.io.output/__tests__/logging.banzaicloud.io.output.test.ts","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgbW91bnQgfSBmcm9tICdAdnVlL3Rlc3QtdXRpbHMnOwppbXBvcnQgQmFuemFpIGZyb20gJ0BzaGVsbC9lZGl0L2xvZ2dpbmcuYmFuemFpY2xvdWQuaW8ub3V0cHV0L2luZGV4LnZ1ZSc7CmNvbnN0IG91dHB1dFNjaGVtYSA9IHsKICAgIGlkOiAnbG9nZ2luZy5iYW56YWljbG91ZC5pby5vdXRwdXQnLAogICAgdHlwZTogJ3NjaGVtYScsCiAgICBsaW5rczogewogICAgICAgIGNvbGxlY3Rpb246ICdodHRwczovL2xvY2FsaG9zdDo4MDA1L3YxL2xvZ2dpbmcuYmFuemFpY2xvdWQuaW8ub3V0cHV0cycsCiAgICAgICAgc2VsZjogJ2h0dHBzOi8vbG9jYWxob3N0OjgwMDUvdjEvc2NoZW1hcy9sb2dnaW5nLmJhbnphaWNsb3VkLmlvLm91dHB1dCcKICAgIH0sCiAgICBwbHVyYWxOYW1lOiAnbG9nZ2luZy5iYW56YWljbG91ZC5pby5vdXRwdXRzJywKICAgIHJlc291cmNlTWV0aG9kczogWwogICAgICAgICdHRVQnLAogICAgICAgICdERUxFVEUnLAogICAgICAgICdQVVQnLAogICAgICAgICdQQVRDSCcKICAgIF0sCiAgICBfcmVzb3VyY2VGaWVsZHM6IG51bGwsCiAgICByZXF1aXJlc1Jlc291cmNlRmllbGRzOiB0cnVlLAogICAgY29sbGVjdGlvbk1ldGhvZHM6IFsKICAgICAgICAnR0VUJywKICAgICAgICAnUE9TVCcKICAgIF0sCiAgICBhdHRyaWJ1dGVzOiB7CiAgICAgICAgY29sdW1uczogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBuYW1lOiAnQWN0aXZlJywKICAgICAgICAgICAgICAgIGZpZWxkOiAnLnN0YXR1cy5hY3RpdmUnLAogICAgICAgICAgICAgICAgdHlwZTogJ2Jvb2xlYW4nCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIG5hbWU6ICdQcm9ibGVtcycsCiAgICAgICAgICAgICAgICBmaWVsZDogJy5zdGF0dXMucHJvYmxlbXNDb3VudCcsCiAgICAgICAgICAgICAgICB0eXBlOiAnaW50ZWdlcicKICAgICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgZ3JvdXA6ICdsb2dnaW5nLmJhbnphaWNsb3VkLmlvJywKICAgICAgICBraW5kOiAnT3V0cHV0JywKICAgICAgICBuYW1lc3BhY2VkOiB0cnVlLAogICAgICAgIHJlc291cmNlOiAnb3V0cHV0cycsCiAgICAgICAgdmVyYnM6IFsKICAgICAgICAgICAgJ2RlbGV0ZScsCiAgICAgICAgICAgICdkZWxldGVjb2xsZWN0aW9uJywKICAgICAgICAgICAgJ2dldCcsCiAgICAgICAgICAgICdsaXN0JywKICAgICAgICAgICAgJ3BhdGNoJywKICAgICAgICAgICAgJ2NyZWF0ZScsCiAgICAgICAgICAgICd1cGRhdGUnLAogICAgICAgICAgICAnd2F0Y2gnCiAgICAgICAgXSwKICAgICAgICB2ZXJzaW9uOiAndjFiZXRhMScKICAgIH0sCiAgICBfaWQ6ICdsb2dnaW5nLmJhbnphaWNsb3VkLmlvLm91dHB1dCcsCiAgICBfZ3JvdXA6ICdsb2dnaW5nLmJhbnphaWNsb3VkLmlvJywKICAgIHN0b3JlOiAnY2x1c3RlcicsCiAgICBfc2NoZW1hRGVmaW5pdGlvbnNJZHM6IHsKICAgICAgICBzZWxmOiAnaW8uYmFuemFpY2xvdWQubG9nZ2luZy52MWJldGExLk91dHB1dCcsCiAgICAgICAgb3RoZXJzOiBbCiAgICAgICAgICAgICdpby5iYW56YWljbG91ZC5sb2dnaW5nLnYxYmV0YTEuT3V0cHV0LnNwZWMnLAogICAgICAgICAgICAnaW8uYmFuemFpY2xvdWQubG9nZ2luZy52MWJldGExLk91dHB1dC5zcGVjLmF3c0VsYXN0aWNzZWFyY2guYnVmZmVyJwogICAgICAgIF0KICAgIH0sCiAgICBzY2hlbWFEZWZpbml0aW9uczogewogICAgICAgICdpby5iYW56YWljbG91ZC5sb2dnaW5nLnYxYmV0YTEuT3V0cHV0LnNwZWMuYXdzRWxhc3RpY3NlYXJjaC5idWZmZXInOiB7CiAgICAgICAgICAgIHJlc291cmNlRmllbGRzOiB7CiAgICAgICAgICAgICAgICBjaHVua19mdWxsX3RocmVzaG9sZDogeyB0eXBlOiAnc3RyaW5nJyB9LAogICAgICAgICAgICAgICAgY2h1bmtfbGltaXRfcmVjb3JkczogeyB0eXBlOiAnaW50JyB9LAogICAgICAgICAgICAgICAgY2h1bmtfbGltaXRfc2l6ZTogeyB0eXBlOiAnc3RyaW5nJyB9LAogICAgICAgICAgICAgICAgY29tcHJlc3M6IHsgdHlwZTogJ3N0cmluZycgfSwKICAgICAgICAgICAgICAgIGRlbGF5ZWRfY29tbWl0X3RpbWVvdXQ6IHsgdHlwZTogJ3N0cmluZycgfSwKICAgICAgICAgICAgICAgIGRpc2FibGVfY2h1bmtfYmFja3VwOiB7IHR5cGU6ICdib29sZWFuJyB9LAogICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHsgdHlwZTogJ2Jvb2xlYW4nIH0sCiAgICAgICAgICAgICAgICBmbHVzaF9hdF9zaHV0ZG93bjogeyB0eXBlOiAnYm9vbGVhbicgfSwKICAgICAgICAgICAgICAgIGZsdXNoX2ludGVydmFsOiB7IHR5cGU6ICdzdHJpbmcnIH0sCiAgICAgICAgICAgICAgICBmbHVzaF9tb2RlOiB7IHR5cGU6ICdzdHJpbmcnIH0sCiAgICAgICAgICAgICAgICBmbHVzaF90aHJlYWRfYnVyc3RfaW50ZXJ2YWw6IHsgdHlwZTogJ3N0cmluZycgfSwKICAgICAgICAgICAgICAgIGZsdXNoX3RocmVhZF9jb3VudDogeyB0eXBlOiAnaW50JyB9LAogICAgICAgICAgICAgICAgZmx1c2hfdGhyZWFkX2ludGVydmFsOiB7IHR5cGU6ICdzdHJpbmcnIH0sCiAgICAgICAgICAgICAgICBvdmVyZmxvd19hY3Rpb246IHsgdHlwZTogJ3N0cmluZycgfSwKICAgICAgICAgICAgICAgIHBhdGg6IHsgdHlwZTogJ3N0cmluZycgfSwKICAgICAgICAgICAgICAgIHF1ZXVlX2xpbWl0X2xlbmd0aDogeyB0eXBlOiAnaW50JyB9LAogICAgICAgICAgICAgICAgcXVldWVkX2NodW5rc19saW1pdF9zaXplOiB7IHR5cGU6ICdpbnQnIH0sCiAgICAgICAgICAgICAgICByZXRyeV9leHBvbmVudGlhbF9iYWNrb2ZmX2Jhc2U6IHsgdHlwZTogJ3N0cmluZycgfSwKICAgICAgICAgICAgICAgIHJldHJ5X2ZvcmV2ZXI6IHsgdHlwZTogJ2Jvb2xlYW4nIH0sCiAgICAgICAgICAgICAgICByZXRyeV9tYXhfaW50ZXJ2YWw6IHsgdHlwZTogJ3N0cmluZycgfSwKICAgICAgICAgICAgICAgIHJldHJ5X21heF90aW1lczogeyB0eXBlOiAnaW50JyB9LAogICAgICAgICAgICAgICAgcmV0cnlfcmFuZG9taXplOiB7IHR5cGU6ICdib29sZWFuJyB9LAogICAgICAgICAgICAgICAgcmV0cnlfc2Vjb25kYXJ5X3RocmVzaG9sZDogeyB0eXBlOiAnc3RyaW5nJyB9LAogICAgICAgICAgICAgICAgcmV0cnlfdGltZW91dDogeyB0eXBlOiAnc3RyaW5nJyB9LAogICAgICAgICAgICAgICAgcmV0cnlfdHlwZTogeyB0eXBlOiAnc3RyaW5nJyB9LAogICAgICAgICAgICAgICAgcmV0cnlfd2FpdDogeyB0eXBlOiAnc3RyaW5nJyB9LAogICAgICAgICAgICAgICAgdGFnczogeyB0eXBlOiAnc3RyaW5nJyB9LAogICAgICAgICAgICAgICAgdGltZWtleTogeyB0eXBlOiAnc3RyaW5nJyB9LAogICAgICAgICAgICAgICAgdGltZWtleV91c2VfdXRjOiB7IHR5cGU6ICdib29sZWFuJyB9LAogICAgICAgICAgICAgICAgdGltZWtleV93YWl0OiB7IHR5cGU6ICdzdHJpbmcnIH0sCiAgICAgICAgICAgICAgICB0aW1la2V5X3pvbmU6IHsgdHlwZTogJ3N0cmluZycgfSwKICAgICAgICAgICAgICAgIHRvdGFsX2xpbWl0X3NpemU6IHsgdHlwZTogJ3N0cmluZycgfSwKICAgICAgICAgICAgICAgIHR5cGU6IHsgdHlwZTogJ3N0cmluZycgfQogICAgICAgICAgICB9LAogICAgICAgICAgICB0eXBlOiAnaW8uYmFuemFpY2xvdWQubG9nZ2luZy52MWJldGExLk91dHB1dC5zcGVjLmF3c0VsYXN0aWNzZWFyY2guYnVmZmVyJywKICAgICAgICAgICAgZGVzY3JpcHRpb246ICcnCiAgICAgICAgfQogICAgfSwKICAgIGZldGNoUmVzb3VyY2VGaWVsZHM6IGFzeW5jICgpID0+IGplc3QuZm4oKQp9OwpkZXNjcmliZSgndmlldzogbG9nZ2luZy5iYW56YWljbG91ZC5pby5vdXRwdXQnLCAoKSA9PiB7CiAgICBpdC5lYWNoKFsKICAgICAgICBbJ2h0dHA6Ly9sb2NhbGhvc3Q6MzEwMCcsIFtdXSwKICAgICAgICBbJ25vdCBhIHByb3BlciBVUkwnLCBbJ2xvZ2dpbmcubG9raS51cmxJbnZhbGlkJ11dLAogICAgXSkoJ3Nob3VsZCB2YWxpZGF0ZSBMb2tpIFVSTCBvbiBzYXZlJywgKHVybCwgZXhwZWN0YXRpb24pID0+IHsKICAgICAgICBjb25zdCB3cmFwcGVyID0gbW91bnQoQmFuemFpLCB7CiAgICAgICAgICAgIGRhdGE6ICgpID0+ICh7IHNlbGVjdGVkUHJvdmlkZXI6ICdsb2tpJyB9KSwKICAgICAgICAgICAgcHJvcHNEYXRhOiB7CiAgICAgICAgICAgICAgICB2YWx1ZTogewogICAgICAgICAgICAgICAgICAgIHNhdmU6IGplc3QuZm4oKSwKICAgICAgICAgICAgICAgICAgICBzcGVjOiB7IGxva2k6IHsgdXJsIH0gfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBtb2NrczogewogICAgICAgICAgICAgICAgJGZldGNoU3RhdGU6IHsgcGVuZGluZzogZmFsc2UgfSwKICAgICAgICAgICAgICAgICRzdG9yZTogewogICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoOiBqZXN0LmZuKCksCiAgICAgICAgICAgICAgICAgICAgZ2V0dGVyczogewogICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50U3RvcmU6ICgpID0+ICdjdXJyZW50X3N0b3JlJywKICAgICAgICAgICAgICAgICAgICAgICAgJ21hbmFnZW1lbnQvc2NoZW1hRm9yJzogamVzdC5mbigpLAogICAgICAgICAgICAgICAgICAgICAgICAnY3VycmVudF9zdG9yZS9hbGwnOiBqZXN0LmZuKCksCiAgICAgICAgICAgICAgICAgICAgICAgICdjdXJyZW50X3N0b3JlL3NjaGVtYUZvcic6IGplc3QuZm4oKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2NsdXN0ZXIvYWxsJzogamVzdC5mbigpLAogICAgICAgICAgICAgICAgICAgICAgICAndHlwZS1tYXAvaXNTcG9vZmVkJzogamVzdC5mbigpLAogICAgICAgICAgICAgICAgICAgICAgICAnaTE4bi90JzogamVzdC5mbigpLm1vY2tJbXBsZW1lbnRhdGlvbigoa2V5KSA9PiBrZXkpLAogICAgICAgICAgICAgICAgICAgICAgICBuYW1lc3BhY2VzOiAoKSA9PiAoe30pLAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAkcm91dGU6IHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAnd2hhdGV2ZXInLAogICAgICAgICAgICAgICAgICAgIHF1ZXJ5OiB7IEFTOiAnJyB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgJHJvdXRlcjogeyByZXBsYWNlOiBqZXN0LmZuKCkgfSwKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIGNvbnN0IGZha2VEb25lID0gamVzdC5mbigpOwogICAgICAgIHdyYXBwZXIudm0uc2F2ZVNldHRpbmdzKGZha2VEb25lKTsKICAgICAgICBleHBlY3Qod3JhcHBlci52bS5lcnJvcnMpLnRvU3RyaWN0RXF1YWwoZXhwZWN0YXRpb24pOwogICAgfSk7CiAgICBpdCgnc2hvdWxkIGxvYWQgdGhlIGRlZmF1bHQgWUFNTCBkYXRhIGZvciBvdXRwdXQgYnVmZmVyIGNvbmZpZyAoZnJvbSBzY2hlbWEpIGluIGEgQ1JFQVRFIHNjZW5hcmlvJywgYXN5bmMgKCkgPT4gewogICAgICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudChCYW56YWksIHsKICAgICAgICAgICAgZGF0YTogKCkgPT4gKHsgc2VsZWN0ZWRQcm92aWRlcjogJ2F3c0VsYXN0aWNzZWFyY2gnIH0pLAogICAgICAgICAgICBwcm9wc0RhdGE6IHsKICAgICAgICAgICAgICAgIHZhbHVlOiB7CiAgICAgICAgICAgICAgICAgICAgc2F2ZTogamVzdC5mbigpLAogICAgICAgICAgICAgICAgICAgIHNwZWM6IHt9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG1vY2tzOiB7CiAgICAgICAgICAgICAgICAkZmV0Y2hTdGF0ZTogeyBwZW5kaW5nOiBmYWxzZSB9LAogICAgICAgICAgICAgICAgJHN0b3JlOiB7CiAgICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goYXJnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhcmcgPT09ICdjbHVzdGVyL2ZpbmQnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3V0cHV0U2NoZW1hOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBqZXN0LmZuKCk7CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBnZXR0ZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTdG9yZTogKCkgPT4gJ2N1cnJlbnRfc3RvcmUnLAogICAgICAgICAgICAgICAgICAgICAgICAnbWFuYWdlbWVudC9zY2hlbWFGb3InOiBqZXN0LmZuKCksCiAgICAgICAgICAgICAgICAgICAgICAgICdjdXJyZW50X3N0b3JlL2FsbCc6IGplc3QuZm4oKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2N1cnJlbnRfc3RvcmUvc2NoZW1hRm9yJzogamVzdC5mbigpLAogICAgICAgICAgICAgICAgICAgICAgICAnY2x1c3Rlci9hbGwnOiAoKSA9PiBbb3V0cHV0U2NoZW1hXSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2NsdXN0ZXIvYnlJZCc6ICgpID0+IG91dHB1dFNjaGVtYSwKICAgICAgICAgICAgICAgICAgICAgICAgJ3R5cGUtbWFwL2lzU3Bvb2ZlZCc6IGplc3QuZm4oKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2kxOG4vdCc6IGplc3QuZm4oKS5tb2NrSW1wbGVtZW50YXRpb24oKGtleSkgPT4ga2V5KSwKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZXNwYWNlczogKCkgPT4gKHt9KSwKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgJHJvdXRlOiB7CiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3doYXRldmVyJywKICAgICAgICAgICAgICAgICAgICBxdWVyeTogeyBBUzogJycgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICRyb3V0ZXI6IHsgcmVwbGFjZTogamVzdC5mbigpIH0sCiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICAvLyBjYWxsIGFzeW5jIGZldGNoIC0gbmVlZGVkIGZvciB0ZXN0IGFzc2VydGlvbgogICAgICAgIGF3YWl0IEJhbnphaS5mZXRjaC5jYWxsKHdyYXBwZXIudm0pOwogICAgICAgIGNvbnN0IHlhbWwgPSBgI2NodW5rX2xpbWl0X3JlY29yZHM6IGludAojY2h1bmtfbGltaXRfc2l6ZTogc3RyaW5nCiNjb21wcmVzczogc3RyaW5nCiNkZWxheWVkX2NvbW1pdF90aW1lb3V0OiBzdHJpbmcKI2Rpc2FibGVfY2h1bmtfYmFja3VwOiBib29sZWFuCiNkaXNhYmxlZDogYm9vbGVhbgojZmx1c2hfYXRfc2h1dGRvd246IGJvb2xlYW4KI2ZsdXNoX2ludGVydmFsOiBzdHJpbmcKI2ZsdXNoX21vZGU6IHN0cmluZwojZmx1c2hfdGhyZWFkX2J1cnN0X2ludGVydmFsOiBzdHJpbmcKI2ZsdXNoX3RocmVhZF9jb3VudDogaW50CiNmbHVzaF90aHJlYWRfaW50ZXJ2YWw6IHN0cmluZwojb3ZlcmZsb3dfYWN0aW9uOiBzdHJpbmcKI3BhdGg6IHN0cmluZwojcXVldWVfbGltaXRfbGVuZ3RoOiBpbnQKI3F1ZXVlZF9jaHVua3NfbGltaXRfc2l6ZTogaW50CiNyZXRyeV9leHBvbmVudGlhbF9iYWNrb2ZmX2Jhc2U6IHN0cmluZwojcmV0cnlfZm9yZXZlcjogYm9vbGVhbgojcmV0cnlfbWF4X2ludGVydmFsOiBzdHJpbmcKI3JldHJ5X21heF90aW1lczogaW50CiNyZXRyeV9yYW5kb21pemU6IGJvb2xlYW4KI3JldHJ5X3NlY29uZGFyeV90aHJlc2hvbGQ6IHN0cmluZwojcmV0cnlfdGltZW91dDogc3RyaW5nCiNyZXRyeV90eXBlOiBzdHJpbmcKI3JldHJ5X3dhaXQ6IHN0cmluZwojdGFnczogc3RyaW5nCiN0aW1la2V5OiBzdHJpbmcKI3RpbWVrZXlfdXNlX3V0YzogYm9vbGVhbgojdGltZWtleV93YWl0OiBzdHJpbmcKI3RpbWVrZXlfem9uZTogc3RyaW5nCiN0b3RhbF9saW1pdF9zaXplOiBzdHJpbmcKI3R5cGU6IHN0cmluZ2A7CiAgICAgICAgZXhwZWN0KHdyYXBwZXIudm0uaW5pdGlhbEJ1ZmZlcllhbWwpLnRvU3RyaWN0RXF1YWwoeWFtbCk7CiAgICAgICAgZXhwZWN0KHdyYXBwZXIudm0uYnVmZmVyWWFtbCkudG9TdHJpY3RFcXVhbCh5YW1sKTsKICAgIH0pOwogICAgaXQoJ3Nob3VsZCBsb2FkIGN1cnJlbnQgb3V0cHV0IGJ1ZmZlciBjb25maWcgaW4gYW4gRURJVCBzY2VuYXJpbycsIGFzeW5jICgpID0+IHsKICAgICAgICBjb25zdCB3cmFwcGVyID0gbW91bnQoQmFuemFpLCB7CiAgICAgICAgICAgIGRhdGE6ICgpID0+ICh7IHNlbGVjdGVkUHJvdmlkZXI6ICdhd3NFbGFzdGljc2VhcmNoJyB9KSwKICAgICAgICAgICAgcHJvcHNEYXRhOiB7CiAgICAgICAgICAgICAgICB2YWx1ZTogewogICAgICAgICAgICAgICAgICAgIHNhdmU6IGplc3QuZm4oKSwKICAgICAgICAgICAgICAgICAgICBzcGVjOiB7IGF3c0VsYXN0aWNzZWFyY2g6IHsgYnVmZmVyOiAnI2NodW5rX2xpbWl0X3JlY29yZHM6IGludCcgfSB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG1vY2tzOiB7CiAgICAgICAgICAgICAgICAkZmV0Y2hTdGF0ZTogeyBwZW5kaW5nOiBmYWxzZSB9LAogICAgICAgICAgICAgICAgJHN0b3JlOiB7CiAgICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goYXJnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhcmcgPT09ICdjbHVzdGVyL2ZpbmQnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3V0cHV0U2NoZW1hOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBqZXN0LmZuKCk7CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBnZXR0ZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTdG9yZTogKCkgPT4gJ2N1cnJlbnRfc3RvcmUnLAogICAgICAgICAgICAgICAgICAgICAgICAnbWFuYWdlbWVudC9zY2hlbWFGb3InOiBqZXN0LmZuKCksCiAgICAgICAgICAgICAgICAgICAgICAgICdjdXJyZW50X3N0b3JlL2FsbCc6IGplc3QuZm4oKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2N1cnJlbnRfc3RvcmUvc2NoZW1hRm9yJzogamVzdC5mbigpLAogICAgICAgICAgICAgICAgICAgICAgICAnY2x1c3Rlci9hbGwnOiBqZXN0LmZuKCksCiAgICAgICAgICAgICAgICAgICAgICAgICdjbHVzdGVyL2J5SWQnOiAoKSA9PiBvdXRwdXRTY2hlbWEsCiAgICAgICAgICAgICAgICAgICAgICAgICd0eXBlLW1hcC9pc1Nwb29mZWQnOiBqZXN0LmZuKCksCiAgICAgICAgICAgICAgICAgICAgICAgICdpMThuL3QnOiBqZXN0LmZuKCkubW9ja0ltcGxlbWVudGF0aW9uKChrZXkpID0+IGtleSksCiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWVzcGFjZXM6ICgpID0+ICh7fSksCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICRyb3V0ZTogewogICAgICAgICAgICAgICAgICAgIG5hbWU6ICd3aGF0ZXZlcicsCiAgICAgICAgICAgICAgICAgICAgcXVlcnk6IHsgQVM6ICcnIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAkcm91dGVyOiB7IHJlcGxhY2U6IGplc3QuZm4oKSB9LAogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgLy8gY2FsbCBhc3luYyBmZXRjaCAtIG5lZWRlZCBmb3IgdGVzdCBhc3NlcnRpb24KICAgICAgICBhd2FpdCBCYW56YWkuZmV0Y2guY2FsbCh3cmFwcGVyLnZtKTsKICAgICAgICBleHBlY3Qod3JhcHBlci52bS5pbml0aWFsQnVmZmVyWWFtbCkudG9Db250YWluKCcjY2h1bmtfbGltaXRfcmVjb3JkczogaW50Jyk7CiAgICAgICAgZXhwZWN0KHdyYXBwZXIudm0uYnVmZmVyWWFtbCkudG9Db250YWluKCcjY2h1bmtfbGltaXRfcmVjb3JkczogaW50Jyk7CiAgICB9KTsKfSk7Cg=="},{"version":3,"file":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/logging.banzaicloud.io.output/__tests__/logging.banzaicloud.io.output.test.ts","sourceRoot":"","sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/logging.banzaicloud.io.output/__tests__/logging.banzaicloud.io.output.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { mount } from '@vue/test-utils';\nimport Banzai from '@shell/edit/logging.banzaicloud.io.output/index.vue';\n\nconst outputSchema = {\n  id:    'logging.banzaicloud.io.output',\n  type:  'schema',\n  links: {\n    collection: 'https://localhost:8005/v1/logging.banzaicloud.io.outputs',\n    self:       'https://localhost:8005/v1/schemas/logging.banzaicloud.io.output'\n  },\n  pluralName:      'logging.banzaicloud.io.outputs',\n  resourceMethods: [\n    'GET',\n    'DELETE',\n    'PUT',\n    'PATCH'\n  ],\n  _resourceFields:        null,\n  requiresResourceFields: true,\n  collectionMethods:      [\n    'GET',\n    'POST'\n  ],\n  attributes: {\n    columns: [\n      {\n        name:  'Active',\n        field: '.status.active',\n        type:  'boolean'\n      },\n      {\n        name:  'Problems',\n        field: '.status.problemsCount',\n        type:  'integer'\n      }\n    ],\n    group:      'logging.banzaicloud.io',\n    kind:       'Output',\n    namespaced: true,\n    resource:   'outputs',\n    verbs:      [\n      'delete',\n      'deletecollection',\n      'get',\n      'list',\n      'patch',\n      'create',\n      'update',\n      'watch'\n    ],\n    version: 'v1beta1'\n  },\n  _id:                   'logging.banzaicloud.io.output',\n  _group:                'logging.banzaicloud.io',\n  store:                 'cluster',\n  _schemaDefinitionsIds: {\n    self:   'io.banzaicloud.logging.v1beta1.Output',\n    others: [\n      'io.banzaicloud.logging.v1beta1.Output.spec',\n      'io.banzaicloud.logging.v1beta1.Output.spec.awsElasticsearch.buffer'\n    ]\n  },\n  schemaDefinitions: {\n    'io.banzaicloud.logging.v1beta1.Output.spec.awsElasticsearch.buffer': {\n      resourceFields: {\n        chunk_full_threshold:           { type: 'string' },\n        chunk_limit_records:            { type: 'int' },\n        chunk_limit_size:               { type: 'string' },\n        compress:                       { type: 'string' },\n        delayed_commit_timeout:         { type: 'string' },\n        disable_chunk_backup:           { type: 'boolean' },\n        disabled:                       { type: 'boolean' },\n        flush_at_shutdown:              { type: 'boolean' },\n        flush_interval:                 { type: 'string' },\n        flush_mode:                     { type: 'string' },\n        flush_thread_burst_interval:    { type: 'string' },\n        flush_thread_count:             { type: 'int' },\n        flush_thread_interval:          { type: 'string' },\n        overflow_action:                { type: 'string' },\n        path:                           { type: 'string' },\n        queue_limit_length:             { type: 'int' },\n        queued_chunks_limit_size:       { type: 'int' },\n        retry_exponential_backoff_base: { type: 'string' },\n        retry_forever:                  { type: 'boolean' },\n        retry_max_interval:             { type: 'string' },\n        retry_max_times:                { type: 'int' },\n        retry_randomize:                { type: 'boolean' },\n        retry_secondary_threshold:      { type: 'string' },\n        retry_timeout:                  { type: 'string' },\n        retry_type:                     { type: 'string' },\n        retry_wait:                     { type: 'string' },\n        tags:                           { type: 'string' },\n        timekey:                        { type: 'string' },\n        timekey_use_utc:                { type: 'boolean' },\n        timekey_wait:                   { type: 'string' },\n        timekey_zone:                   { type: 'string' },\n        total_limit_size:               { type: 'string' },\n        type:                           { type: 'string' }\n      },\n      type:        'io.banzaicloud.logging.v1beta1.Output.spec.awsElasticsearch.buffer',\n      description: ''\n    }\n  },\n  fetchResourceFields: async() => jest.fn()\n};\n\ndescribe('view: logging.banzaicloud.io.output', () => {\n  it.each([\n    ['http://localhost:3100', []],\n    ['not a proper URL', ['logging.loki.urlInvalid']],\n  ])('should validate Loki URL on save', (url, expectation) => {\n    const wrapper = mount(Banzai, {\n      data:      () => ({ selectedProvider: 'loki' }),\n      propsData: {\n        value: {\n          save: jest.fn(),\n          spec: { loki: { url } }\n        }\n      },\n      mocks: {\n        $fetchState: { pending: false },\n        $store:      {\n          dispatch: jest.fn(),\n          getters:  {\n            currentStore:              () => 'current_store',\n            'management/schemaFor':    jest.fn(),\n            'current_store/all':       jest.fn(),\n            'current_store/schemaFor': jest.fn(),\n            'cluster/all':             jest.fn(),\n            'type-map/isSpoofed':      jest.fn(),\n            'i18n/t':                  jest.fn().mockImplementation((key: string) => key),\n            namespaces:                () => ({}),\n          }\n        },\n        $route: {\n          name:  'whatever',\n          query: { AS: '' }\n        },\n        $router: { replace: jest.fn() },\n      }\n    });\n    const fakeDone = jest.fn();\n\n    (wrapper.vm as any).saveSettings(fakeDone);\n\n    expect((wrapper.vm as any).errors).toStrictEqual(expectation);\n  });\n\n  it('should load the default YAML data for output buffer config (from schema) in a CREATE scenario', async() => {\n    const wrapper = mount(Banzai, {\n      data:      () => ({ selectedProvider: 'awsElasticsearch' }),\n      propsData: {\n        value: {\n          save: jest.fn(),\n          spec: {}\n        }\n      },\n      mocks: {\n        $fetchState: { pending: false },\n        $store:      {\n          dispatch(arg: any) {\n            if (arg === 'cluster/find') {\n              return outputSchema;\n            }\n\n            return jest.fn();\n          },\n          getters: {\n            currentStore:              () => 'current_store',\n            'management/schemaFor':    jest.fn(),\n            'current_store/all':       jest.fn(),\n            'current_store/schemaFor': jest.fn(),\n            'cluster/all':             () => [outputSchema],\n            'cluster/byId':            () => outputSchema,\n            'type-map/isSpoofed':      jest.fn(),\n            'i18n/t':                  jest.fn().mockImplementation((key: string) => key),\n            namespaces:                () => ({}),\n          }\n        },\n        $route: {\n          name:  'whatever',\n          query: { AS: '' }\n        },\n        $router: { replace: jest.fn() },\n      }\n    });\n\n    // call async fetch - needed for test assertion\n    await Banzai.fetch.call(wrapper.vm);\n\n    const yaml = `#chunk_limit_records: int\n#chunk_limit_size: string\n#compress: string\n#delayed_commit_timeout: string\n#disable_chunk_backup: boolean\n#disabled: boolean\n#flush_at_shutdown: boolean\n#flush_interval: string\n#flush_mode: string\n#flush_thread_burst_interval: string\n#flush_thread_count: int\n#flush_thread_interval: string\n#overflow_action: string\n#path: string\n#queue_limit_length: int\n#queued_chunks_limit_size: int\n#retry_exponential_backoff_base: string\n#retry_forever: boolean\n#retry_max_interval: string\n#retry_max_times: int\n#retry_randomize: boolean\n#retry_secondary_threshold: string\n#retry_timeout: string\n#retry_type: string\n#retry_wait: string\n#tags: string\n#timekey: string\n#timekey_use_utc: boolean\n#timekey_wait: string\n#timekey_zone: string\n#total_limit_size: string\n#type: string`;\n\n    expect(wrapper.vm.initialBufferYaml).toStrictEqual(yaml);\n    expect(wrapper.vm.bufferYaml).toStrictEqual(yaml);\n  });\n\n  it('should load current output buffer config in an EDIT scenario', async() => {\n    const wrapper = mount(Banzai, {\n      data:      () => ({ selectedProvider: 'awsElasticsearch' }),\n      propsData: {\n        value: {\n          save: jest.fn(),\n          spec: { awsElasticsearch: { buffer: '#chunk_limit_records: int' } }\n        }\n      },\n      mocks: {\n        $fetchState: { pending: false },\n        $store:      {\n          dispatch(arg: any) {\n            if (arg === 'cluster/find') {\n              return outputSchema;\n            }\n\n            return jest.fn();\n          },\n          getters: {\n            currentStore:              () => 'current_store',\n            'management/schemaFor':    jest.fn(),\n            'current_store/all':       jest.fn(),\n            'current_store/schemaFor': jest.fn(),\n            'cluster/all':             jest.fn(),\n            'cluster/byId':            () => outputSchema,\n            'type-map/isSpoofed':      jest.fn(),\n            'i18n/t':                  jest.fn().mockImplementation((key: string) => key),\n            namespaces:                () => ({}),\n          }\n        },\n        $route: {\n          name:  'whatever',\n          query: { AS: '' }\n        },\n        $router: { replace: jest.fn() },\n      }\n    });\n\n    // call async fetch - needed for test assertion\n    await Banzai.fetch.call(wrapper.vm);\n\n    expect(wrapper.vm.initialBufferYaml).toContain('#chunk_limit_records: int');\n    expect(wrapper.vm.bufferYaml).toContain('#chunk_limit_records: int');\n  });\n});\n"]}]}