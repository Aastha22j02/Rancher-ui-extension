{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/susecon-2024-ext-demo/pkg/kubecost/kubecostModule.ts","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/pkg/kubecost/kubecostModule.ts","mtime":1726080728880},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgQ0FUQUxPRyB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwphc3luYyBmdW5jdGlvbiBpc0t1YmVjb3N0SW5zdGFsbGVkKGN0eCkgewogICAgaWYgKGN0eC4kc3RvcmUuZ2V0dGVyc1tgY2x1c3Rlci9jYW5MaXN0YF0oQ0FUQUxPRy5BUFApKSB7CiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgY3R4LiRzdG9yZS5kaXNwYXRjaChgY2x1c3Rlci9maW5kQWxsYCwgeyB0eXBlOiBDQVRBTE9HLkFQUCB9KSB8fCBbXTsKICAgICAgICBjb25zdCBhcHAgPSByZXMuZmluZCgoYXBwKSA9PiBhcHAuaWQuaW5jbHVkZXMoJ2t1YmVjb3N0JykpOwogICAgICAgIHJldHVybiBhcHA7CiAgICB9CiAgICByZXR1cm4gbnVsbDsKfQpleHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0S3ViZWNvc3REYXRhKG9wdGlvbnMpIHsKICAgIHZhciBfYSwgX2I7CiAgICBjb25zdCBrdWJlY29zdEFwcCA9IGF3YWl0IGlzS3ViZWNvc3RJbnN0YWxsZWQob3B0aW9ucy5jdHgpOwogICAgaWYgKCFrdWJlY29zdEFwcCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHR5cGU6ICdlcnJvcicsCiAgICAgICAgICAgIG1zZzogb3B0aW9ucy5jdHgudCgna3ViZWNvc3QuYXBwTm90SW5zdGFsbGVkJykKICAgICAgICB9OwogICAgfQogICAgY29uc3QgdGFyZ2V0TmFtZXNwYWNlID0gb3B0aW9ucy50YXJnZXROYW1lc3BhY2U7CiAgICBjb25zdCBwcmVmaXggPSBgL2s4cy9jbHVzdGVycy8ke29wdGlvbnMuY2x1c3RlcklkfWA7CiAgICBjb25zdCBuYW1lc3BhY2UgPSAoKF9hID0ga3ViZWNvc3RBcHAubWV0YWRhdGEpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5uYW1lc3BhY2UpIHx8ICdrdWJlY29zdCc7CiAgICBjb25zdCBzZXJ2aWNlID0gJ2h0dHA6Y29zdC1hbmFseXplcjo5MDkwJzsgLy8gaGFyZGNvZGVkIGZvciBub3cuLi4KICAgIGNvbnN0IHBhdGggPSBgbW9kZWwvYWxsb2NhdGlvbj93aW5kb3c9JHtvcHRpb25zLndpbmRvdyB8fCAnMWQnfSZhZ2dyZWdhdGU9JHtvcHRpb25zLmFnZ3JlZ2F0ZSB8fCAnbmFtZXNwYWNlJ30mYWNjdW11bGF0ZT10cnVlJmNoYXJ0VHlwZT1jb3N0b3ZlcnRpbWUmY29zdFVuaXQ9Y3VtdWxhdGl2ZSZleHRlcm5hbD1mYWxzZSZmaWx0ZXI9JmlkbGU9dHJ1ZSZpZGxlQnlOb2RlPWZhbHNlJmluY2x1ZGVTaGFyZWRDb3N0QnJlYWtkb3duPWZhbHNlJnNoYXJlQ29zdD0wJnNoYXJlSWRsZT1mYWxzZSZzaGFyZUxhYmVscz0mc2hhcmVOYW1lc3BhY2VzPSZzaGFyZVNwbGl0PXdlaWdodGVkJnNoYXJlVGVuYW5jeUNvc3RzPWZhbHNlYDsKICAgIGNvbnN0IHVybCA9IGAke3ByZWZpeH0vYXBpL3YxL25hbWVzcGFjZXMvJHtuYW1lc3BhY2V9L3NlcnZpY2VzLyR7c2VydmljZX0vcHJveHkvJHtwYXRofWA7CiAgICB0cnkgewogICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IG9wdGlvbnMuY3R4LiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9yZXF1ZXN0JywgeyB1cmwsIHJlZGlyZWN0VW5hdXRob3JpemVkOiBmYWxzZSB9KTsKICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICBjb25zdCBkYXRhUG9pbnRzID0gKF9iID0gcmVzLmRhdGEpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYlswXTsKICAgICAgICAgICAgY29uc3QgbW9kZWwgPSBkYXRhUG9pbnRzID8gZGF0YVBvaW50c1t0YXJnZXROYW1lc3BhY2UgfHwgJ2NsdXN0ZXItb25lJ10gOiBudWxsOwogICAgICAgICAgICBpZiAoZGF0YVBvaW50cyAmJiBtb2RlbCkgewogICAgICAgICAgICAgICAgY29uc3QgY29zdHMgPSB7CiAgICAgICAgICAgICAgICAgICAgY3B1Q29zdDogbW9kZWwuY3B1Q29zdC50b0ZpeGVkKDIpLAogICAgICAgICAgICAgICAgICAgIHJhbUNvc3Q6IG1vZGVsLnJhbUNvc3QudG9GaXhlZCgyKSwKICAgICAgICAgICAgICAgICAgICBwdkNvc3Q6IG1vZGVsLnB2Q29zdC50b0ZpeGVkKDIpLAogICAgICAgICAgICAgICAgICAgIGdwdUNvc3Q6IG1vZGVsLmdwdUNvc3QudG9GaXhlZCgyKSwKICAgICAgICAgICAgICAgICAgICBuZXR3b3JrQ29zdDogbW9kZWwubmV0d29ya0Nvc3QudG9GaXhlZCgyKSwKICAgICAgICAgICAgICAgICAgICBsYkNvc3Q6IG1vZGVsLmxvYWRCYWxhbmNlckNvc3QudG9GaXhlZCgyKSwKICAgICAgICAgICAgICAgICAgICB0b3RhbENvc3Q6IG1vZGVsLnRvdGFsQ29zdC50b0ZpeGVkKDIpCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgY29uc3QgY29zdHNEYXRhID0gT2JqZWN0LmVudHJpZXMoY29zdHMpLm1hcCgoW2tleSwgdmFsdWVdKSA9PiAoewogICAgICAgICAgICAgICAgICAgIG5hbWU6IG9wdGlvbnMuY3R4LnQoYGt1YmVjb3N0LmNvc3RzLiR7a2V5fWApLAogICAgICAgICAgICAgICAgICAgIHZhbHVlOiBgJCR7dmFsdWV9YCwKICAgICAgICAgICAgICAgICAgICByYXdWYWx1ZTogdmFsdWUKICAgICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICAgIHJldHVybiBjb3N0c0RhdGE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdpbmZvJywKICAgICAgICAgICAgICAgICAgICBtc2c6IG9wdGlvbnMuY3R4LnQoJ2t1YmVjb3N0Lm5vRGF0YUF2YWlsYWJsZScpCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdHlwZTogJ2Vycm9yJywKICAgICAgICAgICAgbXNnOiBlcnJvci5tZXNzYWdlCiAgICAgICAgfTsKICAgIH0KICAgIHJldHVybiB7CiAgICAgICAgdHlwZTogJ2Vycm9yJywKICAgICAgICBtc2c6IG9wdGlvbnMuY3R4LnQoJ2t1YmVjb3N0LnVua25vd25FcnJvcicpCiAgICB9Owp9Cg=="},{"version":3,"file":"/home/ubuntu/susecon-2024-ext-demo/pkg/kubecost/kubecostModule.ts","sourceRoot":"","sources":["/home/ubuntu/susecon-2024-ext-demo/pkg/kubecost/kubecostModule.ts"],"names":[],"mappings":"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","sourcesContent":["import { CATALOG } from '@shell/config/types';\n\ninterface kubecostDataItem {\n  name: string;\n  value: string;\n}\n\ntype kubecostData = kubecostDataItem[];\n\ninterface kubecostDataOptions {\n  targetNamespace?: string;\n  clusterId: string;\n  namespace?: string;\n  aggregate?: string;\n  window?: string;\n  ctx:any;\n}\n\ninterface kubecostMsg {\n  type: string,\n  msg: string\n}\n\nasync function isKubecostInstalled(ctx: any):Promise<any> {\n  if (ctx.$store.getters[`cluster/canList`](CATALOG.APP)) {\n    const res = await ctx.$store.dispatch(`cluster/findAll`, { type: CATALOG.APP }) || [];\n    const app = res.find((app: any) => app.id.includes('kubecost'));\n\n    return app;\n  }\n\n  return null;\n}\n\nexport async function getKubecostData(options:kubecostDataOptions):Promise<kubecostData | kubecostMsg> {\n  const kubecostApp = await isKubecostInstalled(options.ctx);\n\n  if (!kubecostApp) {\n    return {\n      type: 'error',\n      msg:  options.ctx.t('kubecost.appNotInstalled')\n    };\n  }\n\n  const targetNamespace = options.targetNamespace;\n  const prefix = `/k8s/clusters/${ options.clusterId }`;\n  const namespace = kubecostApp.metadata?.namespace || 'kubecost';\n  const service = 'http:cost-analyzer:9090'; // hardcoded for now...\n\n  const path = `model/allocation?window=${ options.window || '1d' }&aggregate=${ options.aggregate || 'namespace' }&accumulate=true&chartType=costovertime&costUnit=cumulative&external=false&filter=&idle=true&idleByNode=false&includeSharedCostBreakdown=false&shareCost=0&shareIdle=false&shareLabels=&shareNamespaces=&shareSplit=weighted&shareTenancyCosts=false`;\n  const url = `${ prefix }/api/v1/namespaces/${ namespace }/services/${ service }/proxy/${ path }`;\n\n  try {\n    const res = await options.ctx.$store.dispatch('cluster/request', { url, redirectUnauthorized: false });\n\n    if (res.code === 200) {\n      const dataPoints = res.data?.[0];\n      const model = dataPoints ? dataPoints[targetNamespace || 'cluster-one'] : null;\n\n      if (dataPoints && model) {\n        const costs = {\n          cpuCost:     model.cpuCost.toFixed(2),\n          ramCost:     model.ramCost.toFixed(2),\n          pvCost:      model.pvCost.toFixed(2),\n          gpuCost:     model.gpuCost.toFixed(2),\n          networkCost: model.networkCost.toFixed(2),\n          lbCost:      model.loadBalancerCost.toFixed(2),\n          totalCost:   model.totalCost.toFixed(2)\n        };\n\n        const costsData = Object.entries(costs).map(([key, value]) => ({\n          name:     options.ctx.t(`kubecost.costs.${ key }`),\n          value:    `$${ value }`,\n          rawValue: value\n        }));\n\n        return costsData;\n      } else {\n        return {\n          type: 'info',\n          msg:  options.ctx.t('kubecost.noDataAvailable')\n        };\n      }\n    }\n  } catch (error: any) {\n    return {\n      type: 'error',\n      msg:  error.message\n    };\n  }\n\n  return {\n    type: 'error',\n    msg:  options.ctx.t('kubecost.unknownError')\n  };\n}\n"]}]}