{"remainingRequest":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/store/type-map.utils.ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/store/type-map.utils.ts","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/home/ubuntu/suseconf/node_modules/@rancher/shell/store/type-map.utils.ts","sourceRoot":"","sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/store/type-map.utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { SchemaAttribute, SchemaAttributeColumn } from '@shell/plugins/steve/schema';\nimport { TableColumn } from '@shell/types/store/type-map';\nimport { VuexStoreGetters } from '@shell/types/store/vuex';\nimport { findBy, insertAt, removeObject } from '@shell/utils/array';\nimport { COUNT } from '@shell/config/types';\nimport { ActionFindAllArgs } from '@shell/types/store/dashboard-store.types';\n\nconst FIELD_REGEX = /^\\$\\.metadata\\.fields\\[([0-9]*)\\]/;\n\ntype StoreColumns = { [schemaId: string]: TableColumn[]}\n\n/**\n * Create the headers used in lists to show a resource\n *\n * These could be\n * - Pre-configured via the product (either non-paginated or paginated)\n * - Generated dynamically from schema's attributes.columns\n *\n * There's also some additional ones like state, age, and at least one of name or id\n *\n * The order of these are massaged as well\n */\nexport function createHeaders(\n  ctx: {\n    getters: VuexStoreGetters,\n    rootGetters: VuexStoreGetters,\n    state: any,\n  },\n  opt: {\n    headers: StoreColumns,\n    typeOptions: any,\n    schema: any, // Once the schema-diet changes go in this can be typed\n    columns: {\n      /**\n       * Always show this column (if showState is true)\n       */\n      state: TableColumn,\n      /**\n        * If dynamically creating columns, use specific column for name, if required\n        */\n      name?: TableColumn,\n      /**\n        * If dynamically creating columns, use specific column for id, if required\n        */\n      id?: TableColumn\n      /**\n        * If dynamically creating columns, use specific column for namespace, if required\n        */\n      namespace: TableColumn,\n      /**\n        * If dynamically creating columns, use specific column for age, if required\n        */\n      age: TableColumn,\n    },\n    pagination: boolean\n  }): TableColumn[] {\n  const {\n    headers, typeOptions, schema, columns, pagination\n  } = opt;\n  const {\n    state: stateColumn, name: nameColumn, namespace: namespaceColumn, id: idColumn, age: ageColumn\n  } = columns;\n  const { rootGetters } = ctx;\n  const out = typeOptions.showState ? [stateColumn] : [];\n  const attributes = (schema.attributes as SchemaAttribute) || {};\n  const columnsFromSchema = attributes.columns || [];\n\n  // A specific list has been provided\n  if ( headers?.[schema.id]?.length ) {\n    return headers[schema.id].map((entry: any) => {\n      if ( typeof entry === 'string' ) {\n        const col = findBy(columnsFromSchema, 'name', entry);\n\n        if ( col ) {\n          return headerFromSchemaCol(col, rootGetters, pagination, ageColumn);\n        } else {\n          return null;\n        }\n      } else {\n        return entry;\n      }\n    }).filter((col: SchemaAttributeColumn) => !!col);\n  }\n\n  // Otherwise make one up from schema\n  let hasName = false;\n  const namespaced = attributes.namespaced || false;\n\n  for ( const col of columnsFromSchema ) {\n    if ( col.format === 'name' ) {\n      hasName = true;\n      out.push(nameColumn || headerFromSchemaCol(col, rootGetters, pagination, ageColumn));\n      if ( namespaced ) {\n        out.push(namespaceColumn);\n      }\n    } else {\n      out.push(headerFromSchemaCol(col, rootGetters, pagination, ageColumn));\n    }\n  }\n\n  // Always try to have an identifier\n  if ( !hasName ) {\n    insertAt(out, 1, idColumn || nameColumn);\n    if ( namespaced ) {\n      insertAt(out, 2, namespaceColumn);\n    }\n  }\n\n  // Age always goes last\n  const ageColumnActual = out.find((o) => o.name.toLocaleLowerCase() === 'age');\n\n  if ( ageColumnActual ) {\n    removeObject(out, ageColumnActual);\n    if ( typeOptions.showAge ) {\n      out.push(ageColumnActual);\n    }\n  }\n\n  return out;\n}\n\n/**\n * Given a schema's attribute.column value create a header\n */\nexport function headerFromSchemaCol(col: SchemaAttributeColumn, rootGetters: VuexStoreGetters, pagination: boolean, ageColumn: TableColumn): TableColumn {\n  let formatter, width, formatterOpts;\n\n  if ( (col.format === '' || col.format === 'date') && col.name === 'Age' && ageColumn ) {\n    return ageColumn;\n  }\n\n  if ( col.format === 'date' || col.type === 'date' ) {\n    formatter = 'Date';\n    width = 120;\n    formatterOpts = { multiline: true };\n  }\n\n  if ( col.type === 'number' || col.type === 'int' ) {\n    formatter = 'Number';\n  }\n\n  const colName = col.name.includes(' ') ? col.name.split(' ').map((word) => word.charAt(0).toUpperCase() + word.substring(1) ).join('') : col.name;\n\n  const exists = rootGetters['i18n/exists'];\n  const t = rootGetters['i18n/t'];\n  const labelKey = `tableHeaders.${ colName.charAt(0).toLowerCase() + colName.slice(1) }`;\n  const description = col.description || '';\n  const tooltip = description && description[description.length - 1] === '.' ? description.slice(0, -1) : description;\n\n  const path = rowValueGetter(col, false) as string;\n  // If we're not paginating use a function to get the value, otherwise use the string path\n  const altPath = pagination ? path : rowValueGetter(col, true) as Function;\n\n  return {\n    name:   col.name.toLowerCase(),\n    label:  exists(labelKey) ? t(labelKey) : col.name,\n    value:  altPath,\n    sort:   [path],\n    search: path,\n    formatter,\n    formatterOpts,\n    width,\n    tooltip\n  };\n}\n\nexport function rowValueGetter(col: SchemaAttributeColumn, asFn = true): string | ((row: any) => string) {\n  // 'field' comes from the schema - typically it is of the form $.metadata.field[N]\n  // We will use JsonPath to look up this value, which is costly - so if we can detect this format\n  // Use a more efficient function to get the value\n  const value = col.field.startsWith('.') ? `$${ col.field }` : col.field;\n  const found = value.match(FIELD_REGEX);\n\n  if (found && found.length === 2) {\n    const fieldIndex = parseInt(found[1], 10);\n\n    if (asFn) {\n      return (row: any) => row.metadata?.fields?.[fieldIndex];\n    }\n\n    return `metadata.fields.${ fieldIndex }`;\n  }\n\n  return value;\n}\n\ntype conditionalDepaginateArgs ={\n  ctx: { rootGetters: VuexStoreGetters},\n  args: { type: string, opt: ActionFindAllArgs},\n};\ntype conditionalDepaginateFn = (args: conditionalDepaginateArgs) => boolean\n\n/**\n * Conditionally determine if a resource should use naive kube pagination api to fetch all results\n * (not just first page)\n */\nexport const conditionalDepaginate = (\n  depaginate?: conditionalDepaginateFn | boolean,\n  depaginateArgs?: conditionalDepaginateArgs\n): boolean => {\n  if (typeof depaginate === 'function') {\n    return !!depaginateArgs ? depaginate(depaginateArgs) : false;\n  }\n\n  return depaginate as boolean;\n};\n\n/**\n * Setup a function that will determine if a resource should use native kube pagination api to fetch all resources\n * (not just the first page)\n */\nexport const configureConditionalDepaginate = (\n  { maxResourceCount, isNorman = false }: { maxResourceCount: number, isNorman: boolean },\n): conditionalDepaginateFn => {\n  return (fnArgs: conditionalDepaginateArgs ): boolean => {\n    const { rootGetters } = fnArgs.ctx;\n    const { type } = fnArgs.args;\n    const safeType = isNorman ? `management.cattle.io.${ type }` : type;\n\n    const inStore = rootGetters['currentStore'](safeType);\n    const resourceCounts = rootGetters[`${ inStore }/all`](COUNT)[0]?.counts[safeType];\n    const resourceCount = resourceCounts?.summary?.count;\n\n    return resourceCount !== undefined ? resourceCount < maxResourceCount : false;\n  };\n};\n"]}]}