{"remainingRequest":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/plugins/steve/projectAndNamespaceFiltering.utils.ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/plugins/steve/projectAndNamespaceFiltering.utils.ts","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgTkFNRVNQQUNFX0ZJTFRFUl9OU19GVUxMX1BSRUZJWCwgTkFNRVNQQUNFX0ZJTFRFUl9QX0ZVTExfUFJFRklYIH0gZnJvbSAnQHNoZWxsL3V0aWxzL25hbWVzcGFjZS1maWx0ZXInOwppbXBvcnQgeyBnZXRQZXJmb3JtYW5jZVNldHRpbmcgfSBmcm9tICdAc2hlbGwvdXRpbHMvc2V0dGluZ3MnOwpjbGFzcyBQcm9qZWN0QW5kTmFtZXNwYWNlRmlsdGVyaW5nIHsKICAgIC8qKgogICAgICogRG9lcyB0aGUgcmVxdWVzdCBgb3B0YCBkZWZpbml0aW9uIHJlcXVpcmUgcmVzb3VyY2VzIGFyZSBmZXRjaGVkIGZyb20gYSBzcGVjaWZpYyBzZXQgbmFtZXNwYWNlcy9wcm9qZWN0cz8KICAgICAqLwogICAgaXNBcHBsaWNhYmxlKG9wdCkgewogICAgICAgIHJldHVybiBBcnJheS5pc0FycmF5KG9wdC5uYW1lc3BhY2VkKTsKICAgIH0KICAgIGlzRW5hYmxlZChyb290R2V0dGVycykgewogICAgICAgIHZhciBfYTsKICAgICAgICBjb25zdCBjdXJyZW50UHJvZHVjdCA9IHJvb3RHZXR0ZXJzWydjdXJyZW50UHJvZHVjdCddOwogICAgICAgIC8vIE9ubHkgZW5hYmxlIGZvciB0aGUgY2x1c3RlciBzdG9yZSBhdCB0aGUgbW9tZW50LiBJbiB0aGVvcnkgdGhpcyBzaG91bGQgd29yayBpbiBtYW5hZ2VtZW50IGFzIHdlbGwsIGFzIHRoZXkncmUgYm90aCAnc3RldmUnIHN0b3JlcwogICAgICAgIGlmICgoY3VycmVudFByb2R1Y3QgPT09IG51bGwgfHwgY3VycmVudFByb2R1Y3QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGN1cnJlbnRQcm9kdWN0LmluU3RvcmUpICE9PSAnY2x1c3RlcicpIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICBpZiAoY3VycmVudFByb2R1Y3QgPT09IG51bGwgfHwgY3VycmVudFByb2R1Y3QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGN1cnJlbnRQcm9kdWN0LnNob3dXb3Jrc3BhY2VTd2l0Y2hlcikgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGNvbnN0IHBlcmZDb25maWcgPSBnZXRQZXJmb3JtYW5jZVNldHRpbmcocm9vdEdldHRlcnMpOwogICAgICAgIGlmICghKChfYSA9IHBlcmZDb25maWcuZm9yY2VOc0ZpbHRlclYyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZW5hYmxlZCkpIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIC8qKgogICAgICogQ2hlY2sgaWYgYG9wdGAgcmVxdWlyZXMgcmVzb3VyY2VzIGZyb20gc3BlY2lmaWMgbnMvcHJvamVjdHMsIGlmIHNvIHJldHVybiB0aGUgcmVxdWlyZWQgcXVlcnkgcGFyYW0gKHg9eSkKICAgICAqLwogICAgY2hlY2tBbmRDcmVhdGVQYXJhbShvcHQpIHsKICAgICAgICBpZiAoIXRoaXMuaXNBcHBsaWNhYmxlKG9wdCkpIHsKICAgICAgICAgICAgcmV0dXJuICcnOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVQYXJhbShvcHQubmFtZXNwYWNlZCk7CiAgICB9CiAgICBjcmVhdGVQYXJhbShuYW1lc3BhY2VGaWx0ZXIpIHsKICAgICAgICBpZiAoIW5hbWVzcGFjZUZpbHRlciB8fCAhbmFtZXNwYWNlRmlsdGVyLmxlbmd0aCkgewogICAgICAgICAgICByZXR1cm4gJyc7CiAgICAgICAgfQogICAgICAgIGNvbnN0IG5hbWVzcGFjZXMgPSBuYW1lc3BhY2VGaWx0ZXIucmVkdWNlKChyZXMsIG4pID0+IHsKICAgICAgICAgICAgY29uc3QgbmFtZSA9IG4KICAgICAgICAgICAgICAgIC5yZXBsYWNlKE5BTUVTUEFDRV9GSUxURVJfTlNfRlVMTF9QUkVGSVgsICcnKQogICAgICAgICAgICAgICAgLnJlcGxhY2UoTkFNRVNQQUNFX0ZJTFRFUl9QX0ZVTExfUFJFRklYLCAnJyk7CiAgICAgICAgICAgIGlmIChuYW1lLnN0YXJ0c1dpdGgoJy0nKSkgewogICAgICAgICAgICAgICAgcmVzLmV4Y2x1ZGUucHVzaChuLnN1YnN0cmluZygxLCBuLmxlbmd0aCkpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgcmVzLmluY2x1ZGUucHVzaChuYW1lKTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzOwogICAgICAgIH0sIHsgaW5jbHVkZTogW10sIGV4Y2x1ZGU6IFtdIH0pOwogICAgICAgIGxldCByZXMgPSAnJzsKICAgICAgICBpZiAobmFtZXNwYWNlcy5pbmNsdWRlLmxlbmd0aCkgewogICAgICAgICAgICByZXMgPSBgJHtQcm9qZWN0QW5kTmFtZXNwYWNlRmlsdGVyaW5nLnBhcmFtfT0ke25hbWVzcGFjZXMuaW5jbHVkZS5qb2luKCcsJyl9YDsKICAgICAgICB9CiAgICAgICAgaWYgKG5hbWVzcGFjZXMuZXhjbHVkZS5sZW5ndGgpIHsKICAgICAgICAgICAgcmVzID0gYCR7UHJvamVjdEFuZE5hbWVzcGFjZUZpbHRlcmluZy5wYXJhbX0hPSR7bmFtZXNwYWNlcy5leGNsdWRlLmpvaW4oJywnKX1gOwogICAgICAgIH0KICAgICAgICByZXR1cm4gcmVzOwogICAgfQp9ClByb2plY3RBbmROYW1lc3BhY2VGaWx0ZXJpbmcucGFyYW0gPSAncHJvamVjdHNvcm5hbWVzcGFjZXMnOwpleHBvcnQgZGVmYXVsdCBuZXcgUHJvamVjdEFuZE5hbWVzcGFjZUZpbHRlcmluZygpOwo="},{"version":3,"file":"/home/ubuntu/suseconf/node_modules/@rancher/shell/plugins/steve/projectAndNamespaceFiltering.utils.ts","sourceRoot":"","sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/plugins/steve/projectAndNamespaceFiltering.utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,+BAA+B,EAAE,8BAA8B,EAAE,MAAM,+BAA+B,CAAC;AAChH,OAAO,EAAE,qBAAqB,EAAE,MAAM,uBAAuB,CAAC;AAG9D,MAAM,4BAA4B;IAGhC;;OAEG;IACH,YAAY,CAAC,GAAsB;QACjC,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC;IAED,SAAS,CAAC,WAAgB;;QACxB,MAAM,cAAc,GAAG,WAAW,CAAC,gBAAgB,CAAC,CAAC;QAErD,oIAAoI;QACpI,IAAI,CAAA,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,OAAO,MAAK,SAAS,EAAE;YACzC,OAAO,KAAK,CAAC;SACd;QAED,IAAI,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,qBAAqB,EAAE;YACzC,OAAO,KAAK,CAAC;SACd;QAED,MAAM,UAAU,GAAG,qBAAqB,CAAC,WAAW,CAAC,CAAC;QAEtD,IAAI,CAAC,CAAA,MAAA,UAAU,CAAC,eAAe,0CAAE,OAAO,CAAA,EAAE;YACxC,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,mBAAmB,CAAC,GAAsB;QACxC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;YAC3B,OAAO,EAAE,CAAC;SACX;QAED,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;IAEM,WAAW,CAAC,eAAqC;QACtD,IAAI,CAAC,eAAe,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;YAC/C,OAAO,EAAE,CAAC;SACX;QAED,MAAM,UAAU,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;YACnD,MAAM,IAAI,GAAG,CAAC;iBACX,OAAO,CAAC,+BAA+B,EAAE,EAAE,CAAC;iBAC5C,OAAO,CAAC,8BAA8B,EAAE,EAAE,CAAC,CAAC;YAE/C,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBACxB,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aAC5C;iBAAM;gBACL,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACxB;YAED,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAAE,OAAO,EAAE,EAAc,EAAE,OAAO,EAAE,EAAc,EAAE,CAAC,CAAC;QAEzD,IAAI,GAAG,GAAG,EAAE,CAAC;QAEb,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE;YAC7B,GAAG,GAAG,GAAI,4BAA4B,CAAC,KAAM,IAAK,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAE,EAAE,CAAC;SACnF;QAED,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE;YAC7B,GAAG,GAAG,GAAI,4BAA4B,CAAC,KAAM,KAAM,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAE,EAAE,CAAC;SACpF;QAED,OAAO,GAAG,CAAC;IACb,CAAC;;AAvEM,kCAAK,GAAG,sBAAsB,CAAA;AA0EvC,eAAe,IAAI,4BAA4B,EAAE,CAAC","sourcesContent":["import { NAMESPACE_FILTER_NS_FULL_PREFIX, NAMESPACE_FILTER_P_FULL_PREFIX } from '@shell/utils/namespace-filter';\nimport { getPerformanceSetting } from '@shell/utils/settings';\nimport { ActionFindAllArgs } from '@shell/types/store/dashboard-store.types';\n\nclass ProjectAndNamespaceFiltering {\n  static param = 'projectsornamespaces'\n\n  /**\n   * Does the request `opt` definition require resources are fetched from a specific set namespaces/projects?\n   */\n  isApplicable(opt: ActionFindAllArgs): boolean {\n    return Array.isArray(opt.namespaced);\n  }\n\n  isEnabled(rootGetters: any): boolean {\n    const currentProduct = rootGetters['currentProduct'];\n\n    // Only enable for the cluster store at the moment. In theory this should work in management as well, as they're both 'steve' stores\n    if (currentProduct?.inStore !== 'cluster') {\n      return false;\n    }\n\n    if (currentProduct?.showWorkspaceSwitcher) {\n      return false;\n    }\n\n    const perfConfig = getPerformanceSetting(rootGetters);\n\n    if (!perfConfig.forceNsFilterV2?.enabled) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Check if `opt` requires resources from specific ns/projects, if so return the required query param (x=y)\n   */\n  checkAndCreateParam(opt: ActionFindAllArgs): string {\n    if (!this.isApplicable(opt)) {\n      return '';\n    }\n\n    return this.createParam(opt.namespaced);\n  }\n\n  public createParam(namespaceFilter: string[] | undefined): string {\n    if (!namespaceFilter || !namespaceFilter.length) {\n      return '';\n    }\n\n    const namespaces = namespaceFilter.reduce((res, n) => {\n      const name = n\n        .replace(NAMESPACE_FILTER_NS_FULL_PREFIX, '')\n        .replace(NAMESPACE_FILTER_P_FULL_PREFIX, '');\n\n      if (name.startsWith('-')) {\n        res.exclude.push(n.substring(1, n.length));\n      } else {\n        res.include.push(name);\n      }\n\n      return res;\n    }, { include: [] as string[], exclude: [] as string[] });\n\n    let res = '';\n\n    if (namespaces.include.length) {\n      res = `${ ProjectAndNamespaceFiltering.param }=${ namespaces.include.join(',') }`;\n    }\n\n    if (namespaces.exclude.length) {\n      res = `${ ProjectAndNamespaceFiltering.param }!=${ namespaces.exclude.join(',') }`;\n    }\n\n    return res;\n  }\n}\n\nexport default new ProjectAndNamespaceFiltering();\n"]}]}