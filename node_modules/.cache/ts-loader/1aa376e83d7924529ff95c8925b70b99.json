{"remainingRequest":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/__tests__/service.test.ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/__tests__/service.test.ts","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgc2hhbGxvd01vdW50IH0gZnJvbSAnQHZ1ZS90ZXN0LXV0aWxzJzsKaW1wb3J0IHsgX0NMT05FIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9xdWVyeS1wYXJhbXMnOwppbXBvcnQgU2VydmljZVBhZ2UgZnJvbSAnQHNoZWxsL2VkaXQvc2VydmljZS52dWUnOwpjb25zdCBjcmVhdGVFZGl0Vmlld01vY2sgPSB7CiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7IGVycm9yczogW10gfTsKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIGlzQ3JlYXRlOiAoKSA9PiBmYWxzZSwKICAgICAgICBpc0VkaXQ6ICgpID0+IHRydWUsCiAgICAgICAgaXNWaWV3OiAoKSA9PiBmYWxzZSwKICAgICAgICBzY2hlbWE6ICgpID0+ICh7fSksCiAgICAgICAgaXNOYW1lc3BhY2VkOiAoKSA9PiBmYWxzZSwKICAgICAgICBsYWJlbHM6IHsKICAgICAgICAgICAgZ2V0OiBqZXN0LmZuKCgpID0+ICh7fSkpLAogICAgICAgICAgICBzZXQ6IGplc3QuZm4oKSwKICAgICAgICB9LAogICAgICAgIGFubm90YXRpb25zOiB7CiAgICAgICAgICAgIGdldDogamVzdC5mbigoKSA9PiAoe30pKSwKICAgICAgICAgICAgc2V0OiBqZXN0LmZuKCksCiAgICAgICAgfSwKICAgICAgICBkb25lUm91dGU6ICgpID0+ICdtb2NrZWRSb3V0ZScsCiAgICAgICAgZG9uZVBhcmFtczogKCkgPT4gKHt9KSwKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgZG9uZTogamVzdC5mbigpLAogICAgICAgIGNvbmZsaWN0OiBqZXN0LmZuKCgpID0+IFByb21pc2UucmVzb2x2ZShbXSkpLAogICAgICAgIHNhdmU6IGplc3QuZm4oKCkgPT4gUHJvbWlzZS5yZXNvbHZlKCkpLAogICAgICAgIGFjdHVhbGx5U2F2ZTogamVzdC5mbigoKSA9PiBQcm9taXNlLnJlc29sdmUoKSksCiAgICAgICAgc2V0RXJyb3JzOiBqZXN0LmZuKCkKICAgIH0KfTsKY29uc3QgZm9ybVZhbGlkYXRpb25Nb2NrID0ge307CmRlc2NyaWJlKCdzZXJ2aWNlIGVkaXQnLCAoKSA9PiB7CiAgICBsZXQgd3JhcHBlcjsKICAgIGNvbnN0IGNyZWF0ZUNvbXBvbmVudCA9IChwcm9wc0RhdGEpID0+IHsKICAgICAgICB3cmFwcGVyID0gc2hhbGxvd01vdW50KFNlcnZpY2VQYWdlLCB7CiAgICAgICAgICAgIHByb3BzRGF0YSwKICAgICAgICAgICAgbWl4aW5zOiBbY3JlYXRlRWRpdFZpZXdNb2NrLCBmb3JtVmFsaWRhdGlvbk1vY2tdLAogICAgICAgICAgICBtb2NrczogewogICAgICAgICAgICAgICAgJHN0b3JlOiB7CiAgICAgICAgICAgICAgICAgICAgZ2V0dGVyczogewogICAgICAgICAgICAgICAgICAgICAgICAnbWFuYWdlbWVudC9hbGwnOiBqZXN0LmZuKCksCiAgICAgICAgICAgICAgICAgICAgICAgICdpMThuL3QnOiBqZXN0LmZuKCkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGNvbXB1dGVkOiB7IHByb3Zpc2lvbmluZ0NsdXN0ZXI6IGplc3QuZm4oKSB9LAogICAgICAgIH0pOwogICAgfTsKICAgIGl0KCdzZXRzIGNsdXN0ZXJJUCB0byBhbiBlbXB0eSBzdHJpbmcgYW5kIGRlbGV0ZXMgY2x1c3RlcklQcyB3aGVuIGluIGNsb25lIG1vZGUnLCAoKSA9PiB7CiAgICAgICAgY29uc3QgdmFsdWUgPSB7CiAgICAgICAgICAgIHNwZWM6IHsKICAgICAgICAgICAgICAgIGNsdXN0ZXJJUDogJzEwLjQzLjEuMScsCiAgICAgICAgICAgICAgICBjbHVzdGVySVBzOiBbJzEwLjQzLjEuMScsICcxMC40My4xLjInXSwKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgY3JlYXRlQ29tcG9uZW50KHsgcmVhbE1vZGU6IF9DTE9ORSwgdmFsdWUgfSk7CiAgICAgICAgZXhwZWN0KHdyYXBwZXIudm0udmFsdWUuc3BlYy5jbHVzdGVySVApLnRvQmUoJycpOwogICAgICAgIGV4cGVjdCh3cmFwcGVyLnZtLnZhbHVlLnNwZWMuY2x1c3RlcklQcykudG9CZVVuZGVmaW5lZCgpOwogICAgfSk7CiAgICBpdCgnZG9lcyBub3QgY2hhbmdlIGNsdXN0ZXJJUCBhbmQgY2x1c3RlcklQcyB3aGVuIG5vdCBpbiBjbG9uZSBtb2RlJywgKCkgPT4gewogICAgICAgIGNvbnN0IHZhbHVlID0gewogICAgICAgICAgICBzcGVjOiB7CiAgICAgICAgICAgICAgICBjbHVzdGVySVA6ICcxMC40My4xLjEnLAogICAgICAgICAgICAgICAgY2x1c3RlcklQczogWycxMC40My4xLjEnLCAnMTAuNDMuMS4yJ10sCiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIGNyZWF0ZUNvbXBvbmVudCh7IHJlYWxNb2RlOiAnc29tZU90aGVyTW9kZScsIHZhbHVlIH0pOwogICAgICAgIGV4cGVjdCh3cmFwcGVyLnZtLnZhbHVlLnNwZWMuY2x1c3RlcklQKS50b0JlKCcxMC40My4xLjEnKTsKICAgICAgICBleHBlY3Qod3JhcHBlci52bS52YWx1ZS5zcGVjLmNsdXN0ZXJJUHMpLnRvU3RyaWN0RXF1YWwoWycxMC40My4xLjEnLCAnMTAuNDMuMS4yJ10pOwogICAgfSk7Cn0pOwo="},{"version":3,"file":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/__tests__/service.test.ts","sourceRoot":"","sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/__tests__/service.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { shallowMount, Wrapper } from '@vue/test-utils';\nimport { _CLONE } from '@shell/config/query-params';\nimport ServicePage from '@shell/edit/service.vue';\n\nconst createEditViewMock = {\n  data() {\n    return { errors: [] };\n  },\n  computed: {\n    isCreate:     () => false,\n    isEdit:       () => true,\n    isView:       () => false,\n    schema:       () => ({}),\n    isNamespaced: () => false,\n    labels:       {\n      get: jest.fn(() => ({})),\n      set: jest.fn(),\n    },\n    annotations: {\n      get: jest.fn(() => ({})),\n      set: jest.fn(),\n    },\n    doneRoute:  () => 'mockedRoute',\n    doneParams: () => ({}),\n  },\n  methods: {\n    done:         jest.fn(),\n    conflict:     jest.fn(() => Promise.resolve([])),\n    save:         jest.fn(() => Promise.resolve()),\n    actuallySave: jest.fn(() => Promise.resolve()),\n    setErrors:    jest.fn()\n  }\n};\n\nconst formValidationMock = {};\n\ndescribe('service edit', () => {\n  let wrapper: Wrapper<InstanceType<typeof ServicePage>>;\n\n  const createComponent = (propsData: any) => {\n    wrapper = shallowMount(ServicePage,\n      {\n        propsData,\n        mixins: [createEditViewMock, formValidationMock],\n        mocks:  {\n          $store: {\n            getters: {\n              'management/all': jest.fn(),\n              'i18n/t':         jest.fn()\n            }\n          }\n        },\n        computed: { provisioningCluster: jest.fn() },\n      }\n    );\n  };\n\n  it('sets clusterIP to an empty string and deletes clusterIPs when in clone mode', () => {\n    const value = {\n      spec: {\n        clusterIP:  '10.43.1.1',\n        clusterIPs: ['10.43.1.1', '10.43.1.2'],\n      }\n    };\n\n    createComponent({ realMode: _CLONE, value });\n\n    expect(wrapper.vm.value.spec.clusterIP).toBe('');\n    expect(wrapper.vm.value.spec.clusterIPs).toBeUndefined();\n  });\n\n  it('does not change clusterIP and clusterIPs when not in clone mode', () => {\n    const value = {\n      spec: {\n        clusterIP:  '10.43.1.1',\n        clusterIPs: ['10.43.1.1', '10.43.1.2'],\n      }\n    };\n\n    createComponent({ realMode: 'someOtherMode', value });\n\n    expect(wrapper.vm.value.spec.clusterIP).toBe('10.43.1.1');\n    expect(wrapper.vm.value.spec.clusterIPs).toStrictEqual(['10.43.1.1', '10.43.1.2']);\n  });\n});\n"]}]}