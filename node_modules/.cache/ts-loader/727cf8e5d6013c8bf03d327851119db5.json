{"remainingRequest":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/__tests__/PolicyRuleTarget.test.ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/__tests__/PolicyRuleTarget.test.ts","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgbW91bnQgfSBmcm9tICdAdnVlL3Rlc3QtdXRpbHMnOwppbXBvcnQgUG9saWN5UnVsZVRhcmdldCBmcm9tICdAc2hlbGwvZWRpdC9uZXR3b3JraW5nLms4cy5pby5uZXR3b3JrcG9saWN5L1BvbGljeVJ1bGVUYXJnZXQnOwppbXBvcnQgbW9jayBmcm9tICdAc2hlbGwvZWRpdC9uZXR3b3JraW5nLms4cy5pby5uZXR3b3JrcG9saWN5L19fdGVzdHNfXy91dGlscy9tb2NrLmpzb24nOwppbXBvcnQgeyBQb2xpY3lSdWxlVGFyZ2V0U2VsZWN0b3JzIH0gZnJvbSAnQHNoZWxsL2VkaXQvbmV0d29ya2luZy5rOHMuaW8ubmV0d29ya3BvbGljeS9fX3Rlc3RzX18vdXRpbHMvc2VsZWN0b3JzLnRlc3QudHMnOwpjb25zdCBuZXdOYW1lc3BhY2UgPSB7CiAgICBpZDogJ25ldy1uYW1lc3BhY2UnLAogICAgdHlwZTogJ25hbWVzcGFjZScsCiAgICBraW5kOiAnTmFtZXNwYWNlJywKICAgIHNwZWM6IHsgZmluYWxpemVyczogWydrdWJlcm5ldGVzJ10gfSwKICAgIHN0YXR1czogeyBwaGFzZTogJ0FjdGl2ZScgfSwKICAgIG1ldGFkYXRhOiB7CiAgICAgICAgYW5ub3RhdGlvbnM6IHsgdXNlcjogJ2pvaG4nIH0sCiAgICAgICAgbmFtZTogJ2RlZmF1bHQnLAogICAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiAnMjAyNC0wMS0zMVQxMDoyNDowM1onLAogICAgICAgIGZpZWxkczogWydkZWZhdWx0JywgJ0FjdGl2ZScsICcxZCddLAogICAgICAgIGxhYmVsczogeyB1c2VyOiAnam9obicgfSwKICAgICAgICByZWxhdGlvbnNoaXBzOiBudWxsLAogICAgICAgIHJlc291cmNlVmVyc2lvbjogJzEnLAogICAgICAgIHN0YXRlOiB7CiAgICAgICAgICAgIGVycm9yOiBmYWxzZSwKICAgICAgICAgICAgbWVzc2FnZTogJycsCiAgICAgICAgICAgIG5hbWU6ICdhY3RpdmUnLAogICAgICAgICAgICB0cmFuc2l0aW9uaW5nOiBmYWxzZQogICAgICAgIH0KICAgIH0KfTsKZGVzY3JpYmUuZWFjaChbCiAgICAndmlldycsCiAgICAnZWRpdCcsCl0pKCdjb21wb25lbnQ6IFBvbGljeVJ1bGVUYXJnZXQnLCAobW9kZSkgPT4gewogICAgY29uc3QgbW9ja0V4aXN0cyA9IGplc3QuZm4oKS5tb2NrUmV0dXJuVmFsdWUodHJ1ZSk7CiAgICBjb25zdCB3cmFwcGVyID0gbW91bnQoUG9saWN5UnVsZVRhcmdldCwgewogICAgICAgIGRhdGEoKSB7CiAgICAgICAgICAgIHJldHVybiB7IHRocm90dGxlVGltZTogMCB9OwogICAgICAgIH0sCiAgICAgICAgcHJvcHNEYXRhOiB7CiAgICAgICAgICAgIG5hbWVzcGFjZTogbW9jay5kZWZhdWx0TmFtZXNwYWNlLAogICAgICAgICAgICBhbGxOYW1lc3BhY2VzOiBtb2NrLmFsbE5hbWVzcGFjZXMsCiAgICAgICAgICAgIGFsbFBvZHM6IG1vY2suYWxsUG9kcywKICAgICAgICAgICAgdHlwZTogJ2luZ3Jlc3MnLAogICAgICAgICAgICBtb2RlCiAgICAgICAgfSwKICAgICAgICBtb2NrczogewogICAgICAgICAgICAkc3RvcmU6IHsKICAgICAgICAgICAgICAgIGdldHRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnaTE4bi9leGlzdHMnOiBtb2NrRXhpc3RzLAogICAgICAgICAgICAgICAgICAgICdpMThuL3QnOiAoa2V5LCBtYXRjaERhdGEpID0+IG1hdGNoRGF0YSA/IGAke2tleX0tJHttYXRjaERhdGEudG90YWx9YCA6IGtleSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0pOwogICAgZGVzY3JpYmUoYCR7bW9kZX0gbW9kZWAsICgpID0+IHsKICAgICAgICBpdCgnc2hvdWxkIGRpc3BsYXkgaXAtYmxvY2sgc2VsZWN0b3IgcnVsZScsIGFzeW5jICgpID0+IHsKICAgICAgICAgICAgY29uc3QgaXBCbG9jayA9IG1vY2suc2VsZWN0b3JzLmlwQmxvY2s7CiAgICAgICAgICAgIGF3YWl0IHdyYXBwZXIuc2V0UHJvcHMoeyB2YWx1ZTogeyBpcEJsb2NrIH0gfSk7CiAgICAgICAgICAgIGNvbnN0IHNlbGVjdG9ycyA9IG5ldyBQb2xpY3lSdWxlVGFyZ2V0U2VsZWN0b3JzKHdyYXBwZXIpOwogICAgICAgICAgICAvLyBDaGVjayBydWxlIHR5cGUgc2VsZWN0b3IKICAgICAgICAgICAgZXhwZWN0KHNlbGVjdG9ycy5ydWxlVHlwZS52bS4kZGF0YS5fdmFsdWUudmFsdWUpLnRvQmUoJ2lwQmxvY2snKTsKICAgICAgICAgICAgZXhwZWN0KHNlbGVjdG9ycy5uYW1lc3BhY2UuZWxlbWVudCkudG9CZVVuZGVmaW5lZCgpOwogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLnBvZC5lbGVtZW50KS50b0JlVW5kZWZpbmVkKCk7CiAgICAgICAgICAgIGV4cGVjdChzZWxlY3RvcnMubmFtZXNwYWNlQW5kUG9kLm5hbWVzcGFjZVJ1bGUuZWxlbWVudCkudG9CZVVuZGVmaW5lZCgpOwogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLm5hbWVzcGFjZUFuZFBvZC5wb2RSdWxlLmVsZW1lbnQpLnRvQmVVbmRlZmluZWQoKTsKICAgICAgICAgICAgZXhwZWN0KHNlbGVjdG9ycy5pcEJsb2NrLmVsZW1lbnQuX3ZhbHVlKS50b1N0cmljdEVxdWFsKGlwQmxvY2suY2lkcik7CiAgICAgICAgfSk7CiAgICAgICAgaXQoJ3Nob3VsZCBkaXNwbGF5IG5hbWVzcGFjZSBzZWxlY3RvciBydWxlJywgYXN5bmMgKCkgPT4gewogICAgICAgICAgICBjb25zdCBuYW1lc3BhY2VTZWxlY3RvciA9IG1vY2suc2VsZWN0b3JzLm5hbWVzcGFjZTsKICAgICAgICAgICAgYXdhaXQgd3JhcHBlci5zZXRQcm9wcyh7IHZhbHVlOiB7IG5hbWVzcGFjZVNlbGVjdG9yIH0gfSk7CiAgICAgICAgICAgIGNvbnN0IHNlbGVjdG9ycyA9IG5ldyBQb2xpY3lSdWxlVGFyZ2V0U2VsZWN0b3JzKHdyYXBwZXIpOwogICAgICAgICAgICAvLyBDaGVjayBydWxlIHR5cGUgc2VsZWN0b3IKICAgICAgICAgICAgZXhwZWN0KHNlbGVjdG9ycy5ydWxlVHlwZS52bS4kZGF0YS5fdmFsdWUudmFsdWUpLnRvQmUoJ25hbWVzcGFjZVNlbGVjdG9yJyk7CiAgICAgICAgICAgIC8vIENoZWNrIHRoZSBtYXRjaGluZyBuYW1lc3BhY2VzIGRpc3BsYXllZCBieSB0aGUgYmFubmVyCiAgICAgICAgICAgIGV4cGVjdCh3cmFwcGVyLnZtLiRkYXRhLm1hdGNoaW5nTmFtZXNwYWNlcy5tYXRjaGVkKS50b0JlKDEpOwogICAgICAgICAgICAvLyBDaGVjayBpZiBuYW1lc3BhY2UncyBsYWJlbHMgbWF0Y2gKICAgICAgICAgICAgZXhwZWN0KHdyYXBwZXIudm0uJGRhdGEubWF0Y2hpbmdOYW1lc3BhY2VzLm1hdGNoZXMpLnRvSGF2ZUxlbmd0aCgxKTsKICAgICAgICAgICAgZXhwZWN0KHdyYXBwZXIudm0uJGRhdGEubWF0Y2hpbmdOYW1lc3BhY2VzLm1hdGNoZXNbMF0ubWV0YWRhdGEubmFtZSkudG9CZSgnZGVmYXVsdCcpOwogICAgICAgICAgICBleHBlY3Qod3JhcHBlci52bS4kZGF0YS5tYXRjaGluZ05hbWVzcGFjZXMubWF0Y2hlc1swXS5tZXRhZGF0YS5sYWJlbHNbJ3VzZXInXSkudG9CZSgnYWxpY2UnKTsKICAgICAgICAgICAgZXhwZWN0KHNlbGVjdG9ycy5wb2QuZWxlbWVudCkudG9CZVVuZGVmaW5lZCgpOwogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLm5hbWVzcGFjZUFuZFBvZC5uYW1lc3BhY2VSdWxlLmVsZW1lbnQpLnRvQmVVbmRlZmluZWQoKTsKICAgICAgICAgICAgZXhwZWN0KHNlbGVjdG9ycy5uYW1lc3BhY2VBbmRQb2QucG9kUnVsZS5lbGVtZW50KS50b0JlVW5kZWZpbmVkKCk7CiAgICAgICAgICAgIGV4cGVjdChzZWxlY3RvcnMubmFtZXNwYWNlLmVsZW1lbnQpLnRvQmVEZWZpbmVkKCk7CiAgICAgICAgICAgIC8vIFVwZGF0aW5nIGFsbE5hbWVzcGFjZSBzaG91bGQgdXBkYXRlIHRoZSBtYXRjaGluZyBuYW1lc3BhY2VzIG1lc3NhZ2UgdG9vCiAgICAgICAgICAgIGF3YWl0IHdyYXBwZXIuc2V0UHJvcHMoewogICAgICAgICAgICAgICAgYWxsTmFtZXNwYWNlczogWwogICAgICAgICAgICAgICAgICAgIC4uLndyYXBwZXIudm0uJHByb3BzLmFsbE5hbWVzcGFjZXMsCiAgICAgICAgICAgICAgICAgICAgbmV3TmFtZXNwYWNlCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjb25zdCBtYXRjaGluZ05hbWVzcGFjZXNNZXNzYWdlID0gd3JhcHBlci5maW5kKCdbZGF0YS10ZXN0aWQ9Im1hdGNoaW5nLW5hbWVzcGFjZXMtbWVzc2FnZSJdJykudGV4dCgpOwogICAgICAgICAgICBjb25zdCB0b3RhbEluTWVzc2FnZSA9IG1hdGNoaW5nTmFtZXNwYWNlc01lc3NhZ2Uuc3BsaXQoJy0nKVsxXTsKICAgICAgICAgICAgZXhwZWN0KHRvdGFsSW5NZXNzYWdlKS50b0JlKGAke3dyYXBwZXIudm0uJGRhdGEubWF0Y2hpbmdOYW1lc3BhY2VzLnRvdGFsfWApOwogICAgICAgIH0pOwogICAgICAgIGl0KCdzaG91bGQgZGlzcGxheSBwb2Qgc2VsZWN0b3IgcnVsZScsIGFzeW5jICgpID0+IHsKICAgICAgICAgICAgY29uc3QgcG9kU2VsZWN0b3IgPSBtb2NrLnNlbGVjdG9ycy5wb2Q7CiAgICAgICAgICAgIGF3YWl0IHdyYXBwZXIuc2V0UHJvcHMoeyB2YWx1ZTogeyBwb2RTZWxlY3RvciB9IH0pOwogICAgICAgICAgICBjb25zdCBzZWxlY3RvcnMgPSBuZXcgUG9saWN5UnVsZVRhcmdldFNlbGVjdG9ycyh3cmFwcGVyKTsKICAgICAgICAgICAgLy8gQ2hlY2sgcnVsZSB0eXBlIHNlbGVjdG9yCiAgICAgICAgICAgIGV4cGVjdChzZWxlY3RvcnMucnVsZVR5cGUudm0uJGRhdGEuX3ZhbHVlLnZhbHVlKS50b0JlKCdwb2RTZWxlY3RvcicpOwogICAgICAgICAgICAvLyBDaGVjayBpZiBuYW1lc3BhY2UncyBsYWJlbHMgbWF0Y2gKICAgICAgICAgICAgZXhwZWN0KHdyYXBwZXIudm0uJGRhdGEubWF0Y2hpbmdQb2RzLm1hdGNoZWQpLnRvQmUoMSk7CiAgICAgICAgICAgIGV4cGVjdCh3cmFwcGVyLnZtLiRkYXRhLm1hdGNoaW5nUG9kcy5tYXRjaGVzKS50b0hhdmVMZW5ndGgoMSk7CiAgICAgICAgICAgIGV4cGVjdCh3cmFwcGVyLnZtLiRkYXRhLm1hdGNoaW5nUG9kcy5tYXRjaGVzWzBdLm1ldGFkYXRhLm5hbWUpLnRvQmUoJ3Rlc3QtcG9kJyk7CiAgICAgICAgICAgIGV4cGVjdCh3cmFwcGVyLnZtLiRkYXRhLm1hdGNoaW5nUG9kcy5tYXRjaGVzWzBdLm1ldGFkYXRhLmxhYmVsc1snZm9vJ10pLnRvQmUoJ2JhcicpOwogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLm5hbWVzcGFjZS5lbGVtZW50KS50b0JlVW5kZWZpbmVkKCk7CiAgICAgICAgICAgIGV4cGVjdChzZWxlY3RvcnMubmFtZXNwYWNlQW5kUG9kLm5hbWVzcGFjZVJ1bGUuZWxlbWVudCkudG9CZVVuZGVmaW5lZCgpOwogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLm5hbWVzcGFjZUFuZFBvZC5wb2RSdWxlLmVsZW1lbnQpLnRvQmVVbmRlZmluZWQoKTsKICAgICAgICAgICAgZXhwZWN0KHNlbGVjdG9ycy5wb2QuZWxlbWVudCkudG9CZURlZmluZWQoKTsKICAgICAgICB9KTsKICAgICAgICBpdCgnc2hvdWxkIGRpc3BsYXkgbmFtZXNwYWNlL3BvZCBzZWxlY3RvciBydWxlJywgYXN5bmMgKCkgPT4gewogICAgICAgICAgICBjb25zdCBuYW1lc3BhY2VTZWxlY3RvciA9IG1vY2suc2VsZWN0b3JzLm5hbWVzcGFjZUFuZFBvZC5uYW1lc3BhY2U7CiAgICAgICAgICAgIGNvbnN0IHBvZFNlbGVjdG9yID0gbW9jay5zZWxlY3RvcnMubmFtZXNwYWNlQW5kUG9kLnBvZDsKICAgICAgICAgICAgYXdhaXQgd3JhcHBlci5zZXRQcm9wcyh7CiAgICAgICAgICAgICAgICB2YWx1ZTogewogICAgICAgICAgICAgICAgICAgIG5hbWVzcGFjZVNlbGVjdG9yLAogICAgICAgICAgICAgICAgICAgIHBvZFNlbGVjdG9yLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgY29uc3Qgc2VsZWN0b3JzID0gbmV3IFBvbGljeVJ1bGVUYXJnZXRTZWxlY3RvcnMod3JhcHBlcik7CiAgICAgICAgICAgIC8vIENoZWNrIHJ1bGUgdHlwZSBzZWxlY3RvcgogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLnJ1bGVUeXBlLnZtLiRkYXRhLl92YWx1ZS52YWx1ZSkudG9CZSgnbmFtZXNwYWNlQW5kUG9kU2VsZWN0b3InKTsKICAgICAgICAgICAgLy8gQ2hlY2sgdGhlIG1hdGNoaW5nIHBvZHMgZGlzcGxheWVkIGJ5IHRoZSBiYW5uZXIKICAgICAgICAgICAgZXhwZWN0KHdyYXBwZXIudm0uJGRhdGEubWF0Y2hpbmdQb2RzLm1hdGNoZWQpLnRvQmUoMSk7CiAgICAgICAgICAgIC8vIENoZWNrIGlmIG5hbWVzcGFjZSdzIGxhYmVscyBtYXRjaAogICAgICAgICAgICBleHBlY3Qod3JhcHBlci52bS4kZGF0YS5tYXRjaGluZ05hbWVzcGFjZXMubWF0Y2hlcykudG9IYXZlTGVuZ3RoKDEpOwogICAgICAgICAgICBleHBlY3Qod3JhcHBlci52bS4kZGF0YS5tYXRjaGluZ05hbWVzcGFjZXMubWF0Y2hlc1swXS5tZXRhZGF0YS5uYW1lKS50b0JlKCdkZWZhdWx0Jyk7CiAgICAgICAgICAgIGV4cGVjdCh3cmFwcGVyLnZtLiRkYXRhLm1hdGNoaW5nTmFtZXNwYWNlcy5tYXRjaGVzWzBdLm1ldGFkYXRhLmxhYmVsc1sndXNlciddKS50b0JlKCdhbGljZScpOwogICAgICAgICAgICBleHBlY3Qod3JhcHBlci52bS4kZGF0YS5tYXRjaGluZ1BvZHMubWF0Y2hlc1swXS5tZXRhZGF0YS5uYW1lKS50b0JlKCd0ZXN0LXBvZCcpOwogICAgICAgICAgICBleHBlY3Qod3JhcHBlci52bS4kZGF0YS5tYXRjaGluZ1BvZHMubWF0Y2hlc1swXS5tZXRhZGF0YS5sYWJlbHNbJ2ZvbyddKS50b0JlKCdiYXInKTsKICAgICAgICAgICAgZXhwZWN0KHNlbGVjdG9ycy5uYW1lc3BhY2UuZWxlbWVudCkudG9CZVVuZGVmaW5lZCgpOwogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLnBvZC5lbGVtZW50KS50b0JlVW5kZWZpbmVkKCk7CiAgICAgICAgICAgIGV4cGVjdChzZWxlY3RvcnMubmFtZXNwYWNlQW5kUG9kLm5hbWVzcGFjZVJ1bGUuZWxlbWVudCkudG9CZURlZmluZWQoKTsKICAgICAgICAgICAgZXhwZWN0KHNlbGVjdG9ycy5uYW1lc3BhY2VBbmRQb2QucG9kUnVsZS5lbGVtZW50KS50b0JlRGVmaW5lZCgpOwogICAgICAgIH0pOwogICAgfSk7Cn0pOwo="},{"version":3,"file":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/__tests__/PolicyRuleTarget.test.ts","sourceRoot":"","sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/__tests__/PolicyRuleTarget.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { mount } from '@vue/test-utils';\nimport PolicyRuleTarget from '@shell/edit/networking.k8s.io.networkpolicy/PolicyRuleTarget';\nimport mock from '@shell/edit/networking.k8s.io.networkpolicy/__tests__/utils/mock.json';\nimport { PolicyRuleTargetSelectors } from '@shell/edit/networking.k8s.io.networkpolicy/__tests__/utils/selectors.test.ts';\n\ntype MatchData = {\n  matched: number;\n  matches: Array<object>;\n  none: boolean;\n  total: number;\n  sample?: string;\n}\n\nconst newNamespace = {\n  id:       'new-namespace',\n  type:     'namespace',\n  kind:     'Namespace',\n  spec:     { finalizers: ['kubernetes'] },\n  status:   { phase: 'Active' },\n  metadata: {\n    annotations:       { user: 'john' },\n    name:              'default',\n    creationTimestamp: '2024-01-31T10:24:03Z',\n    fields:            ['default', 'Active', '1d'],\n    labels:            { user: 'john' },\n    relationships:     null,\n    resourceVersion:   '1',\n    state:             {\n      error:         false,\n      message:       '',\n      name:          'active',\n      transitioning: false\n    }\n  }\n};\n\ndescribe.each([\n  'view',\n  'edit',\n])('component: PolicyRuleTarget', (mode) => {\n  const mockExists = jest.fn().mockReturnValue(true);\n\n  const wrapper = mount(PolicyRuleTarget, {\n    data() {\n      return { throttleTime: 0 };\n    },\n    propsData: {\n      namespace:     mock.defaultNamespace,\n      allNamespaces: mock.allNamespaces,\n      allPods:       mock.allPods,\n      type:          'ingress',\n      mode\n    },\n    mocks: {\n      $store: {\n        getters: {\n          'i18n/exists': mockExists,\n          'i18n/t':      (key: string, matchData: MatchData) => matchData ? `${ key }-${ matchData.total }` : key,\n        }\n      }\n    }\n  });\n\n  describe(`${ mode } mode`, () => {\n    it('should display ip-block selector rule', async() => {\n      const ipBlock = mock.selectors.ipBlock;\n\n      await wrapper.setProps({ value: { ipBlock } });\n\n      const selectors = new PolicyRuleTargetSelectors(wrapper);\n\n      // Check rule type selector\n      expect(selectors.ruleType.vm.$data._value.value).toBe('ipBlock');\n\n      expect(selectors.namespace.element).toBeUndefined();\n      expect(selectors.pod.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.namespaceRule.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.podRule.element).toBeUndefined();\n\n      expect(selectors.ipBlock.element._value).toStrictEqual(ipBlock.cidr);\n    });\n\n    it('should display namespace selector rule', async() => {\n      const namespaceSelector = mock.selectors.namespace;\n\n      await wrapper.setProps({ value: { namespaceSelector } });\n\n      const selectors = new PolicyRuleTargetSelectors(wrapper);\n\n      // Check rule type selector\n      expect(selectors.ruleType.vm.$data._value.value).toBe('namespaceSelector');\n\n      // Check the matching namespaces displayed by the banner\n      expect(wrapper.vm.$data.matchingNamespaces.matched).toBe(1);\n\n      // Check if namespace's labels match\n      expect(wrapper.vm.$data.matchingNamespaces.matches).toHaveLength(1);\n      expect(wrapper.vm.$data.matchingNamespaces.matches[0].metadata.name).toBe('default');\n      expect(wrapper.vm.$data.matchingNamespaces.matches[0].metadata.labels['user']).toBe('alice');\n\n      expect(selectors.pod.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.namespaceRule.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.podRule.element).toBeUndefined();\n\n      expect(selectors.namespace.element).toBeDefined();\n\n      // Updating allNamespace should update the matching namespaces message too\n      await wrapper.setProps({\n        allNamespaces: [\n          ...wrapper.vm.$props.allNamespaces,\n          newNamespace\n        ]\n      });\n\n      const matchingNamespacesMessage = wrapper.find('[data-testid=\"matching-namespaces-message\"]').text();\n      const totalInMessage = matchingNamespacesMessage.split('-')[1];\n\n      expect(totalInMessage).toBe(`${ wrapper.vm.$data.matchingNamespaces.total }`);\n    });\n\n    it('should display pod selector rule', async() => {\n      const podSelector = mock.selectors.pod;\n\n      await wrapper.setProps({ value: { podSelector } });\n\n      const selectors = new PolicyRuleTargetSelectors(wrapper);\n\n      // Check rule type selector\n      expect(selectors.ruleType.vm.$data._value.value).toBe('podSelector');\n\n      // Check if namespace's labels match\n      expect(wrapper.vm.$data.matchingPods.matched).toBe(1);\n      expect(wrapper.vm.$data.matchingPods.matches).toHaveLength(1);\n\n      expect(wrapper.vm.$data.matchingPods.matches[0].metadata.name).toBe('test-pod');\n      expect(wrapper.vm.$data.matchingPods.matches[0].metadata.labels['foo']).toBe('bar');\n\n      expect(selectors.namespace.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.namespaceRule.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.podRule.element).toBeUndefined();\n\n      expect(selectors.pod.element).toBeDefined();\n    });\n\n    it('should display namespace/pod selector rule', async() => {\n      const namespaceSelector = mock.selectors.namespaceAndPod.namespace;\n      const podSelector = mock.selectors.namespaceAndPod.pod;\n\n      await wrapper.setProps({\n        value: {\n          namespaceSelector,\n          podSelector,\n        }\n      });\n\n      const selectors = new PolicyRuleTargetSelectors(wrapper);\n\n      // Check rule type selector\n      expect(selectors.ruleType.vm.$data._value.value).toBe('namespaceAndPodSelector');\n\n      // Check the matching pods displayed by the banner\n      expect(wrapper.vm.$data.matchingPods.matched).toBe(1);\n\n      // Check if namespace's labels match\n      expect(wrapper.vm.$data.matchingNamespaces.matches).toHaveLength(1);\n      expect(wrapper.vm.$data.matchingNamespaces.matches[0].metadata.name).toBe('default');\n      expect(wrapper.vm.$data.matchingNamespaces.matches[0].metadata.labels['user']).toBe('alice');\n\n      expect(wrapper.vm.$data.matchingPods.matches[0].metadata.name).toBe('test-pod');\n      expect(wrapper.vm.$data.matchingPods.matches[0].metadata.labels['foo']).toBe('bar');\n\n      expect(selectors.namespace.element).toBeUndefined();\n      expect(selectors.pod.element).toBeUndefined();\n\n      expect(selectors.namespaceAndPod.namespaceRule.element).toBeDefined();\n      expect(selectors.namespaceAndPod.podRule.element).toBeDefined();\n    });\n  });\n});\n"]}]}