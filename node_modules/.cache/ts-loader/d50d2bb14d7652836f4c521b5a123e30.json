{"remainingRequest":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/models/__tests__/cluster.test.ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/models/__tests__/cluster.test.ts","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE5vcm1hbkNsdXN0ZXIgZnJvbSAnQHNoZWxsL21vZGVscy9jbHVzdGVyJzsKZGVzY3JpYmUoJ2NsYXNzIE5vcm1hbkNsdXN0ZXInLCAoKSA9PiB7CiAgICBjb25zdCB0ID0gamVzdC5mbigoKSA9PiAnYWJjJyk7CiAgICBjb25zdCBjdHggPSB7IHJvb3RHZXR0ZXJzOiB7ICdpMThuL3QnOiB0IH0sIGRpc3BhdGNoOiBqZXN0LmZuKCkgfTsKICAgIGl0KCdzaG91bGQgcmV0dXJuIGVtcHR5IGFycmF5cyBvZiBzeXN0ZW0gbGFiZWxzIGFuZCBzeXN0ZW0gYW5ub3RhdGlvbnMgaWYgY2x1c3RlciBsYWJlbHMgYW5kIGFubm90YXRpb25zIGFyZSB1bmRlZmluZWQnLCAoKSA9PiB7CiAgICAgICAgY29uc3QgY2x1c3RlciA9IG5ldyBOb3JtYW5DbHVzdGVyKHt9LCBjdHgpOwogICAgICAgIGV4cGVjdChjbHVzdGVyLnN5c3RlbUxhYmVscykudG9TdHJpY3RFcXVhbChbXSk7CiAgICAgICAgZXhwZWN0KGNsdXN0ZXIuc3lzdGVtQW5ub3RhdGlvbnMpLnRvU3RyaWN0RXF1YWwoW10pOwogICAgfSk7CiAgICBpdCgnc2hvdWxkIGxpc3QgYWxsIHRoZSBjbHVzdGVyXCdzIGFubm90YXRpb24ga2V5cyB0aGF0IGNvbnRhaW4gY29yZW9zLmNvbSwgY2F0dGxlLmlvLCBrM3MuaW8sIGt1YmVybmV0ZXMuaW8sIG9yIGszcy5pbycsICgpID0+IHsKICAgICAgICBjb25zdCB0ZXN0QW5ub3RhdGlvbnMgPSBbJ2NhdHRsZS5pby90ZXN0JywgJ2NvcmVvcy5jb20nLCAndGVzdC5jYXR0bGUuaW8vc29tZXRoaW5nJywgJ2t1YmVybmV0ZXMuaW8vdGVzdCddOwogICAgICAgIGNvbnN0IGNsdXN0ZXIgPSBuZXcgTm9ybWFuQ2x1c3Rlcih7CiAgICAgICAgICAgIGFubm90YXRpb25zOiB7CiAgICAgICAgICAgICAgICAnY2F0dGxlLmlvL3Rlc3QnOiAnYWJjJywKICAgICAgICAgICAgICAgICdjb3Jlb3MuY29tJzogJ2FiYycsCiAgICAgICAgICAgICAgICAnazNzLmlvL3Rlc3QnOiAnYWJjJywKICAgICAgICAgICAgICAgICd0ZXN0LmNhdHRsZS5pby9zb21ldGhpbmcnOiAnYWJjJywKICAgICAgICAgICAgICAgICdrdWJlcm5ldGVzLmlvL3Rlc3QnOiAnYWJjJywKICAgICAgICAgICAgICAgICdvdGhlci1sYWJlbCc6ICdhYmMnCiAgICAgICAgICAgIH0KICAgICAgICB9LCBjdHgpOwogICAgICAgIGV4cGVjdCh0ZXN0QW5ub3RhdGlvbnMuZmluZCgoYW5ub3RhdGlvbikgPT4gIWNsdXN0ZXIuc3lzdGVtQW5ub3RhdGlvbnMuaW5jbHVkZXMoYW5ub3RhdGlvbikpKS50b0JlVW5kZWZpbmVkKCk7CiAgICB9KTsKICAgIGl0KCdzaG91bGQgbGlzdCBhbGwgdGhlIGNsdXN0ZXJcJ3MgbGFiZWwga2V5cyB0aGF0IGNvbnRhaW4gaW8uY2F0dGxlLmxpZmVjeWNsZSwga3ViZXJuZXRlcy5pbywgY2F0dGxlLmlvLCBvciBrM3MuaW8nLCAoKSA9PiB7CiAgICAgICAgY29uc3QgdGVzdExhYmVscyA9IFsnY2F0dGxlLmlvL3Rlc3QnLCAndGVzdC5pby5jYXR0bGUubGlmZWN5Y2xlJywgJ3Rlc3Qua3ViZXJuZXRlcy5pby90ZXN0JywgJ2szcy5pby90ZXN0J107CiAgICAgICAgY29uc3QgY2x1c3RlciA9IG5ldyBOb3JtYW5DbHVzdGVyKHsKICAgICAgICAgICAgbGFiZWxzOiB7CiAgICAgICAgICAgICAgICAnY2F0dGxlLmlvL3Rlc3QnOiAnYWJjJywKICAgICAgICAgICAgICAgICd0ZXN0LmlvLmNhdHRsZS5saWZlY3ljbGUnOiAnYWJjJywKICAgICAgICAgICAgICAgICdrM3MuaW8vdGVzdCc6ICdhYmMnLAogICAgICAgICAgICAgICAgJ3Rlc3Qua3ViZXJuZXRlcy5pby90ZXN0JzogJ2FiYycsCiAgICAgICAgICAgICAgICAnb3RoZXItbGFiZWwnOiAnYWJjJwogICAgICAgICAgICB9CiAgICAgICAgfSwgY3R4KTsKICAgICAgICBleHBlY3QodGVzdExhYmVscy5maW5kKChsYWJlbCkgPT4gIWNsdXN0ZXIuc3lzdGVtTGFiZWxzLmluY2x1ZGVzKGxhYmVsKSkpLnRvQmVVbmRlZmluZWQoKTsKICAgIH0pOwp9KTsK"},{"version":3,"file":"/home/ubuntu/suseconf/node_modules/@rancher/shell/models/__tests__/cluster.test.ts","sourceRoot":"","sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/models/__tests__/cluster.test.ts"],"names":[],"mappings":"AAAA,OAAO,aAAa,MAAM,uBAAuB,CAAC;AAElD,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;IAC/B,MAAM,GAAG,GAAG,EAAE,WAAW,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;IAElE,EAAE,CAAC,oHAAoH,EAAE,GAAG,EAAE;QAC5H,MAAM,OAAO,GAAG,IAAI,aAAa,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;QAE3C,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QAC/C,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qHAAqH,EAAE,GAAG,EAAE;QAC7H,MAAM,eAAe,GAAG,CAAC,gBAAgB,EAAE,YAAY,EAAE,0BAA0B,EAAE,oBAAoB,CAAC,CAAC;QAC3G,MAAM,OAAO,GAAG,IAAI,aAAa,CAAC;YAChC,WAAW,EAAE;gBACX,gBAAgB,EAAY,KAAK;gBACjC,YAAY,EAAgB,KAAK;gBACjC,aAAa,EAAe,KAAK;gBACjC,0BAA0B,EAAE,KAAK;gBACjC,oBAAoB,EAAQ,KAAK;gBACjC,aAAa,EAAe,KAAK;aAClC;SACF,EAAE,GAAG,CAAC,CAAC;QAER,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;IAChH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iHAAiH,EAAE,GAAG,EAAE;QACzH,MAAM,UAAU,GAAG,CAAC,gBAAgB,EAAE,0BAA0B,EAAE,yBAAyB,EAAE,aAAa,CAAC,CAAC;QAC5G,MAAM,OAAO,GAAG,IAAI,aAAa,CAAC;YAChC,MAAM,EAAE;gBACN,gBAAgB,EAAY,KAAK;gBACjC,0BAA0B,EAAE,KAAK;gBACjC,aAAa,EAAe,KAAK;gBACjC,yBAAyB,EAAG,KAAK;gBACjC,aAAa,EAAe,KAAK;aAClC;SACF,EAAE,GAAG,CAAC,CAAC;QAER,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;IAC5F,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import NormanCluster from '@shell/models/cluster';\n\ndescribe('class NormanCluster', () => {\n  const t = jest.fn(() => 'abc');\n  const ctx = { rootGetters: { 'i18n/t': t }, dispatch: jest.fn() };\n\n  it('should return empty arrays of system labels and system annotations if cluster labels and annotations are undefined', () => {\n    const cluster = new NormanCluster({}, ctx);\n\n    expect(cluster.systemLabels).toStrictEqual([]);\n    expect(cluster.systemAnnotations).toStrictEqual([]);\n  });\n\n  it('should list all the cluster\\'s annotation keys that contain coreos.com, cattle.io, k3s.io, kubernetes.io, or k3s.io', () => {\n    const testAnnotations = ['cattle.io/test', 'coreos.com', 'test.cattle.io/something', 'kubernetes.io/test'];\n    const cluster = new NormanCluster({\n      annotations: {\n        'cattle.io/test':           'abc',\n        'coreos.com':               'abc',\n        'k3s.io/test':              'abc',\n        'test.cattle.io/something': 'abc',\n        'kubernetes.io/test':       'abc',\n        'other-label':              'abc'\n      }\n    }, ctx);\n\n    expect(testAnnotations.find((annotation) => !cluster.systemAnnotations.includes(annotation))).toBeUndefined();\n  });\n\n  it('should list all the cluster\\'s label keys that contain io.cattle.lifecycle, kubernetes.io, cattle.io, or k3s.io', () => {\n    const testLabels = ['cattle.io/test', 'test.io.cattle.lifecycle', 'test.kubernetes.io/test', 'k3s.io/test'];\n    const cluster = new NormanCluster({\n      labels: {\n        'cattle.io/test':           'abc',\n        'test.io.cattle.lifecycle': 'abc',\n        'k3s.io/test':              'abc',\n        'test.kubernetes.io/test':  'abc',\n        'other-label':              'abc'\n      }\n    }, ctx);\n\n    expect(testLabels.find((label) => !cluster.systemLabels.includes(label))).toBeUndefined();\n  });\n});\n"]}]}