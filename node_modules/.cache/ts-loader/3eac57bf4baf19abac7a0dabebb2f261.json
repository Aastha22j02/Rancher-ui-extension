{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/susecon-2024-ext-demo/pkg/kubecost/index.ts","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/pkg/kubecost/index.ts","mtime":1726077723371},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgaW1wb3J0VHlwZXMgfSBmcm9tICdAcmFuY2hlci9hdXRvLWltcG9ydCc7CmltcG9ydCB7IENhcmRMb2NhdGlvbiwgVGFiTG9jYXRpb24gfSBmcm9tICdAc2hlbGwvY29yZS90eXBlcyc7Ci8vIEluaXQgdGhlIHBhY2thZ2UKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKHBsdWdpbikgewogICAgLy8gQXV0by1pbXBvcnQgbW9kZWwsIGRldGFpbCwgZWRpdCBmcm9tIHRoZSBmb2xkZXJzCiAgICBpbXBvcnRUeXBlcyhwbHVnaW4pOwogICAgLy8gUHJvdmlkZSBwbHVnaW4gbWV0YWRhdGEgZnJvbSBwYWNrYWdlLmpzb24KICAgIHBsdWdpbi5tZXRhZGF0YSA9IHJlcXVpcmUoJy4vcGFja2FnZS5qc29uJyk7CiAgICBwbHVnaW4uYWRkQ2FyZChDYXJkTG9jYXRpb24uQ0xVU1RFUl9EQVNIQk9BUkRfQ0FSRCwge30sIHsgY29tcG9uZW50OiAoKSA9PiBpbXBvcnQoJy4vY29tcG9uZW50cy9rdWJlY29zdC52dWUnKSB9KTsKICAgIHBsdWdpbi5hZGRUYWIoVGFiTG9jYXRpb24uUkVTT1VSQ0VfREVUQUlMLCB7IHJlc291cmNlOiBbJ25hbWVzcGFjZSddIH0sIHsKICAgICAgICBuYW1lOiAnS3ViZWNvc3QnLAogICAgICAgIHdlaWdodDogLTUsCiAgICAgICAgY29tcG9uZW50OiAoKSA9PiBpbXBvcnQoJy4vY29tcG9uZW50cy9rdWJlY29zdC52dWUnKQogICAgfSk7CiAgICBwbHVnaW4uYWRkVGFiKFRhYkxvY2F0aW9uLlJFU09VUkNFX0RFVEFJTCwgeyByZXNvdXJjZTogWyduYW1lc3BhY2UnXSB9LCB7CiAgICAgICAgbmFtZTogJ2Fhc3RoYScsCiAgICAgICAgd2VpZ2h0OiAtNSwKICAgICAgICBjb21wb25lbnQ6ICgpID0+IGltcG9ydCgnLi9jb21wb25lbnRzL2t1YmVjb3N0LnZ1ZScpCiAgICB9KTsKICAgIHBsdWdpbi5tZXRhZGF0YS5pY29uID0gcmVxdWlyZSgnLi9rYy5zdmcnKTsKICAgIHBsdWdpbi5hZGRQcm9kdWN0KHJlcXVpcmUoJy4vcHJvZHVjdCcpKTsKfQo="},{"version":3,"file":"/home/ubuntu/susecon-2024-ext-demo/pkg/kubecost/index.ts","sourceRoot":"","sources":["/home/ubuntu/susecon-2024-ext-demo/pkg/kubecost/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,EAAW,YAAY,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAEvE,mBAAmB;AACnB,MAAM,CAAC,OAAO,WAAU,MAAe;IACrC,mDAAmD;IACnD,WAAW,CAAC,MAAM,CAAC,CAAC;IAEpB,4CAA4C;IAC5C,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAE5C,MAAM,CAAC,OAAO,CACZ,YAAY,CAAC,sBAAsB,EACnC,EAAE,EACF,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,2BAA2B,CAAC,EAAE,CACzD,CAAC;IAEF,MAAM,CAAC,MAAM,CACX,WAAW,CAAC,eAAe,EAC3B,EAAE,QAAQ,EAAE,CAAC,WAAW,CAAC,EAAE,EAC3B;QACE,IAAI,EAAQ,UAAU;QACtB,MAAM,EAAM,CAAC,CAAC;QACd,SAAS,EAAG,GAAG,EAAE,CAAC,MAAM,CAAC,2BAA2B,CAAC;KACtD,CACF,CAAC;IACF,MAAM,CAAC,MAAM,CACX,WAAW,CAAC,eAAe,EAC3B,EAAE,QAAQ,EAAE,CAAC,WAAW,CAAC,EAAE,EAC3B;QACE,IAAI,EAAQ,QAAQ;QACpB,MAAM,EAAM,CAAC,CAAC;QACd,SAAS,EAAG,GAAG,EAAE,CAAC,MAAM,CAAC,2BAA2B,CAAC;KACtD,CACF,CAAC;IAGF,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;IAC3C,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AAE1C,CAAC","sourcesContent":["import { importTypes } from '@rancher/auto-import';\nimport { IPlugin, CardLocation, TabLocation } from '@shell/core/types';\n\n// Init the package\nexport default function(plugin: IPlugin): void {\n  // Auto-import model, detail, edit from the folders\n  importTypes(plugin);\n\n  // Provide plugin metadata from package.json\n  plugin.metadata = require('./package.json');\n\n  plugin.addCard(\n    CardLocation.CLUSTER_DASHBOARD_CARD,\n    {},\n    { component: () => import('./components/kubecost.vue') }\n  );\n\n  plugin.addTab(\n    TabLocation.RESOURCE_DETAIL,\n    { resource: ['namespace'] },\n    {\n      name:       'Kubecost',\n      weight:     -5,\n      component:  () => import('./components/kubecost.vue')\n    }\n  );\n  plugin.addTab(\n    TabLocation.RESOURCE_DETAIL,\n    { resource: ['namespace'] },\n    {\n      name:       'aastha',\n      weight:     -5,\n      component:  () => import('./components/kubecost.vue')\n    }\n  );\n\n\n  plugin.metadata.icon = require('./kc.svg');\n  plugin.addProduct(require('./product'));\n\n}\n"]}]}