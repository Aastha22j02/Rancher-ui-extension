{"remainingRequest":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/nav/WindowManager/__tests__/ContainerLogs.test.ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/nav/WindowManager/__tests__/ContainerLogs.test.ts","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/nav/WindowManager/__tests__/ContainerLogs.test.ts","sourceRoot":"","sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/components/nav/WindowManager/__tests__/ContainerLogs.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { shallowMount } from '@vue/test-utils';\nimport ContainerLogs from '@shell/components/nav/WindowManager/ContainerLogs.vue';\nimport { base64Encode } from '@shell/utils/crypto';\nimport { Buffer } from 'buffer';\nimport { addEventListener } from '@shell/utils/socket';\n\njest.mock('@shell/utils/socket');\n\nconst getDefaultOptions = () => {\n  return {\n    propsData: {\n      tab:    {},\n      active: true,\n      height: 100,\n      pod:    {\n        spec:  { nodeName: 'nodeId' },\n        links: { view: 'url' },\n        os:    'linux'\n      },\n    },\n    data() {\n      return { range: '30 minute' };\n    },\n    mocks: {\n      $store: {\n        getters: {\n          'prefs/get':    jest.fn(),\n          'i18n/t':       jest.fn(),\n          currentProduct: { inStore: 'cluster' }\n        }\n      }\n    }\n  };\n};\n\ndescribe('component: ContainerLogs', () => {\n  it('should receive messages correctly', async() => {\n    jest.clearAllMocks();\n    const wrapper = await shallowMount(ContainerLogs, getDefaultOptions());\n\n    const data1 = 'container logs test1\\n';\n    const messageCallback = addEventListener.mock.calls.find(([e]) => e === 'message')[1];\n\n    messageCallback({ detail: { data: base64Encode(data1) } });\n\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(1);\n    expect(wrapper.vm.backlog[0].rawMsg).toBe(data1.trimEnd());\n    const data2 = 'container logs test2 中文日志内容测试\\n';\n\n    messageCallback({ detail: { data: base64Encode(data2) } });\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(2);\n    expect(wrapper.vm.backlog[1].rawMsg).toBe(data2.trimEnd());\n  });\n\n  it('should not fail for an empty message/string', async() => {\n    jest.clearAllMocks();\n    const wrapper = await shallowMount(ContainerLogs, getDefaultOptions());\n\n    const data1 = '';\n    const messageCallback = addEventListener.mock.calls.find(([e]) => e === 'message')[1];\n\n    messageCallback({ detail: { data: base64Encode(data1) } });\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(0);\n    expect(wrapper.vm.filtered).toHaveLength(0);\n  });\n\n  it('should merge the message which be truncated line', async() => {\n    jest.clearAllMocks();\n    const wrapper = await shallowMount(ContainerLogs, getDefaultOptions());\n    const part1 = 'container logs part1';\n    const messageCallback = addEventListener.mock.calls.find(([e]) => e === 'message')[1];\n\n    messageCallback({ detail: { data: base64Encode(part1) } });\n    await wrapper.vm.$nextTick();\n\n    expect(wrapper.vm.backlog).toHaveLength(0);\n    const part2 = 'container logs part2\\n';\n\n    messageCallback({ detail: { data: base64Encode(part2) } });\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(1);\n    expect(wrapper.vm.backlog[0].rawMsg).toBe(`${ part1 }${ part2 }`.trimEnd());\n  });\n\n  it('should merge truncated 2-byte utf-8 character messages', async() => {\n    jest.clearAllMocks();\n    const wrapper = await shallowMount(ContainerLogs, getDefaultOptions());\n    // Contains 2-byte utf-8 character message with one character truncation\n    const message = '¡¢£¤¥\\n';\n    const arr = Buffer.from(message);\n\n    const part1 = arr.slice(0, 3).toString('base64');\n    const part2 = arr.slice(3).toString('base64');\n\n    const messageCallback = addEventListener.mock.calls.find(([e]) => e === 'message')[1];\n\n    messageCallback({ detail: { data: part1 } });\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(0);\n    messageCallback({ detail: { data: part2 } });\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(1);\n    expect(wrapper.vm.backlog[0].rawMsg).toBe(message.trimEnd());\n  });\n  it('should merge truncated 3-byte utf-8 character messages', async() => {\n    jest.clearAllMocks();\n    const wrapper = await shallowMount(ContainerLogs, getDefaultOptions());\n    // Contains 3-byte utf-8 character message with one character truncation\n    const message = 'ࠀࠁࠂࠃ\\n';\n    const arr = Buffer.from(message);\n    // Truncate at the fourth byte\n    const part1 = arr.slice(0, 4).toString('base64');\n    const part2 = arr.slice(4).toString('base64');\n\n    const messageCallback = addEventListener.mock.calls.find(([e]) => e === 'message')[1];\n\n    messageCallback({ detail: { data: part1 } });\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(0);\n    messageCallback({ detail: { data: part2 } });\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(1);\n    expect(wrapper.vm.backlog[0].rawMsg).toBe(message.trimEnd());\n\n    // Truncate at the fifth byte\n    const part3 = arr.slice(0, 5).toString('base64');\n    const part4 = arr.slice(5).toString('base64');\n\n    messageCallback({ detail: { data: part3 } });\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(1);\n    messageCallback({ detail: { data: part4 } });\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(2);\n    expect(wrapper.vm.backlog[1].rawMsg).toBe(message.trimEnd());\n  });\n\n  it('should merge truncated 4-byte utf-8 character messages', async() => {\n    jest.clearAllMocks();\n    const wrapper = await shallowMount(ContainerLogs, getDefaultOptions());\n    // Contains 4-byte utf-8 character message with one character truncation\n    const message = '𐀀𐀁𐀂𐀃\\n';\n    const arr = Buffer.from(message);\n\n    // Truncate at the fifth byte\n    const part1 = arr.slice(0, 5).toString('base64');\n    const part2 = arr.slice(5).toString('base64');\n\n    const messageCallback = addEventListener.mock.calls.find(([e]) => e === 'message')[1];\n\n    messageCallback({ detail: { data: part1 } });\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(0);\n    messageCallback({ detail: { data: part2 } });\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(1);\n    expect(wrapper.vm.backlog[0].rawMsg).toBe(message.trimEnd());\n\n    // Truncate at the sixth byte\n    const part3 = arr.slice(0, 6).toString('base64');\n    const part4 = arr.slice(6).toString('base64');\n\n    messageCallback({ detail: { data: part3 } });\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(1);\n    messageCallback({ detail: { data: part4 } });\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(2);\n    expect(wrapper.vm.backlog[1].rawMsg).toBe(message.trimEnd());\n\n    // Truncate at the seventh byte\n    const part5 = arr.slice(0, 7).toString('base64');\n    const part6 = arr.slice(7).toString('base64');\n\n    messageCallback({ detail: { data: part5 } });\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(2);\n    messageCallback({ detail: { data: part6 } });\n    await wrapper.vm.$nextTick();\n    expect(wrapper.vm.backlog).toHaveLength(3);\n    expect(wrapper.vm.backlog[2].rawMsg).toBe(message.trimEnd());\n  });\n});\n"]}]}