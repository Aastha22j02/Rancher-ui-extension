{"remainingRequest":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/types/components/labeledSelect.ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/types/components/labeledSelect.ts","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGNvbnN0IExBQkVMX1NFTEVDVF9LSU5EUyA9IHsKICAgIEdST1VQOiAnZ3JvdXAnLAogICAgRElWSURFUjogJ2RpdmlkZXInLAogICAgTk9ORTogJ25vbmUnLAp9OwpleHBvcnQgY29uc3QgTEFCRUxfU0VMRUNUX05PVF9PUFRJT05fS0lORFMgPSBbCiAgICBMQUJFTF9TRUxFQ1RfS0lORFMuR1JPVVAsCiAgICBMQUJFTF9TRUxFQ1RfS0lORFMuRElWSURFUiwKXTsK"},{"version":3,"file":"/home/ubuntu/suseconf/node_modules/@rancher/shell/types/components/labeledSelect.ts","sourceRoot":"","sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/types/components/labeledSelect.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,kBAAkB,GAAG;IAChC,KAAK,EAAI,OAAO;IAChB,OAAO,EAAE,SAAS;IAClB,IAAI,EAAK,MAAM;CAChB,CAAC;AAEF,MAAM,CAAC,MAAM,6BAA6B,GAAG;IAC3C,kBAAkB,CAAC,KAAK;IACxB,kBAAkB,CAAC,OAAO;CAC3B,CAAC","sourcesContent":["export const LABEL_SELECT_KINDS = {\n  GROUP:   'group',\n  DIVIDER: 'divider',\n  NONE:    'none',\n};\n\nexport const LABEL_SELECT_NOT_OPTION_KINDS = [\n  LABEL_SELECT_KINDS.GROUP,\n  LABEL_SELECT_KINDS.DIVIDER,\n];\n\n/**\n * Options used When LabelSelect requests a new page\n */\nexport interface LabelSelectPaginateFnOptions<T = any> {\n  /**\n   * Current page\n   */\n  pageContent: T[],\n  /**\n   * page number to fetch\n   */\n  page: number,\n  /**\n   * number of items in the page to fetch\n   */\n  pageSize: number,\n  /**\n   * filter pagination filter. this is just a text string associated with user entered text\n   */\n  filter: string,\n  /**\n   * true if the result should only contain the fetched page, false if the result should be added to the pageContent\n   */\n  resetPage: boolean,\n}\n\n/**\n * Response that LabelSelect needs when it's requested a new page\n */\nexport interface LabelSelectPaginateFnResponse<T = any> {\n  page: T[],\n  pages: number,\n  total: number\n}\n\n/**\n * Function called when LabelSelect needs a new page\n */\nexport type LabelSelectPaginateFn<T = any> = (opts: LabelSelectPaginateFnOptions<T>) => Promise<LabelSelectPaginateFnResponse<T>>\n"]}]}