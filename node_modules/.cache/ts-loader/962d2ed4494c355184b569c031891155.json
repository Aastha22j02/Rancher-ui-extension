{"remainingRequest":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/__tests__/fleet.cattle.io.gitrepo.test.ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/__tests__/fleet.cattle.io.gitrepo.test.ts","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgbW91bnQsIGNyZWF0ZUxvY2FsVnVlIH0gZnJvbSAnQHZ1ZS90ZXN0LXV0aWxzJzsKaW1wb3J0IEdpdFJlcG8gZnJvbSAnQHNoZWxsL2VkaXQvZmxlZXQuY2F0dGxlLmlvLmdpdHJlcG8udnVlJzsKaW1wb3J0IFZ1ZXggZnJvbSAndnVleCc7CmNvbnN0IGxvY2FsVnVlID0gY3JlYXRlTG9jYWxWdWUoKTsKbG9jYWxWdWUudXNlKFZ1ZXgpOwpkZXNjcmliZSgndmlldzogZmxlZXQuY2F0dGxlLmlvLmdpdHJlcG8gc2hvdWxkJywgKCkgPT4gewogICAgY29uc3QgbW9ja1N0b3JlID0gewogICAgICAgIGRpc3BhdGNoOiBqZXN0LmZuKCksCiAgICAgICAgZ2V0dGVyczogewogICAgICAgICAgICAnaTE4bi90JzogKHRleHQpID0+IHRleHQsCiAgICAgICAgICAgIHQ6ICh0ZXh0KSA9PiB0ZXh0LAogICAgICAgICAgICBjdXJyZW50U3RvcmU6ICgpID0+ICdjdXJyZW50X3N0b3JlJywKICAgICAgICAgICAgJ2N1cnJlbnRfc3RvcmUvc2NoZW1hRm9yJzogamVzdC5mbigpLAogICAgICAgICAgICAnY3VycmVudF9zdG9yZS9hbGwnOiBqZXN0LmZuKCksCiAgICAgICAgICAgIHdvcmtzcGFjZTogamVzdC5mbigpLAogICAgICAgIH0KICAgIH07CiAgICBjb25zdCBtb2NrcyA9IHsKICAgICAgICAkc3RvcmU6IG1vY2tTdG9yZSwKICAgICAgICAkZmV0Y2hTdGF0ZTogeyBwZW5kaW5nOiBmYWxzZSB9LAogICAgICAgICRyb3V0ZTogewogICAgICAgICAgICBxdWVyeTogeyBBUzogJycgfSwKICAgICAgICAgICAgbmFtZTogewogICAgICAgICAgICAgICAgZW5kc1dpdGg6ICgpID0+IHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgfTsKICAgIGNvbnN0IHZhbHVlcyA9IHsKICAgICAgICBtZXRhZGF0YTogeyBuYW1lc3BhY2U6ICd0ZXN0JyB9LCBzcGVjOiB7IHRlbXBsYXRlOiB7fSwgY29ycmVjdERyaWZ0OiB7IGVuYWJsZWQ6IGZhbHNlIH0gfSwgdGFyZ2V0SW5mbzogeyBtb2RlOiAnYWxsJyB9LAogICAgfTsKICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudChHaXRSZXBvLCB7CiAgICAgICAgbG9jYWxWdWUsCiAgICAgICAgcHJvcHNEYXRhOiB7IHZhbHVlOiB2YWx1ZXMgfSwKICAgICAgICBtb2NrcwogICAgfSk7CiAgICBpdCgnc2hvdWxkIGhhdmUgc2VsZi1oZWFsaW5nIGNoZWNrYm94IGFuZCBiYW5uZXInLCAoKSA9PiB7CiAgICAgICAgY29uc3QgY29ycmVjdERyaWZ0Q2hlY2tib3ggPSB3cmFwcGVyLmZpbmQoJ1tkYXRhLXRlc3RpZD0iR2l0UmVwby1jb3JyZWN0RHJpZnQtY2hlY2tib3giXScpOwogICAgICAgIGNvbnN0IGNvcnJlY3REcmlmdEJhbm5lciA9IHdyYXBwZXIuZmluZCgnW2RhdGEtdGVzdGlkPSJHaXRSZXBvLWNvcnJlY3REcmlmdC1iYW5uZXIiXScpOwogICAgICAgIGV4cGVjdChjb3JyZWN0RHJpZnRDaGVja2JveC5leGlzdHMoKSkudG9CZVRydXRoeSgpOwogICAgICAgIGV4cGVjdChjb3JyZWN0RHJpZnRCYW5uZXIuZXhpc3RzKCkpLnRvQmVUcnV0aHkoKTsKICAgICAgICBleHBlY3QoY29ycmVjdERyaWZ0Q2hlY2tib3gucHJvcHMoKS52YWx1ZSkudG9CZUZhbHN5KCk7CiAgICB9KTsKICAgIGl0KCdzaG91bGQgZW5hYmxlIGRyaWZ0IGlmIHNlbGYtaGVhbGluZyBpcyBjaGVja2VkJywgYXN5bmMgKCkgPT4gewogICAgICAgIGNvbnN0IGNvcnJlY3REcmlmdENoZWNrYm94ID0gd3JhcHBlci5maW5kKCdbZGF0YS10ZXN0aWQ9IkdpdFJlcG8tY29ycmVjdERyaWZ0LWNoZWNrYm94Il0nKTsKICAgICAgICBjb25zdCBjb3JyZWN0RHJpZnRDb250YWluZXIgPSB3cmFwcGVyLmZpbmQoJ1tkYXRhLXRlc3RpZD0iR2l0UmVwby1jb3JyZWN0RHJpZnQtY2hlY2tib3giXSAuY2hlY2tib3gtY29udGFpbmVyJyk7CiAgICAgICAgZXhwZWN0KGNvcnJlY3REcmlmdENvbnRhaW5lci5leGlzdHMoKSkudG9CZVRydXRoeSgpOwogICAgICAgIGF3YWl0IGNvcnJlY3REcmlmdENvbnRhaW5lci50cmlnZ2VyKCdjbGljaycpOwogICAgICAgIGV4cGVjdChjb3JyZWN0RHJpZnRDaGVja2JveC5lbWl0dGVkKCdpbnB1dCcpKS50b0hhdmVMZW5ndGgoMSk7CiAgICAgICAgZXhwZWN0KGNvcnJlY3REcmlmdENoZWNrYm94LmVtaXR0ZWQoJ2lucHV0JylbMF1bMF0pLnRvQmUodHJ1ZSk7CiAgICAgICAgZXhwZWN0KGNvcnJlY3REcmlmdENoZWNrYm94LnByb3BzKCkudmFsdWUpLnRvQmVUcnV0aHkoKTsKICAgIH0pOwp9KTsK"},{"version":3,"file":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/__tests__/fleet.cattle.io.gitrepo.test.ts","sourceRoot":"","sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/__tests__/fleet.cattle.io.gitrepo.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { mount, createLocalVue } from '@vue/test-utils';\nimport GitRepo from '@shell/edit/fleet.cattle.io.gitrepo.vue';\nimport Vuex from 'vuex';\n\nconst localVue = createLocalVue();\n\nlocalVue.use(Vuex);\n\ndescribe('view: fleet.cattle.io.gitrepo should', () => {\n  const mockStore = {\n    dispatch: jest.fn(),\n    getters:  {\n      'i18n/t':                  (text: string) => text,\n      t:                         (text: string) => text,\n      currentStore:              () => 'current_store',\n      'current_store/schemaFor': jest.fn(),\n      'current_store/all':       jest.fn(),\n      workspace:                 jest.fn(),\n    }\n  };\n  const mocks = {\n    $store:      mockStore,\n    $fetchState: { pending: false },\n    $route:      {\n      query: { AS: '' },\n      name:  {\n        endsWith: () => {\n          return false;\n        }\n      }\n    },\n  };\n  const values = {\n    metadata: { namespace: 'test' }, spec: { template: {}, correctDrift: { enabled: false } }, targetInfo: { mode: 'all' },\n  };\n  const wrapper = mount(GitRepo, {\n    localVue,\n    propsData: { value: values },\n    mocks\n  });\n\n  it('should have self-healing checkbox and banner', () => {\n    const correctDriftCheckbox = wrapper.find('[data-testid=\"GitRepo-correctDrift-checkbox\"]');\n    const correctDriftBanner = wrapper.find('[data-testid=\"GitRepo-correctDrift-banner\"]');\n\n    expect(correctDriftCheckbox.exists()).toBeTruthy();\n    expect(correctDriftBanner.exists()).toBeTruthy();\n    expect(correctDriftCheckbox.props().value).toBeFalsy();\n  });\n\n  it('should enable drift if self-healing is checked', async() => {\n    const correctDriftCheckbox = wrapper.find('[data-testid=\"GitRepo-correctDrift-checkbox\"]');\n    const correctDriftContainer = wrapper.find('[data-testid=\"GitRepo-correctDrift-checkbox\"] .checkbox-container');\n\n    expect(correctDriftContainer.exists()).toBeTruthy();\n\n    await correctDriftContainer.trigger('click');\n\n    expect(correctDriftCheckbox.emitted('input')).toHaveLength(1);\n    expect(correctDriftCheckbox.emitted('input')![0][0]).toBe(true);\n    expect(correctDriftCheckbox.props().value).toBeTruthy();\n  });\n});\n"]}]}