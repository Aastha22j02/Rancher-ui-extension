{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/__tests__/PolicyRuleTarget.spec.ts","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/__tests__/PolicyRuleTarget.spec.ts","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgbW91bnQgfSBmcm9tICdAdnVlL3Rlc3QtdXRpbHMnOwppbXBvcnQgUG9saWN5UnVsZVRhcmdldCBmcm9tICdAc2hlbGwvZWRpdC9uZXR3b3JraW5nLms4cy5pby5uZXR3b3JrcG9saWN5L1BvbGljeVJ1bGVUYXJnZXQnOwppbXBvcnQgeyBjbGVhbkh0bWxEaXJlY3RpdmUgfSBmcm9tICdAc2hlbGwvcGx1Z2lucy9jbGVhbi1odG1sLWRpcmVjdGl2ZSc7CmltcG9ydCBtb2NrIGZyb20gJ0BzaGVsbC9lZGl0L25ldHdvcmtpbmcuazhzLmlvLm5ldHdvcmtwb2xpY3kvX190ZXN0c19fL3V0aWxzL21vY2suanNvbic7CmltcG9ydCB7IFBvbGljeVJ1bGVUYXJnZXRTZWxlY3RvcnMgfSBmcm9tICdAc2hlbGwvZWRpdC9uZXR3b3JraW5nLms4cy5pby5uZXR3b3JrcG9saWN5L19fdGVzdHNfXy91dGlscy9zZWxlY3RvcnMudGVzdC50cyc7CmRlc2NyaWJlLmVhY2goWwogICAgJ3ZpZXcnLAogICAgJ2VkaXQnLApdKSgnY29tcG9uZW50OiBQb2xpY3lSdWxlVGFyZ2V0JywgKG1vZGUpID0+IHsKICAgIGNvbnN0IG1vY2tFeGlzdHMgPSBqZXN0LmZuKCkubW9ja1JldHVyblZhbHVlKHRydWUpOwogICAgY29uc3QgbW9ja1QgPSBqZXN0LmZuKCkubW9ja1JldHVyblZhbHVlKCdzb21lLXN0cmluZycpOwogICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KFBvbGljeVJ1bGVUYXJnZXQsIHsKICAgICAgICBkYXRhKCkgewogICAgICAgICAgICByZXR1cm4geyB0aHJvdHRsZVRpbWU6IDAgfTsKICAgICAgICB9LAogICAgICAgIHByb3BzRGF0YTogewogICAgICAgICAgICBuYW1lc3BhY2U6IG1vY2suZGVmYXVsdE5hbWVzcGFjZSwKICAgICAgICAgICAgYWxsTmFtZXNwYWNlczogbW9jay5hbGxOYW1lc3BhY2VzLAogICAgICAgICAgICBhbGxQb2RzOiBtb2NrLmFsbFBvZHMsCiAgICAgICAgICAgIHR5cGU6ICdpbmdyZXNzJywKICAgICAgICAgICAgbW9kZQogICAgICAgIH0sCiAgICAgICAgZGlyZWN0aXZlczogeyBjbGVhbkh0bWxEaXJlY3RpdmUgfSwKICAgICAgICBtb2NrczogewogICAgICAgICAgICAkc3RvcmU6IHsKICAgICAgICAgICAgICAgIGdldHRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnaTE4bi9leGlzdHMnOiBtb2NrRXhpc3RzLAogICAgICAgICAgICAgICAgICAgICdpMThuL3QnOiBtb2NrVAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSk7CiAgICBkZXNjcmliZShgJHttb2RlfSBtb2RlYCwgKCkgPT4gewogICAgICAgIGl0KCdzaG91bGQgZGlzcGxheSBpcC1ibG9jayBzZWxlY3RvciBydWxlJywgYXN5bmMgKCkgPT4gewogICAgICAgICAgICBjb25zdCBpcEJsb2NrID0gbW9jay5zZWxlY3RvcnMuaXBCbG9jazsKICAgICAgICAgICAgYXdhaXQgd3JhcHBlci5zZXRQcm9wcyh7IHZhbHVlOiB7IGlwQmxvY2sgfSB9KTsKICAgICAgICAgICAgY29uc3Qgc2VsZWN0b3JzID0gbmV3IFBvbGljeVJ1bGVUYXJnZXRTZWxlY3RvcnMod3JhcHBlcik7CiAgICAgICAgICAgIC8vIENoZWNrIHJ1bGUgdHlwZSBzZWxlY3RvcgogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLnJ1bGVUeXBlLnZtLiRkYXRhLl92YWx1ZS52YWx1ZSkudG9CZSgnaXBCbG9jaycpOwogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLm5hbWVzcGFjZS5lbGVtZW50KS50b0JlVW5kZWZpbmVkKCk7CiAgICAgICAgICAgIGV4cGVjdChzZWxlY3RvcnMucG9kLmVsZW1lbnQpLnRvQmVVbmRlZmluZWQoKTsKICAgICAgICAgICAgZXhwZWN0KHNlbGVjdG9ycy5uYW1lc3BhY2VBbmRQb2QubmFtZXNwYWNlUnVsZS5lbGVtZW50KS50b0JlVW5kZWZpbmVkKCk7CiAgICAgICAgICAgIGV4cGVjdChzZWxlY3RvcnMubmFtZXNwYWNlQW5kUG9kLnBvZFJ1bGUuZWxlbWVudCkudG9CZVVuZGVmaW5lZCgpOwogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLmlwQmxvY2suZWxlbWVudC5fdmFsdWUpLnRvU3RyaWN0RXF1YWwoaXBCbG9jay5jaWRyKTsKICAgICAgICB9KTsKICAgICAgICBpdCgnc2hvdWxkIGRpc3BsYXkgbmFtZXNwYWNlIHNlbGVjdG9yIHJ1bGUnLCBhc3luYyAoKSA9PiB7CiAgICAgICAgICAgIGNvbnN0IG5hbWVzcGFjZVNlbGVjdG9yID0gbW9jay5zZWxlY3RvcnMubmFtZXNwYWNlOwogICAgICAgICAgICBhd2FpdCB3cmFwcGVyLnNldFByb3BzKHsgdmFsdWU6IHsgbmFtZXNwYWNlU2VsZWN0b3IgfSB9KTsKICAgICAgICAgICAgY29uc3Qgc2VsZWN0b3JzID0gbmV3IFBvbGljeVJ1bGVUYXJnZXRTZWxlY3RvcnMod3JhcHBlcik7CiAgICAgICAgICAgIC8vIENoZWNrIHJ1bGUgdHlwZSBzZWxlY3RvcgogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLnJ1bGVUeXBlLnZtLiRkYXRhLl92YWx1ZS52YWx1ZSkudG9CZSgnbmFtZXNwYWNlU2VsZWN0b3InKTsKICAgICAgICAgICAgLy8gQ2hlY2sgdGhlIG1hdGNoaW5nIG5hbWVzcGFjZXMgZGlzcGxheWVkIGJ5IHRoZSBiYW5uZXIKICAgICAgICAgICAgZXhwZWN0KHdyYXBwZXIudm0uJGRhdGEubWF0Y2hpbmdOYW1lc3BhY2VzLm1hdGNoZWQpLnRvQmUoMSk7CiAgICAgICAgICAgIC8vIENoZWNrIGlmIG5hbWVzcGFjZSdzIGxhYmVscyBtYXRjaAogICAgICAgICAgICBleHBlY3Qod3JhcHBlci52bS4kZGF0YS5tYXRjaGluZ05hbWVzcGFjZXMubWF0Y2hlcykudG9IYXZlTGVuZ3RoKDEpOwogICAgICAgICAgICBleHBlY3Qod3JhcHBlci52bS4kZGF0YS5tYXRjaGluZ05hbWVzcGFjZXMubWF0Y2hlc1swXS5tZXRhZGF0YS5uYW1lKS50b0JlKCdkZWZhdWx0Jyk7CiAgICAgICAgICAgIGV4cGVjdCh3cmFwcGVyLnZtLiRkYXRhLm1hdGNoaW5nTmFtZXNwYWNlcy5tYXRjaGVzWzBdLm1ldGFkYXRhLmxhYmVsc1sndXNlciddKS50b0JlKCdhbGljZScpOwogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLnBvZC5lbGVtZW50KS50b0JlVW5kZWZpbmVkKCk7CiAgICAgICAgICAgIGV4cGVjdChzZWxlY3RvcnMubmFtZXNwYWNlQW5kUG9kLm5hbWVzcGFjZVJ1bGUuZWxlbWVudCkudG9CZVVuZGVmaW5lZCgpOwogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLm5hbWVzcGFjZUFuZFBvZC5wb2RSdWxlLmVsZW1lbnQpLnRvQmVVbmRlZmluZWQoKTsKICAgICAgICAgICAgZXhwZWN0KHNlbGVjdG9ycy5uYW1lc3BhY2UuZWxlbWVudCkudG9CZURlZmluZWQoKTsKICAgICAgICB9KTsKICAgICAgICBpdCgnc2hvdWxkIGRpc3BsYXkgcG9kIHNlbGVjdG9yIHJ1bGUnLCBhc3luYyAoKSA9PiB7CiAgICAgICAgICAgIGNvbnN0IHBvZFNlbGVjdG9yID0gbW9jay5zZWxlY3RvcnMucG9kOwogICAgICAgICAgICBhd2FpdCB3cmFwcGVyLnNldFByb3BzKHsgdmFsdWU6IHsgcG9kU2VsZWN0b3IgfSB9KTsKICAgICAgICAgICAgY29uc3Qgc2VsZWN0b3JzID0gbmV3IFBvbGljeVJ1bGVUYXJnZXRTZWxlY3RvcnMod3JhcHBlcik7CiAgICAgICAgICAgIC8vIENoZWNrIHJ1bGUgdHlwZSBzZWxlY3RvcgogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLnJ1bGVUeXBlLnZtLiRkYXRhLl92YWx1ZS52YWx1ZSkudG9CZSgncG9kU2VsZWN0b3InKTsKICAgICAgICAgICAgLy8gQ2hlY2sgaWYgbmFtZXNwYWNlJ3MgbGFiZWxzIG1hdGNoCiAgICAgICAgICAgIGV4cGVjdCh3cmFwcGVyLnZtLiRkYXRhLm1hdGNoaW5nUG9kcy5tYXRjaGVkKS50b0JlKDEpOwogICAgICAgICAgICBleHBlY3Qod3JhcHBlci52bS4kZGF0YS5tYXRjaGluZ1BvZHMubWF0Y2hlcykudG9IYXZlTGVuZ3RoKDEpOwogICAgICAgICAgICBleHBlY3Qod3JhcHBlci52bS4kZGF0YS5tYXRjaGluZ1BvZHMubWF0Y2hlc1swXS5tZXRhZGF0YS5uYW1lKS50b0JlKCd0ZXN0LXBvZCcpOwogICAgICAgICAgICBleHBlY3Qod3JhcHBlci52bS4kZGF0YS5tYXRjaGluZ1BvZHMubWF0Y2hlc1swXS5tZXRhZGF0YS5sYWJlbHNbJ2ZvbyddKS50b0JlKCdiYXInKTsKICAgICAgICAgICAgZXhwZWN0KHNlbGVjdG9ycy5uYW1lc3BhY2UuZWxlbWVudCkudG9CZVVuZGVmaW5lZCgpOwogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLm5hbWVzcGFjZUFuZFBvZC5uYW1lc3BhY2VSdWxlLmVsZW1lbnQpLnRvQmVVbmRlZmluZWQoKTsKICAgICAgICAgICAgZXhwZWN0KHNlbGVjdG9ycy5uYW1lc3BhY2VBbmRQb2QucG9kUnVsZS5lbGVtZW50KS50b0JlVW5kZWZpbmVkKCk7CiAgICAgICAgICAgIGV4cGVjdChzZWxlY3RvcnMucG9kLmVsZW1lbnQpLnRvQmVEZWZpbmVkKCk7CiAgICAgICAgfSk7CiAgICAgICAgaXQoJ3Nob3VsZCBkaXNwbGF5IG5hbWVzcGFjZS9wb2Qgc2VsZWN0b3IgcnVsZScsIGFzeW5jICgpID0+IHsKICAgICAgICAgICAgY29uc3QgbmFtZXNwYWNlU2VsZWN0b3IgPSBtb2NrLnNlbGVjdG9ycy5uYW1lc3BhY2VBbmRQb2QubmFtZXNwYWNlOwogICAgICAgICAgICBjb25zdCBwb2RTZWxlY3RvciA9IG1vY2suc2VsZWN0b3JzLm5hbWVzcGFjZUFuZFBvZC5wb2Q7CiAgICAgICAgICAgIGF3YWl0IHdyYXBwZXIuc2V0UHJvcHMoewogICAgICAgICAgICAgICAgdmFsdWU6IHsKICAgICAgICAgICAgICAgICAgICBuYW1lc3BhY2VTZWxlY3RvciwKICAgICAgICAgICAgICAgICAgICBwb2RTZWxlY3RvciwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNvbnN0IHNlbGVjdG9ycyA9IG5ldyBQb2xpY3lSdWxlVGFyZ2V0U2VsZWN0b3JzKHdyYXBwZXIpOwogICAgICAgICAgICAvLyBDaGVjayBydWxlIHR5cGUgc2VsZWN0b3IKICAgICAgICAgICAgZXhwZWN0KHNlbGVjdG9ycy5ydWxlVHlwZS52bS4kZGF0YS5fdmFsdWUudmFsdWUpLnRvQmUoJ25hbWVzcGFjZUFuZFBvZFNlbGVjdG9yJyk7CiAgICAgICAgICAgIC8vIENoZWNrIHRoZSBtYXRjaGluZyBwb2RzIGRpc3BsYXllZCBieSB0aGUgYmFubmVyCiAgICAgICAgICAgIGV4cGVjdCh3cmFwcGVyLnZtLiRkYXRhLm1hdGNoaW5nUG9kcy5tYXRjaGVkKS50b0JlKDEpOwogICAgICAgICAgICAvLyBDaGVjayBpZiBuYW1lc3BhY2UncyBsYWJlbHMgbWF0Y2gKICAgICAgICAgICAgZXhwZWN0KHdyYXBwZXIudm0uJGRhdGEubWF0Y2hpbmdOYW1lc3BhY2VzLm1hdGNoZXMpLnRvSGF2ZUxlbmd0aCgxKTsKICAgICAgICAgICAgZXhwZWN0KHdyYXBwZXIudm0uJGRhdGEubWF0Y2hpbmdOYW1lc3BhY2VzLm1hdGNoZXNbMF0ubWV0YWRhdGEubmFtZSkudG9CZSgnZGVmYXVsdCcpOwogICAgICAgICAgICBleHBlY3Qod3JhcHBlci52bS4kZGF0YS5tYXRjaGluZ05hbWVzcGFjZXMubWF0Y2hlc1swXS5tZXRhZGF0YS5sYWJlbHNbJ3VzZXInXSkudG9CZSgnYWxpY2UnKTsKICAgICAgICAgICAgZXhwZWN0KHdyYXBwZXIudm0uJGRhdGEubWF0Y2hpbmdQb2RzLm1hdGNoZXNbMF0ubWV0YWRhdGEubmFtZSkudG9CZSgndGVzdC1wb2QnKTsKICAgICAgICAgICAgZXhwZWN0KHdyYXBwZXIudm0uJGRhdGEubWF0Y2hpbmdQb2RzLm1hdGNoZXNbMF0ubWV0YWRhdGEubGFiZWxzWydmb28nXSkudG9CZSgnYmFyJyk7CiAgICAgICAgICAgIGV4cGVjdChzZWxlY3RvcnMubmFtZXNwYWNlLmVsZW1lbnQpLnRvQmVVbmRlZmluZWQoKTsKICAgICAgICAgICAgZXhwZWN0KHNlbGVjdG9ycy5wb2QuZWxlbWVudCkudG9CZVVuZGVmaW5lZCgpOwogICAgICAgICAgICBleHBlY3Qoc2VsZWN0b3JzLm5hbWVzcGFjZUFuZFBvZC5uYW1lc3BhY2VSdWxlLmVsZW1lbnQpLnRvQmVEZWZpbmVkKCk7CiAgICAgICAgICAgIGV4cGVjdChzZWxlY3RvcnMubmFtZXNwYWNlQW5kUG9kLnBvZFJ1bGUuZWxlbWVudCkudG9CZURlZmluZWQoKTsKICAgICAgICB9KTsKICAgIH0pOwp9KTsK"},{"version":3,"file":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/__tests__/PolicyRuleTarget.spec.ts","sourceRoot":"","sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/__tests__/PolicyRuleTarget.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { mount } from '@vue/test-utils';\nimport PolicyRuleTarget from '@shell/edit/networking.k8s.io.networkpolicy/PolicyRuleTarget';\nimport { cleanHtmlDirective } from '@shell/plugins/clean-html-directive';\nimport mock from '@shell/edit/networking.k8s.io.networkpolicy/__tests__/utils/mock.json';\nimport { PolicyRuleTargetSelectors } from '@shell/edit/networking.k8s.io.networkpolicy/__tests__/utils/selectors.test.ts';\n\ndescribe.each([\n  'view',\n  'edit',\n])('component: PolicyRuleTarget', (mode) => {\n  const mockExists = jest.fn().mockReturnValue(true);\n  const mockT = jest.fn().mockReturnValue('some-string');\n\n  const wrapper = mount(PolicyRuleTarget, {\n    data() {\n      return { throttleTime: 0 };\n    },\n    propsData: {\n      namespace:     mock.defaultNamespace,\n      allNamespaces: mock.allNamespaces,\n      allPods:       mock.allPods,\n      type:          'ingress',\n      mode\n    },\n\n    directives: { cleanHtmlDirective },\n\n    mocks: {\n      $store: {\n        getters: {\n          'i18n/exists': mockExists,\n          'i18n/t':      mockT\n        }\n      }\n    }\n  });\n\n  describe(`${ mode } mode`, () => {\n    it('should display ip-block selector rule', async() => {\n      const ipBlock = mock.selectors.ipBlock;\n\n      await wrapper.setProps({ value: { ipBlock } });\n\n      const selectors = new PolicyRuleTargetSelectors(wrapper);\n\n      // Check rule type selector\n      expect(selectors.ruleType.vm.$data._value.value).toBe('ipBlock');\n\n      expect(selectors.namespace.element).toBeUndefined();\n      expect(selectors.pod.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.namespaceRule.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.podRule.element).toBeUndefined();\n\n      expect(selectors.ipBlock.element._value).toStrictEqual(ipBlock.cidr);\n    });\n\n    it('should display namespace selector rule', async() => {\n      const namespaceSelector = mock.selectors.namespace;\n\n      await wrapper.setProps({ value: { namespaceSelector } });\n\n      const selectors = new PolicyRuleTargetSelectors(wrapper);\n\n      // Check rule type selector\n      expect(selectors.ruleType.vm.$data._value.value).toBe('namespaceSelector');\n\n      // Check the matching namespaces displayed by the banner\n      expect(wrapper.vm.$data.matchingNamespaces.matched).toBe(1);\n\n      // Check if namespace's labels match\n      expect(wrapper.vm.$data.matchingNamespaces.matches).toHaveLength(1);\n      expect(wrapper.vm.$data.matchingNamespaces.matches[0].metadata.name).toBe('default');\n      expect(wrapper.vm.$data.matchingNamespaces.matches[0].metadata.labels['user']).toBe('alice');\n\n      expect(selectors.pod.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.namespaceRule.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.podRule.element).toBeUndefined();\n\n      expect(selectors.namespace.element).toBeDefined();\n    });\n\n    it('should display pod selector rule', async() => {\n      const podSelector = mock.selectors.pod;\n\n      await wrapper.setProps({ value: { podSelector } });\n\n      const selectors = new PolicyRuleTargetSelectors(wrapper);\n\n      // Check rule type selector\n      expect(selectors.ruleType.vm.$data._value.value).toBe('podSelector');\n\n      // Check if namespace's labels match\n      expect(wrapper.vm.$data.matchingPods.matched).toBe(1);\n      expect(wrapper.vm.$data.matchingPods.matches).toHaveLength(1);\n\n      expect(wrapper.vm.$data.matchingPods.matches[0].metadata.name).toBe('test-pod');\n      expect(wrapper.vm.$data.matchingPods.matches[0].metadata.labels['foo']).toBe('bar');\n\n      expect(selectors.namespace.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.namespaceRule.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.podRule.element).toBeUndefined();\n\n      expect(selectors.pod.element).toBeDefined();\n    });\n\n    it('should display namespace/pod selector rule', async() => {\n      const namespaceSelector = mock.selectors.namespaceAndPod.namespace;\n      const podSelector = mock.selectors.namespaceAndPod.pod;\n\n      await wrapper.setProps({\n        value: {\n          namespaceSelector,\n          podSelector,\n        }\n      });\n\n      const selectors = new PolicyRuleTargetSelectors(wrapper);\n\n      // Check rule type selector\n      expect(selectors.ruleType.vm.$data._value.value).toBe('namespaceAndPodSelector');\n\n      // Check the matching pods displayed by the banner\n      expect(wrapper.vm.$data.matchingPods.matched).toBe(1);\n\n      // Check if namespace's labels match\n      expect(wrapper.vm.$data.matchingNamespaces.matches).toHaveLength(1);\n      expect(wrapper.vm.$data.matchingNamespaces.matches[0].metadata.name).toBe('default');\n      expect(wrapper.vm.$data.matchingNamespaces.matches[0].metadata.labels['user']).toBe('alice');\n\n      expect(wrapper.vm.$data.matchingPods.matches[0].metadata.name).toBe('test-pod');\n      expect(wrapper.vm.$data.matchingPods.matches[0].metadata.labels['foo']).toBe('bar');\n\n      expect(selectors.namespace.element).toBeUndefined();\n      expect(selectors.pod.element).toBeUndefined();\n\n      expect(selectors.namespaceAndPod.namespaceRule.element).toBeDefined();\n      expect(selectors.namespaceAndPod.podRule.element).toBeDefined();\n    });\n  });\n});\n"]}]}