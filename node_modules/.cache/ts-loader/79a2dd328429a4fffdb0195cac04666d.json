{"remainingRequest":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/rke2.test.ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/rke2.test.ts","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/rke2.test.ts","sourceRoot":"","sources":["/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/rke2.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AACtD,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AACrD,OAAO,IAAI,MAAM,qDAAqD,CAAC;AAEvE;;;;;;GAMG;AACH,MAAM,YAAY,GAAG;IACnB,WAAW,EAAe,EAAE,QAAQ,EAAE,0BAA0B,EAAE;IAClE,MAAM,EAAoB,IAAI;IAC9B,aAAa,EAAa,IAAI;IAC9B,GAAG,EAAuB,IAAI;IAC9B,QAAQ,EAAkB,IAAI;IAC9B,kBAAkB,EAAQ,IAAI;IAC9B,SAAS,EAAiB,IAAI;IAC9B,gBAAgB,EAAU,IAAI;IAC9B,UAAU,EAAgB,IAAI;IAC9B,QAAQ,EAAkB,IAAI;IAC9B,uBAAuB,EAAG,IAAI;IAC9B,YAAY,EAAc,IAAI;IAC9B,YAAY,EAAc,IAAI;IAC9B,MAAM,EAAoB,IAAI;IAC9B,OAAO,EAAmB,IAAI;IAC9B,WAAW,EAAe,IAAI;IAC9B,gBAAgB,EAAU,IAAI;IAC9B,iBAAiB,EAAS,IAAI;IAC9B,SAAS,EAAiB,IAAI;IAC9B,UAAU,EAAgB,IAAI;IAC9B,eAAe,EAAW,IAAI;IAC9B,eAAe,EAAW,IAAI;IAC9B,QAAQ,EAAkB,IAAI;IAC9B,gBAAgB,EAAU,IAAI;IAC9B,wBAAwB,EAAE,IAAI;IAC9B,GAAG,EAAuB,IAAI;IAC9B,MAAM,EAAoB,IAAI;IAC9B,SAAS,EAAiB,IAAI;IAC9B,UAAU,EAAgB,IAAI;IAC9B,WAAW,EAAe,IAAI;IAC9B,MAAM,EAAoB,IAAI;IAC9B,IAAI,EAAsB,IAAI;IAC9B,UAAU,EAAgB,IAAI;IAC9B,OAAO,EAAmB,IAAI;IAC9B,UAAU,EAAgB,IAAI;IAC9B,WAAW,EAAe,IAAI;IAC9B,QAAQ,EAAkB,IAAI;CAC/B,CAAC;AAEF,MAAM,aAAa,GAAG,EAAE,qBAAqB,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;AAE9G,MAAM,eAAe,GAAG;IACtB,QAAQ;QACN,OAAO,IAAI,CAAC;IACd,CAAC;IACD,cAAc;QACZ,OAAO;YACL;gBACE,EAAE,EAAE,gBAAgB,EAAE,KAAK,EAAE,gBAAgB,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,EAAE,EAAE;aACpG;YACD;gBACE,EAAE,EAAE,gBAAgB,EAAE,KAAK,EAAE,gBAAgB,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,EAAE,EAAE;aACpG;YACD;gBACE,EAAE,EAAE,gBAAgB,EAAE,KAAK,EAAE,gBAAgB,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,EAAE,EAAE;aACpG;YACD;gBACE,EAAE,EAAE,cAAc,EAAE,KAAK,EAAE,cAAc,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,EAAE,EAAE;aAChG;YACD;gBACE,EAAE,EAAE,cAAc,EAAE,KAAK,EAAE,cAAc,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,EAAE,EAAE;aAChG;SACF,CAAC;IACJ,CAAC;CACF,CAAC;AAEF,MAAM,cAAc,GAAG;IACrB,YAAY,EAAuB,GAAG,EAAE,CAAC,eAAe;IACxD,sBAAsB,EAAa,IAAI,CAAC,EAAE,EAAE;IAC5C,mBAAmB,EAAgB,IAAI,CAAC,EAAE,EAAE;IAC5C,QAAQ,EAA2B,IAAI,CAAC,EAAE,EAAE;IAC5C,mBAAmB,EAAgB,IAAI,CAAC,EAAE,EAAE;IAC5C,gCAAgC,EAAG,IAAI,CAAC,EAAE,EAAE;IAC5C,iCAAiC,EAAE,IAAI,CAAC,EAAE,EAAE;CAC7C,CAAC;AAEF,MAAM,YAAY,GAAG;IACnB,WAAW,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;IAC/B,MAAM,EAAO;QACX,IAAI,EAAG,UAAU;QACjB,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE;KACtB;CACF,CAAC;AAEF,MAAM,WAAW,GAAG;IAClB,SAAS,EAAI,EAAE,IAAI,EAAE,EAAE,gBAAgB,EAAE,KAAK,EAAE,EAAE;IAClD,WAAW,EAAE,EAAE;CAChB,CAAC;AAEF,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B;;;;MAIE;IACF,yCAAyC;IACzC,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,IAAI,CAAC;QACN,CAAC,QAAQ,EAAE,IAAI,CAAC;QAChB,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,0DAA0D;KACpF,CAAC,CAAC,0FAA0F,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE;QAClH,MAAM,GAAG,GAAG,gBAAgB,CAAC;QAC7B,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,EAAE;YAC1B,SAAS,EAAE;gBACT,IAAI,EAAG,OAAO;gBACd,KAAK,EAAE;oBACL,IAAI,EAAE;wBACJ,GAAG,WAAW;wBACd,iBAAiB,EAAE,GAAG;qBAEvB;oBACD,WAAW,EAAE,EAAE,qBAAqB,EAAE,KAAK,EAAE;iBAC9C;gBACD,eAAe,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE;gBAC7C,QAAQ;aACT;YACD,QAAQ,EAAE,eAAe;YACzB,KAAK,EAAK;gBACR,GAAG,YAAY;gBACf,MAAM,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE;aAC/D;YACD,KAAK,EAAE,YAAY;SACpB,CAAC,CAAC;QAEH,MAAM,CAAE,OAAO,CAAC,EAAU,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mEAAmE,EAAE,GAAG,EAAE;QAC3E,MAAM,GAAG,GAAG,cAAc,CAAC;QAC3B,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,EAAE;YAC1B,SAAS,EAAE;gBACT,IAAI,EAAG,OAAO;gBACd,KAAK,EAAE;oBACL,IAAI,EAAE;wBACJ,GAAG,WAAW;wBACd,iBAAiB,EAAE,GAAG;qBACvB;oBACD,WAAW,EAAE,EAAE,qBAAqB,EAAE,KAAK,EAAE;iBAC9C;gBACD,QAAQ,EAAE,QAAQ;aACnB;YACD,IAAI,EAAM,GAAG,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,oBAAoB,EAAE,CAAC;YACxD,QAAQ,EAAE,eAAe;YACzB,KAAK,EAAK;gBACR,GAAG,YAAY;gBACf,MAAM,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE;aAC/D;YACD,KAAK,EAAE,YAAY;SACpB,CAAC,CAAC;QAEH,MAAM,CAAE,OAAO,CAAC,EAAU,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE,KAAK,IAAG,EAAE;QAC5E,MAAM,GAAG,GAAG,cAAc,CAAC;QAC3B,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,EAAE;YAC1B,SAAS,EAAE;gBACT,IAAI,EAAG,OAAO;gBACd,KAAK,EAAE;oBACL,IAAI,EAAE;wBACJ,GAAG,WAAW;wBACd,iBAAiB,EAAE,GAAG;qBACvB;oBACD,WAAW,EAAE,EAAE,qBAAqB,EAAE,KAAK,EAAE;iBAC9C;gBACD,QAAQ,EAAE,QAAQ;aACnB;YACD,IAAI,EAAM,GAAG,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,oBAAoB,EAAE,CAAC;YACxD,QAAQ,EAAE,eAAe;YACzB,KAAK,EAAK;gBACR,GAAG,YAAY;gBACf,MAAM,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE;aAC/D;YACD,KAAK,EAAE,YAAY;SACpB,CAAC,CAAC;QAEH,MAAM,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC;QAE7B,OAAO,CAAC,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACtF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oHAAoH,EAAE,KAAK,IAAG,EAAE;QACjI,MAAM,GAAG,GAAG,cAAc,CAAC;QAE3B,MAAM,SAAS,GAAG,WAAW,CAAC;QAC9B,MAAM,wBAAwB,GAAG,0BAA0B,CAAC;QAE5D,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;QAE/C,OAAO,CAAC,SAAS,CAAC,eAAe,GAAG,EAAE,SAAS,EAAE,oBAAoB,EAAE,CAAC;QAExE,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,EAAE;YAC1B,SAAS,EAAE;gBACT,IAAI,EAAG,OAAO;gBACd,KAAK,EAAE;oBACL,IAAI,EAAE;wBACJ,GAAG,OAAO;wBACV,iBAAiB,EAAE,GAAG;qBACvB;oBACD,QAAQ,EAAK,EAAE,IAAI,EAAE,cAAc,EAAE;oBACrC,WAAW,EAAE,EAAE,qBAAqB,EAAE,SAAS,EAAE;iBAClD;gBACD,QAAQ,EAAE,QAAQ;aACnB;YACD,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;gBACX,YAAY,EAAE,oBAAoB;gBAClC,UAAU,EAAI,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,iBAAiB,EAAE,EAAE;gBAC/D,YAAY,EAAE,EAAE;aACjB,CAAC;YACF,QAAQ,EAAE,eAAe;YACzB,KAAK,EAAK;gBACR,GAAG,YAAY;gBACf,MAAM,EAAE;oBACN,mDAAmD;oBACnD,QAAQ,EAAE,CAAC,MAAW,EAAE,IAAS,EAAE,EAAE;wBACnC,IAAI,MAAM,KAAK,mBAAmB,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;4BAC1D,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;yBAChC;6BAAM;4BACL,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC;yBAClB;oBACH,CAAC;oBACD,OAAO,EAAE,cAAc;iBACxB;aACF;YACD,KAAK,EAAE,YAAY;SACpB,CAAC,CAAC;QAEH,oEAAoE;QACpE,kCAAkC;QAClC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,kBAAkB,EAAE,CAAC;QAEpD,MAAM,OAAO,CAAC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAE5C,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC,eAAe,CAAC,CAAC,aAAa,CAAC,2DAA2D,CAAC,CAAC;IACtJ,CAAC,CAAC,CAAC;IAEH,gGAAgG;IAChG,kDAAkD;IAClD,QAAQ,CAAC,IAAI,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACjE,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAG,EAAE;YAC5C,MAAM,OAAO,GAAG,YAAY,CAAC,IAAI,EAAE;gBACjC,SAAS,EAAE;oBACT,IAAI,EAAG,QAAQ;oBACf,KAAK,EAAE;wBACL,IAAI,EAAS,EAAE,GAAG,WAAW,EAAE;wBAC/B,WAAW,EAAE,EAAE,qBAAqB,EAAE,KAAK,EAAE;qBAC9C;oBACD,QAAQ,EAAE,QAAQ;iBACnB;gBACD,QAAQ,EAAE,eAAe;gBACzB,KAAK,EAAK;oBACR,GAAG,YAAY;oBACf,MAAM,EAAE;wBACN,OAAO,EAAG,cAAc;wBACxB,QAAQ,EAAE;4BACR,oBAAoB,EAAE,IAAI,CAAC,EAAE,EAAE;4BAC/B,iBAAiB,EAAK,IAAI,CAAC,EAAE,EAAE;4BAC/B,oBAAoB,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;yBACjC;qBACF;iBACF;gBACD,KAAK,EAAE,YAAY;aACpB,CAAC,CAAC;YACH,MAAM,kBAAkB,GAAG;gBACzB,mCAAmC,EAAE;oBACnC,gBAAgB,EAAc,EAAE;oBAChC,iBAAiB,EAAa,EAAE;oBAChC,4BAA4B,EAAE,EAAE;iBACjC;gBACD,iCAAiC,EAAE;oBACjC,gBAAgB,EAAc,EAAE;oBAChC,iBAAiB,EAAa,EAAE;oBAChC,4BAA4B,EAAE,EAAE;iBACjC;aACF,CAAC;YAEF,6BAA6B;YAC7B,OAAO,CAAC,OAAO,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;YAEtC,qCAAqC;YAErC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAG,EAAE;YACrD,MAAM,OAAO,GAAG,YAAY,CAAC,IAAI,EAAE;gBACjC,SAAS,EAAE;oBACT,IAAI,EAAG,QAAQ;oBACf,KAAK,EAAE;wBACL,IAAI,EAAS,EAAE,GAAG,WAAW,EAAE;wBAC/B,WAAW,EAAE,EAAE,qBAAqB,EAAE,KAAK,EAAE;qBAC9C;oBACD,QAAQ,EAAE,QAAQ;iBACnB;gBACD,QAAQ,EAAE,eAAe;gBACzB,KAAK,EAAK;oBACR,GAAG,YAAY;oBACf,MAAM,EAAE;wBACN,OAAO,EAAG,cAAc;wBACxB,QAAQ,EAAE;4BACR,oBAAoB,EAAE,IAAI,CAAC,EAAE,EAAE;4BAC/B,iBAAiB,EAAK,IAAI,CAAC,EAAE,EAAE;4BAC/B,oBAAoB,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;yBACjC;qBACF;iBACF;gBACD,KAAK,EAAE,YAAY;aACpB,CAAC,CAAC;YACH,MAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;YAExE,6BAA6B;YAC7B,OAAO,CAAC,OAAO,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;YAEtC,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAElC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { mount, shallowMount } from '@vue/test-utils';\nimport { SECRET } from '@shell/config/types';\nimport { _CREATE } from '@shell/config/query-params';\nimport rke2 from '@shell/edit/provisioning.cattle.io.cluster/rke2.vue';\n\n/**\n * DISCLAIMER ***************************************************************************************\n * Declarations should not be done outside the tests!!\n * This component is overwhelming for test and requires too much initialization.\n * In this way the tests are more readable and we can avoid annoying repetitions.\n ****************************************************************************************************\n */\nconst defaultStubs = {\n  CruResource:              { template: '<div><slot></slot></div>' }, // Required to render the slot content\n  Banner:                   true,\n  LabeledSelect:            true,\n  ACE:                      true,\n  AgentEnv:                 true,\n  AgentConfiguration:       true,\n  ArrayList:                true,\n  ArrayListGrouped:         true,\n  BadgeState:               true,\n  Checkbox:                 true,\n  ClusterMembershipEditor:  true,\n  DrainOptions:             true,\n  LabeledInput:             true,\n  Labels:                   true,\n  Loading:                  true,\n  MachinePool:              true,\n  MatchExpressions:         true,\n  NameNsDescription:        true,\n  Questions:                true,\n  RadioGroup:               true,\n  RegistryConfigs:          true,\n  RegistryMirrors:          true,\n  S3Config:                 true,\n  SelectCredential:         true,\n  SelectOrCreateAuthSecret: true,\n  Tab:                      true,\n  Tabbed:                   true,\n  UnitInput:                true,\n  YamlEditor:               true,\n  MemberRoles:              true,\n  Basics:                   true,\n  Etcd:                     true,\n  Networking:               true,\n  Upgrade:                  true,\n  Registries:               true,\n  AddOnConfig:              true,\n  Advanced:                 true\n};\n\nconst mockAgentArgs = { 'cloud-provider-name': { options: [], profile: { options: [{ anything: 'yes' }] } } };\n\nconst defaultComputed = {\n  showForm() {\n    return true;\n  },\n  versionOptions() {\n    return [\n      {\n        id: 'v1.25.0+rke2r1', value: 'v1.25.0+rke2r1', serverArgs: {}, agentArgs: mockAgentArgs, charts: {}\n      },\n      {\n        id: 'v1.24.0+rke2r1', value: 'v1.24.0+rke2r1', serverArgs: {}, agentArgs: mockAgentArgs, charts: {}\n      },\n      {\n        id: 'v1.23.0+rke2r1', value: 'v1.23.0+rke2r1', serverArgs: {}, agentArgs: mockAgentArgs, charts: {}\n      },\n      {\n        id: 'v1.25.0+k3s1', value: 'v1.25.0+k3s1', serverArgs: {}, agentArgs: mockAgentArgs, charts: {}\n      },\n      {\n        id: 'v1.24.0+k3s1', value: 'v1.24.0+k3s1', serverArgs: {}, agentArgs: mockAgentArgs, charts: {}\n      }\n    ];\n  }\n};\n\nconst defaultGetters = {\n  currentStore:                      () => 'current_store',\n  'management/schemaFor':            jest.fn(),\n  'current_store/all':               jest.fn(),\n  'i18n/t':                          jest.fn(),\n  'i18n/withFallback':               jest.fn(),\n  'plugins/cloudProviderForDriver':  jest.fn(),\n  'customization/getPreviewCluster': jest.fn(),\n};\n\nconst defaultMocks = {\n  $fetchState: { pending: false },\n  $route:      {\n    name:  'anything',\n    query: { AS: 'yaml' },\n  },\n};\n\nconst defaultSpec = {\n  rkeConfig:   { etcd: { disableSnapshots: false } },\n  chartValues: {},\n};\n\ndescribe('component: rke2', () => {\n  /**\n   * DISCLAIMER ***************************************************************************************\n   * Logs are prevented to avoid polluting the test output.\n   ****************************************************************************************************\n  */\n  // eslint-disable-next-line jest/no-hooks\n  beforeEach(() => {\n    jest.spyOn(console, 'log').mockImplementation(() => { });\n  });\n\n  it.each([\n    ['custom', true],\n    ['anything else', false] // without proper data, machine pool is always not present\n  ])('should allow creation of RKE2 cluster with provider %p if pool machines are missing (%p)', (provider, result) => {\n    const k8s = 'v1.25.0+rke2r1';\n    const wrapper = mount(rke2, {\n      propsData: {\n        mode:  _CREATE,\n        value: {\n          spec: {\n            ...defaultSpec,\n            kubernetesVersion: k8s,\n\n          },\n          agentConfig: { 'cloud-provider-name': 'any' }\n        },\n        selectedVersion: { agentArgs: mockAgentArgs },\n        provider,\n      },\n      computed: defaultComputed,\n      mocks:    {\n        ...defaultMocks,\n        $store: { dispatch: () => jest.fn(), getters: defaultGetters },\n      },\n      stubs: defaultStubs\n    });\n\n    expect((wrapper.vm as any).validationPassed).toBe(result);\n  });\n\n  it('should allow creation of K3 clusters if pool machines are missing', () => {\n    const k8s = 'v1.25.0+k3s1';\n    const wrapper = mount(rke2, {\n      propsData: {\n        mode:  _CREATE,\n        value: {\n          spec: {\n            ...defaultSpec,\n            kubernetesVersion: k8s\n          },\n          agentConfig: { 'cloud-provider-name': 'any' }\n        },\n        provider: 'custom'\n      },\n      data:     () => ({ credentialId: 'I am authenticated' }),\n      computed: defaultComputed,\n      mocks:    {\n        ...defaultMocks,\n        $store: { dispatch: () => jest.fn(), getters: defaultGetters },\n      },\n      stubs: defaultStubs\n    });\n\n    expect((wrapper.vm as any).validationPassed).toBe(true);\n  });\n\n  it('should initialize machine pools with drain before delete true', async() => {\n    const k8s = 'v1.25.0+k3s1';\n    const wrapper = mount(rke2, {\n      propsData: {\n        mode:  _CREATE,\n        value: {\n          spec: {\n            ...defaultSpec,\n            kubernetesVersion: k8s\n          },\n          agentConfig: { 'cloud-provider-name': 'any' }\n        },\n        provider: 'custom'\n      },\n      data:     () => ({ credentialId: 'I am authenticated' }),\n      computed: defaultComputed,\n      mocks:    {\n        ...defaultMocks,\n        $store: { dispatch: () => jest.fn(), getters: defaultGetters },\n      },\n      stubs: defaultStubs\n    });\n\n    await wrapper.vm.initSpecs();\n\n    wrapper.vm.machinePools.forEach((p: any) => expect(p.drainBeforeDelete).toBe(true));\n  });\n\n  it('should set distro root directory from k8sDistro on a Harvester cluster creation on save override (_doSaveOverride)', async() => {\n    const k8s = 'v1.25.0+k3s1';\n\n    const HARVESTER = 'harvester';\n    const HARVESTER_CLOUD_PROVIDER = 'harvester-cloud-provider';\n\n    const newSpec = Object.assign({}, defaultSpec);\n\n    newSpec.rkeConfig.dataDirectories = { k8sDistro: 'my-k8s-distro-path' };\n\n    const wrapper = mount(rke2, {\n      propsData: {\n        mode:  _CREATE,\n        value: {\n          spec: {\n            ...newSpec,\n            kubernetesVersion: k8s\n          },\n          metadata:    { name: 'cluster-name' },\n          agentConfig: { 'cloud-provider-name': HARVESTER }\n        },\n        provider: 'custom'\n      },\n      data: () => ({\n        credentialId: 'I am authenticated',\n        credential:   { decodedData: { clusterId: 'some-cluster-id' } },\n        machinePools: [],\n      }),\n      computed: defaultComputed,\n      mocks:    {\n        ...defaultMocks,\n        $store: {\n          // mock secret creation on \"createKubeconfigSecret\"\n          dispatch: (action: any, opts: any) => {\n            if (action === 'management/create' && opts.type === SECRET) {\n              return { save: () => jest.fn };\n            } else {\n              return jest.fn();\n            }\n          },\n          getters: defaultGetters\n        },\n      },\n      stubs: defaultStubs\n    });\n\n    // we need to mock the \"save\" method from the create-edit-view-mixin\n    // otherwise we get console errors\n    jest.spyOn(wrapper.vm, 'save').mockImplementation();\n\n    await wrapper.vm._doSaveOverride(jest.fn());\n\n    expect(wrapper.vm.chartValues[HARVESTER_CLOUD_PROVIDER].cloudConfigPath).toStrictEqual('my-k8s-distro-path/etc/config-files/cloud-provider-config');\n  });\n\n  // TODO: Complete test after implementing fetch https://github.com/rancher/dashboard/issues/9322\n  // eslint-disable-next-line jest/no-disabled-tests\n  describe.skip('should initialize agent configuration values', () => {\n    it('adding default values if none', async() => {\n      const wrapper = shallowMount(rke2, {\n        propsData: {\n          mode:  'create',\n          value: {\n            spec:        { ...defaultSpec },\n            agentConfig: { 'cloud-provider-name': 'any' }\n          },\n          provider: 'custom'\n        },\n        computed: defaultComputed,\n        mocks:    {\n          ...defaultMocks,\n          $store: {\n            getters:  defaultGetters,\n            dispatch: {\n              'management/request': jest.fn(),\n              'management/find':    jest.fn(),\n              'management/findAll': () => ([]),\n            }\n          },\n        },\n        stubs: defaultStubs\n      });\n      const defaultAgentConfig = {\n        clusterAgentDeploymentCustomization: {\n          overrideAffinity:             {},\n          appendTolerations:            [],\n          overrideResourceRequirements: {}\n        },\n        fleetAgentDeploymentCustomization: {\n          overrideAffinity:             {},\n          appendTolerations:            [],\n          overrideResourceRequirements: {}\n        }\n      };\n\n      // Setting RKE to avoid calls\n      wrapper.setData({ rke2Versions: [] });\n\n      // await rke2.fetch.call(wrapper.vm);\n\n      expect(wrapper.props().value.spec).toContain(defaultAgentConfig);\n    });\n\n    it('should display agent configuration tab', async() => {\n      const wrapper = shallowMount(rke2, {\n        propsData: {\n          mode:  'create',\n          value: {\n            spec:        { ...defaultSpec },\n            agentConfig: { 'cloud-provider-name': 'any' }\n          },\n          provider: 'custom'\n        },\n        computed: defaultComputed,\n        mocks:    {\n          ...defaultMocks,\n          $store: {\n            getters:  defaultGetters,\n            dispatch: {\n              'management/request': jest.fn(),\n              'management/find':    jest.fn(),\n              'management/findAll': () => ([]),\n            }\n          },\n        },\n        stubs: defaultStubs\n      });\n      const agent = wrapper.find('[data-testid=\"rke2-cluster-agent-config\"]');\n\n      // Setting RKE to avoid calls\n      wrapper.setData({ rke2Versions: [] });\n\n      await rke2.fetch.call(wrapper.vm);\n\n      expect(agent.element).toBeDefined();\n    });\n  });\n});\n"]}]}