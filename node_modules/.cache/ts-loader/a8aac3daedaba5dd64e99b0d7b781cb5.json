{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/ts-loader/index.js??ref--17-1!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/__tests__/service.test.ts","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/__tests__/service.test.ts","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/ts-loader/index.js","mtime":1725271299135}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgc2hhbGxvd01vdW50IH0gZnJvbSAnQHZ1ZS90ZXN0LXV0aWxzJzsKaW1wb3J0IHsgX0NMT05FIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9xdWVyeS1wYXJhbXMnOwppbXBvcnQgeyBjbGVhbkh0bWxEaXJlY3RpdmUgfSBmcm9tICdAc2hlbGwvcGx1Z2lucy9jbGVhbi1odG1sLWRpcmVjdGl2ZSc7CmltcG9ydCBTZXJ2aWNlUGFnZSBmcm9tICdAc2hlbGwvZWRpdC9zZXJ2aWNlLnZ1ZSc7CmNvbnN0IGNyZWF0ZUVkaXRWaWV3TW9jayA9IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsgZXJyb3JzOiBbXSB9OwogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgaXNDcmVhdGU6ICgpID0+IGZhbHNlLAogICAgICAgIGlzRWRpdDogKCkgPT4gdHJ1ZSwKICAgICAgICBpc1ZpZXc6ICgpID0+IGZhbHNlLAogICAgICAgIHNjaGVtYTogKCkgPT4gKHt9KSwKICAgICAgICBpc05hbWVzcGFjZWQ6ICgpID0+IGZhbHNlLAogICAgICAgIGxhYmVsczogewogICAgICAgICAgICBnZXQ6IGplc3QuZm4oKCkgPT4gKHt9KSksCiAgICAgICAgICAgIHNldDogamVzdC5mbigpLAogICAgICAgIH0sCiAgICAgICAgYW5ub3RhdGlvbnM6IHsKICAgICAgICAgICAgZ2V0OiBqZXN0LmZuKCgpID0+ICh7fSkpLAogICAgICAgICAgICBzZXQ6IGplc3QuZm4oKSwKICAgICAgICB9LAogICAgICAgIGRvbmVSb3V0ZTogKCkgPT4gJ21vY2tlZFJvdXRlJywKICAgICAgICBkb25lUGFyYW1zOiAoKSA9PiAoe30pLAogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBkb25lOiBqZXN0LmZuKCksCiAgICAgICAgY29uZmxpY3Q6IGplc3QuZm4oKCkgPT4gUHJvbWlzZS5yZXNvbHZlKFtdKSksCiAgICAgICAgc2F2ZTogamVzdC5mbigoKSA9PiBQcm9taXNlLnJlc29sdmUoKSksCiAgICAgICAgYWN0dWFsbHlTYXZlOiBqZXN0LmZuKCgpID0+IFByb21pc2UucmVzb2x2ZSgpKSwKICAgICAgICBzZXRFcnJvcnM6IGplc3QuZm4oKQogICAgfQp9Owpjb25zdCBmb3JtVmFsaWRhdGlvbk1vY2sgPSB7fTsKZGVzY3JpYmUoJ3NlcnZpY2UgZWRpdCcsICgpID0+IHsKICAgIGxldCB3cmFwcGVyOwogICAgY29uc3QgY3JlYXRlQ29tcG9uZW50ID0gKHByb3BzRGF0YSkgPT4gewogICAgICAgIHdyYXBwZXIgPSBzaGFsbG93TW91bnQoU2VydmljZVBhZ2UsIHsKICAgICAgICAgICAgcHJvcHNEYXRhLAogICAgICAgICAgICBtaXhpbnM6IFtjcmVhdGVFZGl0Vmlld01vY2ssIGZvcm1WYWxpZGF0aW9uTW9ja10sCiAgICAgICAgICAgIG1vY2tzOiB7CiAgICAgICAgICAgICAgICAkc3RvcmU6IHsKICAgICAgICAgICAgICAgICAgICBnZXR0ZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICdtYW5hZ2VtZW50L2FsbCc6IGplc3QuZm4oKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2kxOG4vdCc6IGplc3QuZm4oKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgY29tcHV0ZWQ6IHsgcHJvdmlzaW9uaW5nQ2x1c3RlcjogamVzdC5mbigpIH0sCiAgICAgICAgICAgIGRpcmVjdGl2ZXM6IHsgY2xlYW5IdG1sRGlyZWN0aXZlIH0sCiAgICAgICAgfSk7CiAgICB9OwogICAgaXQoJ3NldHMgY2x1c3RlcklQIHRvIGFuIGVtcHR5IHN0cmluZyBhbmQgZGVsZXRlcyBjbHVzdGVySVBzIHdoZW4gaW4gY2xvbmUgbW9kZScsICgpID0+IHsKICAgICAgICBjb25zdCB2YWx1ZSA9IHsKICAgICAgICAgICAgc3BlYzogewogICAgICAgICAgICAgICAgY2x1c3RlcklQOiAnMTAuNDMuMS4xJywKICAgICAgICAgICAgICAgIGNsdXN0ZXJJUHM6IFsnMTAuNDMuMS4xJywgJzEwLjQzLjEuMiddLAogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBjcmVhdGVDb21wb25lbnQoeyByZWFsTW9kZTogX0NMT05FLCB2YWx1ZSB9KTsKICAgICAgICBleHBlY3Qod3JhcHBlci52bS52YWx1ZS5zcGVjLmNsdXN0ZXJJUCkudG9CZSgnJyk7CiAgICAgICAgZXhwZWN0KHdyYXBwZXIudm0udmFsdWUuc3BlYy5jbHVzdGVySVBzKS50b0JlVW5kZWZpbmVkKCk7CiAgICB9KTsKICAgIGl0KCdkb2VzIG5vdCBjaGFuZ2UgY2x1c3RlcklQIGFuZCBjbHVzdGVySVBzIHdoZW4gbm90IGluIGNsb25lIG1vZGUnLCAoKSA9PiB7CiAgICAgICAgY29uc3QgdmFsdWUgPSB7CiAgICAgICAgICAgIHNwZWM6IHsKICAgICAgICAgICAgICAgIGNsdXN0ZXJJUDogJzEwLjQzLjEuMScsCiAgICAgICAgICAgICAgICBjbHVzdGVySVBzOiBbJzEwLjQzLjEuMScsICcxMC40My4xLjInXSwKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgY3JlYXRlQ29tcG9uZW50KHsgcmVhbE1vZGU6ICdzb21lT3RoZXJNb2RlJywgdmFsdWUgfSk7CiAgICAgICAgZXhwZWN0KHdyYXBwZXIudm0udmFsdWUuc3BlYy5jbHVzdGVySVApLnRvQmUoJzEwLjQzLjEuMScpOwogICAgICAgIGV4cGVjdCh3cmFwcGVyLnZtLnZhbHVlLnNwZWMuY2x1c3RlcklQcykudG9TdHJpY3RFcXVhbChbJzEwLjQzLjEuMScsICcxMC40My4xLjInXSk7CiAgICB9KTsKfSk7Cg=="},{"version":3,"file":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/__tests__/service.test.ts","sourceRoot":"","sources":["/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/__tests__/service.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAW,MAAM,iBAAiB,CAAC;AAExD,OAAO,EAAE,MAAM,EAAE,MAAM,4BAA4B,CAAC;AACpD,OAAO,EAAE,kBAAkB,EAAE,MAAM,qCAAqC,CAAC;AAEzE,OAAO,WAAW,MAAM,yBAAyB,CAAC;AAElD,MAAM,kBAAkB,GAAG;IACzB,IAAI;QACF,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC;IACD,QAAQ,EAAE;QACR,QAAQ,EAAM,GAAG,EAAE,CAAC,KAAK;QACzB,MAAM,EAAQ,GAAG,EAAE,CAAC,IAAI;QACxB,MAAM,EAAQ,GAAG,EAAE,CAAC,KAAK;QACzB,MAAM,EAAQ,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;QACxB,YAAY,EAAE,GAAG,EAAE,CAAC,KAAK;QACzB,MAAM,EAAQ;YACZ,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACxB,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE;SACf;QACD,WAAW,EAAE;YACX,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACxB,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE;SACf;QACD,SAAS,EAAG,GAAG,EAAE,CAAC,aAAa;QAC/B,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;KACvB;IACD,OAAO,EAAE;QACP,IAAI,EAAU,IAAI,CAAC,EAAE,EAAE;QACvB,QAAQ,EAAM,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAChD,IAAI,EAAU,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC9C,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC9C,SAAS,EAAK,IAAI,CAAC,EAAE,EAAE;KACxB;CACF,CAAC;AAEF,MAAM,kBAAkB,GAAG,EAAE,CAAC;AAE9B,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,IAAI,OAAkD,CAAC;IAEvD,MAAM,eAAe,GAAG,CAAC,SAAc,EAAE,EAAE;QACzC,OAAO,GAAG,YAAY,CAAC,WAAW,EAChC;YACE,SAAS;YACT,MAAM,EAAE,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;YAChD,KAAK,EAAG;gBACN,MAAM,EAAE;oBACN,OAAO,EAAE;wBACP,gBAAgB,EAAE,IAAI,CAAC,EAAE,EAAE;wBAC3B,QAAQ,EAAU,IAAI,CAAC,EAAE,EAAE;qBAC5B;iBACF;aACF;YACD,QAAQ,EAAI,EAAE,mBAAmB,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE;YAC9C,UAAU,EAAE,EAAE,kBAAkB,EAAE;SACnC,CACF,CAAC;IACJ,CAAC,CAAC;IAEF,EAAE,CAAC,6EAA6E,EAAE,GAAG,EAAE;QACrF,MAAM,KAAK,GAAG;YACZ,IAAI,EAAE;gBACJ,SAAS,EAAG,WAAW;gBACvB,UAAU,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;aACvC;SACF,CAAC;QAEF,eAAe,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QAE7C,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACjD,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,aAAa,EAAE,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iEAAiE,EAAE,GAAG,EAAE;QACzE,MAAM,KAAK,GAAG;YACZ,IAAI,EAAE;gBACJ,SAAS,EAAG,WAAW;gBACvB,UAAU,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;aACvC;SACF,CAAC;QAEF,eAAe,CAAC,EAAE,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC,CAAC;QAEtD,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1D,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;IACrF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { shallowMount, Wrapper } from '@vue/test-utils';\n\nimport { _CLONE } from '@shell/config/query-params';\nimport { cleanHtmlDirective } from '@shell/plugins/clean-html-directive';\n\nimport ServicePage from '@shell/edit/service.vue';\n\nconst createEditViewMock = {\n  data() {\n    return { errors: [] };\n  },\n  computed: {\n    isCreate:     () => false,\n    isEdit:       () => true,\n    isView:       () => false,\n    schema:       () => ({}),\n    isNamespaced: () => false,\n    labels:       {\n      get: jest.fn(() => ({})),\n      set: jest.fn(),\n    },\n    annotations: {\n      get: jest.fn(() => ({})),\n      set: jest.fn(),\n    },\n    doneRoute:  () => 'mockedRoute',\n    doneParams: () => ({}),\n  },\n  methods: {\n    done:         jest.fn(),\n    conflict:     jest.fn(() => Promise.resolve([])),\n    save:         jest.fn(() => Promise.resolve()),\n    actuallySave: jest.fn(() => Promise.resolve()),\n    setErrors:    jest.fn()\n  }\n};\n\nconst formValidationMock = {};\n\ndescribe('service edit', () => {\n  let wrapper: Wrapper<InstanceType<typeof ServicePage>>;\n\n  const createComponent = (propsData: any) => {\n    wrapper = shallowMount(ServicePage,\n      {\n        propsData,\n        mixins: [createEditViewMock, formValidationMock],\n        mocks:  {\n          $store: {\n            getters: {\n              'management/all': jest.fn(),\n              'i18n/t':         jest.fn()\n            }\n          }\n        },\n        computed:   { provisioningCluster: jest.fn() },\n        directives: { cleanHtmlDirective },\n      }\n    );\n  };\n\n  it('sets clusterIP to an empty string and deletes clusterIPs when in clone mode', () => {\n    const value = {\n      spec: {\n        clusterIP:  '10.43.1.1',\n        clusterIPs: ['10.43.1.1', '10.43.1.2'],\n      }\n    };\n\n    createComponent({ realMode: _CLONE, value });\n\n    expect(wrapper.vm.value.spec.clusterIP).toBe('');\n    expect(wrapper.vm.value.spec.clusterIPs).toBeUndefined();\n  });\n\n  it('does not change clusterIP and clusterIPs when not in clone mode', () => {\n    const value = {\n      spec: {\n        clusterIP:  '10.43.1.1',\n        clusterIPs: ['10.43.1.1', '10.43.1.2'],\n      }\n    };\n\n    createComponent({ realMode: 'someOtherMode', value });\n\n    expect(wrapper.vm.value.spec.clusterIP).toBe('10.43.1.1');\n    expect(wrapper.vm.value.spec.clusterIPs).toStrictEqual(['10.43.1.1', '10.43.1.2']);\n  });\n});\n"]}]}