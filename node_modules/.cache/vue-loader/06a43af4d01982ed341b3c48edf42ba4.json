{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/rancher-components/Form/LabeledInput/LabeledInput.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/rancher-components/Form/LabeledInput/LabeledInput.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/ts-loader/index.js","mtime":1725271299135},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBWdWUsIHsgVnVlQ29uc3RydWN0b3IgfSBmcm9tICd2dWUnOwppbXBvcnQgQ29tcGFjdElucHV0IGZyb20gJ0BzaGVsbC9taXhpbnMvY29tcGFjdC1pbnB1dCc7CmltcG9ydCBMYWJlbGVkRm9ybUVsZW1lbnQgZnJvbSAnQHNoZWxsL21peGlucy9sYWJlbGVkLWZvcm0tZWxlbWVudCc7CmltcG9ydCBUZXh0QXJlYUF1dG9Hcm93IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vVGV4dEFyZWEvVGV4dEFyZWFBdXRvR3Jvdy52dWUnOwppbXBvcnQgTGFiZWxlZFRvb2x0aXAgZnJvbSAnQGNvbXBvbmVudHMvTGFiZWxlZFRvb2x0aXAvTGFiZWxlZFRvb2x0aXAudnVlJzsKaW1wb3J0IHsgZXNjYXBlSHRtbCB9IGZyb20gJ0BzaGVsbC91dGlscy9zdHJpbmcnOwppbXBvcnQgY3JvbnN0cnVlIGZyb20gJ2Nyb25zdHJ1ZSc7CmltcG9ydCB7IGlzVmFsaWRDcm9uIH0gZnJvbSAnY3Jvbi12YWxpZGF0b3InOwppbXBvcnQgeyBkZWJvdW5jZSB9IGZyb20gJ2xvZGFzaCc7CgpleHBvcnQgZGVmYXVsdCAoCiAgVnVlIGFzIFZ1ZUNvbnN0cnVjdG9yPFZ1ZSAmIEluc3RhbmNlVHlwZTx0eXBlb2YgTGFiZWxlZEZvcm1FbGVtZW50PiAmIEluc3RhbmNlVHlwZTx0eXBlb2YgQ29tcGFjdElucHV0Pj4KKS5leHRlbmQoewogIGNvbXBvbmVudHM6IHsgTGFiZWxlZFRvb2x0aXAsIFRleHRBcmVhQXV0b0dyb3cgfSwKICBtaXhpbnM6ICAgICBbTGFiZWxlZEZvcm1FbGVtZW50LCBDb21wYWN0SW5wdXRdLAoKICBwcm9wczogewogICAgLyoqCiAgICAgKiBUaGUgdHlwZSBvZiB0aGUgTGFiZWxlZCBJbnB1dC4KICAgICAqIEB2YWx1ZXMgdGV4dCwgY3JvbiwgbXVsdGlsaW5lLCBtdWx0aWxpbmUtcGFzc3dvcmQKICAgICAqLwogICAgdHlwZTogewogICAgICB0eXBlOiAgICBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICd0ZXh0JwogICAgfSwKCiAgICAvKioKICAgICAqIFRoZSBzdGF0dXMgY2xhc3Mgb2YgdGhlIExhYmVsZWQgSW5wdXQgYW5kIHRvb2x0aXAuCiAgICAgKiBAdmFsdWVzIGluZm8sIHN1Y2Nlc3MsIHdhcm5pbmcsIGVycm9yCiAgICAgKi8KICAgIHN0YXR1czogewogICAgICB0eXBlOiAgICBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCgogICAgLyoqCiAgICAgKiBUaGUgc3ViLWxhYmVsIGZvciB0aGUgTGFiZWxlZCBJbnB1dC4KICAgICAqLwogICAgc3ViTGFiZWw6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAoKICAgIC8qKgogICAgICogVGhlIHRvb2x0aXAgdG8gZGlzcGxheSBmb3IgdGhlIExhYmVsZWQgSW5wdXQuCiAgICAgKi8KICAgIHRvb2x0aXA6IHsKICAgICAgZGVmYXVsdDogbnVsbCwKICAgICAgdHlwZTogICAgW1N0cmluZywgT2JqZWN0XQogICAgfSwKCiAgICAvKioKICAgICAqIFJlbmRlcnMgdGhlIHRvb2x0aXAgd2hlbiBob3ZlcmluZyB0aGUgY3Vyc29yIG92ZXIgdGhlIExhYmVsZWQgSW5wdXQuCiAgICAgKi8KICAgIGhvdmVyVG9vbHRpcDogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAoKICAgIC8qKgogICAgICogRGlzYWJsZXMgdGhlIHBhc3N3b3JkIG1hbmFnZXIgcHJvbXB0IHRvIHNhdmUgdGhlIGNvbnRlbnRzIG9mIHRoZSBMYWJlbGVkCiAgICAgKiBJbnB1dC4KICAgICAqLwogICAgaWdub3JlUGFzc3dvcmRNYW5hZ2VyczogewogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgICAgdHlwZTogICAgQm9vbGVhbgogICAgfSwKCiAgICAvKioKICAgICAqIFRoZSBtYXggbGVuZ3RoIG9mIHRoZSBMYWJlbGVkIElucHV0LgogICAgICovCiAgICBtYXhsZW5ndGg6IHsKICAgICAgdHlwZTogICAgTnVtYmVyLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAoKICAgIC8qKgogICAgICogSGlkZXMgYXJyb3dzIG9uIHRoZSBMYWJlbGVkIElucHV0LgogICAgICogQGRlcHJlY2F0ZWQgVGhpcyBkb2Vzbid0IGFwcGVhciB0byBiZSBpbiB1c2UgZm9yIExhYmVsZWQgSW5wdXQuCiAgICAgKi8KICAgIGhpZGVBcnJvd3M6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCgogICAgLyoqCiAgICAgKiBPcHRpb25hbGx5IGRlbGF5IG9uIGlucHV0IHdoaWxlIHR5cGluZy4KICAgICAqLwogICAgZGVsYXk6IHsKICAgICAgdHlwZTogICAgTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9LAogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1cGRhdGVkOiAgICAgICAgICBmYWxzZSwKICAgICAgdmFsaWRhdGlvbkVycm9yczogJycKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIC8qKgogICAgICogRGV0ZXJtaW5lcyBpZiB0aGUgTGFiZWxlZCBJbnB1dCBAaW5wdXQgZXZlbnQgc2hvdWxkIGJlIGRlYm91bmNlZC4KICAgICAqLwogICAgb25JbnB1dCgpOiAoKHZhbHVlOiBzdHJpbmcpID0+IHZvaWQpIHwgdm9pZCB7CiAgICAgIHJldHVybiB0aGlzLmRlbGF5ID8gZGVib3VuY2UodGhpcy5kZWxheUlucHV0LCB0aGlzLmRlbGF5KSA6IHRoaXMuZGVsYXlJbnB1dDsKICAgIH0sCgogICAgLyoqCiAgICAgKiBEZXRlcm1pbmVzIGlmIHRoZSBMYWJlbGVkIElucHV0IHNob3VsZCBkaXNwbGF5IGEgbGFiZWwuCiAgICAgKi8KICAgIGhhc0xhYmVsKCk6IGJvb2xlYW4gewogICAgICByZXR1cm4gdGhpcy5pc0NvbXBhY3QgPyBmYWxzZSA6ICEhdGhpcy5sYWJlbCB8fCAhIXRoaXMubGFiZWxLZXkgfHwgISF0aGlzLiRzbG90cy5sYWJlbDsKICAgIH0sCgogICAgLyoqCiAgICAgKiBEZXRlcm1pbmVzIGlmIHRoZSBMYWJlbGVkIElucHV0IHNob3VsZCBkaXNwbGF5IGEgdG9vbHRpcC4KICAgICAqLwogICAgaGFzVG9vbHRpcCgpOiBib29sZWFuIHsKICAgICAgcmV0dXJuICEhdGhpcy50b29sdGlwIHx8ICEhdGhpcy50b29sdGlwS2V5OwogICAgfSwKCiAgICB0b29sdGlwVmFsdWUoKTogc3RyaW5nIHwgdW5kZWZpbmVkIHsKICAgICAgaWYgKHRoaXMuaGFzVG9vbHRpcCkgewogICAgICAgIHJldHVybiB0aGlzLnRvb2x0aXBLZXkgPyB0aGlzLnQodGhpcy50b29sdGlwS2V5KSA6IHRoaXMudG9vbHRpcDsKICAgICAgfQoKICAgICAgcmV0dXJuIHVuZGVmaW5lZDsKICAgIH0sCgogICAgLyoqCiAgICAgKiBEZXRlcm1pbmVzIGlmIHRoZSBMYWJlbGVkIElucHV0IG1ha2VzIHVzZSBvZiB0aGUgc3VmZml4IHNsb3QuCiAgICAgKi8KICAgIGhhc1N1ZmZpeCgpOiBib29sZWFuIHsKICAgICAgcmV0dXJuICEhdGhpcy4kc2xvdHMuc3VmZml4OwogICAgfSwKCiAgICAvKioKICAgICAqIERldGVybWluZXMgaWYgdGhlIExhYmVsZWQgSW5wdXQgc2hvdWxkIGRpc3BsYXkgYSBjcm9uIGhpbnQuCiAgICAgKi8KICAgIGNyb25IaW50KCk6IHN0cmluZyB8IHVuZGVmaW5lZCB7CiAgICAgIGlmICh0aGlzLnR5cGUgIT09ICdjcm9uJyB8fCAhdGhpcy52YWx1ZSkgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBpZiAoIWlzVmFsaWRDcm9uKHRoaXMudmFsdWUpKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudCgnZ2VuZXJpYy5pbnZhbGlkQ3JvbicpOwogICAgICB9CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgaGludCA9IGNyb25zdHJ1ZS50b1N0cmluZyh0aGlzLnZhbHVlKTsKCiAgICAgICAgcmV0dXJuIGhpbnQ7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICByZXR1cm4gdGhpcy50KCdnZW5lcmljLmludmFsaWRDcm9uJyk7CiAgICAgIH0KICAgIH0sCgogICAgLyoqCiAgICAgKiBUaGUgcGxhY2Vob2xkZXIgdmFsdWUgZm9yIHRoZSBMYWJlbGVkIElucHV0LgogICAgICovCiAgICBfcGxhY2Vob2xkZXIoKTogc3RyaW5nIHsKICAgICAgaWYgKHRoaXMucGxhY2Vob2xkZXIpIHsKICAgICAgICByZXR1cm4gdGhpcy5wbGFjZWhvbGRlci50b1N0cmluZygpOwogICAgICB9CiAgICAgIGlmICh0aGlzLnBsYWNlaG9sZGVyS2V5KSB7CiAgICAgICAgcmV0dXJuIHRoaXMudCh0aGlzLnBsYWNlaG9sZGVyS2V5KTsKICAgICAgfQoKICAgICAgcmV0dXJuICcnOwogICAgfSwKCiAgICAvKioKICAgICAqIFRoZSBtYXggbGVuZ3RoIGZvciB0aGUgTGFiZWxlZCBJbnB1dC4KICAgICAqLwogICAgX21heGxlbmd0aCgpOiBudW1iZXIgfCBudWxsIHsKICAgICAgaWYgKHRoaXMudHlwZSA9PT0gJ3RleHQnICYmIHRoaXMubWF4bGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubWF4bGVuZ3RoOwogICAgICB9CgogICAgICByZXR1cm4gbnVsbDsKICAgIH0sCiAgfSwKCiAgbWV0aG9kczogewogICAgLyoqCiAgICAgKiBBdHRlbXB0cyB0byBnaXZlIHRoZSBMYWJlbGVkIElucHV0IGZvY3VzLgogICAgICovCiAgICBmb2N1cygpOiB2b2lkIHsKICAgICAgY29uc3QgY29tcCA9IHRoaXMuJHJlZnMudmFsdWUgYXMgSFRNTElucHV0RWxlbWVudDsKCiAgICAgIGlmIChjb21wKSB7CiAgICAgICAgY29tcC5mb2N1cygpOwogICAgICB9CiAgICB9LAoKICAgIC8qKgogICAgICogQXR0ZW1wdHMgdG8gc2VsZWN0IHRoZSBMYWJlbGVkIElucHV0LgogICAgICogQGRlcHJlY2F0ZWQKICAgICAqLwogICAgc2VsZWN0KCk6IHZvaWQgewogICAgICBjb25zdCBjb21wID0gdGhpcy4kcmVmcy52YWx1ZSBhcyBIVE1MSW5wdXRFbGVtZW50OwoKICAgICAgaWYgKGNvbXApIHsKICAgICAgICBjb21wLnNlbGVjdCgpOwogICAgICB9CiAgICB9LAoKICAgIC8qKgogICAgICogRW1pdCBvbiBpbnB1dCBjaGFuZ2UKICAgICAqLwogICAgb25DaGFuZ2UoZXZlbnQ6IEV2ZW50KTogdm9pZCB7CiAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIGV2ZW50KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBFbWl0IG9uIGlucHV0IHdpdGggZGVsYXkuIE5vdGU6IEFycm93IGZ1bmN0aW9uIGlzIGF2b2lkZWQgZHVlIGNvbnRleHQKICAgICAqIGJpbmRpbmcuCiAgICAgKgogICAgICogTk9URTogSW4gbXVsdGlsaW5lLCBUZXh0QXJlYUF1dG9Hcm93IGVtaXRzIGEgc3RyaW5nIHdpdGggdGhlIHZhbHVlCiAgICAgKiBodHRwczovL2dpdGh1Yi5jb20vcmFuY2hlci9kYXNoYm9hcmQvaXNzdWVzLzEwMjQ5CiAgICAgKi8KICAgIGRlbGF5SW5wdXQodmFsdWU6IHN0cmluZyk6IHZvaWQgewogICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHZhbHVlKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBIYW5kbGVzIHRoZSBiZWhhdmlvciBvZiB0aGUgTGFiZWxlZCBJbnB1dCB3aGVuIGdpdmVuIGZvY3VzLgogICAgICogQHNlZSBsYWJlbGVkLWZvcm0tZWxlbWVudC50cyBtaXhpbiBmb3Igb25Gb2N1c0xhYmVsZWQoKQogICAgICovCiAgICBvbkZvY3VzKCk6IHZvaWQgewogICAgICB0aGlzLm9uRm9jdXNMYWJlbGVkKCk7CiAgICB9LAoKICAgIC8qKgogICAgICogSGFuZGxlcyB0aGUgYmVoYXZpb3Igb2YgdGhlIExhYmVsZWQgSW5wdXQgd2hlbiBibHVycmVkIGFuZCBlbWl0cyB0aGUgYmx1cgogICAgICogZXZlbnQuCiAgICAgKiBAc2VlIGxhYmVsZWQtZm9ybS1lbGVtZW50LnRzIG1peGluIGZvciBvbkJsdXJMYWJlbGVkKCkKICAgICAqLwogICAgb25CbHVyKGV2ZW50OiBzdHJpbmcpOiB2b2lkIHsKICAgICAgdGhpcy4kZW1pdCgnYmx1cicsIGV2ZW50KTsKICAgICAgdGhpcy5vbkJsdXJMYWJlbGVkKCk7CiAgICB9LAoKICAgIGVzY2FwZUh0bWwKICB9Cn0pOwo="},{"version":3,"sources":["LabeledInput.vue"],"names":[],"mappingsfile":"LabeledInput.vue","sourceRoot":"node_modules/@rancher/shell/rancher-components/Form/LabeledInput","sourcesContent":["<script lang=\"ts\">\nimport Vue, { VueConstructor } from 'vue';\nimport CompactInput from '@shell/mixins/compact-input';\nimport LabeledFormElement from '@shell/mixins/labeled-form-element';\nimport TextAreaAutoGrow from '@components/Form/TextArea/TextAreaAutoGrow.vue';\nimport LabeledTooltip from '@components/LabeledTooltip/LabeledTooltip.vue';\nimport { escapeHtml } from '@shell/utils/string';\nimport cronstrue from 'cronstrue';\nimport { isValidCron } from 'cron-validator';\nimport { debounce } from 'lodash';\n\nexport default (\n  Vue as VueConstructor<Vue & InstanceType<typeof LabeledFormElement> & InstanceType<typeof CompactInput>>\n).extend({\n  components: { LabeledTooltip, TextAreaAutoGrow },\n  mixins:     [LabeledFormElement, CompactInput],\n\n  props: {\n    /**\n     * The type of the Labeled Input.\n     * @values text, cron, multiline, multiline-password\n     */\n    type: {\n      type:    String,\n      default: 'text'\n    },\n\n    /**\n     * The status class of the Labeled Input and tooltip.\n     * @values info, success, warning, error\n     */\n    status: {\n      type:    String,\n      default: null\n    },\n\n    /**\n     * The sub-label for the Labeled Input.\n     */\n    subLabel: {\n      type:    String,\n      default: null\n    },\n\n    /**\n     * The tooltip to display for the Labeled Input.\n     */\n    tooltip: {\n      default: null,\n      type:    [String, Object]\n    },\n\n    /**\n     * Renders the tooltip when hovering the cursor over the Labeled Input.\n     */\n    hoverTooltip: {\n      type:    Boolean,\n      default: true\n    },\n\n    /**\n     * Disables the password manager prompt to save the contents of the Labeled\n     * Input.\n     */\n    ignorePasswordManagers: {\n      default: false,\n      type:    Boolean\n    },\n\n    /**\n     * The max length of the Labeled Input.\n     */\n    maxlength: {\n      type:    Number,\n      default: null\n    },\n\n    /**\n     * Hides arrows on the Labeled Input.\n     * @deprecated This doesn't appear to be in use for Labeled Input.\n     */\n    hideArrows: {\n      type:    Boolean,\n      default: false\n    },\n\n    /**\n     * Optionally delay on input while typing.\n     */\n    delay: {\n      type:    Number,\n      default: 0\n    },\n  },\n\n  data() {\n    return {\n      updated:          false,\n      validationErrors: ''\n    };\n  },\n\n  computed: {\n    /**\n     * Determines if the Labeled Input @input event should be debounced.\n     */\n    onInput(): ((value: string) => void) | void {\n      return this.delay ? debounce(this.delayInput, this.delay) : this.delayInput;\n    },\n\n    /**\n     * Determines if the Labeled Input should display a label.\n     */\n    hasLabel(): boolean {\n      return this.isCompact ? false : !!this.label || !!this.labelKey || !!this.$slots.label;\n    },\n\n    /**\n     * Determines if the Labeled Input should display a tooltip.\n     */\n    hasTooltip(): boolean {\n      return !!this.tooltip || !!this.tooltipKey;\n    },\n\n    tooltipValue(): string | undefined {\n      if (this.hasTooltip) {\n        return this.tooltipKey ? this.t(this.tooltipKey) : this.tooltip;\n      }\n\n      return undefined;\n    },\n\n    /**\n     * Determines if the Labeled Input makes use of the suffix slot.\n     */\n    hasSuffix(): boolean {\n      return !!this.$slots.suffix;\n    },\n\n    /**\n     * Determines if the Labeled Input should display a cron hint.\n     */\n    cronHint(): string | undefined {\n      if (this.type !== 'cron' || !this.value) {\n        return;\n      }\n      if (!isValidCron(this.value)) {\n        return this.t('generic.invalidCron');\n      }\n      try {\n        const hint = cronstrue.toString(this.value);\n\n        return hint;\n      } catch (e) {\n        return this.t('generic.invalidCron');\n      }\n    },\n\n    /**\n     * The placeholder value for the Labeled Input.\n     */\n    _placeholder(): string {\n      if (this.placeholder) {\n        return this.placeholder.toString();\n      }\n      if (this.placeholderKey) {\n        return this.t(this.placeholderKey);\n      }\n\n      return '';\n    },\n\n    /**\n     * The max length for the Labeled Input.\n     */\n    _maxlength(): number | null {\n      if (this.type === 'text' && this.maxlength) {\n        return this.maxlength;\n      }\n\n      return null;\n    },\n  },\n\n  methods: {\n    /**\n     * Attempts to give the Labeled Input focus.\n     */\n    focus(): void {\n      const comp = this.$refs.value as HTMLInputElement;\n\n      if (comp) {\n        comp.focus();\n      }\n    },\n\n    /**\n     * Attempts to select the Labeled Input.\n     * @deprecated\n     */\n    select(): void {\n      const comp = this.$refs.value as HTMLInputElement;\n\n      if (comp) {\n        comp.select();\n      }\n    },\n\n    /**\n     * Emit on input change\n     */\n    onChange(event: Event): void {\n      this.$emit('change', event);\n    },\n\n    /**\n     * Emit on input with delay. Note: Arrow function is avoided due context\n     * binding.\n     *\n     * NOTE: In multiline, TextAreaAutoGrow emits a string with the value\n     * https://github.com/rancher/dashboard/issues/10249\n     */\n    delayInput(value: string): void {\n      this.$emit('input', value);\n    },\n\n    /**\n     * Handles the behavior of the Labeled Input when given focus.\n     * @see labeled-form-element.ts mixin for onFocusLabeled()\n     */\n    onFocus(): void {\n      this.onFocusLabeled();\n    },\n\n    /**\n     * Handles the behavior of the Labeled Input when blurred and emits the blur\n     * event.\n     * @see labeled-form-element.ts mixin for onBlurLabeled()\n     */\n    onBlur(event: string): void {\n      this.$emit('blur', event);\n      this.onBlurLabeled();\n    },\n\n    escapeHtml\n  }\n});\n</script>\n\n<template>\n  <div\n    :class=\"{\n      'labeled-input': true,\n      focused,\n      [mode]: true,\n      disabled: isDisabled,\n      [status]: status,\n      suffix: hasSuffix,\n      'has-tooltip': hasTooltip,\n      'compact-input': isCompact,\n      hideArrows\n    }\"\n  >\n    <slot name=\"label\">\n      <label v-if=\"hasLabel\">\n        <t\n          v-if=\"labelKey\"\n          :k=\"labelKey\"\n        />\n        <template v-else-if=\"label\">{{ label }}</template>\n\n        <span\n          v-if=\"requiredField\"\n          class=\"required\"\n        >*</span>\n      </label>\n    </slot>\n\n    <slot name=\"prefix\" />\n\n    <slot name=\"field\">\n      <TextAreaAutoGrow\n        v-if=\"type === 'multiline' || type === 'multiline-password'\"\n        ref=\"value\"\n        v-bind=\"$attrs\"\n        :maxlength=\"_maxlength\"\n        :disabled=\"isDisabled\"\n        :value=\"value\"\n        :placeholder=\"_placeholder\"\n        autocapitalize=\"off\"\n        :class=\"{ conceal: type === 'multiline-password' }\"\n        @input=\"onInput($event)\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n      />\n      <input\n        v-else\n        ref=\"value\"\n        :class=\"{ 'no-label': !hasLabel }\"\n        v-bind=\"$attrs\"\n        :maxlength=\"_maxlength\"\n        :disabled=\"isDisabled\"\n        :type=\"type === 'cron' ? 'text' : type\"\n        :value=\"value\"\n        :placeholder=\"_placeholder\"\n        autocomplete=\"off\"\n        autocapitalize=\"off\"\n        :data-lpignore=\"ignorePasswordManagers\"\n        @input=\"onInput($event.target.value)\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @change=\"onChange\"\n      >\n    </slot>\n\n    <slot name=\"suffix\" />\n    <LabeledTooltip\n      v-if=\"hasTooltip && !focused\"\n      :hover=\"hoverTooltip\"\n      :value=\"tooltipValue\"\n      :status=\"status\"\n    />\n    <LabeledTooltip\n      v-if=\"!!validationMessage\"\n      :hover=\"hoverTooltip\"\n      :value=\"validationMessage\"\n    />\n    <label\n      v-if=\"cronHint\"\n      class=\"cron-label\"\n    >{{ cronHint }}</label>\n    <label\n      v-if=\"subLabel\"\n      class=\"sub-label\"\n    >{{ subLabel }}</label>\n  </div>\n</template>\n<style scoped lang=\"scss\">\n.labeled-input.view {\n  input {\n    text-overflow: ellipsis;\n  }\n}\n\n.hideArrows {\n  /* Hide arrows on number input when it overlaps with the unit */\n  /* Chrome, Safari, Edge, Opera */\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type=number] {\n    -moz-appearance: textfield;\n  }\n}\n</style>\n<style>\n.validation-message {\n  padding: 5px;\n  position: absolute;\n  bottom: -35px;\n}\n</style>\n"]}]}