{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/SelectCredential.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/SelectCredential.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SelectCredential.vue"],"names":[],"mappingsfile":"SelectCredential.vue","sourceRoot":"node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster","sourcesContent":["<script>\nimport Loading from '@shell/components/Loading';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { NORMAN, DEFAULT_WORKSPACE } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport CruResource from '@shell/components/CruResource';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport { Banner } from '@components/Banner';\nimport { CAPI } from '@shell/config/labels-annotations';\nimport { clear } from '@shell/utils/array';\nimport cloneDeep from 'lodash/cloneDeep';\n\nconst _NEW = '_NEW';\nconst _NONE = '_NONE';\n\nexport default {\n  components: {\n    Loading, LabeledSelect, CruResource, NameNsDescription, Banner\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    value: {\n      type:    String,\n      default: null,\n    },\n\n    provider: {\n      type:    String,\n      default: null,\n    },\n\n    cancel: {\n      type:    Function,\n      default: null\n    },\n\n    showingForm: {\n      type:     Boolean,\n      required: true,\n    }\n  },\n\n  async fetch() {\n    this.allCredentials = await this.$store.dispatch('rancher/findAll', { type: NORMAN.CLOUD_CREDENTIAL });\n\n    const field = this.$store.getters['plugins/credentialFieldForDriver'](this.driverName);\n\n    this.newCredential = await this.$store.dispatch('rancher/create', {\n      type:     NORMAN.CLOUD_CREDENTIAL,\n      metadata: {\n        namespace:   DEFAULT_WORKSPACE,\n        annotations: { [CAPI.CREDENTIAL_DRIVER]: this.driverName }\n      },\n      [`${ field }credentialConfig`]: {}\n    });\n\n    if ( this.value ) {\n      this.credentialId = this.value;\n    } else if ( this.filteredCredentials.length === 1 ) {\n      // Auto pick the first credential if there's only one\n      this.credentialId = this.filteredCredentials[0].id;\n    } else if ( !this.filteredCredentials.length ) {\n      this.credentialId = _NEW;\n    }\n  },\n\n  data() {\n    return {\n      allCredentials:                [],\n      nodeComponent:                 null,\n      credentialId:                  this.value || _NONE,\n      newCredential:                 null,\n      credCustomComponentValidation: false,\n      nameRequiredValidation:        false,\n      originalId:                    this.value\n    };\n  },\n\n  computed: {\n    isNone() {\n      return this.credentialId === null || this.credentialId === _NONE;\n    },\n\n    isNew() {\n      return this.credentialId === _NEW;\n    },\n\n    isPicked() {\n      return !!this.credentialId && !this.isNone && !this.isNew;\n    },\n\n    driverName() {\n      let driver = this.provider;\n\n      // Map providers that share a common credential to one driver\n      driver = this.$store.getters['plugins/credentialDriverFor'](driver);\n\n      return driver;\n    },\n\n    filteredCredentials() {\n      return this.allCredentials.filter((x) => x.provider === this.driverName);\n    },\n\n    options() {\n      const duplicates = {};\n\n      this.filteredCredentials.forEach((cred) => {\n        duplicates[cred.nameDisplay] = duplicates[cred.nameDisplay] === null ? true : null;\n      });\n\n      const out = this.filteredCredentials.map((obj) => ({\n        // if credential name is duplicated we add the id to the label\n        label: duplicates[obj.nameDisplay] ? `${ obj.nameDisplay } (${ obj.id })` : obj.nameDisplay,\n        value: obj.id,\n      }));\n\n      if ( this.originalId && !out.find((x) => x.value === this.originalId) ) {\n        out.unshift({\n          label: `${ this.originalId.replace(/^cattle-global-data:/, '') } (current)`,\n          value: this.originalId\n        });\n      }\n\n      out.unshift({\n        label: this.t('cluster.credential.select.option.new'),\n        value: _NEW,\n      });\n\n      out.unshift({\n        label:    this.t('cluster.credential.select.option.none'),\n        value:    _NONE,\n        disabled: true,\n      });\n\n      return out;\n    },\n\n    createComponent() {\n      if (this.$store.getters['type-map/hasCustomCloudCredentialComponent'](this.driverName)) {\n        return this.$store.getters['type-map/importCloudCredential'](this.driverName);\n      }\n\n      return this.$store.getters['type-map/importCloudCredential']('generic');\n    },\n\n    validationPassed() {\n      if ( this.credentialId === _NONE ) {\n        return false;\n      }\n\n      if ( this.credentialId === _NEW ) {\n        return this.credCustomComponentValidation && this.nameRequiredValidation;\n      }\n\n      return !!this.credentialId;\n    },\n  },\n\n  watch: {\n    credentialId(val) {\n      if ( val === _NEW || val === _NONE ) {\n        this.$emit('input', null);\n      } else {\n        this.$emit('input', val);\n      }\n    },\n  },\n\n  methods: {\n    handleNameRequiredValidation() {\n      this.nameRequiredValidation = !!this.newCredential?.name?.length;\n    },\n\n    async save(btnCb) {\n      if ( this.errors ) {\n        clear(this.errors);\n      }\n      const fullCredential = cloneDeep(this.newCredential);\n\n      if ( typeof this.$refs.create?.test === 'function' ) {\n        try {\n          const res = await this.$refs.create.test();\n\n          if ( !res ) {\n            this.errors = ['Authentication test failed, please check your credentials'];\n            btnCb(false);\n\n            return;\n          }\n        } catch (e) {\n          this.errors = [e];\n          btnCb(false);\n        }\n      }\n\n      if ( this.newCredential.metadata.name ) {\n        delete this.newCredential.metadata.generateName;\n      } else {\n        this.newCredential.metadata.generateName = 'cloud-credential-';\n      }\n\n      try {\n        const res = await this.newCredential.save();\n\n        this.credentialId = res.id;\n        // full cloud credential data is not stored in the cloud credentail CRD, but consuming components may want to use it\n        this.$emit('credential-created', fullCredential);\n        btnCb(true);\n      } catch (e) {\n        this.errors = [e];\n        btnCb(false);\n      }\n    },\n\n    createValidationChanged(passed) {\n      this.credCustomComponentValidation = passed;\n    },\n\n    backToExisting() {\n      this.credentialId = _NONE;\n    }\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <CruResource\n    v-else\n    :mode=\"mode\"\n    :validation-passed=\"validationPassed\"\n    :resource=\"newCredential\"\n    :can-yaml=\"false\"\n    :cancel-event=\"true\"\n    :errors=\"errors\"\n    finish-button-mode=\"continue\"\n    class=\"select-credentials\"\n    :class=\"{'select-credentials__showingForm': showingForm}\"\n    @finish=\"save\"\n    @cancel=\"cancel\"\n    @error=\"e=>errors = e\"\n  >\n    <div v-if=\"isNew\">\n      <Banner\n        :label=\"t('cluster.credential.banner.createCredential', {length: options.length}, true)\"\n        color=\"info\"\n      />\n\n      <NameNsDescription\n        v-model=\"newCredential\"\n        :namespaced=\"false\"\n        :description-hidden=\"true\"\n        name-key=\"name\"\n        name-label=\"cluster.credential.name.label\"\n        name-placeholder=\"cluster.credential.name.placeholder\"\n        mode=\"create\"\n        @change=\"handleNameRequiredValidation\"\n      />\n\n      <component\n        :is=\"createComponent\"\n        ref=\"create\"\n        v-model=\"newCredential\"\n        mode=\"create\"\n        :driver-name=\"driverName\"\n        @validationChanged=\"createValidationChanged\"\n      />\n    </div>\n    <div v-else>\n      <Banner\n        v-if=\"!credentialId\"\n        label=\"First you need to pick or create the cloud credential that will be used to create the nodes for the cluster...\"\n        color=\"info\"\n      />\n\n      <LabeledSelect\n        v-model=\"credentialId\"\n        :label=\"t('cluster.credential.label')\"\n        :options=\"options\"\n        option-key=\"value\"\n        :mode=\"mode\"\n        :selectable=\"option => !option.disabled\"\n        data-testid=\"cluster-prov-select-credential\"\n      />\n    </div>\n\n    <template\n      v-if=\"isNew && options.length\"\n      #footer-prefix\n    >\n      <button\n        class=\"btn role-secondary\"\n        @click=\"backToExisting()\"\n      >\n        {{ t('cluster.credential.selectExisting.label') }}\n      </button>\n    </template>\n\n    <template\n      v-if=\"isPicked\"\n      #form-footer\n    >\n      <div><!-- Hide the outer footer --></div>\n    </template>\n  </CruResource>\n</template>\n\n<style lang='scss' scoped>\n  .select-credentials {\n    flex-grow: 1; // Do grow when on own\n    &__showingForm {\n      flex-grow: 0; // Don't grow when in rke2 form\n    }\n  }\n</style>\n"]}]}