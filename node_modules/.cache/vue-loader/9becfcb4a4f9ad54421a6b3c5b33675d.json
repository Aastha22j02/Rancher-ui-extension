{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/detail/pod.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/detail/pod.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDcmVhdGVFZGl0VmlldyBmcm9tICdAc2hlbGwvbWl4aW5zL2NyZWF0ZS1lZGl0LXZpZXcnOwppbXBvcnQgVGFiIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1RhYmJlZC9UYWInOwppbXBvcnQgUmVzb3VyY2VUYWJzIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vUmVzb3VyY2VUYWJzJzsKaW1wb3J0IFNvcnRhYmxlVGFibGUgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvU29ydGFibGVUYWJsZSc7CmltcG9ydCB7IFNUQVRFLCBTSU1QTEVfTkFNRSwgSU1BR0VfTkFNRSB9IGZyb20gJ0BzaGVsbC9jb25maWcvdGFibGUtaGVhZGVycyc7CmltcG9ydCB7IHNvcnRhYmxlTnVtZXJpY1N1ZmZpeCB9IGZyb20gJ0BzaGVsbC91dGlscy9zb3J0JzsKaW1wb3J0IHsgZmluZEJ5IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2FycmF5JzsKaW1wb3J0IERhc2hib2FyZE1ldHJpY3MgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvRGFzaGJvYXJkTWV0cmljcyc7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgYWxsRGFzaGJvYXJkc0V4aXN0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2dyYWZhbmEnOwppbXBvcnQgZGF5IGZyb20gJ2RheWpzJzsKaW1wb3J0IHsgREFURV9GT1JNQVQsIFRJTUVfRk9STUFUIH0gZnJvbSAnQHNoZWxsL3N0b3JlL3ByZWZzJzsKaW1wb3J0IHsgZXNjYXBlSHRtbCB9IGZyb20gJ0BzaGVsbC91dGlscy9zdHJpbmcnOwppbXBvcnQgeyBOQU1FU1BBQ0UgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IHsgUFJPSkVDVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvbGFiZWxzLWFubm90YXRpb25zJzsKCmNvbnN0IFBPRF9NRVRSSUNTX0RFVEFJTF9VUkwgPSAnL2FwaS92MS9uYW1lc3BhY2VzL2NhdHRsZS1tb25pdG9yaW5nLXN5c3RlbS9zZXJ2aWNlcy9odHRwOnJhbmNoZXItbW9uaXRvcmluZy1ncmFmYW5hOjgwL3Byb3h5L2QvcmFuY2hlci1wb2QtY29udGFpbmVycy0xL3JhbmNoZXItcG9kLWNvbnRhaW5lcnM/b3JnSWQ9MSc7CmNvbnN0IFBPRF9NRVRSSUNTX1NVTU1BUllfVVJMID0gJy9hcGkvdjEvbmFtZXNwYWNlcy9jYXR0bGUtbW9uaXRvcmluZy1zeXN0ZW0vc2VydmljZXMvaHR0cDpyYW5jaGVyLW1vbml0b3JpbmctZ3JhZmFuYTo4MC9wcm94eS9kL3JhbmNoZXItcG9kLTEvcmFuY2hlci1wb2Q/b3JnSWQ9MSc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1BvZERldGFpbCcsCgogIGNvbXBvbmVudHM6IHsKICAgIERhc2hib2FyZE1ldHJpY3MsCiAgICBSZXNvdXJjZVRhYnMsCiAgICBUYWIsCiAgICBTb3J0YWJsZVRhYmxlLAogIH0sCgogIG1peGluczogW0NyZWF0ZUVkaXRWaWV3XSwKCiAgYXN5bmMgZmV0Y2goKSB7CiAgICB0aGlzLnNob3dNZXRyaWNzID0gYXdhaXQgYWxsRGFzaGJvYXJkc0V4aXN0KHRoaXMuJHN0b3JlLCB0aGlzLmN1cnJlbnRDbHVzdGVyLmlkLCBbUE9EX01FVFJJQ1NfREVUQUlMX1VSTCwgUE9EX01FVFJJQ1NfU1VNTUFSWV9VUkxdKTsKICAgIGlmICghdGhpcy5zaG93TWV0cmljcykgewogICAgICBjb25zdCBuYW1lc3BhY2UgPSBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9maW5kJywgeyB0eXBlOiBOQU1FU1BBQ0UsIGlkOiB0aGlzLnZhbHVlLm1ldGFkYXRhLm5hbWVzcGFjZSB9KTsKCiAgICAgIGNvbnN0IHByb2plY3RJZCA9IG5hbWVzcGFjZT8ubWV0YWRhdGE/LmxhYmVsc1tQUk9KRUNUXTsKCiAgICAgIGlmIChwcm9qZWN0SWQpIHsKICAgICAgICB0aGlzLlBPRF9QUk9KRUNUX01FVFJJQ1NfREVUQUlMX1VSTCA9IGAvYXBpL3YxL25hbWVzcGFjZXMvY2F0dGxlLXByb2plY3QtJHsgcHJvamVjdElkIH0tbW9uaXRvcmluZy9zZXJ2aWNlcy9odHRwOmNhdHRsZS1wcm9qZWN0LSR7IHByb2plY3RJZCB9LW1vbml0b3JpbmctZ3JhZmFuYTo4MC9wcm94eS9kL3JhbmNoZXItcG9kLWNvbnRhaW5lcnMtMS9yYW5jaGVyLXBvZC1jb250YWluZXJzP29yZ0lkPTEnYDsKICAgICAgICB0aGlzLlBPRF9QUk9KRUNUX01FVFJJQ1NfU1VNTUFSWV9VUkwgPSBgL2FwaS92MS9uYW1lc3BhY2VzL2NhdHRsZS1wcm9qZWN0LSR7IHByb2plY3RJZCB9LW1vbml0b3Jpbmcvc2VydmljZXMvaHR0cDpjYXR0bGUtcHJvamVjdC0keyBwcm9qZWN0SWQgfS1tb25pdG9yaW5nLWdyYWZhbmE6ODAvcHJveHkvZC9yYW5jaGVyLXBvZC0xL3JhbmNoZXItcG9kP29yZ0lkPTFgOwoKICAgICAgICB0aGlzLnNob3dQcm9qZWN0TWV0cmljcyA9IGF3YWl0IGFsbERhc2hib2FyZHNFeGlzdCh0aGlzLiRzdG9yZSwgdGhpcy5jdXJyZW50Q2x1c3Rlci5pZCwgW3RoaXMuUE9EX1BST0pFQ1RfTUVUUklDU19ERVRBSUxfVVJMLCB0aGlzLlBPRF9QUk9KRUNUX01FVFJJQ1NfU1VNTUFSWV9VUkxdLCAnY2x1c3RlcicsIHByb2plY3RJZCk7CiAgICAgIH0KICAgIH0KICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgUE9EX01FVFJJQ1NfREVUQUlMX1VSTCwKICAgICAgUE9EX01FVFJJQ1NfU1VNTUFSWV9VUkwsCiAgICAgIFBPRF9QUk9KRUNUX01FVFJJQ1NfREVUQUlMX1VSTDogICcnLAogICAgICBQT0RfUFJPSkVDVF9NRVRSSUNTX1NVTU1BUllfVVJMOiAnJywKICAgICAgc2hvd01ldHJpY3M6ICAgICAgICAgICAgICAgICAgICAgZmFsc2UsCiAgICAgIHNob3dQcm9qZWN0TWV0cmljczogICAgICAgICAgICAgIGZhbHNlLAogICAgfTsKICB9LAoKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycyhbJ2N1cnJlbnRDbHVzdGVyJ10pLAogICAgY29udGFpbmVycygpIHsKICAgICAgY29uc3QgY29udGFpbmVycyA9IHRoaXMuYWxsQ29udGFpbmVyczsKICAgICAgY29uc3Qgc3RhdHVzZXMgPSB0aGlzLmFsbFN0YXR1c2VzOwoKICAgICAgcmV0dXJuIChjb250YWluZXJzIHx8IFtdKS5tYXAoKGNvbnRhaW5lcikgPT4gewogICAgICAgIGNvbnN0IHN0YXR1cyA9IGZpbmRCeShzdGF0dXNlcywgJ25hbWUnLCBjb250YWluZXIubmFtZSk7CiAgICAgICAgY29uc3Qgc3RhdGUgPSBzdGF0dXM/LnN0YXRlIHx8IHt9OwogICAgICAgIGNvbnN0IGRlc2NyaXB0aW9ucyA9IFtdOwoKICAgICAgICAvLyBUaGVyZSBjYW4gYmUgb25seSBvbmUgbWVtYmVyIG9mIGEgYENvbnRhaW5lclN0YXRlYAogICAgICAgIGNvbnN0IHMgPSBPYmplY3QudmFsdWVzKHN0YXRlKVswXSB8fCB7fTsKICAgICAgICBjb25zdCByZWFzb24gPSBzLnJlYXNvbiB8fCAnJzsKICAgICAgICBjb25zdCBtZXNzYWdlID0gcy5tZXNzYWdlIHx8ICcnOwogICAgICAgIGNvbnN0IHNob3dCcmFja2V0ID0gcy5yZWFzb24gJiYgcy5tZXNzYWdlOwogICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gYCR7IHJlYXNvbiB9JHsgc2hvd0JyYWNrZXQgPyAnICgnIDogJycgfSR7IG1lc3NhZ2UgfSR7IHNob3dCcmFja2V0ID8gJyknIDogJycgfWA7CgogICAgICAgIGlmIChkZXNjcmlwdGlvbikgewogICAgICAgICAgZGVzY3JpcHRpb25zLnB1c2goZGVzY3JpcHRpb24pOwogICAgICAgIH0KCiAgICAgICAgLy8gYWRkIGxhc3RTdGF0ZSB0byBzaG93IHRlcm1pbmF0aW9uIHJlYXNvbgogICAgICAgIGlmIChzdGF0dXM/Lmxhc3RTdGF0ZT8udGVybWluYXRlZCkgewogICAgICAgICAgY29uc3QgbHMgPSBzdGF0dXM/Lmxhc3RTdGF0ZT8udGVybWluYXRlZDsKICAgICAgICAgIGNvbnN0IGxzUmVhc29uID0gbHMucmVhc29uIHx8ICcnOwogICAgICAgICAgY29uc3QgbHNNZXNzYWdlID0gbHMubWVzc2FnZSB8fCAnJzsKICAgICAgICAgIGNvbnN0IGxzRXhpdENvZGUgPSBscy5leGl0Q29kZSB8fCAnJzsKICAgICAgICAgIGNvbnN0IGxzU3RhcnRlZEF0ID0gdGhpcy5kYXRlVGltZUZvcm1hdChscy5zdGFydGVkQXQpOwogICAgICAgICAgY29uc3QgbHNGaW5pc2hlZEF0ID0gdGhpcy5kYXRlVGltZUZvcm1hdChscy5maW5pc2hlZEF0KTsKICAgICAgICAgIGNvbnN0IGxzU2hvd0JyYWNrZXQgPSBscy5yZWFzb24gJiYgbHMubWVzc2FnZTsKICAgICAgICAgIGNvbnN0IGxzRGVzY3JpcHRpb24gPSBgJHsgbHNSZWFzb24gfSR7IGxzU2hvd0JyYWNrZXQgPyAnICgnIDogJycgfSR7IGxzTWVzc2FnZSB9JHsgbHNTaG93QnJhY2tldCA/ICcpJyA6ICcnIH1gOwoKICAgICAgICAgIGRlc2NyaXB0aW9ucy5wdXNoKHRoaXMudCgnd29ya2xvYWQuY29udGFpbmVyLnRlcm1pbmF0aW9uU3RhdGUnLCB7CiAgICAgICAgICAgIGxzRGVzY3JpcHRpb24sIGxzRXhpdENvZGUsIGxzU3RhcnRlZEF0LCBsc0ZpbmlzaGVkQXQKICAgICAgICAgIH0pKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB7CiAgICAgICAgICAuLi5jb250YWluZXIsCiAgICAgICAgICBzdGF0dXM6ICAgICAgICAgICBzdGF0dXMgfHwge30sCiAgICAgICAgICBzdGF0ZURpc3BsYXk6ICAgICBzdGF0dXMgPyB0aGlzLnZhbHVlLmNvbnRhaW5lclN0YXRlRGlzcGxheShzdGF0dXMpIDogdW5kZWZpbmVkLAogICAgICAgICAgc3RhdGVCYWNrZ3JvdW5kOiAgc3RhdHVzID8gdGhpcy52YWx1ZS5jb250YWluZXJTdGF0ZUNvbG9yKHN0YXR1cykucmVwbGFjZSgndGV4dCcsICdiZycpIDogdW5kZWZpbmVkLAogICAgICAgICAgbmFtZVNvcnQ6ICAgICAgICAgc29ydGFibGVOdW1lcmljU3VmZml4KGNvbnRhaW5lci5uYW1lKS50b0xvd2VyQ2FzZSgpLAogICAgICAgICAgcmVhZHlJY29uOiAgICAgICAgc3RhdHVzPy5yZWFkeSA/ICdpY29uLWNoZWNrbWFyayB0ZXh0LXN1Y2Nlc3MgbWwtNScgOiAnaWNvbi14IHRleHQtZXJyb3IgbWwtNScsCiAgICAgICAgICBhdmFpbGFibGVBY3Rpb25zOiB0aGlzLnZhbHVlLmNvbnRhaW5lckFjdGlvbnMsCiAgICAgICAgICBzdGF0ZU9iajogICAgICAgICBzdGF0dXMsIC8vIFJlcXVpcmVkIGlmIHRoZXJlJ3MgYSBkZXNjcmlwdGlvbgogICAgICAgICAgc3RhdGVEZXNjcmlwdGlvbjogZGVzY3JpcHRpb25zLmpvaW4oJyB8ICcpLCAvLyBSZXF1aXJlZCB0byBkaXNwbGF5IHRoZSBkZXNjcmlwdGlvbgogICAgICAgICAgaW5pdEljb246ICAgICAgICAgdGhpcy52YWx1ZS5jb250YWluZXJJc0luaXQoY29udGFpbmVyKSA/ICdpY29uLWNoZWNrbWFyayBpY29uLTJ4IHRleHQtc3VjY2VzcyBtbC01JyA6ICdpY29uLW1pbnVzIGljb24tMnggdGV4dC1tdXRlZCBtbC01JywKCiAgICAgICAgICAvLyBDYWxsIG9wZW5TaGVsbCBoZXJlIHNvIHRoYXQgb3BlbmluZyB0aGUgc2hlbGwKICAgICAgICAgIC8vIGF0IHRoZSBjb250YWluZXIgbGV2ZWwgc3RpbGwgaGFzICd0aGlzJyBpbiBzY29wZS4KICAgICAgICAgIG9wZW5TaGVsbDogKCkgPT4gdGhpcy52YWx1ZS5vcGVuU2hlbGwoY29udGFpbmVyLm5hbWUpLAogICAgICAgICAgLy8gQ2FsbCBvcGVuTG9ncyBoZXJlIHNvIHRoYXQgb3BlbmluZyB0aGUgbG9ncwogICAgICAgICAgLy8gYXQgdGhlIGNvbnRhaW5lciBsZXZlbCBzdGlsbCBoYXMgJ3RoaXMnIGluIHNjb3BlLgogICAgICAgICAgb3BlbkxvZ3M6ICAoKSA9PiB0aGlzLnZhbHVlLm9wZW5Mb2dzKGNvbnRhaW5lci5uYW1lKQogICAgICAgIH07CiAgICAgIH0pOwogICAgfSwKCiAgICBhbGxDb250YWluZXJzKCkgewogICAgICBjb25zdCB7IGNvbnRhaW5lcnMgPSBbXSwgaW5pdENvbnRhaW5lcnMgPSBbXSB9ID0gdGhpcy52YWx1ZS5zcGVjOwoKICAgICAgcmV0dXJuIFsuLi5jb250YWluZXJzLCAuLi5pbml0Q29udGFpbmVyc107CiAgICB9LAoKICAgIGFsbFN0YXR1c2VzKCkgewogICAgICBjb25zdCB7IGNvbnRhaW5lclN0YXR1c2VzID0gW10sIGluaXRDb250YWluZXJTdGF0dXNlcyA9IFtdIH0gPSB0aGlzLnZhbHVlLnN0YXR1czsKCiAgICAgIHJldHVybiBbLi4uY29udGFpbmVyU3RhdHVzZXMsIC4uLmluaXRDb250YWluZXJTdGF0dXNlc107CiAgICB9LAoKICAgIGNvbnRhaW5lckhlYWRlcnMoKSB7CiAgICAgIHJldHVybiBbCiAgICAgICAgU1RBVEUsCiAgICAgICAgewogICAgICAgICAgbmFtZTogICAgICAgICAgJ3JlYWR5JywKICAgICAgICAgIGxhYmVsS2V5OiAgICAgICd0YWJsZUhlYWRlcnMucmVhZHknLAogICAgICAgICAgZm9ybWF0dGVyOiAgICAgJ0ljb25UZXh0JywKICAgICAgICAgIGZvcm1hdHRlck9wdHM6IHsgaWNvbktleTogJ3JlYWR5SWNvbicgfSwKICAgICAgICAgIGFsaWduOiAgICAgICAgICdsZWZ0JywKICAgICAgICAgIHdpZHRoOiAgICAgICAgIDc1LAogICAgICAgICAgc29ydDogICAgICAgICAgJ3JlYWR5SWNvbicKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIC4uLlNJTVBMRV9OQU1FLAogICAgICAgICAgdmFsdWU6ICduYW1lJwogICAgICAgIH0sCiAgICAgICAgSU1BR0VfTkFNRSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAgICAgICAgICAnaXNJbml0JywKICAgICAgICAgIGxhYmVsS2V5OiAgICAgICd3b3JrbG9hZC5jb250YWluZXIuaW5pdCcsCiAgICAgICAgICBmb3JtYXR0ZXI6ICAgICAnSWNvblRleHQnLAogICAgICAgICAgZm9ybWF0dGVyT3B0czogeyBpY29uS2V5OiAnaW5pdEljb24nIH0sCiAgICAgICAgICBhbGlnbjogICAgICAgICAnbGVmdCcsCiAgICAgICAgICB3aWR0aDogICAgICAgICA3NSwKICAgICAgICAgIHNvcnQ6ICAgICAgICAgICdpbml0SWNvbicKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICAgICAncmVzdGFydHMnLAogICAgICAgICAgbGFiZWxLZXk6ICd0YWJsZUhlYWRlcnMucmVzdGFydHMnLAogICAgICAgICAgdmFsdWU6ICAgICdzdGF0dXMucmVzdGFydENvdW50JywKICAgICAgICAgIGFsaWduOiAgICAncmlnaHQnLAogICAgICAgICAgd2lkdGg6ICAgIDc1CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAgICAgICAgICAnYWdlJywKICAgICAgICAgIGxhYmVsS2V5OiAgICAgICd0YWJsZUhlYWRlcnMuc3RhcnRlZCcsCiAgICAgICAgICB2YWx1ZTogICAgICAgICAnc3RhdHVzLnN0YXRlLnJ1bm5pbmcuc3RhcnRlZEF0JywKICAgICAgICAgIHNvcnQ6ICAgICAgICAgICdzdGF0dXMuc3RhdGUucnVubmluZy5zdGFydGVkQXQ6ZGVzYycsCiAgICAgICAgICBzZWFyY2g6ICAgICAgICBmYWxzZSwKICAgICAgICAgIGZvcm1hdHRlcjogICAgICdMaXZlRGF0ZScsCiAgICAgICAgICBmb3JtYXR0ZXJPcHRzOiB7IGFkZFN1ZmZpeDogdHJ1ZSB9LAogICAgICAgICAgYWxpZ246ICAgICAgICAgJ3JpZ2h0JwogICAgICAgIH0KICAgICAgXTsKICAgIH0sCgogICAgZ3JhcGhWYXJzKCkgewogICAgICByZXR1cm4gewogICAgICAgIG5hbWVzcGFjZTogdGhpcy52YWx1ZS5uYW1lc3BhY2UsCiAgICAgICAgcG9kOiAgICAgICB0aGlzLnZhbHVlLm5hbWUKICAgICAgfTsKICAgIH0sCgogICAgZGF0ZVRpbWVGb3JtYXRTdHJpbmcoKSB7CiAgICAgIGNvbnN0IGRhdGVGb3JtYXQgPSBlc2NhcGVIdG1sKCB0aGlzLiRzdG9yZS5nZXR0ZXJzWydwcmVmcy9nZXQnXShEQVRFX0ZPUk1BVCkpOwogICAgICBjb25zdCB0aW1lRm9ybWF0ID0gZXNjYXBlSHRtbCggdGhpcy4kc3RvcmUuZ2V0dGVyc1sncHJlZnMvZ2V0J10oVElNRV9GT1JNQVQpKTsKCiAgICAgIHJldHVybiBgJHsgZGF0ZUZvcm1hdCB9ICR7IHRpbWVGb3JtYXQgfWA7CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgZGF0ZVRpbWVGb3JtYXQodmFsdWUpIHsKICAgICAgcmV0dXJuIHZhbHVlID8gZGF5KHZhbHVlKS5mb3JtYXQodGhpcy5kYXRlVGltZUZvcm1hdFN0cmluZykgOiAnJzsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["pod.vue"],"names":[],"mappingsfile":"pod.vue","sourceRoot":"node_modules/@rancher/shell/detail","sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport ResourceTabs from '@shell/components/form/ResourceTabs';\nimport SortableTable from '@shell/components/SortableTable';\nimport { STATE, SIMPLE_NAME, IMAGE_NAME } from '@shell/config/table-headers';\nimport { sortableNumericSuffix } from '@shell/utils/sort';\nimport { findBy } from '@shell/utils/array';\nimport DashboardMetrics from '@shell/components/DashboardMetrics';\nimport { mapGetters } from 'vuex';\nimport { allDashboardsExist } from '@shell/utils/grafana';\nimport day from 'dayjs';\nimport { DATE_FORMAT, TIME_FORMAT } from '@shell/store/prefs';\nimport { escapeHtml } from '@shell/utils/string';\nimport { NAMESPACE } from '@shell/config/types';\nimport { PROJECT } from '@shell/config/labels-annotations';\n\nconst POD_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-pod-containers-1/rancher-pod-containers?orgId=1';\nconst POD_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-pod-1/rancher-pod?orgId=1';\n\nexport default {\n  name: 'PodDetail',\n\n  components: {\n    DashboardMetrics,\n    ResourceTabs,\n    Tab,\n    SortableTable,\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    this.showMetrics = await allDashboardsExist(this.$store, this.currentCluster.id, [POD_METRICS_DETAIL_URL, POD_METRICS_SUMMARY_URL]);\n    if (!this.showMetrics) {\n      const namespace = await this.$store.dispatch('cluster/find', { type: NAMESPACE, id: this.value.metadata.namespace });\n\n      const projectId = namespace?.metadata?.labels[PROJECT];\n\n      if (projectId) {\n        this.POD_PROJECT_METRICS_DETAIL_URL = `/api/v1/namespaces/cattle-project-${ projectId }-monitoring/services/http:cattle-project-${ projectId }-monitoring-grafana:80/proxy/d/rancher-pod-containers-1/rancher-pod-containers?orgId=1'`;\n        this.POD_PROJECT_METRICS_SUMMARY_URL = `/api/v1/namespaces/cattle-project-${ projectId }-monitoring/services/http:cattle-project-${ projectId }-monitoring-grafana:80/proxy/d/rancher-pod-1/rancher-pod?orgId=1`;\n\n        this.showProjectMetrics = await allDashboardsExist(this.$store, this.currentCluster.id, [this.POD_PROJECT_METRICS_DETAIL_URL, this.POD_PROJECT_METRICS_SUMMARY_URL], 'cluster', projectId);\n      }\n    }\n  },\n\n  data() {\n    return {\n      POD_METRICS_DETAIL_URL,\n      POD_METRICS_SUMMARY_URL,\n      POD_PROJECT_METRICS_DETAIL_URL:  '',\n      POD_PROJECT_METRICS_SUMMARY_URL: '',\n      showMetrics:                     false,\n      showProjectMetrics:              false,\n    };\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n    containers() {\n      const containers = this.allContainers;\n      const statuses = this.allStatuses;\n\n      return (containers || []).map((container) => {\n        const status = findBy(statuses, 'name', container.name);\n        const state = status?.state || {};\n        const descriptions = [];\n\n        // There can be only one member of a `ContainerState`\n        const s = Object.values(state)[0] || {};\n        const reason = s.reason || '';\n        const message = s.message || '';\n        const showBracket = s.reason && s.message;\n        const description = `${ reason }${ showBracket ? ' (' : '' }${ message }${ showBracket ? ')' : '' }`;\n\n        if (description) {\n          descriptions.push(description);\n        }\n\n        // add lastState to show termination reason\n        if (status?.lastState?.terminated) {\n          const ls = status?.lastState?.terminated;\n          const lsReason = ls.reason || '';\n          const lsMessage = ls.message || '';\n          const lsExitCode = ls.exitCode || '';\n          const lsStartedAt = this.dateTimeFormat(ls.startedAt);\n          const lsFinishedAt = this.dateTimeFormat(ls.finishedAt);\n          const lsShowBracket = ls.reason && ls.message;\n          const lsDescription = `${ lsReason }${ lsShowBracket ? ' (' : '' }${ lsMessage }${ lsShowBracket ? ')' : '' }`;\n\n          descriptions.push(this.t('workload.container.terminationState', {\n            lsDescription, lsExitCode, lsStartedAt, lsFinishedAt\n          }));\n        }\n\n        return {\n          ...container,\n          status:           status || {},\n          stateDisplay:     status ? this.value.containerStateDisplay(status) : undefined,\n          stateBackground:  status ? this.value.containerStateColor(status).replace('text', 'bg') : undefined,\n          nameSort:         sortableNumericSuffix(container.name).toLowerCase(),\n          readyIcon:        status?.ready ? 'icon-checkmark text-success ml-5' : 'icon-x text-error ml-5',\n          availableActions: this.value.containerActions,\n          stateObj:         status, // Required if there's a description\n          stateDescription: descriptions.join(' | '), // Required to display the description\n          initIcon:         this.value.containerIsInit(container) ? 'icon-checkmark icon-2x text-success ml-5' : 'icon-minus icon-2x text-muted ml-5',\n\n          // Call openShell here so that opening the shell\n          // at the container level still has 'this' in scope.\n          openShell: () => this.value.openShell(container.name),\n          // Call openLogs here so that opening the logs\n          // at the container level still has 'this' in scope.\n          openLogs:  () => this.value.openLogs(container.name)\n        };\n      });\n    },\n\n    allContainers() {\n      const { containers = [], initContainers = [] } = this.value.spec;\n\n      return [...containers, ...initContainers];\n    },\n\n    allStatuses() {\n      const { containerStatuses = [], initContainerStatuses = [] } = this.value.status;\n\n      return [...containerStatuses, ...initContainerStatuses];\n    },\n\n    containerHeaders() {\n      return [\n        STATE,\n        {\n          name:          'ready',\n          labelKey:      'tableHeaders.ready',\n          formatter:     'IconText',\n          formatterOpts: { iconKey: 'readyIcon' },\n          align:         'left',\n          width:         75,\n          sort:          'readyIcon'\n        },\n        {\n          ...SIMPLE_NAME,\n          value: 'name'\n        },\n        IMAGE_NAME,\n        {\n          name:          'isInit',\n          labelKey:      'workload.container.init',\n          formatter:     'IconText',\n          formatterOpts: { iconKey: 'initIcon' },\n          align:         'left',\n          width:         75,\n          sort:          'initIcon'\n        },\n        {\n          name:     'restarts',\n          labelKey: 'tableHeaders.restarts',\n          value:    'status.restartCount',\n          align:    'right',\n          width:    75\n        },\n        {\n          name:          'age',\n          labelKey:      'tableHeaders.started',\n          value:         'status.state.running.startedAt',\n          sort:          'status.state.running.startedAt:desc',\n          search:        false,\n          formatter:     'LiveDate',\n          formatterOpts: { addSuffix: true },\n          align:         'right'\n        }\n      ];\n    },\n\n    graphVars() {\n      return {\n        namespace: this.value.namespace,\n        pod:       this.value.name\n      };\n    },\n\n    dateTimeFormatString() {\n      const dateFormat = escapeHtml( this.$store.getters['prefs/get'](DATE_FORMAT));\n      const timeFormat = escapeHtml( this.$store.getters['prefs/get'](TIME_FORMAT));\n\n      return `${ dateFormat } ${ timeFormat }`;\n    }\n  },\n\n  methods: {\n    dateTimeFormat(value) {\n      return value ? day(value).format(this.dateTimeFormatString) : '';\n    }\n  }\n};\n</script>\n\n<template>\n  <ResourceTabs\n    mode=\"view\"\n    class=\"mt-20\"\n    :value=\"value\"\n  >\n    <Tab\n      :label=\"t('workload.container.titles.containers')\"\n      name=\"containers\"\n      :weight=\"3\"\n    >\n      <SortableTable\n        :rows=\"containers\"\n        :headers=\"containerHeaders\"\n        :mode=\"mode\"\n        key-field=\"name\"\n        :search=\"false\"\n        :row-actions=\"true\"\n        :table-actions=\"false\"\n      />\n    </Tab>\n    <Tab\n      v-if=\"showMetrics\"\n      :label=\"t('workload.container.titles.metrics')\"\n      name=\"pod-metrics\"\n      :weight=\"2.5\"\n    >\n      <template #default=\"props\">\n        <DashboardMetrics\n          v-if=\"props.active\"\n          :detail-url=\"POD_METRICS_DETAIL_URL\"\n          :summary-url=\"POD_METRICS_SUMMARY_URL\"\n          :vars=\"graphVars\"\n          graph-height=\"550px\"\n        />\n      </template>\n    </Tab>\n    <Tab\n      v-if=\"showProjectMetrics\"\n      :label=\"t('workload.container.titles.metrics')\"\n      name=\"pod-metrics\"\n      :weight=\"2.5\"\n    >\n      <template #default=\"props\">\n        <DashboardMetrics\n          v-if=\"props.active\"\n          :detail-url=\"POD_PROJECT_METRICS_DETAIL_URL\"\n          :summary-url=\"POD_PROJECT_METRICS_SUMMARY_URL\"\n          :vars=\"graphVars\"\n          graph-height=\"550px\"\n        />\n      </template>\n    </Tab>\n  </ResourceTabs>\n</template>\n"]}]}