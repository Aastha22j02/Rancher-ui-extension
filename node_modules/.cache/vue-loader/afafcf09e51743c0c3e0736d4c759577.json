{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/pkg/kubecost/components/kubecost.vue?vue&type=style&index=0&id=3353aaaf&lang=scss&scoped=true","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/pkg/kubecost/components/kubecost.vue","mtime":1726081430757},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1725271300564},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1725271300920},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/postcss-loader/src/index.js","mtime":1725271300857},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/sass-loader/dist/cjs.js","mtime":1725271288422},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5tYWluLWNvbnRlbnQgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwoKICBoMyB7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgfQoKICAubGFiZWwtdmFsdWVzIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBmbGV4LWRpcmVjdGlvbjogcm93OwoKICAgIC5sYWJlbC12YWx1ZSB7CiAgICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["kubecost.vue"],"names":[],"mappings":";AA2GA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"kubecost.vue","sourceRoot":"pkg/kubecost/components","sourcesContent":["<script>\nimport Loading from '@shell/components/Loading';\nimport LabelValue from '@shell/components/LabelValue';\nimport { mapGetters } from 'vuex';\nimport { getKubecostData } from '../kubecostModule';\nimport PieChart from './pie.vue';\n\nexport default {\n  name: 'RunningCosts',\n\n  components: {\n    Loading, LabelValue, PieChart\n  },\n\n  props: {\n    resource: {\n      type:     Object,\n      required: true,\n    }\n  },\n\n  async fetch() {\n    if (this.resource.kind === 'Cluster') {\n      // for cluster dashboard card\n      this.costs = await getKubecostData({\n        aggregate: 'cluster',\n        window:    'month',\n        clusterId: this.clusterId,\n        ctx:       this\n      });\n    } else {\n      // namespace tab\n      this.costs = await getKubecostData({\n        aggregate:       'namespace',\n        window:          'month',\n        targetNamespace: this.resource.id,\n        clusterId:       this.clusterId,\n        ctx:             this\n      });\n    }\n  },\n  watch: {\n    $route: {\n      handler(neu) {\n        if (neu.hash && neu.hash.includes('#Kubecost')) {\n          this.key = this.generateString(10);\n        }\n      },\n      deep: true\n    }\n  },\n\n  data() {\n    return { costs: undefined, key: this.generateString(10) };\n  },\n\n  computed: {\n    ...mapGetters(['clusterId']),\n\n    info() {\n      if (this.costs?.type && this.costs?.msg) {\n        return this.costs;\n      }\n\n      return null;\n    }\n  },\n\n  methods: {\n    generateString(length) {\n      const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n      let result = ' ';\n      const charactersLength = characters.length;\n\n      for ( let i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n\n      return result;\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"main\">\n    <Loading\n      v-if=\"$fetchState.pending\"\n      mode=\"relative\"\n    />\n    <div v-else class=\"main-content\">\n      <h3 class=\"mb-40\">\n        {{ t('kubecost.title') }}\n      </h3>\n     \n    \n      <PieChart\n        v-if=\"costs.length\"\n        :key=\"key\"\n        :costs=\"costs\"\n      />\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.main-content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  h3 {\n    text-align: center;\n  }\n\n  .label-values {\n    display: flex;\n    flex-direction: row;\n\n    .label-value {\n      padding-right: 20px;\n    }\n  }\n}\n</style>\n"]}]}