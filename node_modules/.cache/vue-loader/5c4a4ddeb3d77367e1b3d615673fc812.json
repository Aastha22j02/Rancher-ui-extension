{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/workload/Upgrading.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/workload/Upgrading.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGdldCB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwppbXBvcnQgeyBSYWRpb0dyb3VwIH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9SYWRpbyc7CmltcG9ydCBVbml0SW5wdXQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9Vbml0SW5wdXQnOwppbXBvcnQgeyBXT1JLTE9BRF9UWVBFUyB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgeyBfQ1JFQVRFIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9xdWVyeS1wYXJhbXMnOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCBJbnB1dFdpdGhTZWxlY3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9JbnB1dFdpdGhTZWxlY3QnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFJhZGlvR3JvdXAsIFVuaXRJbnB1dCwgSW5wdXRXaXRoU2VsZWN0CiAgfSwKICBwcm9wczogewogICAgLy8gc3BlYwogICAgdmFsdWU6IHsKICAgICAgdHlwZTogICAgT2JqZWN0LAogICAgICBkZWZhdWx0OiAoKSA9PiB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9LAoKICAgIHR5cGU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiBXT1JLTE9BRF9UWVBFUy5ERVBMT1lNRU5UCiAgICB9LAoKICAgIG1vZGU6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiBfQ1JFQVRFIH0sCgogICAgbm9Qb2RTcGVjOiB7CiAgICAgIHR5cGU6ICAgIEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAoKICAgIG5vRGVwbG95bWVudFNwZWM6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICBjb25zdCB7CiAgICAgIHN0cmF0ZWd5OnN0cmF0ZWd5T2JqID0ge30sCiAgICAgIHVwZGF0ZVN0cmF0ZWd5OiB1cGRhdGVTdHJhdGVneU9iaiA9IHt9LAogICAgICBtaW5SZWFkeVNlY29uZHMgPSAwLAogICAgICBwcm9ncmVzc0RlYWRsaW5lU2Vjb25kcyA9IDYwMCwKICAgICAgcmV2aXNpb25IaXN0b3J5TGltaXQgPSAxMCwKICAgICAgcG9kTWFuYWdlbWVudFBvbGljeSA9ICdPcmRlcmVkUmVhZHknCiAgICB9ID0gdGhpcy52YWx1ZTsKICAgIGNvbnN0IHN0cmF0ZWd5ID0gc3RyYXRlZ3lPYmoudHlwZSB8fCB1cGRhdGVTdHJhdGVneU9iai50eXBlIHx8ICdSb2xsaW5nVXBkYXRlJzsKICAgIGxldCBtYXhTdXJnZSA9ICcyNSc7CiAgICBsZXQgbWF4VW5hdmFpbGFibGUgPSAnMjUnOwogICAgbGV0IHN1cmdlVW5pdHMgPSAnJSc7CiAgICBsZXQgdW5hdmFpbGFibGVVbml0cyA9ICclJzsKCiAgICBpZiAoc3RyYXRlZ3lPYmoucm9sbGluZ1VwZGF0ZSkgewogICAgICBtYXhTdXJnZSA9IHN0cmF0ZWd5T2JqLnJvbGxpbmdVcGRhdGUubWF4U3VyZ2U7CiAgICAgIG1heFVuYXZhaWxhYmxlID0gc3RyYXRlZ3lPYmoucm9sbGluZ1VwZGF0ZS5tYXhVbmF2YWlsYWJsZTsKCiAgICAgIGlmICggdHlwZW9mIG1heFN1cmdlID09PSAnc3RyaW5nJyAmJiBtYXhTdXJnZS5pbmNsdWRlcygnJScpKSB7CiAgICAgICAgbWF4U3VyZ2UgPSBtYXhTdXJnZS5zbGljZSgwLCBtYXhTdXJnZS5pbmRleE9mKCclJykpOwogICAgICB9IGVsc2UgewogICAgICAgIHN1cmdlVW5pdHMgPSAnUG9kcyc7CiAgICAgIH0KCiAgICAgIGlmICggdHlwZW9mIG1heFVuYXZhaWxhYmxlID09PSAnc3RyaW5nJyAmJiBtYXhVbmF2YWlsYWJsZS5pbmNsdWRlcygnJScpKSB7CiAgICAgICAgdW5hdmFpbGFibGVVbml0cyA9ICclJzsKICAgICAgICBtYXhVbmF2YWlsYWJsZSA9IG1heFVuYXZhaWxhYmxlLnNsaWNlKDAsIG1heFVuYXZhaWxhYmxlLmluZGV4T2YoJyUnKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdW5hdmFpbGFibGVVbml0cyA9ICdQb2RzJzsKICAgICAgfQogICAgfQoKICAgIGNvbnN0IHBvZFNwZWMgPSBnZXQodGhpcy52YWx1ZSwgJ3RlbXBsYXRlLnNwZWMnKTsKCiAgICBjb25zdCB0ZXJtaW5hdGlvbkdyYWNlUGVyaW9kU2Vjb25kcyA9IHBvZFNwZWM/LnRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzID8/IDMwOwoKICAgIHJldHVybiB7CiAgICAgIHN1cmdlVW5pdHMsCiAgICAgIHVuYXZhaWxhYmxlVW5pdHMsCiAgICAgIHN0cmF0ZWd5LAogICAgICBtaW5SZWFkeVNlY29uZHMsCiAgICAgIHByb2dyZXNzRGVhZGxpbmVTZWNvbmRzLAogICAgICBtYXhTdXJnZSwKICAgICAgbWF4VW5hdmFpbGFibGUsCiAgICAgIHJldmlzaW9uSGlzdG9yeUxpbWl0LAogICAgICB0ZXJtaW5hdGlvbkdyYWNlUGVyaW9kU2Vjb25kcywKICAgICAgcG9kTWFuYWdlbWVudFBvbGljeQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBzdHJhdGVneU9wdGlvbnMoKSB7CiAgICAgIHN3aXRjaCAodGhpcy50eXBlKSB7CiAgICAgIGNhc2UgV09SS0xPQURfVFlQRVMuREVQTE9ZTUVOVDoKICAgICAgICByZXR1cm4gewogICAgICAgICAgb3B0aW9uczogWydSb2xsaW5nVXBkYXRlJywgJ1JlY3JlYXRlJ10sCiAgICAgICAgICBsYWJlbHM6ICBbdGhpcy50KCd3b3JrbG9hZC51cGdyYWRpbmcuc3RyYXRlZ2llcy5sYWJlbHMucm9sbGluZ1VwZGF0ZScpLCB0aGlzLnQoJ3dvcmtsb2FkLnVwZ3JhZGluZy5zdHJhdGVnaWVzLmxhYmVscy5yZWNyZWF0ZScpXQogICAgICAgIH07CiAgICAgIGNhc2UgV09SS0xPQURfVFlQRVMuREFFTU9OX1NFVDoKICAgICAgY2FzZSBXT1JLTE9BRF9UWVBFUy5TVEFURUZVTF9TRVQ6CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIG9wdGlvbnM6IFsnUm9sbGluZ1VwZGF0ZScsICdPbkRlbGV0ZSddLAogICAgICAgICAgbGFiZWxzOiAgW3RoaXMudCgnd29ya2xvYWQudXBncmFkaW5nLnN0cmF0ZWdpZXMubGFiZWxzLnJvbGxpbmdVcGRhdGUnKSwgdGhpcy50KCd3b3JrbG9hZC51cGdyYWRpbmcuc3RyYXRlZ2llcy5sYWJlbHMuZGVsZXRlJyldCiAgICAgICAgfTsKICAgICAgZGVmYXVsdDoKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgfSwKCiAgICBpc0RlcGxveW1lbnQoKSB7CiAgICAgIHJldHVybiB0aGlzLnR5cGUgPT09IFdPUktMT0FEX1RZUEVTLkRFUExPWU1FTlQ7CiAgICB9LAoKICAgIGlzU3RhdGVmdWxTZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLnR5cGUgPT09IFdPUktMT0FEX1RZUEVTLlNUQVRFRlVMX1NFVDsKICAgIH0sCgogICAgaXNEYWVtb25TZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLnR5cGUgPT09IFdPUktMT0FEX1RZUEVTLkRBRU1PTl9TRVQ7CiAgICB9LAoKICAgIC4uLm1hcEdldHRlcnMoeyB0OiAnaTE4bi90JyB9KQogIH0sCgogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZSgpIHsKICAgICAgY29uc3QgcG9kU3BlYyA9IHRoaXMudmFsdWU/LnRlbXBsYXRlPy5zcGVjOwogICAgICBjb25zdCB7CiAgICAgICAgbWluUmVhZHlTZWNvbmRzLAogICAgICAgIHJldmlzaW9uSGlzdG9yeUxpbWl0LAogICAgICAgIHByb2dyZXNzRGVhZGxpbmVTZWNvbmRzLAogICAgICAgIHRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzCiAgICAgIH0gPSB0aGlzOwogICAgICBsZXQgeyBtYXhTdXJnZSwgbWF4VW5hdmFpbGFibGUgfSA9IHRoaXM7CgogICAgICBpZiAodGhpcy5zdXJnZVVuaXRzID09PSAnJScgJiYgIW1heFN1cmdlLmluY2x1ZGVzKCclJykpIHsKICAgICAgICBtYXhTdXJnZSA9IGAkeyBtYXhTdXJnZSB9JWA7CiAgICAgIH0KICAgICAgaWYgKHRoaXMudW5hdmFpbGFibGVVbml0cyA9PT0gJyUnICYmICFtYXhVbmF2YWlsYWJsZS5pbmNsdWRlcygnJScpKSB7CiAgICAgICAgbWF4VW5hdmFpbGFibGUgPSBgJHsgbWF4VW5hdmFpbGFibGUgfSVgOwogICAgICB9CgogICAgICBpZiAocG9kU3BlYykgewogICAgICAgIHRoaXMuJHNldChwb2RTcGVjLCAndGVybWluYXRpb25HcmFjZVBlcmlvZFNlY29uZHMnLCB0ZXJtaW5hdGlvbkdyYWNlUGVyaW9kU2Vjb25kcyk7CiAgICAgIH0KCiAgICAgIHN3aXRjaCAodGhpcy50eXBlKSB7CiAgICAgIGNhc2UgV09SS0xPQURfVFlQRVMuREVQTE9ZTUVOVDogewogICAgICAgIGxldCBzdHJhdGVneTsKCiAgICAgICAgaWYgKHRoaXMuc3RyYXRlZ3kgPT09ICdSb2xsaW5nVXBkYXRlJykgewogICAgICAgICAgc3RyYXRlZ3kgPSB7CiAgICAgICAgICAgIHJvbGxpbmdVcGRhdGU6IHsKICAgICAgICAgICAgICBtYXhTdXJnZSwKICAgICAgICAgICAgICBtYXhVbmF2YWlsYWJsZSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdHlwZTogdGhpcy5zdHJhdGVneQogICAgICAgICAgfTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgc3RyYXRlZ3kgPSB7IHR5cGU6IHRoaXMuc3RyYXRlZ3kgfTsKICAgICAgICB9CgogICAgICAgIE9iamVjdC5hc3NpZ24odGhpcy52YWx1ZSwgewogICAgICAgICAgc3RyYXRlZ3ksCiAgICAgICAgICBtaW5SZWFkeVNlY29uZHMsCiAgICAgICAgICByZXZpc2lvbkhpc3RvcnlMaW1pdCwKICAgICAgICAgIHByb2dyZXNzRGVhZGxpbmVTZWNvbmRzCiAgICAgICAgfSk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgY2FzZSBXT1JLTE9BRF9UWVBFUy5EQUVNT05fU0VUOiB7CiAgICAgICAgbGV0IHVwZGF0ZVN0cmF0ZWd5OwoKICAgICAgICBpZiAodGhpcy5zdHJhdGVneSA9PT0gJ1JvbGxpbmdVcGRhdGUnKSB7CiAgICAgICAgICB1cGRhdGVTdHJhdGVneSA9IHsgcm9sbGluZ1VwZGF0ZTogeyBtYXhVbmF2YWlsYWJsZSB9LCB0eXBlOiB0aGlzLnN0cmF0ZWd5IH07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHVwZGF0ZVN0cmF0ZWd5ID0geyB0eXBlOiB0aGlzLnN0cmF0ZWd5IH07CiAgICAgICAgfQoKICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMudmFsdWUsIHsKICAgICAgICAgIHVwZGF0ZVN0cmF0ZWd5LCBtaW5SZWFkeVNlY29uZHMsIHJldmlzaW9uSGlzdG9yeUxpbWl0CiAgICAgICAgfSk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgY2FzZSBXT1JLTE9BRF9UWVBFUy5TVEFURUZVTF9TRVQ6IHsKICAgICAgICBjb25zdCB1cGRhdGVTdHJhdGVneSA9IHsgdHlwZTogdGhpcy5zdHJhdGVneSB9OwoKICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMudmFsdWUsIHsKICAgICAgICAgIHVwZGF0ZVN0cmF0ZWd5LAogICAgICAgICAgcmV2aXNpb25IaXN0b3J5TGltaXQsCiAgICAgICAgICBwb2RNYW5hZ2VtZW50UG9saWN5OgogICAgICAgICAgdGhpcy5wb2RNYW5hZ2VtZW50UG9saWN5CiAgICAgICAgfSk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgZGVmYXVsdDoKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLnZhbHVlKTsKICAgIH0sCgogICAgdXBkYXRlV2l0aFVuaXRzKHsgc2VsZWN0ZWQ6dW5pdHMsIHRleHQ6dmFsdWUgfSwgdGFyZ2V0KSB7CiAgICAgIGlmICh1bml0cyA9PT0gJ1BvZHMnKSB7CiAgICAgICAgdGhpc1t0YXJnZXRdID0gcGFyc2VJbnQodmFsdWUpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXNbdGFyZ2V0XSA9IGAkeyB2YWx1ZSB9JWA7CiAgICAgIH0KICAgICAgaWYgKHRhcmdldCA9PT0gJ21heFN1cmdlJykgewogICAgICAgIHRoaXMuc3VyZ2VVbml0cyA9IHVuaXRzOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMudW5hdmFpbGFibGVVbml0cyA9IHVuaXRzOwogICAgICB9CgogICAgICB0aGlzLnVwZGF0ZSgpOwogICAgfQogIH0sCn07Cg=="},{"version":3,"sources":["Upgrading.vue"],"names":[],"mappingsfile":"Upgrading.vue","sourceRoot":"node_modules/@rancher/shell/edit/workload","sourcesContent":["<script>\nimport { get } from '@shell/utils/object';\nimport { RadioGroup } from '@components/Form/Radio';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { WORKLOAD_TYPES } from '@shell/config/types';\nimport { _CREATE } from '@shell/config/query-params';\nimport { mapGetters } from 'vuex';\nimport InputWithSelect from '@shell/components/form/InputWithSelect';\n\nexport default {\n  components: {\n    RadioGroup, UnitInput, InputWithSelect\n  },\n  props: {\n    // spec\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n\n    type: {\n      type:    String,\n      default: WORKLOAD_TYPES.DEPLOYMENT\n    },\n\n    mode: { type: String, default: _CREATE },\n\n    noPodSpec: {\n      type:    Boolean,\n      default: false\n    },\n\n    noDeploymentSpec: {\n      type:    Boolean,\n      default: false\n    }\n  },\n  data() {\n    const {\n      strategy:strategyObj = {},\n      updateStrategy: updateStrategyObj = {},\n      minReadySeconds = 0,\n      progressDeadlineSeconds = 600,\n      revisionHistoryLimit = 10,\n      podManagementPolicy = 'OrderedReady'\n    } = this.value;\n    const strategy = strategyObj.type || updateStrategyObj.type || 'RollingUpdate';\n    let maxSurge = '25';\n    let maxUnavailable = '25';\n    let surgeUnits = '%';\n    let unavailableUnits = '%';\n\n    if (strategyObj.rollingUpdate) {\n      maxSurge = strategyObj.rollingUpdate.maxSurge;\n      maxUnavailable = strategyObj.rollingUpdate.maxUnavailable;\n\n      if ( typeof maxSurge === 'string' && maxSurge.includes('%')) {\n        maxSurge = maxSurge.slice(0, maxSurge.indexOf('%'));\n      } else {\n        surgeUnits = 'Pods';\n      }\n\n      if ( typeof maxUnavailable === 'string' && maxUnavailable.includes('%')) {\n        unavailableUnits = '%';\n        maxUnavailable = maxUnavailable.slice(0, maxUnavailable.indexOf('%'));\n      } else {\n        unavailableUnits = 'Pods';\n      }\n    }\n\n    const podSpec = get(this.value, 'template.spec');\n\n    const terminationGracePeriodSeconds = podSpec?.terminationGracePeriodSeconds ?? 30;\n\n    return {\n      surgeUnits,\n      unavailableUnits,\n      strategy,\n      minReadySeconds,\n      progressDeadlineSeconds,\n      maxSurge,\n      maxUnavailable,\n      revisionHistoryLimit,\n      terminationGracePeriodSeconds,\n      podManagementPolicy\n    };\n  },\n  computed: {\n    strategyOptions() {\n      switch (this.type) {\n      case WORKLOAD_TYPES.DEPLOYMENT:\n        return {\n          options: ['RollingUpdate', 'Recreate'],\n          labels:  [this.t('workload.upgrading.strategies.labels.rollingUpdate'), this.t('workload.upgrading.strategies.labels.recreate')]\n        };\n      case WORKLOAD_TYPES.DAEMON_SET:\n      case WORKLOAD_TYPES.STATEFUL_SET:\n        return {\n          options: ['RollingUpdate', 'OnDelete'],\n          labels:  [this.t('workload.upgrading.strategies.labels.rollingUpdate'), this.t('workload.upgrading.strategies.labels.delete')]\n        };\n      default:\n        return null;\n      }\n    },\n\n    isDeployment() {\n      return this.type === WORKLOAD_TYPES.DEPLOYMENT;\n    },\n\n    isStatefulSet() {\n      return this.type === WORKLOAD_TYPES.STATEFUL_SET;\n    },\n\n    isDaemonSet() {\n      return this.type === WORKLOAD_TYPES.DAEMON_SET;\n    },\n\n    ...mapGetters({ t: 'i18n/t' })\n  },\n\n  methods: {\n    update() {\n      const podSpec = this.value?.template?.spec;\n      const {\n        minReadySeconds,\n        revisionHistoryLimit,\n        progressDeadlineSeconds,\n        terminationGracePeriodSeconds\n      } = this;\n      let { maxSurge, maxUnavailable } = this;\n\n      if (this.surgeUnits === '%' && !maxSurge.includes('%')) {\n        maxSurge = `${ maxSurge }%`;\n      }\n      if (this.unavailableUnits === '%' && !maxUnavailable.includes('%')) {\n        maxUnavailable = `${ maxUnavailable }%`;\n      }\n\n      if (podSpec) {\n        this.$set(podSpec, 'terminationGracePeriodSeconds', terminationGracePeriodSeconds);\n      }\n\n      switch (this.type) {\n      case WORKLOAD_TYPES.DEPLOYMENT: {\n        let strategy;\n\n        if (this.strategy === 'RollingUpdate') {\n          strategy = {\n            rollingUpdate: {\n              maxSurge,\n              maxUnavailable,\n            },\n            type: this.strategy\n          };\n        } else {\n          strategy = { type: this.strategy };\n        }\n\n        Object.assign(this.value, {\n          strategy,\n          minReadySeconds,\n          revisionHistoryLimit,\n          progressDeadlineSeconds\n        });\n        break;\n      }\n      case WORKLOAD_TYPES.DAEMON_SET: {\n        let updateStrategy;\n\n        if (this.strategy === 'RollingUpdate') {\n          updateStrategy = { rollingUpdate: { maxUnavailable }, type: this.strategy };\n        } else {\n          updateStrategy = { type: this.strategy };\n        }\n\n        Object.assign(this.value, {\n          updateStrategy, minReadySeconds, revisionHistoryLimit\n        });\n        break;\n      }\n      case WORKLOAD_TYPES.STATEFUL_SET: {\n        const updateStrategy = { type: this.strategy };\n\n        Object.assign(this.value, {\n          updateStrategy,\n          revisionHistoryLimit,\n          podManagementPolicy:\n          this.podManagementPolicy\n        });\n        break;\n      }\n      default:\n        break;\n      }\n\n      this.$emit('input', this.value);\n    },\n\n    updateWithUnits({ selected:units, text:value }, target) {\n      if (units === 'Pods') {\n        this[target] = parseInt(value);\n      } else {\n        this[target] = `${ value }%`;\n      }\n      if (target === 'maxSurge') {\n        this.surgeUnits = units;\n      } else {\n        this.unavailableUnits = units;\n      }\n\n      this.update();\n    }\n  },\n};\n</script>\n\n<template>\n  <div>\n    <!--workload  spec.upgradeStrategy -->\n    <div\n      v-if=\"strategyOptions && !noDeploymentSpec\"\n      class=\"row mb-20\"\n    >\n      <div\n        class=\"col\"\n        data-testid=\"input-policy-strategy\"\n      >\n        <RadioGroup\n          v-model=\"strategy\"\n          name=\"strategy\"\n          :options=\"strategyOptions.options\"\n          :labels=\"strategyOptions.labels\"\n          :mode=\"mode\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n    <div\n      v-if=\"isStatefulSet && !noDeploymentSpec\"\n      class=\"row mb-20\"\n    >\n      <div\n        class=\"col span-6\"\n        data-testid=\"input-policy-pod\"\n      >\n        <RadioGroup\n          v-model=\"podManagementPolicy\"\n          name=\"podManagement\"\n          :mode=\"mode\"\n          :label=\"t('workload.upgrading.podManagementPolicy.label')\"\n          :options=\"['OrderedReady', 'Parallel']\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n    <template v-if=\"strategy === 'RollingUpdate' && !noDeploymentSpec\">\n      <div\n        v-if=\"isDeployment || isDaemonSet\"\n        class=\"row mb-20\"\n        data-testid=\"input-policy-surge\"\n      >\n        <div\n          v-if=\"isDeployment\"\n          class=\"col span-6\"\n        >\n          <InputWithSelect\n            :text-value=\"maxSurge\"\n            :select-before-text=\"false\"\n            :select-value=\"surgeUnits\"\n            :text-label=\"t('workload.upgrading.maxSurge.label')\"\n            :mode=\"mode\"\n            type=\"number\"\n            :options=\"['Pods', '%']\"\n            @input=\"e=>updateWithUnits(e, 'maxSurge')\"\n          />\n        </div>\n        <div\n          class=\"col span-6\"\n          data-testid=\"input-policy-unavailable\"\n        >\n          <InputWithSelect\n            :text-value=\"maxUnavailable\"\n            :select-before-text=\"false\"\n            :select-value=\"unavailableUnits\"\n            :text-label=\"t('workload.upgrading.maxUnavailable.label')\"\n            :mode=\"mode\"\n            type=\"number\"\n            :options=\"['Pods', '%']\"\n            @input=\"e=>updateWithUnits(e, 'maxUnavailable')\"\n          />\n        </div>\n      </div>\n    </template>\n\n    <!-- workload spec -->\n    <div\n      v-if=\"!noDeploymentSpec\"\n      class=\"row mb-20\"\n    >\n      <div\n        v-if=\"!isStatefulSet\"\n        class=\"col span-6\"\n        data-testid=\"input-policy-min\"\n      >\n        <UnitInput\n          v-model=\"minReadySeconds\"\n          :suffix=\"t('suffix.seconds', {count: minReadySeconds})\"\n          label-key=\"workload.upgrading.minReadySeconds.label\"\n          tooltip-key=\"workload.upgrading.minReadySeconds.tip\"\n          :mode=\"mode\"\n          @input=\"update\"\n        />\n      </div>\n      <div\n        v-if=\"isDeployment || isStatefulSet || isDaemonSet\"\n        class=\"col span-6\"\n        data-testid=\"input-policy-limit\"\n      >\n        <UnitInput\n          v-model=\"revisionHistoryLimit\"\n          :suffix=\"t('suffix.revisions', {count: revisionHistoryLimit})\"\n          label-key=\"workload.upgrading.revisionHistoryLimit.label\"\n          tooltip-key=\"workload.upgrading.revisionHistoryLimit.tip\"\n          :mode=\"mode\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n    <div\n      v-if=\"isDeployment && !noDeploymentSpec\"\n      class=\"row mb-20\"\n    >\n      <div\n        class=\"col span-6\"\n        data-testid=\"input-policy-deadline\"\n      >\n        <UnitInput\n          v-model=\"progressDeadlineSeconds\"\n          :suffix=\"t('suffix.seconds', {count: progressDeadlineSeconds})\"\n          label-key=\"workload.upgrading.progressDeadlineSeconds.label\"\n          tooltip-key=\"workload.upgrading.progressDeadlineSeconds.tip\"\n          :mode=\"mode\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n\n    <!-- pod spec -->\n    <div\n      v-if=\"!noPodSpec\"\n      class=\"row\"\n    >\n      <div\n        class=\"col span-6\"\n        data-testid=\"input-policy-termination\"\n      >\n        <UnitInput\n          v-model=\"terminationGracePeriodSeconds\"\n          :suffix=\"t('suffix.seconds', {count: terminationGracePeriodSeconds})\"\n          label-key=\"workload.upgrading.terminationGracePeriodSeconds.label\"\n          tooltip-key=\"workload.upgrading.terminationGracePeriodSeconds.tip\"\n          :mode=\"mode\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n"]}]}