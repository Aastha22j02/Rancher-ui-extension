{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/c/_cluster/monitoring/alertmanagerconfig/_alertmanagerconfigid/receiver.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/c/_cluster/monitoring/alertmanagerconfig/_alertmanagerconfigid/receiver.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["receiver.vue"],"names":[],"mappingsfile":"receiver.vue","sourceRoot":"node_modules/@rancher/shell/pages/c/_cluster/monitoring/alertmanagerconfig/_alertmanagerconfigid","sourcesContent":["<script>\nimport ActionMenu from '@shell/components/ActionMenu';\nimport ReceiverConfig from '@shell/edit/monitoring.coreos.com.alertmanagerconfig/receiverConfig';\nimport ButtonGroup from '@shell/components/ButtonGroup';\nimport ResourceYaml from '@shell/components/ResourceYaml';\nimport { createYaml } from '@shell/utils/create-yaml';\nimport { EDITOR_MODES } from '@shell/components/YamlEditor';\nimport { MONITORING, SCHEMA } from '@shell/config/types';\nimport {\n  _CREATE, _EDIT, _VIEW, _CONFIG, _YAML, _DETAIL\n} from '@shell/config/query-params';\n\nimport { clone } from '@shell/utils/object';\n\nexport default {\n  name:       'AlertmanagerConfigReceiverCreateEdit',\n  components: {\n    ActionMenu,\n    ButtonGroup,\n    ReceiverConfig,\n    ResourceYaml\n  },\n\n  async fetch() {\n    const inStore = this.$store.getters['currentProduct'].inStore;\n    const alertmanagerConfigSchema = this.$store.getters[`${ inStore }/schemaFor`](MONITORING.ALERTMANAGERCONFIG);\n\n    this.receiverName = this.$route.query.receiverName;\n\n    const alertmanagerConfigId = this.$route.params.alertmanagerconfigid;\n    const originalAlertmanagerConfigResource = await this.$store.dispatch(`${ inStore }/find`, { type: MONITORING.ALERTMANAGERCONFIG, id: alertmanagerConfigId });\n    const alertmanagerConfigResource = await this.$store.dispatch(`${ inStore }/clone`, { resource: originalAlertmanagerConfigResource });\n\n    await alertmanagerConfigSchema.fetchResourceFields();\n\n    const mode = this.$route.query.mode;\n\n    if (mode !== _CREATE) {\n      const existingReceiverData = (alertmanagerConfigResource.spec.receivers || []).find((receiverData) => {\n        return receiverData.name === this.receiverName;\n      });\n\n      if (existingReceiverData) {\n        this.receiverValue = existingReceiverData;\n      }\n    }\n\n    this.alertmanagerConfigId = alertmanagerConfigResource.id;\n    this.alertmanagerConfigResource = alertmanagerConfigResource;\n    this.alertmanagerConfigDetailRoute = alertmanagerConfigResource._detailLocation;\n  },\n\n  // take edit link and edit request from AlertmanagerConfig resource\n  // and pass it to ReceiverConfig as a prop\n\n  data() {\n    return {\n      actionMenuTargetElement:       null,\n      actionMenuTargetEvent:         null,\n      alertmanagerConfigId:          '',\n      alertmanagerConfigResource:    null,\n      alertmanagerConfigDetailRoute: null,\n      config:                        _CONFIG,\n      create:                        _CREATE,\n      detail:                        _DETAIL,\n      edit:                          _EDIT,\n      receiverActionMenuIsOpen:      false,\n      receiverName:                  '',\n      receiverValue:                 {},\n      showPreview:                   false,\n      view:                          _VIEW,\n      viewOptions:                   [\n        {\n          labelKey: 'resourceDetail.masthead.config',\n          value:    'config',\n        }, {\n          labelKey: 'resourceDetail.masthead.yaml',\n          value:    _YAML,\n        }\n      ],\n      yaml: _YAML\n    };\n  },\n\n  computed: {\n    currentView() {\n      return this.$route.query.currentView;\n    },\n    receiverActions() {\n      const alertmanagerConfigActions = this.alertmanagerConfigResource?.availableActions;\n\n      if (!alertmanagerConfigActions) {\n        return [];\n      }\n\n      // Receivers are not a separate resource, so they\n      // should only have a subset of the AlertmanagerConfig\n      // actions. So we take AlertmanagerConfig's actions and filter\n      // out any that don't apply.\n      // Example action data:\n      // {\n      //     \"action\": \"goToEdit\",\n      //     \"label\": \"Edit Config\",\n      //     \"icon\": \"icon icon-edit\",\n      //     \"enabled\": true\n      // },\n      return this.alertmanagerConfigResource.getReceiverActions(alertmanagerConfigActions);\n    },\n    resourceYaml() {\n      const resource = this.alertmanagerConfigResource;\n\n      const inStore = this.$store.getters['currentStore'](resource);\n      const schemas = this.$store.getters[`${ inStore }/all`](SCHEMA);\n      const clonedResource = clone(resource);\n\n      const out = createYaml(schemas, MONITORING.ALERTMANAGERCONFIG, clonedResource);\n\n      return out;\n    },\n    mode() {\n      // Use the route as a dependency of the\n      // computed property so that the component\n      // updates when you navigate between edit\n      // and view.\n      return this.$route.query.mode;\n    },\n    editorMode() {\n      if ( this.mode === this.view ) {\n        return EDITOR_MODES.VIEW_CODE;\n      } else if ( this.showPreview ) {\n        return EDITOR_MODES.DIFF_CODE;\n      }\n\n      return EDITOR_MODES.EDIT_CODE;\n    },\n    heading() {\n      switch (this.$route.query.mode) {\n      case this.create:\n        return this.t('monitoring.alertmanagerConfig.receiverFormNames.create');\n      case this.edit:\n        if (this.currentView === this.yaml || this.$route.query.as === this.yaml) {\n          // When you edit as YAML, you edit the whole AlertmanagerConfig\n          // at once, so the header is just \"Edit AlertmanagerConfig\"\n          return this.t('monitoring.alertmanagerConfig.receiverFormNames.editYaml');\n        }\n\n        // When you edit as a form, you edit only the receiver,\n        // so the form header is \"Edit Receiver in AlertmanagerConfig\"\n        return this.t('monitoring.alertmanagerConfig.receiverFormNames.edit');\n\n      default:\n        return this.t('monitoring.alertmanagerConfig.receiverFormNames.detail');\n      }\n    },\n  },\n\n  methods: {\n    // When creating or editing a receiver, in both cases\n    // it is actually the one existing AlertmanagerConfig\n    // being saved. Therefore we take the save from the\n    // AlertmanagerConfig resource and pass it into the\n    // receiver config form.\n    async saveOverride(buttonDone) {\n      if (this.alertmanagerConfigResource.yamlError) {\n        this.alertmanagerConfigResource.errors = this.alertmanagerConfigResource.errors || [];\n        this.alertmanagerConfigResource.errors.push(this.alertmanagerConfigResource.yamlError);\n\n        buttonDone(false);\n\n        return;\n      }\n\n      try {\n        await this.alertmanagerConfigResource.save(...arguments);\n\n        buttonDone(true);\n\n        this.redirectToAlertmanagerConfigDetail();\n      } catch (e) {\n        const msg = e?.message ? e.message : this.t('monitoring.alertmanagerConfig.error');\n\n        this.$refs.config.setError(msg);\n        buttonDone(false);\n      }\n    },\n    handleButtonGroupClick(event) {\n      if (event === this.yaml) {\n        this.goToEditYaml(this.view);\n      }\n      if (event === this.config) {\n        this.goToEdit(this.view);\n      }\n    },\n    toggleReceiverActionMenu() {\n      this.receiverActionMenuIsOpen = !this.receiverActionMenuIsOpen;\n    },\n    handleReceiverActionMenuClick(event) {\n      this.actionMenuTargetElement = this.$refs.actions;\n      this.actionMenuTargetEvent = event;\n      this.toggleReceiverActionMenu();\n    },\n    goToEdit() {\n    // 'goToEdit' is the exact name of an action for AlertmanagerConfig\n    // and this method executes the action.\n      this.$router.push(this.alertmanagerConfigResource.getEditReceiverConfigRoute(this.receiverValue.name, _EDIT));\n    },\n    goToEditYaml() {\n    // 'goToEditYaml' is the exact name of an action for AlertmanagerConfig\n    // and this method executes the action.\n      this.$router.push(this.alertmanagerConfigResource.getEditReceiverYamlRoute(this.receiverValue.name, _EDIT));\n    },\n    promptRemove(actionData) {\n      // 'promptRemove' is the exact name of an action for AlertmanagerConfig\n      // and this method executes the action.\n      // Get the name of the receiver to delete from the action info.\n      const nameOfReceiverToDelete = actionData.route.query.receiverName;\n      // Remove it from the configuration of the parent AlertmanagerConfig\n      // resource.\n      const existingReceivers = this.alertmanagerConfigResource.spec.receivers || [];\n      const receiversMinusDeletedItem = existingReceivers.filter((receiver) => {\n        return receiver.name !== nameOfReceiverToDelete;\n      });\n\n      this.alertmanagerConfigResource.spec.receivers = receiversMinusDeletedItem;\n      // After saving the AlertmanagerConfig, the resource has been deleted.\n      this.alertmanagerConfigResource.save(...arguments);\n      this.$router.push(this.alertmanagerConfigResource._detailLocation);\n    },\n    redirectToReceiverDetail(receiverName) {\n      return this.alertmanagerConfigResource.getReceiverDetailLink(receiverName);\n    },\n    redirectToAlertmanagerConfigDetail() {\n      const route = this.alertmanagerConfigResource._detailLocation;\n\n      this.$router.push(route);\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <header class=\"header\">\n      <div class=\"title\">\n        <div class=\"primaryheader\">\n          <h1>\n            {{ heading }}\n          </h1>\n        </div>\n      </div>\n      <div class=\"actions-container\">\n        <div class=\"actions\">\n          <ButtonGroup\n            v-if=\"viewOptions && mode === view\"\n            :value=\"currentView\"\n            :options=\"viewOptions\"\n            @input=\"handleButtonGroupClick\"\n          />\n\n          <button\n            v-if=\"mode === view\"\n            ref=\"actions\"\n            aria-haspopup=\"true\"\n            type=\"button\"\n            class=\"btn role-multi-action actions\"\n            @click=\"handleReceiverActionMenuClick\"\n          >\n            <i class=\"icon icon-actions\" />\n          </button>\n        </div>\n      </div>\n    </header>\n    <ResourceYaml\n      v-if=\"currentView === yaml && alertmanagerConfigResource\"\n      ref=\"resourceyaml\"\n      :value=\"alertmanagerConfigResource\"\n      :mode=\"mode\"\n      :initial-yaml-for-diff=\"null\"\n      :yaml=\"resourceYaml\"\n      :offer-preview=\"mode === edit\"\n      :done-route=\"JSON.stringify(redirectToReceiverDetail(receiverName))\"\n      :done-override=\"alertmanagerConfigDetailRoute\"\n      :apply-hooks=\"alertmanagerConfigResource.applyHooks\"\n      @error=\"e=>$emit('error', e)\"\n    />\n    <ReceiverConfig\n      v-if=\"(currentView === config || currentView === detail) && alertmanagerConfigResource\"\n      ref=\"config\"\n      :value=\"receiverValue\"\n      :mode=\"mode\"\n      :alertmanager-config-id=\"alertmanagerConfigId\"\n      :alertmanager-config-resource=\"alertmanagerConfigResource\"\n      :save-override=\"saveOverride\"\n    />\n    <ActionMenu\n      :custom-actions=\"receiverActions\"\n      :open=\"receiverActionMenuIsOpen\"\n      :use-custom-target-element=\"true\"\n      :custom-target-element=\"actionMenuTargetElement\"\n      :custom-target-event=\"actionMenuTargetEvent\"\n      @close=\"receiverActionMenuIsOpen = false\"\n      @goToEdit=\"goToEdit\"\n      @goToEditYaml=\"goToEditYaml\"\n      @promptRemove=\"promptRemove\"\n    />\n  </div>\n</template>\n\n<style lang='scss' scoped>\n.header{\n  H1{\n    flex: 1;\n  }\n  border-bottom: 1px solid var(--border);\n  margin-bottom: 0;\n  padding-bottom: 20px;\n}\n\n</style>\n"]}]}