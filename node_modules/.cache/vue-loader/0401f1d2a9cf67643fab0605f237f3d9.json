{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/c/_cluster/settings/performance.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/c/_cluster/settings/performance.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IENoZWNrYm94IH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9DaGVja2JveCc7CmltcG9ydCBMb2FkaW5nIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0xvYWRpbmcnOwppbXBvcnQgQXN5bmNCdXR0b24gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvQXN5bmNCdXR0b24nOwppbXBvcnQgeyBCYW5uZXIgfSBmcm9tICdAY29tcG9uZW50cy9CYW5uZXInOwppbXBvcnQgeyBMYWJlbGVkSW5wdXQgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0xhYmVsZWRJbnB1dCc7CmltcG9ydCB7IE1BTkFHRU1FTlQgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IHsgREVGQVVMVF9QRVJGX1NFVFRJTkcsIFNFVFRJTkcgfSBmcm9tICdAc2hlbGwvY29uZmlnL3NldHRpbmdzJzsKaW1wb3J0IHsgX0VESVQsIF9WSUVXIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9xdWVyeS1wYXJhbXMnOwppbXBvcnQgVW5pdElucHV0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vVW5pdElucHV0JzsKCmNvbnN0IGluY29tcGF0aWJsZSA9IHsKICBpbmNyZW1lbnRhbExvYWRpbmc6IFsnZm9yY2VOc0ZpbHRlclYyJ10sCiAgbWFudWFsUmVmcmVzaDogICAgICBbJ2ZvcmNlTnNGaWx0ZXJWMiddLAogIGZvcmNlTnNGaWx0ZXJWMjogICAgWydpbmNyZW1lbnRhbExvYWRpbmcnLCAnbWFudWFsUmVmcmVzaCddLAp9OwoKY29uc3QgbDEwbiA9IHsKICBpbmNyZW1lbnRhbExvYWRpbmc6ICdpbmNyZW1lbnRhbExvYWQnLAogIG1hbnVhbFJlZnJlc2g6ICAgICAgJ21hbnVhbFJlZnJlc2gnLAogIGZvcmNlTnNGaWx0ZXJWMjogICAgJ25zRmlsdGVyaW5nJywKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBDaGVja2JveCwKICAgIExvYWRpbmcsCiAgICBBc3luY0J1dHRvbiwKICAgIEJhbm5lciwKICAgIExhYmVsZWRJbnB1dCwKICAgIFVuaXRJbnB1dAogIH0sCgogIGFzeW5jIGZldGNoKCkgewogICAgdHJ5IHsKICAgICAgdGhpcy51aVBlcmZTZXR0aW5nID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ21hbmFnZW1lbnQvZmluZCcsIHsgdHlwZTogTUFOQUdFTUVOVC5TRVRUSU5HLCBpZDogU0VUVElORy5VSV9QRVJGT1JNQU5DRSB9KTsKICAgIH0gY2F0Y2ggewogICAgICB0aGlzLnVpUGVyZlNldHRpbmcgPSBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbWFuYWdlbWVudC9jcmVhdGUnLCB7IHR5cGU6IE1BTkFHRU1FTlQuU0VUVElORyB9LCB7IHJvb3Q6IHRydWUgfSk7CiAgICAgIC8vIFNldHRpbmcgZG9lcyBub3QgZXhpc3QgLSBjcmVhdGUgYSBuZXcgb25lCiAgICAgIHRoaXMudWlQZXJmU2V0dGluZy52YWx1ZSA9IEpTT04uc3RyaW5naWZ5KERFRkFVTFRfUEVSRl9TRVRUSU5HKTsKICAgICAgdGhpcy51aVBlcmZTZXR0aW5nLm1ldGFkYXRhID0geyBuYW1lOiBTRVRUSU5HLlVJX1BFUkZPUk1BTkNFIH07CiAgICB9CgogICAgdHJ5IHsKICAgICAgdGhpcy5hdXRoVXNlclRUTCA9IGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKGBtYW5hZ2VtZW50L2ZpbmRgLCB7IHR5cGU6IE1BTkFHRU1FTlQuU0VUVElORywgaWQ6IFNFVFRJTkcuQVVUSF9VU0VSX1NFU1NJT05fVFRMX01JTlVURVMgfSk7CiAgICB9IGNhdGNoIHt9CgogICAgY29uc3Qgc1ZhbHVlID0gdGhpcy51aVBlcmZTZXR0aW5nPy52YWx1ZSB8fCBKU09OLnN0cmluZ2lmeShERUZBVUxUX1BFUkZfU0VUVElORyk7CgogICAgdGhpcy52YWx1ZSA9IHsKICAgICAgLi4uREVGQVVMVF9QRVJGX1NFVFRJTkcsCiAgICAgIC4uLkpTT04ucGFyc2Uoc1ZhbHVlKSwKICAgIH07CgogICAgdGhpcy5nY1N0YXJ0ZWRFbmFibGVkID0gdGhpcy52YWx1ZS5nYXJiYWdlQ29sbGVjdGlvbi5lbmFibGVkOwogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1aVBlcmZTZXR0aW5nOiAgICAgICAgICAgICAgREVGQVVMVF9QRVJGX1NFVFRJTkcsCiAgICAgIGF1dGhVc2VyVFRMOiAgICAgICAgICAgICAgICBudWxsLAogICAgICBiYW5uZXJWYWw6ICAgICAgICAgICAgICAgICAge30sCiAgICAgIHZhbHVlOiAgICAgICAgICAgICAgICAgICAgICB7fSwKICAgICAgZXJyb3JzOiAgICAgICAgICAgICAgICAgICAgIFtdLAogICAgICBnY1N0YXJ0ZWRFbmFibGVkOiAgICAgICAgICAgbnVsbCwKICAgICAgaXNJbmFjdGl2aXR5VGhyZXNob2xkVmFsaWQ6IGZhbHNlLAogICAgfTsKICB9LAoKICBjb21wdXRlZDogewogICAgbW9kZSgpIHsKICAgICAgY29uc3Qgc2NoZW1hID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1tgbWFuYWdlbWVudC9zY2hlbWFGb3JgXShNQU5BR0VNRU5ULlNFVFRJTkcpOwoKICAgICAgcmV0dXJuIHNjaGVtYT8ucmVzb3VyY2VNZXRob2RzPy5pbmNsdWRlcygnUFVUJykgPyBfRURJVCA6IF9WSUVXOwogICAgfSwKCiAgICBjYW5TYXZlKCkgewogICAgICByZXR1cm4gdGhpcy52YWx1ZS5pbmFjdGl2aXR5LmVuYWJsZWQgPyB0aGlzLmlzSW5hY3Rpdml0eVRocmVzaG9sZFZhbGlkIDogdHJ1ZTsKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICB2YWxpZGF0ZUluYWN0aXZpdHlUaHJlc2hvbGQodmFsdWUpIHsKICAgICAgaWYgKCF0aGlzLmF1dGhVc2VyVFRMPy52YWx1ZSkgewogICAgICAgIHRoaXMuaXNJbmFjdGl2aXR5VGhyZXNob2xkVmFsaWQgPSB0cnVlOwoKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmIChwYXJzZUludCh2YWx1ZSkgPiBwYXJzZUludCh0aGlzLmF1dGhVc2VyVFRMPy52YWx1ZSkpIHsKICAgICAgICB0aGlzLmlzSW5hY3Rpdml0eVRocmVzaG9sZFZhbGlkID0gZmFsc2U7CgogICAgICAgIHJldHVybiB0aGlzLnQoJ3BlcmZvcm1hbmNlLmluYWN0aXZpdHkuYXV0aFVzZXJUVEwnLCB7IGN1cnJlbnQ6IHRoaXMuYXV0aFVzZXJUVEwudmFsdWUgfSk7CiAgICAgIH0KICAgICAgdGhpcy5pc0luYWN0aXZpdHlUaHJlc2hvbGRWYWxpZCA9IHRydWU7CiAgICB9LAoKICAgIGFzeW5jIHNhdmUoYnRuQ0IpIHsKICAgICAgdGhpcy51aVBlcmZTZXR0aW5nLnZhbHVlID0gSlNPTi5zdHJpbmdpZnkodGhpcy52YWx1ZSk7CiAgICAgIHRoaXMuZXJyb3JzID0gW107CgogICAgICB0cnkgewogICAgICAgIGF3YWl0IHRoaXMudWlQZXJmU2V0dGluZy5zYXZlKCk7CgogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdnY1ByZWZlcmVuY2VzVXBkYXRlZCcsIHsKICAgICAgICAgIHByZXZpb3VzbHlFbmFibGVkOiB0aGlzLmdjU3RhcnRlZEVuYWJsZWQsCiAgICAgICAgICBuZXdQcmVmZXJlbmNlczogICAgdGhpcy52YWx1ZS5nYXJiYWdlQ29sbGVjdGlvbgogICAgICAgIH0sIHsgcm9vdDogdHJ1ZSB9KTsKCiAgICAgICAgdGhpcy5nY1N0YXJ0ZWRFbmFibGVkID0gdGhpcy52YWx1ZS5nYXJiYWdlQ29sbGVjdGlvbi5lbmFibGVkOwogICAgICAgIGJ0bkNCKHRydWUpOwogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICB0aGlzLmVycm9ycy5wdXNoKGVycik7CiAgICAgICAgYnRuQ0IoZmFsc2UpOwogICAgICB9CiAgICB9LAoKICAgIGNvbXBhdGlibGVXYXJuaW5nKHByb3BlcnR5LCBlbmFibGVkKSB7CiAgICAgIGlmICghZW5hYmxlZCkgewogICAgICAgIC8vIERpc2FibGluZyBhIHByZWZlcmVuY2Ugd29uJ3QgYXV0b21hdGljYWxseSB0dXJuIG9uIGFuIGluY29tcGF0aWJsZSBvbmUsIHNvIGp1c3Qgc2V0IGFuZCBleGl0CiAgICAgICAgdGhpcy52YWx1ZVtwcm9wZXJ0eV0uZW5hYmxlZCA9IGZhbHNlOwoKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIC8vIFdlJ3JlIGVuYWJsaW5nIGEgcHJlZmVyZW5jZS4gQXJlIHRoZXJlIGFueSBpbmNvbWFwdGlibGUgcHJlZmVyZW5jZXM/CiAgICAgIGlmICgoaW5jb21wYXRpYmxlW3Byb3BlcnR5XSB8fCBbXSkuZXZlcnkoKHApID0+ICF0aGlzLnZhbHVlW3BdLmVuYWJsZWQpKSB7CiAgICAgICAgLy8gTm8sIGp1c3Qgc2V0IGFuZCBleGl0CiAgICAgICAgdGhpcy52YWx1ZVtwcm9wZXJ0eV0uZW5hYmxlZCA9IHRydWU7CgogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgLy8gSW5jb21wYXRpYmxlIHByZWZlcmVuY2VzIGZvdW5kLCBzbyBjb25maXJtIHdpdGggdXNlciBiZWZvcmUgYXBwbHlpbmcKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvcHJvbXB0TW9kYWwnLCB7CiAgICAgICAgY29tcG9uZW50OiAgICAgICdHZW5lcmljUHJvbXB0JywKICAgICAgICBjb21wb25lbnRQcm9wczogewogICAgICAgICAgYXBwbHlNb2RlOiAgICdlbmFibGUnLAogICAgICAgICAgYXBwbHlBY3Rpb246IChidXR0b25Eb25lKSA9PiB7CiAgICAgICAgICAgIHRoaXMudmFsdWVbcHJvcGVydHldLmVuYWJsZWQgPSB0cnVlOwogICAgICAgICAgICAoaW5jb21wYXRpYmxlW3Byb3BlcnR5XSB8fCBbXSkuZm9yRWFjaCgoaW5jb21wYXRpYmxlKSA9PiB7CiAgICAgICAgICAgICAgdGhpcy52YWx1ZVtpbmNvbXBhdGlibGVdLmVuYWJsZWQgPSBmYWxzZTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGJ1dHRvbkRvbmUodHJ1ZSk7CiAgICAgICAgICB9LAogICAgICAgICAgdGl0bGU6IHRoaXMudCgncHJvbXB0UmVtb3ZlLnRpdGxlJywge30sIHRydWUpLAogICAgICAgICAgYm9keTogIHRoaXMudChgcGVyZm9ybWFuY2UuJHsgbDEwbltwcm9wZXJ0eV0gfS5pbmNvbXBhdGlibGVEZXNjcmlwdGlvbmAsIHt9LCB0cnVlKSwKICAgICAgICB9LAogICAgICB9KTsKICAgIH0KICB9LAp9Owo="},{"version":3,"sources":["performance.vue"],"names":[],"mappingsfile":"performance.vue","sourceRoot":"node_modules/@rancher/shell/pages/c/_cluster/settings","sourcesContent":["<script>\nimport { Checkbox } from '@components/Form/Checkbox';\nimport Loading from '@shell/components/Loading';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { Banner } from '@components/Banner';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { MANAGEMENT } from '@shell/config/types';\nimport { DEFAULT_PERF_SETTING, SETTING } from '@shell/config/settings';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport UnitInput from '@shell/components/form/UnitInput';\n\nconst incompatible = {\n  incrementalLoading: ['forceNsFilterV2'],\n  manualRefresh:      ['forceNsFilterV2'],\n  forceNsFilterV2:    ['incrementalLoading', 'manualRefresh'],\n};\n\nconst l10n = {\n  incrementalLoading: 'incrementalLoad',\n  manualRefresh:      'manualRefresh',\n  forceNsFilterV2:    'nsFiltering',\n};\n\nexport default {\n  components: {\n    Checkbox,\n    Loading,\n    AsyncButton,\n    Banner,\n    LabeledInput,\n    UnitInput\n  },\n\n  async fetch() {\n    try {\n      this.uiPerfSetting = await this.$store.dispatch('management/find', { type: MANAGEMENT.SETTING, id: SETTING.UI_PERFORMANCE });\n    } catch {\n      this.uiPerfSetting = await this.$store.dispatch('management/create', { type: MANAGEMENT.SETTING }, { root: true });\n      // Setting does not exist - create a new one\n      this.uiPerfSetting.value = JSON.stringify(DEFAULT_PERF_SETTING);\n      this.uiPerfSetting.metadata = { name: SETTING.UI_PERFORMANCE };\n    }\n\n    try {\n      this.authUserTTL = await this.$store.dispatch(`management/find`, { type: MANAGEMENT.SETTING, id: SETTING.AUTH_USER_SESSION_TTL_MINUTES });\n    } catch {}\n\n    const sValue = this.uiPerfSetting?.value || JSON.stringify(DEFAULT_PERF_SETTING);\n\n    this.value = {\n      ...DEFAULT_PERF_SETTING,\n      ...JSON.parse(sValue),\n    };\n\n    this.gcStartedEnabled = this.value.garbageCollection.enabled;\n  },\n\n  data() {\n    return {\n      uiPerfSetting:              DEFAULT_PERF_SETTING,\n      authUserTTL:                null,\n      bannerVal:                  {},\n      value:                      {},\n      errors:                     [],\n      gcStartedEnabled:           null,\n      isInactivityThresholdValid: false,\n    };\n  },\n\n  computed: {\n    mode() {\n      const schema = this.$store.getters[`management/schemaFor`](MANAGEMENT.SETTING);\n\n      return schema?.resourceMethods?.includes('PUT') ? _EDIT : _VIEW;\n    },\n\n    canSave() {\n      return this.value.inactivity.enabled ? this.isInactivityThresholdValid : true;\n    }\n  },\n\n  methods: {\n    validateInactivityThreshold(value) {\n      if (!this.authUserTTL?.value) {\n        this.isInactivityThresholdValid = true;\n\n        return;\n      }\n\n      if (parseInt(value) > parseInt(this.authUserTTL?.value)) {\n        this.isInactivityThresholdValid = false;\n\n        return this.t('performance.inactivity.authUserTTL', { current: this.authUserTTL.value });\n      }\n      this.isInactivityThresholdValid = true;\n    },\n\n    async save(btnCB) {\n      this.uiPerfSetting.value = JSON.stringify(this.value);\n      this.errors = [];\n\n      try {\n        await this.uiPerfSetting.save();\n\n        this.$store.dispatch('gcPreferencesUpdated', {\n          previouslyEnabled: this.gcStartedEnabled,\n          newPreferences:    this.value.garbageCollection\n        }, { root: true });\n\n        this.gcStartedEnabled = this.value.garbageCollection.enabled;\n        btnCB(true);\n      } catch (err) {\n        this.errors.push(err);\n        btnCB(false);\n      }\n    },\n\n    compatibleWarning(property, enabled) {\n      if (!enabled) {\n        // Disabling a preference won't automatically turn on an incompatible one, so just set and exit\n        this.value[property].enabled = false;\n\n        return;\n      }\n\n      // We're enabling a preference. Are there any incomaptible preferences?\n      if ((incompatible[property] || []).every((p) => !this.value[p].enabled)) {\n        // No, just set and exit\n        this.value[property].enabled = true;\n\n        return;\n      }\n\n      // Incompatible preferences found, so confirm with user before applying\n      this.$store.dispatch('cluster/promptModal', {\n        component:      'GenericPrompt',\n        componentProps: {\n          applyMode:   'enable',\n          applyAction: (buttonDone) => {\n            this.value[property].enabled = true;\n            (incompatible[property] || []).forEach((incompatible) => {\n              this.value[incompatible].enabled = false;\n            });\n            buttonDone(true);\n          },\n          title: this.t('promptRemove.title', {}, true),\n          body:  this.t(`performance.${ l10n[property] }.incompatibleDescription`, {}, true),\n        },\n      });\n    }\n  },\n};\n</script>\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <h1 class=\"mb-20\">\n      {{ t('performance.label') }}\n    </h1>\n    <div>\n      <div class=\"ui-perf-setting\">\n        <!-- Inactivity -->\n        <div class=\"mt-20\">\n          <h2>{{ t('performance.inactivity.title') }}</h2>\n          <p>{{ t('performance.inactivity.description') }}</p>\n          <Checkbox\n            v-model=\"value.inactivity.enabled\"\n            :mode=\"mode\"\n            :label=\"t('performance.inactivity.checkboxLabel')\"\n            class=\"mt-10 mb-20\"\n            :primary=\"true\"\n          />\n          <div class=\"ml-20\">\n            <LabeledInput\n              v-model=\"value.inactivity.threshold\"\n              data-testid=\"inactivity-threshold\"\n              :mode=\"mode\"\n              :label=\"t('performance.inactivity.inputLabel')\"\n              :disabled=\"!value.inactivity.enabled\"\n              class=\"input mb-10\"\n              type=\"number\"\n              min=\"0\"\n              :rules=\"[validateInactivityThreshold]\"\n            />\n            <span\n              v-clean-html=\"t('performance.inactivity.information', {}, true)\"\n              :class=\"{ 'text-muted': !value.incrementalLoading.enabled }\"\n            />\n          </div>\n        </div>\n        <!-- Websocket Notifications -->\n        <div class=\"mt-40\">\n          <h2>{{ t('performance.websocketNotification.label') }}</h2>\n          <p>{{ t('performance.websocketNotification.description') }}</p>\n          <Checkbox\n            v-model=\"value.disableWebsocketNotification\"\n            :mode=\"mode\"\n            :label=\"t('performance.websocketNotification.checkboxLabel')\"\n            class=\"mt-10 mb-20\"\n            :primary=\"true\"\n          />\n        </div>\n        <!-- Incremental Loading -->\n        <div class=\"mt-40\">\n          <h2>{{ t('performance.incrementalLoad.label') }}</h2>\n          <p>{{ t('performance.incrementalLoad.description') }}</p>\n          <Checkbox\n            :value=\"value.incrementalLoading.enabled\"\n            :mode=\"mode\"\n            :label=\"t('performance.incrementalLoad.checkboxLabel')\"\n            class=\"mt-10 mb-20\"\n            :primary=\"true\"\n            @input=\"compatibleWarning('incrementalLoading', $event)\"\n          />\n          <div class=\"ml-20\">\n            <p :class=\"{ 'text-muted': !value.incrementalLoading.enabled }\">\n              {{ t('performance.incrementalLoad.setting') }}\n            </p>\n            <LabeledInput\n              v-model=\"value.incrementalLoading.threshold\"\n              :mode=\"mode\"\n              :label=\"t('performance.incrementalLoad.inputLabel')\"\n              :disabled=\"!value.incrementalLoading.enabled\"\n              class=\"input\"\n              type=\"number\"\n              min=\"0\"\n            />\n          </div>\n        </div>\n        <!-- Enable manual refresh list views -->\n        <div class=\"mt-40\">\n          <h2 v-t=\"'performance.manualRefresh.label'\" />\n          <p>{{ t('performance.manualRefresh.description') }}</p>\n          <Banner\n            color=\"error\"\n            label-key=\"performance.experimental\"\n          />\n          <Checkbox\n            :value=\"value.manualRefresh.enabled\"\n            :mode=\"mode\"\n            :label=\"t('performance.manualRefresh.checkboxLabel')\"\n            class=\"mt-10 mb-20\"\n            :primary=\"true\"\n            @input=\"compatibleWarning('manualRefresh', $event)\"\n          />\n          <div class=\"ml-20\">\n            <p :class=\"{ 'text-muted': !value.manualRefresh.enabled }\">\n              {{ t('performance.manualRefresh.setting') }}\n            </p>\n            <LabeledInput\n              v-model.number=\"value.manualRefresh.threshold\"\n              :mode=\"mode\"\n              :label=\"t('performance.manualRefresh.inputLabel')\"\n              :disabled=\"!value.manualRefresh.enabled\"\n              class=\"input\"\n              type=\"number\"\n              min=\"0\"\n            />\n          </div>\n        </div>\n        <!-- Enable GC of resources from store -->\n        <div class=\"mt-40\">\n          <h2 v-t=\"'performance.gc.label'\" />\n          <p>{{ t('performance.gc.description') }}</p>\n          <Banner\n            color=\"error\"\n            label-key=\"performance.experimental\"\n          />\n          <Checkbox\n            v-model=\"value.garbageCollection.enabled\"\n            :mode=\"mode\"\n            :label=\"t('performance.gc.checkboxLabel')\"\n            class=\"mt-10 mb-20\"\n            :primary=\"true\"\n          />\n          <div class=\"ml-20\">\n            <h3>{{ t('performance.gc.whenRun.description') }}</h3>\n            <div class=\"ml-20 mb-10\">\n              <Checkbox\n                v-model=\"value.garbageCollection.enabledInterval\"\n                :mode=\"mode\"\n                :class=\"{ 'text-muted': !value.garbageCollection.enabled }\"\n                :label=\"t('performance.gc.whenRun.intervalCheckBox.label')\"\n                class=\"mt-10 mb-10\"\n                :disabled=\"!value.garbageCollection.enabled\"\n                :primary=\"true\"\n              />\n              <div class=\"ml-20\">\n                <UnitInput\n                  v-model=\"value.garbageCollection.interval\"\n                  :mode=\"mode\"\n                  :suffix=\"t('suffix.seconds', { count: value.garbageCollection.interval })\"\n                  :label=\"t('performance.gc.whenRun.interval.inputLabel')\"\n                  :disabled=\"!value.garbageCollection.enabled || !value.garbageCollection.enabledInterval\"\n                  min=\"30\"\n                  class=\"input\"\n                />\n              </div>\n              <Checkbox\n                v-model=\"value.garbageCollection.enabledOnNavigate\"\n                :mode=\"mode\"\n                :class=\"{ 'text-muted': !value.garbageCollection.enabled }\"\n                :label=\"t('performance.gc.whenRun.route.description')\"\n                class=\"mt-20 mb-10\"\n                :disabled=\"!value.garbageCollection.enabled\"\n                :primary=\"true\"\n              />\n            </div>\n            <h3>{{ t('performance.gc.howRun.description') }}</h3>\n            <div class=\"ml-20\">\n              <p :class=\"{ 'text-muted': !value.garbageCollection.enabled }\">\n                {{ t('performance.gc.howRun.age.description', {}, true) }}\n              </p>\n              <UnitInput\n                v-model=\"value.garbageCollection.ageThreshold\"\n                :mode=\"mode\"\n                :suffix=\"t('suffix.seconds', { count: value.garbageCollection.ageThreshold })\"\n                :label=\"t('performance.gc.howRun.age.inputLabel')\"\n                :disabled=\"!value.garbageCollection.enabled\"\n                min=\"30\"\n                class=\"input\"\n              />\n              <p\n                class=\"mt-20\"\n                :class=\"{ 'text-muted': !value.garbageCollection.enabled }\"\n              >\n                {{ t('performance.gc.howRun.count.description') }}\n              </p>\n              <LabeledInput\n                v-model.number=\"value.garbageCollection.countThreshold\"\n                :mode=\"mode\"\n                :label=\"t('performance.gc.howRun.count.inputLabel')\"\n                :disabled=\"!value.garbageCollection.enabled\"\n                class=\"input\"\n                type=\"number\"\n                min=\"0\"\n              />\n            </div>\n          </div>\n        </div>\n        <!-- Force NS filter -->\n        <div class=\"mt-40\">\n          <h2>{{ t('performance.nsFiltering.label') }}</h2>\n          <p>{{ t('performance.nsFiltering.description') }}</p>\n          <Banner\n            color=\"error\"\n            label-key=\"performance.experimental\"\n          />\n          <Checkbox\n            :value=\"value.forceNsFilterV2.enabled\"\n            :mode=\"mode\"\n            :label=\"t('performance.nsFiltering.checkboxLabel')\"\n            class=\"mt-10 mb-20\"\n            :primary=\"true\"\n            @input=\"compatibleWarning('forceNsFilterV2', $event)\"\n          />\n        </div>\n        <!-- Advanced Websocket Worker -->\n        <div class=\"mt-40\">\n          <h2>{{ t('performance.advancedWorker.label') }}</h2>\n          <p>{{ t('performance.advancedWorker.description') }}</p>\n          <Banner\n            color=\"error\"\n            label-key=\"performance.experimental\"\n          />\n          <Checkbox\n            v-model=\"value.advancedWorker.enabled\"\n            :mode=\"mode\"\n            :label=\"t('performance.advancedWorker.checkboxLabel')\"\n            class=\"mt-10 mb-20\"\n            :primary=\"true\"\n          />\n        </div>\n      </div>\n    </div>\n    <template v-for=\"err in errors\">\n      <Banner\n        :key=\"err\"\n        color=\"error\"\n        :label=\"err\"\n      />\n    </template>\n    <div v-if=\"mode === 'edit'\">\n      <AsyncButton\n        data-testid=\"performance__save-btn\"\n        class=\"pull-right mt-20\"\n        mode=\"apply\"\n        :disabled=\"!canSave\"\n        @click=\"save\"\n      />\n    </div>\n  </div>\n</template>\n<style scoped lang='scss'>\n.overlay {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: var(--overlay-bg);\n  z-index: 1;\n}\n  .ui-perf-setting {\n    P {\n      line-height: 1.25;\n      margin-bottom: 10px;\n    }\n\n    .underline {\n      text-decoration: underline;\n    }\n  }\n  .input {\n    max-width: 25%;\n  }\n</style>\n"]}]}