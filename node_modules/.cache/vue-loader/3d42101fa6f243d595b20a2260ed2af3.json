{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/IconOrSvg.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/IconOrSvg.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgovKioKICogVGhpcyBjb21wb25lbnQgcmVuZGVycyB0aGUgaWNvbiBpbiB0aGUgdG9wIGxldmVsIG1lbnUuCiAqIEljb24gY2FuIGVpdGhlciBiZSB2aWEgYSBmb250IHZpYSB0aGUgJ2ljb24nIHByb3BlcnR5IG9yIGFuIHN2ZyB2aWEgdGhlICdzcmMnIHByb3BlcnR5CiAqCiAqIFRoZSB0cmlja2luZXNzIGhlcmUgaXMgdGhhdCB3ZSB3YW50IHRoZSBpY29uIHRvIGJlIHRoZSBjb3JyZWN0IGNvbG9yIC0gYm90aCBub3JtYWxseSBhbmQgd2hlbiBob3ZlcmVkCiAqIEZvciBhIGZvbnQgaWNvbiwgdGhpcyBpcyBlYXN5LCBzaW5jZSB3ZSBqdXN0IHNldCB0aGUgY29sb3IgY3NzIHByb3BlcnR5CiAqIEZvciBhbiBzdmcgaWNvbiBpbmNsdWRlZCB3aXRoIHRoZSA8aW1nPiB0YWcgdGhpcyBpcyBoYXJkZXIgLSB0aGVyZSBpcyBubyB3YXkgdG8gYXBwbHkgY3NzIHRvCiAqIHRoZSBzdmcgYnJvdWdodCBpbiB0aGlzIHdheSAtIHRoZSB3b3JrYXJvdW5kIGlzIHRvIGFwcGx5IGEgY3NzIGZpbHRlciAtIGluIG9yZGVyIHRvIGRvIHRoaXMgd2UKICogbmVlZCB0byBnZW5lcmF0ZSB0aGUgY3NzIGZpbHRlciBmb3IgdGhlIHJlcXVpcmVkIGNvbG9yIC0gdGhlIGNvZGUgZm9yIHRoYXQgaXMgaW4gdGhlICdzdmctZmlsdGVyJyB1dGlsaXR5CiAqCiAqIFdlIGNhY2hlIGZpbHRlcnMgYW5kIGNzcyBmb3IgZ2l2ZW4gY29sb3JzLCBzbyB3ZSBvbmx5IGdlbmVyYXRlIHRoZW0gb25jZS4KICoKICogVGhpcyBtYWtlcyB0aGUgY29kZSBoZXJlIGxvb2sgY29tcGxleCAtIGJ1dCB3ZSBhcmUgZXNzZW50aWFsbHkgZ2VuZXJhdGluZyB0aGUgY3NzIGZpbHRlcnMKICogYW5kIHRoZW4gaW5qZWN0aW5nIGN1c3RvbSBjc3MgaW50byB0aGUgZG9jdW1lbnQgc28gdGhhdCBhbnkgaWNvbnMgaW5jbHVkZWQgdmlhIHN2ZyB3aWxsCiAqIHNob3cgd2l0aCB0aGUgZGVzaXJlZCBjb2xvcnMgZm9yIHRoZSB0aGVtZS4KICovCmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IHsgU29sdmVyIH0gZnJvbSAnQHNoZWxsL3V0aWxzL3N2Zy1maWx0ZXInOwppbXBvcnQgeyBjb2xvclRvUmdiLCBtYXBTdGFuZGFyZENvbG9ycywgbm9ybWFsaXplSGV4IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2NvbG9yJzsKCmNvbnN0IGZpbHRlckNhY2hlID0ge307CmNvbnN0IGNzc0NhY2hlID0ge307Cgpjb25zdCBjb2xvcnMgPSB7CiAgaGVhZGVyOiB7CiAgICBjb2xvcjogJy0taGVhZGVyLWJ0bi10ZXh0JywKICAgIGhvdmVyOiAnLS1oZWFkZXItYnRuLXRleHQtaG92ZXInCiAgfSwKICBwcmltYXJ5OiB7CiAgICBjb2xvcjogJy0tbGluaycsCiAgICBob3ZlcjogJy0tcHJpbWFyeS1ob3Zlci10ZXh0JwogIH0KfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAgJ0ljb25PclN2ZycsCiAgcHJvcHM6IHsKICAgIHNyYzogewogICAgICB0eXBlOiAgICBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICgpID0+IHVuZGVmaW5lZCwKICAgIH0sCiAgICBpY29uOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogKCkgPT4gdW5kZWZpbmVkLAogICAgfSwKICAgIGNvbG9yOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogKCkgPT4gJ3ByaW1hcnknLAogICAgfQogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4geyBjbGFzc05hbWU6ICcnIH07CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLnNyYykgewogICAgICB0aGlzLnNldENvbG9yKCk7CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgc2V0Q29sb3IoKSB7CiAgICAgIGNvbnN0IGN1cnJUaGVtZSA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ3ByZWZzL3RoZW1lJ107CiAgICAgIGxldCB1aUNvbG9yLCBob3ZlckNvbG9yOwoKICAgICAgLy8gZ3JhYiBjc3MgdmFycyB2YWx1ZXMgYmFzZWQgb24gdGhlIGFjdHVhbCBzdHlsZXNoZWV0cywgZGVwZW5kaW5nIG9uIHRoZSB0aGVtZSBhcHBsaWVkCiAgICAgIC8vIHVzZSBmb3IgbG9vcHMgdG8gbWluaW1pemUgY29tcHV0YXRpb24KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBPYmplY3Qua2V5cyhkb2N1bWVudC5zdHlsZVNoZWV0cykubGVuZ3RoOyBpKyspIHsKICAgICAgICBsZXQgZm91bmQgPSBmYWxzZTsKICAgICAgICBjb25zdCBzdHlsZXNoZWV0ID0gZG9jdW1lbnQuc3R5bGVTaGVldHNbaV07CgogICAgICAgIGlmIChzdHlsZXNoZWV0ICYmIHN0eWxlc2hlZXQuY3NzUnVsZXMpIHsKICAgICAgICAgIGZvciAobGV0IHggPSAwOyB4IDwgT2JqZWN0LmtleXMoc3R5bGVzaGVldC5jc3NSdWxlcykubGVuZ3RoOyB4KyspIHsKICAgICAgICAgICAgY29uc3QgY3NzUnVsZXMgPSBzdHlsZXNoZWV0LmNzc1J1bGVzW3hdOwoKICAgICAgICAgICAgaWYgKGNzc1J1bGVzLnNlbGVjdG9yVGV4dCAmJiAoKGN1cnJUaGVtZSA9PT0gJ2xpZ2h0JyAmJiAoY3NzUnVsZXMuc2VsZWN0b3JUZXh0LmluY2x1ZGVzKCdib2R5JykgfHwgY3NzUnVsZXMuc2VsZWN0b3JUZXh0LmluY2x1ZGVzKCdCT0RZJykpICYmCiAgICAgICAgICAgICAgY3NzUnVsZXMuc2VsZWN0b3JUZXh0LmluY2x1ZGVzKCcudGhlbWUtbGlnaHQnKSAmJiBjc3NSdWxlcy5zdHlsZS5jc3NUZXh0LmluY2x1ZGVzKCctLWxpbms6JykpIHx8CiAgICAgICAgICAgICAgKGN1cnJUaGVtZSA9PT0gJ2RhcmsnICYmIGNzc1J1bGVzLnNlbGVjdG9yVGV4dC5pbmNsdWRlcygnLnRoZW1lLWRhcmsnKSkpKSB7CiAgICAgICAgICAgICAgLy8gZ3JhYiB0aGUgY29sb3JzIHRvIGJlIHVzZWQgb24gdGhlIGljb24gZnJvbSB0aGUgY3NzIHJ1bGVzCiAgICAgICAgICAgICAgdWlDb2xvciA9IG1hcFN0YW5kYXJkQ29sb3JzKGNzc1J1bGVzLnN0eWxlLmdldFByb3BlcnR5VmFsdWUoY29sb3JzW3RoaXMuY29sb3JdLmNvbG9yKS50cmltKCkpOwogICAgICAgICAgICAgIGhvdmVyQ29sb3IgPSBtYXBTdGFuZGFyZENvbG9ycyhjc3NSdWxlcy5zdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKGNvbG9yc1t0aGlzLmNvbG9yXS5ob3ZlcikudHJpbSgpKTsKCiAgICAgICAgICAgICAgLy8gbm9ybWFsaXplIGhleCBjb2xvcnMgKCN4eHggdG8gI3h4eHh4eCkKICAgICAgICAgICAgICB1aUNvbG9yID0gbm9ybWFsaXplSGV4KHVpQ29sb3IpOwogICAgICAgICAgICAgIGhvdmVyQ29sb3IgPSBub3JtYWxpemVIZXgoaG92ZXJDb2xvcik7CgogICAgICAgICAgICAgIGZvdW5kID0gdHJ1ZTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoZm91bmQpIHsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGNvbnN0IHVpQ29sb3JSR0IgPSBjb2xvclRvUmdiKHVpQ29sb3IpOwogICAgICBjb25zdCBob3ZlckNvbG9yUkdCID0gY29sb3JUb1JnYihob3ZlckNvbG9yKTsKICAgICAgY29uc3QgdWlDb2xvclN0ciA9IGAkeyB1aUNvbG9yUkdCLnIgfS0keyB1aUNvbG9yUkdCLmcgfS0keyB1aUNvbG9yUkdCLmIgfWA7CiAgICAgIGNvbnN0IGhvdmVyQ29sb3JTdHIgPSBgJHsgaG92ZXJDb2xvclJHQi5yIH0tJHsgaG92ZXJDb2xvclJHQi5nIH0tJHsgaG92ZXJDb2xvclJHQi5iIH1gOwoKICAgICAgY29uc3QgY2xhc3NOYW1lID0gYHN2Zy1pY29uLSR7IHVpQ29sb3JTdHIgfS0keyBob3ZlckNvbG9yU3RyIH1gOwoKICAgICAgaWYgKCFjc3NDYWNoZVtjbGFzc05hbWVdKSB7CiAgICAgICAgbGV0IGhvdmVyRmlsdGVyID0gZmlsdGVyQ2FjaGVbaG92ZXJDb2xvcl07CgogICAgICAgIGlmICghaG92ZXJGaWx0ZXIpIHsKICAgICAgICAgIGNvbnN0IHNvbHZlciA9IG5ldyBTb2x2ZXIoaG92ZXJDb2xvclJHQik7CiAgICAgICAgICBjb25zdCByZXMgPSBzb2x2ZXIuc29sdmUoKTsKCiAgICAgICAgICBob3ZlckZpbHRlciA9IHJlcz8uZmlsdGVyOwogICAgICAgICAgZmlsdGVyQ2FjaGVbaG92ZXJDb2xvcl0gPSBob3ZlckZpbHRlcjsKICAgICAgICB9CgogICAgICAgIGxldCBtYWluRmlsdGVyID0gZmlsdGVyQ2FjaGVbdWlDb2xvcl07CgogICAgICAgIGlmICghbWFpbkZpbHRlcikgewogICAgICAgICAgY29uc3Qgc29sdmVyID0gbmV3IFNvbHZlcih1aUNvbG9yUkdCKTsKICAgICAgICAgIGNvbnN0IHJlcyA9IHNvbHZlci5zb2x2ZSgpOwoKICAgICAgICAgIG1haW5GaWx0ZXIgPSByZXM/LmZpbHRlcjsKICAgICAgICAgIGZpbHRlckNhY2hlW3VpQ29sb3JdID0gbWFpbkZpbHRlcjsKICAgICAgICB9CgogICAgICAgIC8vIEFkZCBzdHlsZXNoZWV0IChhZGRlZCBhcyBnbG9iYWwgc3R5bGVzKQogICAgICAgIGNvbnN0IHN0eWxlcyA9IGAKICAgICAgICAgIGltZy4keyBjbGFzc05hbWUgfSB7CiAgICAgICAgICAgICR7IG1haW5GaWx0ZXIgfTsKICAgICAgICAgIH0KICAgICAgICAgIGltZy4keyBjbGFzc05hbWUgfTpob3ZlciB7CiAgICAgICAgICAgICR7IGhvdmVyRmlsdGVyIH07CiAgICAgICAgICB9CiAgICAgICAgICBidXR0b246aG92ZXIgPiBpbWcuJHsgY2xhc3NOYW1lIH0gewogICAgICAgICAgICAkeyBob3ZlckZpbHRlciB9OwogICAgICAgICAgfQogICAgICAgICAgbGk6aG92ZXIgPiBpbWcuJHsgY2xhc3NOYW1lIH0gewogICAgICAgICAgICAkeyBob3ZlckZpbHRlciB9OwogICAgICAgICAgfQogICAgICAgICAgYS5vcHRpb246aG92ZXIgPiBpbWcuJHsgY2xhc3NOYW1lIH0gewogICAgICAgICAgICAkeyBob3ZlckZpbHRlciB9OwogICAgICAgICAgfSAgICAgIGA7CgogICAgICAgIGNvbnN0IHN0eWxlU2hlZXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpOwoKICAgICAgICBzdHlsZVNoZWV0LmlubmVyVGV4dCA9IHN0eWxlczsKICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHN0eWxlU2hlZXQpOwoKICAgICAgICBjc3NDYWNoZVtjbGFzc05hbWVdID0gdHJ1ZTsKICAgICAgfQoKICAgICAgVnVlLnNldCh0aGlzLCAnY2xhc3NOYW1lJywgY2xhc3NOYW1lKTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["IconOrSvg.vue"],"names":[],"mappingsfile":"IconOrSvg.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\n\n/**\n * This component renders the icon in the top level menu.\n * Icon can either be via a font via the 'icon' property or an svg via the 'src' property\n *\n * The trickiness here is that we want the icon to be the correct color - both normally and when hovered\n * For a font icon, this is easy, since we just set the color css property\n * For an svg icon included with the <img> tag this is harder - there is no way to apply css to\n * the svg brought in this way - the workaround is to apply a css filter - in order to do this we\n * need to generate the css filter for the required color - the code for that is in the 'svg-filter' utility\n *\n * We cache filters and css for given colors, so we only generate them once.\n *\n * This makes the code here look complex - but we are essentially generating the css filters\n * and then injecting custom css into the document so that any icons included via svg will\n * show with the desired colors for the theme.\n */\nimport Vue from 'vue';\nimport { Solver } from '@shell/utils/svg-filter';\nimport { colorToRgb, mapStandardColors, normalizeHex } from '@shell/utils/color';\n\nconst filterCache = {};\nconst cssCache = {};\n\nconst colors = {\n  header: {\n    color: '--header-btn-text',\n    hover: '--header-btn-text-hover'\n  },\n  primary: {\n    color: '--link',\n    hover: '--primary-hover-text'\n  }\n};\n\nexport default {\n  name:  'IconOrSvg',\n  props: {\n    src: {\n      type:    String,\n      default: () => undefined,\n    },\n    icon: {\n      type:    String,\n      default: () => undefined,\n    },\n    color: {\n      type:    String,\n      default: () => 'primary',\n    }\n  },\n\n  data() {\n    return { className: '' };\n  },\n\n  created() {\n    if (this.src) {\n      this.setColor();\n    }\n  },\n\n  methods: {\n    setColor() {\n      const currTheme = this.$store.getters['prefs/theme'];\n      let uiColor, hoverColor;\n\n      // grab css vars values based on the actual stylesheets, depending on the theme applied\n      // use for loops to minimize computation\n      for (let i = 0; i < Object.keys(document.styleSheets).length; i++) {\n        let found = false;\n        const stylesheet = document.styleSheets[i];\n\n        if (stylesheet && stylesheet.cssRules) {\n          for (let x = 0; x < Object.keys(stylesheet.cssRules).length; x++) {\n            const cssRules = stylesheet.cssRules[x];\n\n            if (cssRules.selectorText && ((currTheme === 'light' && (cssRules.selectorText.includes('body') || cssRules.selectorText.includes('BODY')) &&\n              cssRules.selectorText.includes('.theme-light') && cssRules.style.cssText.includes('--link:')) ||\n              (currTheme === 'dark' && cssRules.selectorText.includes('.theme-dark')))) {\n              // grab the colors to be used on the icon from the css rules\n              uiColor = mapStandardColors(cssRules.style.getPropertyValue(colors[this.color].color).trim());\n              hoverColor = mapStandardColors(cssRules.style.getPropertyValue(colors[this.color].hover).trim());\n\n              // normalize hex colors (#xxx to #xxxxxx)\n              uiColor = normalizeHex(uiColor);\n              hoverColor = normalizeHex(hoverColor);\n\n              found = true;\n              break;\n            }\n          }\n        }\n        if (found) {\n          break;\n        } else {\n          continue;\n        }\n      }\n\n      const uiColorRGB = colorToRgb(uiColor);\n      const hoverColorRGB = colorToRgb(hoverColor);\n      const uiColorStr = `${ uiColorRGB.r }-${ uiColorRGB.g }-${ uiColorRGB.b }`;\n      const hoverColorStr = `${ hoverColorRGB.r }-${ hoverColorRGB.g }-${ hoverColorRGB.b }`;\n\n      const className = `svg-icon-${ uiColorStr }-${ hoverColorStr }`;\n\n      if (!cssCache[className]) {\n        let hoverFilter = filterCache[hoverColor];\n\n        if (!hoverFilter) {\n          const solver = new Solver(hoverColorRGB);\n          const res = solver.solve();\n\n          hoverFilter = res?.filter;\n          filterCache[hoverColor] = hoverFilter;\n        }\n\n        let mainFilter = filterCache[uiColor];\n\n        if (!mainFilter) {\n          const solver = new Solver(uiColorRGB);\n          const res = solver.solve();\n\n          mainFilter = res?.filter;\n          filterCache[uiColor] = mainFilter;\n        }\n\n        // Add stylesheet (added as global styles)\n        const styles = `\n          img.${ className } {\n            ${ mainFilter };\n          }\n          img.${ className }:hover {\n            ${ hoverFilter };\n          }\n          button:hover > img.${ className } {\n            ${ hoverFilter };\n          }\n          li:hover > img.${ className } {\n            ${ hoverFilter };\n          }\n          a.option:hover > img.${ className } {\n            ${ hoverFilter };\n          }      `;\n\n        const styleSheet = document.createElement('style');\n\n        styleSheet.innerText = styles;\n        document.head.appendChild(styleSheet);\n\n        cssCache[className] = true;\n      }\n\n      Vue.set(this, 'className', className);\n    }\n  }\n};\n</script>\n\n<template>\n  <img\n    v-if=\"src\"\n    :src=\"src\"\n    class=\"svg-icon\"\n    :class=\"className\"\n  >\n  <i\n    v-else-if=\"icon\"\n    class=\"icon group-icon\"\n    :class=\"icon\"\n  />\n  <i\n    v-else\n    class=\"icon icon-extension\"\n  />\n</template>\n\n<style lang=\"scss\" scoped>\n  .svg-icon {\n    height: 24px;\n    width: 24px;\n  }\n</style>\n"]}]}