{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/monitoring.coreos.com.alertmanagerconfig/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/monitoring.coreos.com.alertmanagerconfig/index.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"node_modules/@rancher/shell/edit/monitoring.coreos.com.alertmanagerconfig","sourcesContent":["<script>\nimport CruResource from '@shell/components/CruResource';\n\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport { MONITORING } from '@shell/config/types';\nimport Loading from '@shell/components/Loading';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport { EDITOR_MODES } from '@shell/components/YamlEditor';\nimport { RECEIVERS_TYPES } from '@shell/models/monitoring.coreos.com.receiver';\nimport RouteConfig from './routeConfig';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport ActionMenu from '@shell/components/ActionMenu';\nimport { _CREATE, _EDIT, _VIEW, _CONFIG } from '@shell/config/query-params';\nimport { fetchAlertManagerConfigSpecs } from '@shell/utils/alertmanagerconfig';\n\nexport default {\n  components: {\n    ActionMenu,\n    CruResource,\n    Loading,\n    NameNsDescription,\n    ResourceTable,\n    RouteConfig,\n    Tab,\n    Tabbed,\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    const inStore = this.$store.getters['currentProduct'].inStore;\n    const alertmanagerConfigId = this.value.id;\n\n    const { receiverSchema, routeSchema } = await fetchAlertManagerConfigSpecs(this.$store);\n\n    this.receiverSchema = receiverSchema;\n    this.routeSchema = routeSchema;\n\n    const alertmanagerConfigResource = await this.$store.dispatch(`${ inStore }/find`, { type: MONITORING.ALERTMANAGERCONFIG, id: alertmanagerConfigId });\n\n    this.alertmanagerConfigId = alertmanagerConfigId;\n    this.alertmanagerConfigResource = alertmanagerConfigResource;\n    this.alertmanagerConfigDetailRoute = alertmanagerConfigResource?._detailLocation;\n\n    const alertmanagerConfigActions = alertmanagerConfigResource.availableActions;\n    const receiverActions = alertmanagerConfigResource.getReceiverActions(alertmanagerConfigActions);\n\n    this.receiverActions = receiverActions;\n  },\n\n  data() {\n    this.value.applyDefaults();\n\n    const defaultReceiverValues = {};\n    const receiverOptions = (this.value?.spec?.receivers || []).map((receiver) => receiver.name);\n\n    return {\n      actionMenuTargetElement:  null,\n      actionMenuTargetEvent:    null,\n      config:                   _CONFIG,\n      create:                   _CREATE,\n      createReceiverLink:       this.value.getCreateReceiverRoute(),\n      defaultReceiverValues,\n      receiverActionMenuIsOpen: false,\n      receiverTableHeaders:     [\n        {\n          name:          'name',\n          labelKey:      'tableHeaders.name',\n          value:         'name',\n          sort:          ['nameSort'],\n          formatter:     'LinkDetail',\n          canBeVariable: true,\n        },\n        {\n          name:          'type',\n          labelKey:      'tableHeaders.type',\n          value:         'name',\n          formatter:     'ReceiverIcons',\n          canBeVariable: true,\n        }\n        // Add more columns\n      ],\n      newReceiverType:      null,\n      receiverActions:      [],\n      receiverOptions,\n      receiverTypes:        RECEIVERS_TYPES,\n      selectedReceiverName: '',\n      selectedRowValue:     null,\n      view:                 _VIEW,\n    };\n  },\n\n  computed: {\n\n    editorMode() {\n      if ( this.mode === _VIEW ) {\n        return EDITOR_MODES.VIEW_CODE;\n      }\n\n      return EDITOR_MODES.EDIT_CODE;\n    },\n  },\n  methods: {\n\n    translateReceiverTypes() {\n      return this.receiverTypes.map((receiverType) => {\n        return {\n          ...receiverType,\n          label: this.t(receiverType.label)\n        };\n      });\n    },\n    getReceiverDetailLink(receiverData) {\n      if (receiverData && receiverData.name) {\n        return this.value.getReceiverDetailLink(receiverData.name);\n      }\n    },\n\n    toggleReceiverActionMenu() {\n      this.receiverActionMenuIsOpen = true;\n    },\n    setActionMenuState(eventData) {\n      // This method is called when the user clicks a context menu\n      // for a receiver in the receiver in the receiver list view.\n      // It sets the target element so the menu can open where the\n      // user clicked.\n      const { event, targetElement } = eventData;\n\n      // TargetElement could be an array of more than\n      // one if there is more than one ref of the same name.\n      if (event && targetElement) {\n        this.actionMenuTargetElement = targetElement;\n        this.actionMenuTargetEvent = event;\n\n        // We take the selected receiver name out of the target\n        // element's ID to help us build the URL to link to\n        // the detail page of that receiver.\n        // We use a plus sign as the delimiter to separate the\n        // name because the plus is not an allowed character in\n        // Kubernetes names.\n        this.selectedReceiverName = targetElement.id.split('+').slice(2).join('');\n\n        this.toggleReceiverActionMenu();\n      } else {\n        throw new Error('Could not find action menu target element.');\n      }\n    },\n    goToEdit() {\n      // 'goToEdit' is the exact name of an action for AlertmanagerConfig\n      // and this method executes the action.\n      this.$router.push(this.alertmanagerConfigResource.getEditReceiverConfigRoute(this.selectedReceiverName, _EDIT));\n    },\n\n    goToEditYaml() {\n      // 'goToEditYaml' is the exact name of an action for AlertmanagerConfig\n      // and this method executes the action.\n      this.$router.push(this.alertmanagerConfigResource.getEditReceiverYamlRoute(this.selectedReceiverName, _EDIT));\n    },\n    promptRemove() {\n      // 'promptRemove' is the exact name of an action for AlertmanagerConfig\n      // and this method executes the action.\n      // Get the name of the receiver to delete from the action info.\n      const nameOfReceiverToDelete = this.selectedReceiverName;\n      // Remove it from the configuration of the parent AlertmanagerConfig\n      // resource.\n      const existingReceivers = this.alertmanagerConfigResource.spec.receivers || [];\n      const receiversMinusDeletedItem = existingReceivers.filter((receiver) => {\n        return receiver.name !== nameOfReceiverToDelete;\n      });\n\n      this.alertmanagerConfigResource.spec.receivers = receiversMinusDeletedItem;\n      // After saving the AlertmanagerConfig, the resource has been deleted.\n      this.alertmanagerConfigResource.save(...arguments);\n    }\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <CruResource\n    v-else\n    class=\"route\"\n    :done-route=\"doneRoute\"\n    :errors=\"errors\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :cancel-event=\"true\"\n    @error=\"e=>errors = e\"\n    @finish=\"save\"\n    @cancel=\"done\"\n  >\n    <NameNsDescription\n      v-model=\"value\"\n      :mode=\"mode\"\n      :namespaced=\"isNamespaced\"\n    />\n\n    <Tabbed>\n      <Tab\n        :label=\"t('monitoring.route.label')\"\n        :weight=\"1\"\n        name=\"route\"\n      >\n        <RouteConfig\n          :value=\"value.spec.route\"\n          :mode=\"mode\"\n          :receiver-options=\"receiverOptions\"\n        />\n      </Tab>\n      <Tab\n        :label=\"t('alertmanagerConfigReceiver.receivers')\"\n        :weight=\"2\"\n        name=\"receivers\"\n      >\n        <ResourceTable\n          :headers=\"receiverTableHeaders\"\n          :schema=\"receiverSchema\"\n          :rows=\"value.spec.receivers || []\"\n          :get-custom-detail-link=\"getReceiverDetailLink\"\n          :table-actions=\"false\"\n          :custom-actions=\"value.receiverActions\"\n          @clickedActionButton=\"setActionMenuState\"\n        >\n          <template #header-button>\n            <router-link\n              v-if=\"createReceiverLink && createReceiverLink.name\"\n              :to=\"mode !== create ? createReceiverLink : {}\"\n            >\n              <button\n                class=\"btn role-primary\"\n                :disabled=\"mode === create\"\n                :tooltip=\"t('monitoring.alertmanagerConfig.disabledReceiverButton')\"\n                data-testid=\"v2-monitoring-add-receiver\"\n              >\n                {{ t('monitoring.receiver.addReceiver') }}\n                <i\n                  v-if=\"mode === create\"\n                  v-clean-tooltip=\"t('monitoring.alertmanagerConfig.disabledReceiverButton')\"\n                  class=\"icon icon-info\"\n                />\n              </button>\n            </router-link>\n          </template>\n        </ResourceTable>\n      </Tab>\n    </Tabbed>\n    <ActionMenu\n      :custom-actions=\"receiverActions\"\n      :open=\"receiverActionMenuIsOpen\"\n      :use-custom-target-element=\"true\"\n      :custom-target-element=\"actionMenuTargetElement\"\n      :custom-target-event=\"actionMenuTargetEvent\"\n      @close=\"receiverActionMenuIsOpen = false\"\n      @goToEdit=\"goToEdit\"\n      @goToEditYaml=\"goToEditYaml\"\n      @promptRemove=\"promptRemove\"\n    />\n  </CruResource>\n</template>\n\n<style lang=\"scss\" scoped>\n  h3 {\n    margin-top: 2em;\n  }\n  input {\n    margin-top: 1em;\n  }\n  .route {\n    &[real-mode=view] .label {\n      color: var(--input-label);\n    }\n  }\n  button {\n    margin-left: 0.5em;\n  }\n  a:hover {\n      text-decoration: none;\n  }\n</style>\n"]}]}