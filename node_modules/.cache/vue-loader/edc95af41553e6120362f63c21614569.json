{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/form/ResourceTabs/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/form/ResourceTabs/index.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qCiAgICBUYWIgY29tcG9uZW50IGZvciByZXNvdXJjZSBDUlUgcGFnZXMgZmVhdHVyaW5nOgogICAgTGFiZWxzIGFuZCBBbm5vdGF0aW9uIHRhYnMgd2l0aCBjb250ZW50IGZpbHRlcmVkIGJ5IGNyZWF0ZS1lZGl0LXZpZXcgbWl4aW4KKi8KaW1wb3J0IFRhYmJlZCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9UYWJiZWQnOwppbXBvcnQgVGFiIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1RhYmJlZC9UYWInOwppbXBvcnQgQ3JlYXRlRWRpdFZpZXcgZnJvbSAnQHNoZWxsL21peGlucy9jcmVhdGUtZWRpdC12aWV3JzsKaW1wb3J0IENvbmRpdGlvbnMgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9Db25kaXRpb25zJzsKaW1wb3J0IHsgRVZFTlQgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IFNvcnRhYmxlVGFibGUgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvU29ydGFibGVUYWJsZSc7CmltcG9ydCB7IF9WSUVXIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9xdWVyeS1wYXJhbXMnOwppbXBvcnQgUmVsYXRlZFJlc291cmNlcyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9SZWxhdGVkUmVzb3VyY2VzJzsKaW1wb3J0IHsgRXh0ZW5zaW9uUG9pbnQsIFRhYkxvY2F0aW9uIH0gZnJvbSAnQHNoZWxsL2NvcmUvdHlwZXMnOwppbXBvcnQgeyBnZXRBcHBsaWNhYmxlRXh0ZW5zaW9uRW5oYW5jZW1lbnRzIH0gZnJvbSAnQHNoZWxsL2NvcmUvcGx1Z2luLWhlbHBlcnMnOwppbXBvcnQgeyBpc0NvbmRpdGlvblJlYWR5QW5kV2FpdGluZyB9IGZyb20gJ0BzaGVsbC9wbHVnaW5zL2Rhc2hib2FyZC1zdG9yZS9yZXNvdXJjZS1jbGFzcyc7CgpleHBvcnQgZGVmYXVsdCB7CgogIG5hbWU6ICdSZXNvdXJjZVRhYnMnLAoKICBjb21wb25lbnRzOiB7CiAgICBUYWJiZWQsCiAgICBUYWIsCiAgICBDb25kaXRpb25zLAogICAgU29ydGFibGVUYWJsZSwKICAgIFJlbGF0ZWRSZXNvdXJjZXMsCiAgfSwKCiAgbWl4aW5zOiBbQ3JlYXRlRWRpdFZpZXddLAoKICBwcm9wczogewogICAgLy8gcmVzb3VyY2UgaW5zdGFuY2UKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKICAgIC8vIGNyZWF0ZS1lZGl0LXZpZXcgbW9kZQogICAgbW9kZTogewogICAgICB0eXBlOiAgICBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IF9WSUVXLAogICAgfSwKCiAgICBkZWZhdWx0VGFiOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbCwKICAgIH0sCgogICAgbmVlZENvbmRpdGlvbnM6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKCiAgICBuZWVkRXZlbnRzOiB7CiAgICAgIHR5cGU6ICAgIEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCgogICAgbmVlZFJlbGF0ZWQ6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKCiAgICBleHRlbnNpb25QYXJhbXM6IHsKICAgICAgdHlwZTogICAgT2JqZWN0LAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9CiAgfSwKCiAgZGF0YSgpIHsKICAgIGNvbnN0IGluU3RvcmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjdXJyZW50U3RvcmUnXShFVkVOVCk7CgogICAgcmV0dXJuIHsKICAgICAgaGFzRXZlbnRzOiAgICAgIHRoaXMuJHN0b3JlLmdldHRlcnNbYCR7IGluU3RvcmUgfS9zY2hlbWFGb3JgXShFVkVOVCksIC8vIEBUT0RPIGJlIHNtYXJ0ZXIgYWJvdXQgd2hpY2ggcmVzb3VyY2VzIGFjdHVhbGx5IGV2ZXIgaGF2ZSBldmVudHMKICAgICAgYWxsRXZlbnRzOiAgICAgIFtdLAogICAgICBzZWxlY3RlZFRhYjogICAgdGhpcy5kZWZhdWx0VGFiLAogICAgICBkaWRMb2FkRXZlbnRzOiAgZmFsc2UsCiAgICAgIGV4dGVuc2lvblRhYnM6ICBnZXRBcHBsaWNhYmxlRXh0ZW5zaW9uRW5oYW5jZW1lbnRzKHRoaXMsIEV4dGVuc2lvblBvaW50LlRBQiwgVGFiTG9jYXRpb24uUkVTT1VSQ0VfREVUQUlMLCB0aGlzLiRyb3V0ZSwgdGhpcywgdGhpcy5leHRlbnNpb25QYXJhbXMpLAogICAgICBpblN0b3JlLAogICAgICBzaG93Q29uZGl0aW9uczogZmFsc2UsCiAgICB9OwogIH0sCgogIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9mb3JnZXRUeXBlJywgRVZFTlQpOwogIH0sCgogIGZldGNoKCkgewogICAgLy8gQnkgdGhpcyBzdGFnZSB0aGUgYHZhbHVlYCBzaG91bGQgYmUgc2V0LiBUYWtpbmcgYSBjaGFuY2UgdGhhdCB0aGlzIGlzIHRydWUKICAgIC8vIFRoZSBhbHRlcm5hdGl2ZSBpcyBoYXZlIGFuIGV4cGVuc2l2ZSB3YXRjaCBvbiB0aGUgYHZhbHVlYCBhbmQgdHJpZ2dlciB0aGVyZSAoYXMgd2VsbCkKICAgIHRoaXMuc2V0U2hvd0NvbmRpdGlvbnMoKTsKICB9LAoKICBjb21wdXRlZDogewogICAgc2hvd0V2ZW50cygpIHsKICAgICAgcmV0dXJuIHRoaXMuaXNWaWV3ICYmIHRoaXMubmVlZEV2ZW50cyAmJiB0aGlzLmhhc0V2ZW50czsKICAgIH0sCiAgICBzaG93UmVsYXRlZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuaXNWaWV3ICYmIHRoaXMubmVlZFJlbGF0ZWQ7CiAgICB9LAogICAgZXZlbnRIZWFkZXJzKCkgewogICAgICByZXR1cm4gWwogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICAndHlwZScsCiAgICAgICAgICBsYWJlbDogdGhpcy50KCd0YWJsZUhlYWRlcnMudHlwZScpLAogICAgICAgICAgdmFsdWU6ICdldmVudFR5cGUnLAogICAgICAgICAgc29ydDogICdldmVudFR5cGUnLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbmFtZTogICdyZWFzb24nLAogICAgICAgICAgbGFiZWw6IHRoaXMudCgndGFibGVIZWFkZXJzLnJlYXNvbicpLAogICAgICAgICAgdmFsdWU6ICdyZWFzb24nLAogICAgICAgICAgc29ydDogICdyZWFzb24nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbmFtZTogICAgICAgICAgJ2RhdGUnLAogICAgICAgICAgbGFiZWw6ICAgICAgICAgdGhpcy50KCd0YWJsZUhlYWRlcnMudXBkYXRlZCcpLAogICAgICAgICAgdmFsdWU6ICAgICAgICAgJ2RhdGUnLAogICAgICAgICAgc29ydDogICAgICAgICAgJ2RhdGU6ZGVzYycsCiAgICAgICAgICBmb3JtYXR0ZXI6ICAgICAnTGl2ZURhdGUnLAogICAgICAgICAgZm9ybWF0dGVyT3B0czogeyBhZGRTdWZmaXg6IHRydWUgfSwKICAgICAgICAgIHdpZHRoOiAgICAgICAgIDEyNQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbmFtZTogICdtZXNzYWdlJywKICAgICAgICAgIGxhYmVsOiB0aGlzLnQoJ3RhYmxlSGVhZGVycy5tZXNzYWdlJyksCiAgICAgICAgICB2YWx1ZTogJ21lc3NhZ2UnLAogICAgICAgICAgc29ydDogICdtZXNzYWdlJywKICAgICAgICB9LAogICAgICBdOwogICAgfSwKICAgIGV2ZW50cygpIHsKICAgICAgcmV0dXJuIHRoaXMuYWxsRXZlbnRzLmZpbHRlcigoZXZlbnQpID0+IHsKICAgICAgICByZXR1cm4gZXZlbnQuaW52b2x2ZWRPYmplY3Q/LnVpZCA9PT0gdGhpcy52YWx1ZT8ubWV0YWRhdGE/LnVpZDsKICAgICAgfSkubWFwKChldmVudCkgPT4gewogICAgICAgIHJldHVybiB7CiAgICAgICAgICByZWFzb246ICAgIChgJHsgZXZlbnQucmVhc29uIHx8IHRoaXMudCgnZ2VuZXJpYy51bmtub3duJykgfSR7IGV2ZW50LmNvdW50ID4gMSA/IGAgKCR7IGV2ZW50LmNvdW50IH0pYCA6ICcnIH1gKS50cmltKCksCiAgICAgICAgICBtZXNzYWdlOiAgIGV2ZW50Lm1lc3NhZ2UgfHwgdGhpcy50KCdnZW5lcmljLnVua25vd24nKSwKICAgICAgICAgIGRhdGU6ICAgICAgZXZlbnQubGFzdFRpbWVzdGFtcCB8fCBldmVudC5maXJzdFRpbWVzdGFtcCB8fCBldmVudC5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCwKICAgICAgICAgIGV2ZW50VHlwZTogZXZlbnQuZXZlbnRUeXBlCiAgICAgICAgfTsKICAgICAgfSk7CiAgICB9LAogICAgY29uZGl0aW9uc0hhdmVJc3N1ZXMoKSB7CiAgICAgIGlmICh0aGlzLnNob3dDb25kaXRpb25zKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWUuc3RhdHVzPy5jb25kaXRpb25zPy5maWx0ZXIoKGNvbmQpID0+ICFpc0NvbmRpdGlvblJlYWR5QW5kV2FpdGluZyhjb25kKSkuc29tZSgoY29uZCkgPT4gY29uZC5lcnJvcik7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICAvLyBFbnN1cmVzIHdlIG9ubHkgZmV0Y2ggZXZlbnRzIGFuZCBzaG93IHRoZSB0YWJsZSB3aGVuIHRoZSBldmVudHMgdGFiIGhhcyBiZWVuIGFjdGl2YXRlZAogICAgdGFiQ2hhbmdlKG5ldSkgewogICAgICB0aGlzLnNlbGVjdGVkVGFiID0gbmV1Py5zZWxlY3RlZE5hbWU7CgogICAgICBpZiAoIXRoaXMuZGlkTG9hZEV2ZW50cyAmJiB0aGlzLnNlbGVjdGVkVGFiID09PSAnZXZlbnRzJykgewogICAgICAgIGNvbnN0IGluU3RvcmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjdXJyZW50U3RvcmUnXShFVkVOVCk7CgogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKGAkeyBpblN0b3JlIH0vZmluZEFsbGAsIHsgdHlwZTogRVZFTlQgfSkudGhlbigoZXZlbnRzKSA9PiB7CiAgICAgICAgICB0aGlzLmFsbEV2ZW50cyA9IGV2ZW50czsKICAgICAgICAgIHRoaXMuZGlkTG9hZEV2ZW50cyA9IHRydWU7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCgogICAgLyoqCiAgICAqIENvbmRpdGlvbnMgY29tZSBmcm9tIGEgcmVzb3VyY2UncyBgc3RhdHVzYC4gVGhleSBhcmUgdXNlZCBieSBib3RoIGNvcmUgcmVzb3VyY2VzIGxpa2Ugd29ya2xvYWRzIGFzIHdlbGwgYXMgdGhvc2UgZnJvbSBDUkRzCiAgICAqIC0gV29ya2xvYWRzCiAgICAqIC0gTm9kZXMKICAgICogLSBGbGVldCBnaXQgcmVwbwogICAgKiAtIENsdXN0ZXIgKHByb3Zpc2lvbmluZykKICAgICoKICAgICogQ2hlY2sgaGVyZSBpZiB0aGUgcmVzb3VyY2UgdHlwZSBjb250YWlucyBjb25kaXRpb25zIHZpYSB0aGUgc2NoZW1hIHJlc291cmNlRmllbGRzCiAgICAqLwogICAgYXN5bmMgc2V0U2hvd0NvbmRpdGlvbnMoKSB7CiAgICAgIGlmICh0aGlzLmlzVmlldyAmJiB0aGlzLm5lZWRDb25kaXRpb25zICYmICEhdGhpcy52YWx1ZT8udHlwZSAmJiAhIXRoaXMuc2NoZW1hPy5mZXRjaFJlc291cmNlRmllbGRzKSB7CiAgICAgICAgYXdhaXQgdGhpcy5zY2hlbWEuZmV0Y2hSZXNvdXJjZUZpZWxkcygpOwoKICAgICAgICB0aGlzLnNob3dDb25kaXRpb25zID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1tgJHsgdGhpcy5pblN0b3JlIH0vcGF0aEV4aXN0c0luU2NoZW1hYF0odGhpcy52YWx1ZS50eXBlLCAnc3RhdHVzLmNvbmRpdGlvbnMnKTsKICAgICAgfQogICAgfSwKICB9Cn07Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"node_modules/@rancher/shell/components/form/ResourceTabs","sourcesContent":["<script>\n/*\n    Tab component for resource CRU pages featuring:\n    Labels and Annotation tabs with content filtered by create-edit-view mixin\n*/\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport Conditions from '@shell/components/form/Conditions';\nimport { EVENT } from '@shell/config/types';\nimport SortableTable from '@shell/components/SortableTable';\nimport { _VIEW } from '@shell/config/query-params';\nimport RelatedResources from '@shell/components/RelatedResources';\nimport { ExtensionPoint, TabLocation } from '@shell/core/types';\nimport { getApplicableExtensionEnhancements } from '@shell/core/plugin-helpers';\nimport { isConditionReadyAndWaiting } from '@shell/plugins/dashboard-store/resource-class';\n\nexport default {\n\n  name: 'ResourceTabs',\n\n  components: {\n    Tabbed,\n    Tab,\n    Conditions,\n    SortableTable,\n    RelatedResources,\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    // resource instance\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    // create-edit-view mode\n    mode: {\n      type:    String,\n      default: _VIEW,\n    },\n\n    defaultTab: {\n      type:    String,\n      default: null,\n    },\n\n    needConditions: {\n      type:    Boolean,\n      default: true\n    },\n\n    needEvents: {\n      type:    Boolean,\n      default: true\n    },\n\n    needRelated: {\n      type:    Boolean,\n      default: true\n    },\n\n    extensionParams: {\n      type:    Object,\n      default: null\n    }\n  },\n\n  data() {\n    const inStore = this.$store.getters['currentStore'](EVENT);\n\n    return {\n      hasEvents:      this.$store.getters[`${ inStore }/schemaFor`](EVENT), // @TODO be smarter about which resources actually ever have events\n      allEvents:      [],\n      selectedTab:    this.defaultTab,\n      didLoadEvents:  false,\n      extensionTabs:  getApplicableExtensionEnhancements(this, ExtensionPoint.TAB, TabLocation.RESOURCE_DETAIL, this.$route, this, this.extensionParams),\n      inStore,\n      showConditions: false,\n    };\n  },\n\n  beforeDestroy() {\n    this.$store.dispatch('cluster/forgetType', EVENT);\n  },\n\n  fetch() {\n    // By this stage the `value` should be set. Taking a chance that this is true\n    // The alternative is have an expensive watch on the `value` and trigger there (as well)\n    this.setShowConditions();\n  },\n\n  computed: {\n    showEvents() {\n      return this.isView && this.needEvents && this.hasEvents;\n    },\n    showRelated() {\n      return this.isView && this.needRelated;\n    },\n    eventHeaders() {\n      return [\n        {\n          name:  'type',\n          label: this.t('tableHeaders.type'),\n          value: 'eventType',\n          sort:  'eventType',\n        },\n        {\n          name:  'reason',\n          label: this.t('tableHeaders.reason'),\n          value: 'reason',\n          sort:  'reason',\n        },\n        {\n          name:          'date',\n          label:         this.t('tableHeaders.updated'),\n          value:         'date',\n          sort:          'date:desc',\n          formatter:     'LiveDate',\n          formatterOpts: { addSuffix: true },\n          width:         125\n        },\n        {\n          name:  'message',\n          label: this.t('tableHeaders.message'),\n          value: 'message',\n          sort:  'message',\n        },\n      ];\n    },\n    events() {\n      return this.allEvents.filter((event) => {\n        return event.involvedObject?.uid === this.value?.metadata?.uid;\n      }).map((event) => {\n        return {\n          reason:    (`${ event.reason || this.t('generic.unknown') }${ event.count > 1 ? ` (${ event.count })` : '' }`).trim(),\n          message:   event.message || this.t('generic.unknown'),\n          date:      event.lastTimestamp || event.firstTimestamp || event.metadata.creationTimestamp,\n          eventType: event.eventType\n        };\n      });\n    },\n    conditionsHaveIssues() {\n      if (this.showConditions) {\n        return this.value.status?.conditions?.filter((cond) => !isConditionReadyAndWaiting(cond)).some((cond) => cond.error);\n      }\n\n      return false;\n    }\n  },\n\n  methods: {\n    // Ensures we only fetch events and show the table when the events tab has been activated\n    tabChange(neu) {\n      this.selectedTab = neu?.selectedName;\n\n      if (!this.didLoadEvents && this.selectedTab === 'events') {\n        const inStore = this.$store.getters['currentStore'](EVENT);\n\n        this.$store.dispatch(`${ inStore }/findAll`, { type: EVENT }).then((events) => {\n          this.allEvents = events;\n          this.didLoadEvents = true;\n        });\n      }\n    },\n\n    /**\n    * Conditions come from a resource's `status`. They are used by both core resources like workloads as well as those from CRDs\n    * - Workloads\n    * - Nodes\n    * - Fleet git repo\n    * - Cluster (provisioning)\n    *\n    * Check here if the resource type contains conditions via the schema resourceFields\n    */\n    async setShowConditions() {\n      if (this.isView && this.needConditions && !!this.value?.type && !!this.schema?.fetchResourceFields) {\n        await this.schema.fetchResourceFields();\n\n        this.showConditions = this.$store.getters[`${ this.inStore }/pathExistsInSchema`](this.value.type, 'status.conditions');\n      }\n    },\n  }\n};\n</script>\n\n<template>\n  <Tabbed\n    v-bind=\"$attrs\"\n    :default-tab=\"defaultTab\"\n    @changed=\"tabChange\"\n  >\n    <slot />\n\n    <Tab\n      v-if=\"showConditions\"\n      label-key=\"resourceTabs.conditions.tab\"\n      name=\"conditions\"\n      :weight=\"-1\"\n      :display-alert-icon=\"conditionsHaveIssues\"\n    >\n      <Conditions :value=\"value\" />\n    </Tab>\n\n    <Tab\n      v-if=\"showEvents\"\n      label-key=\"resourceTabs.events.tab\"\n      name=\"events\"\n      :weight=\"-2\"\n    >\n      <SortableTable\n        v-if=\"selectedTab === 'events'\"\n        :rows=\"events\"\n        :headers=\"eventHeaders\"\n        key-field=\"id\"\n        :search=\"false\"\n        :table-actions=\"false\"\n        :row-actions=\"false\"\n        default-sort-by=\"date\"\n      />\n    </Tab>\n\n    <Tab\n      v-if=\"showRelated\"\n      name=\"related\"\n      label-key=\"resourceTabs.related.tab\"\n      :weight=\"-3\"\n    >\n      <h3 v-t=\"'resourceTabs.related.from'\" />\n      <RelatedResources\n        :ignore-types=\"[value.type]\"\n        :value=\"value\"\n        direction=\"from\"\n      />\n\n      <h3\n        v-t=\"'resourceTabs.related.to'\"\n        class=\"mt-20\"\n      />\n      <RelatedResources\n        :ignore-types=\"[value.type]\"\n        :value=\"value\"\n        direction=\"to\"\n      />\n    </Tab>\n\n    <!-- Extension tabs -->\n    <Tab\n      v-for=\"tab, i in extensionTabs\"\n      :key=\"`${tab.name}${i}`\"\n      :name=\"tab.name\"\n      :label=\"tab.label\"\n      :label-key=\"tab.labelKey\"\n      :weight=\"tab.weight\"\n      :tooltip=\"tab.tooltip\"\n      :show-header=\"tab.showHeader\"\n      :display-alert-icon=\"tab.displayAlertIcon\"\n      :error=\"tab.error\"\n      :badge=\"tab.badge\"\n    >\n      <component\n        :is=\"tab.component\"\n        :resource=\"value\"\n      />\n    </Tab>\n  </Tabbed>\n</template>\n"]}]}