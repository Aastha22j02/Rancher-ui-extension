{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/auth/login.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/auth/login.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["login.vue"],"names":[],"mappingsfile":"login.vue","sourceRoot":"node_modules/@rancher/shell/pages/auth","sourcesContent":["<script>\nimport { removeObject } from '@shell/utils/array';\nimport { USERNAME } from '@shell/config/cookies';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport LocaleSelector from '@shell/components/LocaleSelector';\nimport BrandImage from '@shell/components/BrandImage';\nimport InfoBox from '@shell/components/InfoBox';\nimport CopyCode from '@shell/components/CopyCode';\nimport { Banner } from '@components/Banner';\nimport {\n  LOCAL, LOGGED_OUT, TIMED_OUT, IS_SSO, _FLAGGED\n} from '@shell/config/query-params';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport Password from '@shell/components/form/Password';\nimport { sortBy } from '@shell/utils/sort';\nimport { configType } from '@shell/models/management.cattle.io.authconfig';\nimport { mapGetters } from 'vuex';\nimport { _MULTI } from '@shell/plugins/dashboard-store/actions';\nimport { MANAGEMENT, NORMAN } from '@shell/config/types';\nimport { SETTING } from '@shell/config/settings';\nimport { LOGIN_ERRORS } from '@shell/store/auth';\nimport {\n  getBrand,\n  getVendor,\n  setBrand,\n  setVendor\n} from '@shell/config/private-label';\nimport loadPlugins from '@shell/plugins/plugin';\nimport Loading from '@shell/components/Loading';\nimport { getGlobalBannerFontSizes } from '@shell/utils/banners';\n\nexport default {\n  name:       'Login',\n  components: {\n    LabeledInput, AsyncButton, Checkbox, BrandImage, Banner, InfoBox, CopyCode, Password, LocaleSelector, Loading\n  },\n\n  data() {\n    const username = this.$cookies.get(USERNAME, { parseJSON: false }) || '';\n\n    return {\n      username,\n      remember: !!username,\n      password: '',\n\n      timedOut:           this.$route.query[TIMED_OUT] === _FLAGGED,\n      loggedOut:          this.$route.query[LOGGED_OUT] === _FLAGGED,\n      isSsoLogout:        this.$route.query[IS_SSO] === _FLAGGED,\n      err:                this.$route.query.err,\n      showLocaleSelector: !process.env.loginLocaleSelector || process.env.loginLocaleSelector === 'true',\n\n      hasLocal:           false,\n      showLocal:          false,\n      providers:          [],\n      providerComponents: [],\n      customLoginError:   {},\n      firstLogin:         false,\n      vendor:             getVendor()\n    };\n  },\n\n  computed: {\n    ...mapGetters({ t: 'i18n/t' }),\n\n    singleProvider() {\n      return this.providers.length === 1 ? this.providers[0] : undefined;\n    },\n\n    nonLocalPrompt() {\n      if (this.singleProvider) {\n        const provider = this.displayName(this.singleProvider);\n\n        return this.t('login.useProvider', { provider });\n      }\n\n      return this.t('login.useNonLocal');\n    },\n\n    errorMessage() {\n      if (this.err === LOGIN_ERRORS.CLIENT_UNAUTHORIZED) {\n        return this.t('login.clientError');\n      } else if (this.err === LOGIN_ERRORS.CLIENT || this.err === LOGIN_ERRORS.SERVER) {\n        return this.t('login.error');\n      }\n\n      return this.err?.length ? this.t('login.specificError', { msg: this.err }) : '';\n    },\n\n    errorToDisplay() {\n      if (this.customLoginError?.showMessage === 'true' && this.customLoginError?.message && this.errorMessage) {\n        return `${ this.customLoginError.message } \\n ${ this.errorMessage }`;\n      }\n\n      if (this.errorMessage) {\n        return this.errorMessage;\n      }\n\n      return '';\n    },\n\n    kubectlCmd() {\n      return \"kubectl get secret --namespace cattle-system bootstrap-secret -o go-template='{{.data.bootstrapPassword|base64decode}}{{\\\"\\\\n\\\"}}'\";\n    },\n\n    hasLoginMessage() {\n      return this.errorToDisplay || this.loggedOut || this.timedOut;\n    },\n\n    // Apply bottom margin so that the locale secletor control lifts up to avoid the footer fixed banner, if it is shown\n    localeSelectorStyle() {\n      const globalBannerSettings = getGlobalBannerFontSizes(this.$store);\n\n      return { marginBottom: globalBannerSettings?.footerFont };\n    }\n  },\n\n  async fetch() {\n    const { firstLoginSetting } = await this.loadInitialSettings();\n    const { value } = await this.$store.dispatch('management/find', { type: MANAGEMENT.SETTING, id: SETTING.BANNERS });\n    const drivers = await this.$store.dispatch('auth/getAuthProviders');\n    const providers = sortBy(drivers.map((x) => x.id), ['id']);\n    const hasLocal = providers.includes('local');\n    const hasOthers = hasLocal && !!providers.find((x) => x !== 'local');\n\n    if ( hasLocal ) {\n      // Local is special and handled here so that it can be toggled\n      removeObject(providers, 'local');\n    }\n\n    this.vendor = getVendor();\n    this.providers = providers;\n    this.hasLocal = hasLocal;\n    this.showLocal = !hasOthers || (this.$route.query[LOCAL] === _FLAGGED);\n    this.customLoginError = JSON.parse(value).loginError;\n    this.firstLogin = firstLoginSetting?.value === 'true';\n    this.username = this.firstLogin ? 'admin' : this.username;\n\n    this.providerComponents = this.providers.map((name) => {\n      return this.$store.getters['type-map/importLogin'](configType[name] || name);\n    });\n\n    this.$nextTick(() => {\n      this.focusSomething();\n    });\n  },\n\n  methods: {\n    async loadInitialSettings() {\n      let firstLoginSetting, plSetting, brand;\n\n      // Load settings.\n      // For newer versions this will return all settings if you are somehow logged in,\n      // and just the public ones if you aren't.\n      try {\n        firstLoginSetting = this.$store.getters['management/byId'](MANAGEMENT.SETTING, SETTING.FIRST_LOGIN);\n        plSetting = this.$store.getters['management/byId'](MANAGEMENT.SETTING, SETTING.PL);\n        brand = this.$store.getters['management/byId'](MANAGEMENT.SETTING, SETTING.BRAND);\n      } catch (e) {\n        // Older versions used Norman API to get these\n        firstLoginSetting = await this.$store.dispatch('rancher/find', {\n          type: NORMAN.SETTING,\n          id:   SETTING.FIRST_LOGIN,\n          opt:  { url: `/v3/settings/${ SETTING.FIRST_LOGIN }` }\n        });\n\n        plSetting = await this.$store.dispatch('rancher/find', {\n          type: NORMAN.SETTING,\n          id:   SETTING.PL,\n          opt:  { url: `/v3/settings/${ SETTING.PL }` }\n        });\n\n        brand = await this.$store.dispatch('rancher/find', {\n          type: NORMAN.SETTING,\n          id:   SETTING.BRAND,\n          opt:  { url: `/v3/settings/${ SETTING.BRAND }` }\n        });\n      }\n\n      if (plSetting.value?.length && plSetting.value !== getVendor()) {\n        setVendor(plSetting.value);\n      }\n\n      if (brand?.value?.length && brand.value !== getBrand()) {\n        setBrand(brand.value);\n      }\n\n      return {\n        firstLoginSetting, plSetting, brand\n      };\n    },\n\n    displayName(provider) {\n      return this.t(`model.authConfig.provider.${ provider }`);\n    },\n\n    toggleLocal() {\n      this.showLocal = !this.showLocal;\n      this.$router.applyQuery({ [LOCAL]: _FLAGGED });\n      this.$nextTick(() => {\n        this.focusSomething();\n      });\n    },\n\n    focusSomething() {\n      if ( !this.showLocal ) {\n        // One of the provider components will handle it\n        return;\n      }\n\n      let elem;\n\n      if ( this.username ) {\n        elem = this.$refs.password;\n      } else {\n        elem = this.$refs.username;\n      }\n\n      if ( elem?.focus ) {\n        elem.focus();\n\n        if ( elem.select ) {\n          elem.select();\n        }\n      }\n    },\n\n    handleProviderError(err) {\n      this.err = err;\n    },\n\n    async loginLocal(buttonCb) {\n      try {\n        await this.$store.dispatch('auth/login', {\n          provider: 'local',\n          body:     {\n            username: this.username,\n            password: this.password\n          }\n        });\n\n        const user = await this.$store.dispatch('rancher/findAll', {\n          type: NORMAN.USER,\n          opt:  { url: '/v3/users?me=true', load: _MULTI }\n        });\n\n        if (!!user?.[0]) {\n          this.$store.dispatch('auth/gotUser', user[0]);\n        }\n\n        if ( this.remember ) {\n          this.$cookies.set(USERNAME, this.username, {\n            encode:   (x) => x,\n            maxAge:   86400 * 365,\n            path:     '/',\n            sameSite: true,\n            secure:   true,\n          });\n        } else {\n          this.$cookies.remove(USERNAME);\n        }\n\n        // User logged with local login - we don't do any redirect/reload, so the boot-time plugin will not run again to laod the plugins\n        // so we manually load them here - other SSO auth providers bounce out and back to the Dashboard, so on the bounce-back\n        // the plugins will load via the boot-time plugin\n        await loadPlugins({\n          app:     this.$store.app,\n          store:   this.$store,\n          $plugin: this.$store.$plugin\n        });\n\n        if (this.firstLogin || user[0]?.mustChangePassword) {\n          this.$store.dispatch('auth/setInitialPass', this.password);\n          this.$router.push({ name: 'auth-setup' });\n        } else {\n          this.$router.replace('/');\n        }\n      } catch (err) {\n        this.err = err;\n        this.timedOut = null;\n        this.loggedOut = null;\n\n        buttonCb(false);\n      }\n    },\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <main\n    v-else\n    class=\"main-layout login\"\n  >\n    <div class=\"row gutless mb-20\">\n      <div class=\"col span-6 p-20\">\n        <p class=\"text-center\">\n          {{ t('login.howdy') }}\n        </p>\n        <h1 class=\"text-center login-welcome\">\n          {{ t('login.welcome', {vendor}) }}\n        </h1>\n        <div\n          class=\"login-messages\"\n          data-testid=\"login__messages\"\n          :class=\"{'login-messages--hasContent': hasLoginMessage}\"\n        >\n          <Banner\n            v-if=\"errorToDisplay\"\n            :label=\"errorToDisplay\"\n            color=\"error\"\n          />\n          <h4\n            v-else-if=\"loggedOut\"\n            class=\"text-success text-center\"\n          >\n            {{ isSsoLogout ? t('login.loggedOutFromSso') : t('login.loggedOut') }}\n          </h4>\n          <h4\n            v-else-if=\"timedOut\"\n            class=\"text-error text-center\"\n          >\n            {{ t('login.loginAgain') }}\n          </h4>\n        </div>\n        <div\n          v-if=\"firstLogin\"\n          class=\"first-login-message pl-10 pr-10\"\n          :class=\"{'mt-30': !hasLoginMessage}\"\n          data-testid=\"first-login-message\"\n        >\n          <t\n            k=\"setup.defaultPassword.intro\"\n            :raw=\"true\"\n          />\n\n          <div>\n            <t\n              k=\"setup.defaultPassword.dockerPrefix\"\n              :raw=\"true\"\n            />\n          </div>\n          <ul>\n            <li>\n              <t\n                k=\"setup.defaultPassword.dockerPs\"\n                :raw=\"true\"\n              />\n            </li>\n            <li>\n              <CopyCode>\n                docker logs <u>container-id</u> 2&gt;&amp;1 | grep \"Bootstrap Password:\"\n              </CopyCode>\n            </li>\n          </ul>\n          <div>\n            <t\n              k=\"setup.defaultPassword.dockerSuffix\"\n              :raw=\"true\"\n            />\n          </div>\n\n          <br>\n          <div>\n            <t\n              k=\"setup.defaultPassword.helmPrefix\"\n              :raw=\"true\"\n            />\n          </div>\n          <br>\n          <CopyCode>\n            {{ kubectlCmd }}\n          </CopyCode>\n          <br>\n          <div>\n            <t\n              k=\"setup.defaultPassword.helmSuffix\"\n              :raw=\"true\"\n            />\n          </div>\n        </div>\n\n        <div\n          v-if=\"(!hasLocal || (hasLocal && !showLocal)) && providers.length\"\n          :class=\"{'mt-30': !hasLoginMessage}\"\n        >\n          <component\n            :is=\"providerComponents[idx]\"\n            v-for=\"(name, idx) in providers\"\n            :key=\"name\"\n            class=\"mb-10\"\n            :focus-on-mount=\"(idx === 0 && !showLocal)\"\n            :name=\"name\"\n            :open=\"!showLocal\"\n            @showInputs=\"showLocal = false\"\n            @error=\"handleProviderError\"\n          />\n        </div>\n        <template v-if=\"hasLocal\">\n          <form\n            v-if=\"showLocal\"\n            :class=\"{'mt-30': !hasLoginMessage}\"\n          >\n            <div class=\"span-6 offset-3\">\n              <div class=\"mb-20\">\n                <LabeledInput\n                  v-if=\"!firstLogin\"\n                  id=\"username\"\n                  ref=\"username\"\n                  v-model.trim=\"username\"\n                  data-testid=\"local-login-username\"\n                  :label=\"t('login.username')\"\n                  autocomplete=\"username\"\n                />\n              </div>\n              <div class=\"\">\n                <Password\n                  id=\"password\"\n                  ref=\"password\"\n                  v-model=\"password\"\n                  data-testid=\"local-login-password\"\n                  :label=\"t('login.password')\"\n                  autocomplete=\"password\"\n                />\n              </div>\n            </div>\n            <div class=\"mt-20\">\n              <div class=\"col span-12 text-center\">\n                <AsyncButton\n                  id=\"submit\"\n                  data-testid=\"login-submit\"\n                  type=\"submit\"\n                  :action-label=\"t('login.loginWithLocal')\"\n                  :waiting-label=\"t('login.loggingIn')\"\n                  :success-label=\"t('login.loggedIn')\"\n                  :error-label=\"t('asyncButton.default.error')\"\n                  @click=\"loginLocal\"\n                />\n                <div\n                  v-if=\"!firstLogin\"\n                  class=\"mt-20\"\n                >\n                  <Checkbox\n                    v-model=\"remember\"\n                    :label=\"t('login.remember.label')\"\n                    type=\"checkbox\"\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n          <div\n            v-if=\"hasLocal && !showLocal\"\n            class=\"mt-20 text-center\"\n          >\n            <a\n              id=\"login-useLocal\"\n              data-testid=\"login-useLocal\"\n              role=\"button\"\n              @click=\"toggleLocal\"\n            >\n              {{ t('login.useLocal') }}\n            </a>\n          </div>\n          <div\n            v-if=\"hasLocal && showLocal && providers.length\"\n            class=\"mt-20 text-center\"\n          >\n            <a\n              role=\"button\"\n              @click=\"toggleLocal\"\n            >\n              {{ nonLocalPrompt }}\n            </a>\n          </div>\n        </template>\n        <div\n          v-if=\"showLocaleSelector\"\n          class=\"locale-selector\"\n        >\n          <LocaleSelector\n            :style=\"localeSelectorStyle\"\n            mode=\"login\"\n          />\n        </div>\n      </div>\n      <BrandImage\n        class=\"col span-6 landscape\"\n        data-testid=\"login-landscape__img\"\n        file-name=\"login-landscape.svg\"\n      />\n    </div>\n  </main>\n</template>\n\n<style lang=\"scss\" scoped>\n  .login {\n    overflow: hidden;\n\n    .row {\n      align-items: center;\n    }\n\n    .landscape {\n      height: 100vh;\n      margin: 0;\n      object-fit: cover;\n    }\n\n    .login-welcome {\n      margin: 0\n    }\n\n    .login-messages {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      .banner {\n        margin: 5px;\n      }\n      h4 {\n        margin: 0;\n      }\n      &--hasContent {\n        min-height: 70px;\n      }\n\n      .text-error, .banner {\n        max-width: 80%;\n      }\n    }\n\n    .first-login-message {\n      .banner {\n        margin-bottom: 0;\n        border-left: 0;\n\n        ::v-deep code {\n          font-size: 12px;\n          padding: 0;\n        }\n      }\n    }\n  }\n\n  .gutless {\n    height: 100vh;\n    & > .span-6 {\n      overflow-y: auto;\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n      place-content: center;\n    }\n  }\n  .locale-selector {\n    position: absolute;\n    bottom: 30px;\n  }\n</style>\n"]}]}