{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/cloud-credential/harvester.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/cloud-credential/harvester.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDcmVhdGVFZGl0VmlldyBmcm9tICdAc2hlbGwvbWl4aW5zL2NyZWF0ZS1lZGl0LXZpZXcnOwppbXBvcnQgTGFiZWxlZFNlbGVjdCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0xhYmVsZWRTZWxlY3QnOwppbXBvcnQgeyBCYW5uZXIgfSBmcm9tICdAY29tcG9uZW50cy9CYW5uZXInOwoKaW1wb3J0IHsgZ2V0LCBzZXQgfSBmcm9tICdAc2hlbGwvdXRpbHMvb2JqZWN0JzsKaW1wb3J0IHsgTUFOQUdFTUVOVCwgVklSVFVBTF9IQVJWRVNURVJfUFJPVklERVIgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IExhYmVsZWRTZWxlY3QsIEJhbm5lciB9LAogIG1peGluczogICAgIFtDcmVhdGVFZGl0Vmlld10sCgogIGFzeW5jIGZldGNoKCkgewogICAgdGhpcy5jbHVzdGVycyA9IGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2ZpbmRBbGwnLCB7IHR5cGU6IE1BTkFHRU1FTlQuQ0xVU1RFUiB9KTsKICB9LAoKICBkYXRhKCkgewogICAgdGhpcy4kZW1pdCgndmFsaWRhdGlvbkNoYW5nZWQnLCB0cnVlKTsKCiAgICBjb25zdCBjbHVzdGVyID0gZ2V0KHRoaXMudmFsdWUsICdoYXJ2ZXN0ZXJjcmVkZW50aWFsQ29uZmlnLmNsdXN0ZXJJZCcpIHx8ICcnOwoKICAgIHJldHVybiB7CiAgICAgIGNsdXN0ZXJzOiBbXSwKICAgICAgY2x1c3RlciwKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGNsdXN0ZXJPcHRpb25zKCkgewogICAgICByZXR1cm4gdGhpcy5jbHVzdGVycy5maWx0ZXIoKGMpID0+IGMuc3RhdHVzPy5wcm92aWRlciA9PT0gVklSVFVBTF9IQVJWRVNURVJfUFJPVklERVIpLm1hcCggKGNsdXN0ZXIpID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgdmFsdWU6IGNsdXN0ZXIuaWQsCiAgICAgICAgICBsYWJlbDogY2x1c3Rlci5uYW1lRGlzcGxheQogICAgICAgIH07CiAgICAgIH0pOwogICAgfSwKICB9LAoKICB3YXRjaDogewogICAgYXN5bmMgY2x1c3RlcihuZXUpIHsKICAgICAgaWYgKCFuZXUpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmlzQ3JlYXRlKSB7CiAgICAgICAgc2V0KHRoaXMudmFsdWUsICdoYXJ2ZXN0ZXJjcmVkZW50aWFsQ29uZmlnLmNsdXN0ZXJJZCcsIG5ldSk7CiAgICAgIH0KCiAgICAgIGNvbnN0IGN1cnJlbnRDbHVzdGVyID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snbWFuYWdlbWVudC9hbGwnXShNQU5BR0VNRU5ULkNMVVNURVIpLmZpbmQoKHgpID0+IHguaWQgPT09IG5ldSk7CgogICAgICB3aW5kb3cuJGdsb2JhbEFwcC4kbG9hZGluZy5zdGFydCgpOwoKICAgICAgY29uc3Qga3ViZWNvbmZpZ0NvbnRlbnQgPSBhd2FpdCBjdXJyZW50Q2x1c3Rlci5nZW5lcmF0ZUt1YmVDb25maWcoKTsKCiAgICAgIHdpbmRvdy4kZ2xvYmFsQXBwLiRsb2FkaW5nLmZpbmlzaCgpOwoKICAgICAgdGhpcy52YWx1ZS5zZXREYXRhKCdrdWJlY29uZmlnQ29udGVudCcsIGt1YmVjb25maWdDb250ZW50KTsKICAgIH0sCgogICAgJ3ZhbHVlLmRlY29kZWREYXRhLmNsdXN0ZXJJZCc6IHsKICAgICAgaGFuZGxlcigpIHsKICAgICAgICB0aGlzLmVtaXRWYWxpZGF0aW9uKCk7CiAgICAgIH0sCiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgIH0sCiAgICAndmFsdWUuZGVjb2RlZERhdGEua3ViZWNvbmZpZ0NvbnRlbnQnOiB7CiAgICAgIGhhbmRsZXIoKSB7CiAgICAgICAgdGhpcy5lbWl0VmFsaWRhdGlvbigpOwogICAgICB9LAogICAgICBpbW1lZGlhdGU6IHRydWUsCiAgICB9LAogIH0sCgogIG1ldGhvZHM6IHsKICAgIHRlc3QoKSB7CiAgICAgIGNvbnN0IHQgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydpMThuL3QnXTsKCiAgICAgIGlmICghdGhpcy5jbHVzdGVyKSB7CiAgICAgICAgY29uc3QgY2x1c3RlciA9IHQoJ2NsdXN0ZXIuY3JlZGVudGlhbC5oYXJ2ZXN0ZXIuY2x1c3RlcicpOwogICAgICAgIGNvbnN0IGVycm9ycyA9IFt0KCd2YWxpZGF0aW9uLnJlcXVpcmVkJywgeyBrZXk6IGNsdXN0ZXIgfSldOwoKICAgICAgICByZXR1cm4geyBlcnJvcnMgfTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgfSwKCiAgICBlbWl0VmFsaWRhdGlvbigpIHsKICAgICAgaWYgKHRoaXMudGVzdCgpID09PSB0cnVlKSB7CiAgICAgICAgdGhpcy4kZW1pdCgndmFsaWRhdGlvbkNoYW5nZWQnLCB0cnVlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRlbWl0KCd2YWxpZGF0aW9uQ2hhbmdlZCcsIGZhbHNlKTsKICAgICAgfQogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["harvester.vue"],"names":[],"mappings":";AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"harvester.vue","sourceRoot":"node_modules/@rancher/shell/cloud-credential","sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Banner } from '@components/Banner';\n\nimport { get, set } from '@shell/utils/object';\nimport { MANAGEMENT, VIRTUAL_HARVESTER_PROVIDER } from '@shell/config/types';\n\nexport default {\n  components: { LabeledSelect, Banner },\n  mixins:     [CreateEditView],\n\n  async fetch() {\n    this.clusters = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.CLUSTER });\n  },\n\n  data() {\n    this.$emit('validationChanged', true);\n\n    const cluster = get(this.value, 'harvestercredentialConfig.clusterId') || '';\n\n    return {\n      clusters: [],\n      cluster,\n    };\n  },\n\n  computed: {\n    clusterOptions() {\n      return this.clusters.filter((c) => c.status?.provider === VIRTUAL_HARVESTER_PROVIDER).map( (cluster) => {\n        return {\n          value: cluster.id,\n          label: cluster.nameDisplay\n        };\n      });\n    },\n  },\n\n  watch: {\n    async cluster(neu) {\n      if (!neu) {\n        return;\n      }\n\n      if (this.isCreate) {\n        set(this.value, 'harvestercredentialConfig.clusterId', neu);\n      }\n\n      const currentCluster = this.$store.getters['management/all'](MANAGEMENT.CLUSTER).find((x) => x.id === neu);\n\n      window.$globalApp.$loading.start();\n\n      const kubeconfigContent = await currentCluster.generateKubeConfig();\n\n      window.$globalApp.$loading.finish();\n\n      this.value.setData('kubeconfigContent', kubeconfigContent);\n    },\n\n    'value.decodedData.clusterId': {\n      handler() {\n        this.emitValidation();\n      },\n      immediate: true,\n    },\n    'value.decodedData.kubeconfigContent': {\n      handler() {\n        this.emitValidation();\n      },\n      immediate: true,\n    },\n  },\n\n  methods: {\n    test() {\n      const t = this.$store.getters['i18n/t'];\n\n      if (!this.cluster) {\n        const cluster = t('cluster.credential.harvester.cluster');\n        const errors = [t('validation.required', { key: cluster })];\n\n        return { errors };\n      } else {\n        return true;\n      }\n    },\n\n    emitValidation() {\n      if (this.test() === true) {\n        this.$emit('validationChanged', true);\n      } else {\n        this.$emit('validationChanged', false);\n      }\n    },\n  },\n};\n</script>\n\n<template>\n  <div>\n    <div class=\"row mb-10\">\n      <Banner\n        color=\"warning\"\n        label-key=\"cluster.credential.harvester.tokenExpirationWarning\"\n        data-testid=\"harvester-token-expiration-warning-banner\"\n      />\n    </div>\n    <div class=\"row mb-10\">\n      <div\n        class=\"col span-6\"\n      >\n        <LabeledSelect\n          v-model=\"cluster\"\n          :mode=\"mode\"\n          :disabled=\"isEdit\"\n          :options=\"clusterOptions\"\n          :required=\"true\"\n          :label=\"t('cluster.credential.harvester.cluster')\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n"]}]}