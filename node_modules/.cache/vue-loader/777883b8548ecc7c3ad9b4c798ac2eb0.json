{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/workload/storage/persistentVolumeClaim/persistentvolumeclaim.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/workload/storage/persistentVolumeClaim/persistentvolumeclaim.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBMYWJlbGVkU2VsZWN0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vTGFiZWxlZFNlbGVjdCc7CmltcG9ydCBVbml0SW5wdXQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9Vbml0SW5wdXQnOwppbXBvcnQgeyBSYWRpb0dyb3VwIH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9SYWRpbyc7CmltcG9ydCB7IENoZWNrYm94IH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9DaGVja2JveCc7CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgeyByZW1vdmVPYmplY3QsIGFkZE9iamVjdCB9IGZyb20gJ0BzaGVsbC91dGlscy9hcnJheSc7CmltcG9ydCB7IFNUT1JBR0VfQ0xBU1MsIFBWIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IGFsbEhhc2ggfSBmcm9tICdAc2hlbGwvdXRpbHMvcHJvbWlzZSc7CmltcG9ydCB7IGdldCB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwoKZXhwb3J0IGRlZmF1bHQgewoKICBjb21wb25lbnRzOiB7CiAgICBMYWJlbGVkU2VsZWN0LCBVbml0SW5wdXQsIFJhZGlvR3JvdXAsIENoZWNrYm94LCBMYWJlbGVkSW5wdXQKICB9LAoKICBwcm9wczogewogICAgbW9kZTogewogICAgICB0eXBlOiAgICBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdjcmVhdGUnCiAgICB9LAoKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKCiAgICByZWdpc3RlckJlZm9yZUhvb2s6IHsKICAgICAgdHlwZTogICAgRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQ6IG51bGwsCiAgICB9LAoKICAgIHNhdmVQdmNIb29rTmFtZTogewogICAgICB0eXBlOiAgICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAgJycsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogIH0sCiAgYXN5bmMgZmV0Y2goKSB7CiAgICBjb25zdCBoYXNoID0gYXdhaXQgYWxsSGFzaCh7CiAgICAgIHN0b3JhZ2VDbGFzc2VzOiAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9maW5kQWxsJywgeyB0eXBlOiBTVE9SQUdFX0NMQVNTIH0pLAogICAgICBwZXJzaXN0ZW50Vm9sdW1lczogdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvZmluZEFsbCcsIHsgdHlwZTogUFYgfSksCiAgICB9KTsKCiAgICB0aGlzLnN0b3JhZ2VDbGFzc2VzID0gaGFzaC5zdG9yYWdlQ2xhc3NlczsKICAgIHRoaXMucGVyc2lzdGVudFZvbHVtZXMgPSBoYXNoLnBlcnNpc3RlbnRWb2x1bWVzOwogICAgdGhpcy4kc2V0KHRoaXMuc3BlYywgJ3N0b3JhZ2VDbGFzc05hbWUnLCAodGhpcy5zcGVjLnN0b3JhZ2VDbGFzc05hbWUgfHwgdGhpcy5kZWZhdWx0U3RvcmFnZUNsYXNzTmFtZSkpOwogIH0sCgogIGRhdGEoKSB7CiAgICBjb25zdCBzcGVjID0gdGhpcy52YWx1ZS5zcGVjOwoKICAgIGlmICghdGhpcy52YWx1ZS5tZXRhZGF0YSkgewogICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZSwgJ21ldGFkYXRhJywge30pOwogICAgfQoKICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLnNwZWMsICdhY2Nlc3NNb2RlcycsIHRoaXMudmFsdWUuc3BlYy5hY2Nlc3NNb2RlcyB8fCBbXSk7CgogICAgcmV0dXJuIHsKICAgICAgc3RvcmFnZUNsYXNzZXM6ICAgIFtdLAogICAgICBwZXJzaXN0ZW50Vm9sdW1lczogW10sCiAgICAgIGlzQ3JlYXRlUFY6ICAgICAgICB0cnVlLAogICAgICBzcGVjLAogICAgICB1bmlxdWVJZDogICAgICAgICAgbmV3IERhdGUoKS5nZXRUaW1lKCkgLy8gQWxsb3dzIGZvcm0gc3RhdGUgdG8gYmUgaW5kaXZpZHVhbGx5IGRlbGV0ZWQKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIHN0b3JhZ2VDbGFzc05hbWVzKCkgewogICAgICByZXR1cm4gdGhpcy5zdG9yYWdlQ2xhc3Nlcy5tYXAoKHNjKSA9PiBzYy5tZXRhZGF0YS5uYW1lKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBSZXF1aXJlZCB0byBpbml0aWFsaXplIHdpdGggZGVmYXVsdCBTQyBvbiBjcmVhdGlvbgogICAgICovCiAgICBkZWZhdWx0U3RvcmFnZUNsYXNzTmFtZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuc3RvcmFnZUNsYXNzZXMuZmluZCgoc2MpID0+IHNjLm1ldGFkYXRhPy5hbm5vdGF0aW9ucz8uWydzdG9yYWdlY2xhc3MuYmV0YS5rdWJlcm5ldGVzLmlvL2lzLWRlZmF1bHQtY2xhc3MnXSA9PT0gJ3RydWUnIHx8CiAgICAgICAgc2MubWV0YWRhdGE/LmFubm90YXRpb25zPy5bJ3N0b3JhZ2VjbGFzcy5rdWJlcm5ldGVzLmlvL2lzLWRlZmF1bHQtY2xhc3MnXSA9PT0gJ3RydWUnKT8ubWV0YWRhdGEubmFtZSA7CiAgICB9LAoKICAgIGF2YWlsYWJsZVBWcygpIHsKICAgICAgcmV0dXJuIHRoaXMucGVyc2lzdGVudFZvbHVtZXMucmVkdWNlKCh0b3RhbCwgZWFjaCkgPT4gewogICAgICAgIGlmIChlYWNoPy5zdGF0dXM/LnBoYXNlID09PSAnQXZhaWxhYmxlJykgewogICAgICAgICAgdG90YWwucHVzaChlYWNoKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB0b3RhbDsKICAgICAgfSwgW10pOwogICAgfSwKCiAgICBwZXJzaXN0ZW50Vm9sdW1lTmFtZXMoKSB7CiAgICAgIHJldHVybiB0aGlzLmF2YWlsYWJsZVBWcy5tYXAoKHB2KSA9PiBwdi5tZXRhZGF0YS5uYW1lKTsKICAgIH0sCgogICAgLi4ubWFwR2V0dGVycyh7IHQ6ICdpMThuL3QnIH0pCiAgfSwKCiAgd2F0Y2g6IHsKICAgIGlzQ3JlYXRlUFYobmV1KSB7CiAgICAgIGlmIChuZXUpIHsKICAgICAgICBkZWxldGUgdGhpcy5zcGVjLnZvbHVtZU5hbWU7CiAgICAgICAgdGhpcy5zcGVjLnJlc291cmNlcy5yZXF1ZXN0cy5zdG9yYWdlID0gbnVsbDsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNwZWMucmVzb3VyY2VzLnJlcXVlc3RzLnN0b3JhZ2UgPSBudWxsOwogICAgICB9CiAgICB9LAogIH0sCgogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnZhbHVlLnVuaXF1ZUlkID0gdGhpcy51bmlxdWVJZDsKICAgIHRoaXMuJGVtaXQoJ2NyZWF0ZVVuaXF1ZUlkJyk7CiAgICBpZiAodGhpcy5yZWdpc3RlckJlZm9yZUhvb2spIHsKICAgICAgLy8gQXBwZW5kIHRoZSB1bmlxdWVJRCB0byB0aGUgUFZDIGhvb2sgbmFtZSBzbyB0aGF0IGZvcm0gc3RhdGUgZm9yIGVhY2ggY2FuIGJlIGRlbGV0ZWQgaW5kaXZpZHVhbGx5CiAgICAgIHRoaXMucmVnaXN0ZXJCZWZvcmVIb29rKHRoaXMudmFsdWUuc2F2ZSwgdGhpcy5zYXZlUHZjSG9va05hbWUgKyB0aGlzLnVuaXF1ZUlkLCB1bmRlZmluZWQsIHRoaXMudmFsdWUpOwogICAgfQogIH0sCgogIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLiRlbWl0KCdyZW1vdmVQdmNGb3JtJywgdGhpcy5zYXZlUHZjSG9va05hbWUgKyB0aGlzLnVuaXF1ZUlkKTsKICB9LAoKICBtZXRob2RzOiB7CiAgICB1cGRhdGVNb2RlKG1vZGUsIGVuYWJsZWQpIHsKICAgICAgaWYgKGVuYWJsZWQpIHsKICAgICAgICBhZGRPYmplY3QodGhpcy52YWx1ZS5zcGVjLmFjY2Vzc01vZGVzLCBtb2RlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZW1vdmVPYmplY3QodGhpcy52YWx1ZS5zcGVjLmFjY2Vzc01vZGVzLCBtb2RlKTsKICAgICAgfQogICAgfSwKCiAgICB1cGRhdGVQVihwdikgewogICAgICB0aGlzLiRzZXQodGhpcy5zcGVjLCAndm9sdW1lTmFtZScsIHB2Lm1ldGFkYXRhLm5hbWUpOwogICAgICB0aGlzLiRzZXQodGhpcy5zcGVjLCAnc3RvcmFnZUNsYXNzTmFtZScsIChwdi5zcGVjLnN0b3JhZ2VDbGFzc05hbWUgfHwgJycpKTsKICAgICAgdGhpcy5zcGVjLnJlc291cmNlcy5yZXF1ZXN0cy5zdG9yYWdlID0gcHY/LnNwZWM/LmNhcGFjaXR5Py5zdG9yYWdlOwogICAgfSwKCiAgICB1cGRhdGVTdG9yYWdlKG5ldSA9ICcnKSB7CiAgICAgIGlmICghbmV1LnRvU3RyaW5nKCkubWF0Y2goL1swLTldKlthLXpBLVpdKyQvKSkgewogICAgICAgIG5ldSArPSAnR2knOwogICAgICB9CgogICAgICB0aGlzLnNwZWMucmVzb3VyY2VzLnJlcXVlc3RzLnN0b3JhZ2UgPSBuZXU7CiAgICB9LAoKICAgIHZvbHVtZU5hbWUodm9sKSB7CiAgICAgIHJldHVybiBnZXQodm9sLCAnbWV0YWRhdGEubmFtZScpIHx8IHZvbDsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["persistentvolumeclaim.vue"],"names":[],"mappingsfile":"persistentvolumeclaim.vue","sourceRoot":"node_modules/@rancher/shell/edit/workload/storage/persistentVolumeClaim","sourcesContent":["<script>\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { RadioGroup } from '@components/Form/Radio';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { mapGetters } from 'vuex';\nimport { removeObject, addObject } from '@shell/utils/array';\nimport { STORAGE_CLASS, PV } from '@shell/config/types';\nimport { allHash } from '@shell/utils/promise';\nimport { get } from '@shell/utils/object';\n\nexport default {\n\n  components: {\n    LabeledSelect, UnitInput, RadioGroup, Checkbox, LabeledInput\n  },\n\n  props: {\n    mode: {\n      type:    String,\n      default: 'create'\n    },\n\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n\n    registerBeforeHook: {\n      type:    Function,\n      default: null,\n    },\n\n    savePvcHookName: {\n      type:     String,\n      default:  '',\n      required: true\n    },\n  },\n  async fetch() {\n    const hash = await allHash({\n      storageClasses:    this.$store.dispatch('cluster/findAll', { type: STORAGE_CLASS }),\n      persistentVolumes: this.$store.dispatch('cluster/findAll', { type: PV }),\n    });\n\n    this.storageClasses = hash.storageClasses;\n    this.persistentVolumes = hash.persistentVolumes;\n    this.$set(this.spec, 'storageClassName', (this.spec.storageClassName || this.defaultStorageClassName));\n  },\n\n  data() {\n    const spec = this.value.spec;\n\n    if (!this.value.metadata) {\n      this.$set(this.value, 'metadata', {});\n    }\n\n    this.$set(this.value.spec, 'accessModes', this.value.spec.accessModes || []);\n\n    return {\n      storageClasses:    [],\n      persistentVolumes: [],\n      isCreatePV:        true,\n      spec,\n      uniqueId:          new Date().getTime() // Allows form state to be individually deleted\n    };\n  },\n\n  computed: {\n    storageClassNames() {\n      return this.storageClasses.map((sc) => sc.metadata.name);\n    },\n\n    /**\n     * Required to initialize with default SC on creation\n     */\n    defaultStorageClassName() {\n      return this.storageClasses.find((sc) => sc.metadata?.annotations?.['storageclass.beta.kubernetes.io/is-default-class'] === 'true' ||\n        sc.metadata?.annotations?.['storageclass.kubernetes.io/is-default-class'] === 'true')?.metadata.name ;\n    },\n\n    availablePVs() {\n      return this.persistentVolumes.reduce((total, each) => {\n        if (each?.status?.phase === 'Available') {\n          total.push(each);\n        }\n\n        return total;\n      }, []);\n    },\n\n    persistentVolumeNames() {\n      return this.availablePVs.map((pv) => pv.metadata.name);\n    },\n\n    ...mapGetters({ t: 'i18n/t' })\n  },\n\n  watch: {\n    isCreatePV(neu) {\n      if (neu) {\n        delete this.spec.volumeName;\n        this.spec.resources.requests.storage = null;\n      } else {\n        this.spec.resources.requests.storage = null;\n      }\n    },\n  },\n\n  created() {\n    this.value.uniqueId = this.uniqueId;\n    this.$emit('createUniqueId');\n    if (this.registerBeforeHook) {\n      // Append the uniqueID to the PVC hook name so that form state for each can be deleted individually\n      this.registerBeforeHook(this.value.save, this.savePvcHookName + this.uniqueId, undefined, this.value);\n    }\n  },\n\n  beforeDestroy() {\n    this.$emit('removePvcForm', this.savePvcHookName + this.uniqueId);\n  },\n\n  methods: {\n    updateMode(mode, enabled) {\n      if (enabled) {\n        addObject(this.value.spec.accessModes, mode);\n      } else {\n        removeObject(this.value.spec.accessModes, mode);\n      }\n    },\n\n    updatePV(pv) {\n      this.$set(this.spec, 'volumeName', pv.metadata.name);\n      this.$set(this.spec, 'storageClassName', (pv.spec.storageClassName || ''));\n      this.spec.resources.requests.storage = pv?.spec?.capacity?.storage;\n    },\n\n    updateStorage(neu = '') {\n      if (!neu.toString().match(/[0-9]*[a-zA-Z]+$/)) {\n        neu += 'Gi';\n      }\n\n      this.spec.resources.requests.storage = neu;\n    },\n\n    volumeName(vol) {\n      return get(vol, 'metadata.name') || vol;\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.metadata.name\"\n          :mode=\"mode\"\n          :label=\"t('persistentVolumeClaim.name')\"\n          :required=\"true\"\n          @input=\"$emit('input', value)\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <RadioGroup\n          v-model=\"isCreatePV\"\n          name=\"isCreatePV\"\n          :options=\"[true, false]\"\n          :labels=\"[t('persistentVolumeClaim.source.options.new'), t('persistentVolumeClaim.source.options.existing')]\"\n          :mode=\"mode\"\n        />\n      </div>\n      <div class=\"col span-6\">\n        <LabeledSelect\n          v-if=\"isCreatePV\"\n          v-model=\"spec.storageClassName\"\n          data-testid=\"storage-class-name\"\n          :mode=\"mode\"\n          :required=\"true\"\n          :label=\"t('persistentVolumeClaim.storageClass')\"\n          :options=\"storageClassNames\"\n        />\n        <LabeledSelect\n          v-else\n          :value=\"spec.volumeName\"\n          :get-option-label=\"volumeName\"\n          :required=\"true\"\n          :mode=\"mode\"\n          :label=\"t('persistentVolumeClaim.volumes')\"\n          :options=\"availablePVs\"\n          @input=\"updatePV\"\n        />\n      </div>\n    </div>\n\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <div class=\"access-modes\">\n          <t\n            class=\"text-label\"\n            k=\"persistentVolumeClaim.accessModes\"\n          />\n          <span class=\"text-error\">*</span>\n        </div>\n        <div class=\"access-modes\">\n          <Checkbox\n            :mode=\"mode\"\n            :value=\"value.spec.accessModes.includes('ReadWriteOnce')\"\n            :label=\"t('persistentVolumeClaim.accessModesOptions.singleNodeRW')\"\n            @input=\"e=>updateMode('ReadWriteOnce', e)\"\n          />\n          <Checkbox\n            :mode=\"mode\"\n            :value=\"value.spec.accessModes.includes('ReadOnlyMany')\"\n            :label=\"t('persistentVolumeClaim.accessModesOptions.manyNodeR')\"\n            @input=\"e=>updateMode('ReadOnlyMany', e)\"\n          />\n          <Checkbox\n            :mode=\"mode\"\n            :value=\"value.spec.accessModes.includes('ReadWriteMany')\"\n            :label=\"t('persistentVolumeClaim.accessModesOptions.manyNodeRW')\"\n            @input=\"e=>updateMode('ReadWriteMany', e)\"\n          />\n        </div>\n      </div>\n      <div\n        v-if=\"isCreatePV\"\n        class=\"col span-6\"\n      >\n        <UnitInput\n          v-model=\"spec.resources.requests.storage\"\n          :mode=\"mode\"\n          :label=\"t('persistentVolumeClaim.capacity')\"\n          :increment=\"1024\"\n          :input-exponent=\"3\"\n          :required=\"true\"\n          :output-modifier=\"true\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang='scss'>\n.access-modes {\n  display: flex;\n  flex-direction: row;\n}\n</style>\n"]}]}