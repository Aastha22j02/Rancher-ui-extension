{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/management.cattle.io.setting.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/management.cattle.io.setting.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDcnVSZXNvdXJjZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DcnVSZXNvdXJjZSc7CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IExhYmVsZWRTZWxlY3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9MYWJlbGVkU2VsZWN0JzsKaW1wb3J0IHsgQmFubmVyIH0gZnJvbSAnQGNvbXBvbmVudHMvQmFubmVyJzsKaW1wb3J0IENyZWF0ZUVkaXRWaWV3IGZyb20gJ0BzaGVsbC9taXhpbnMvY3JlYXRlLWVkaXQtdmlldyc7CmltcG9ydCB7IFRleHRBcmVhQXV0b0dyb3cgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL1RleHRBcmVhJzsKaW1wb3J0IGZvcm1SdWxlc0dlbmVyYXRvciBmcm9tICdAc2hlbGwvdXRpbHMvdmFsaWRhdG9ycy9mb3JtUnVsZXMvaW5kZXgnOwoKaW1wb3J0IHsgQUxMT1dFRF9TRVRUSU5HUywgU0VUVElORyB9IGZyb20gJ0BzaGVsbC9jb25maWcvc2V0dGluZ3MnOwppbXBvcnQgeyBSYWRpb0dyb3VwIH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9SYWRpbyc7CmltcG9ydCBGb3JtVmFsaWRhdGlvbiBmcm9tICdAc2hlbGwvbWl4aW5zL2Zvcm0tdmFsaWRhdGlvbic7CmltcG9ydCB7IHNldEJyYW5kIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9wcml2YXRlLWxhYmVsJzsKaW1wb3J0IHsga2V5QnksIG1hcFZhbHVlcyB9IGZyb20gJ2xvZGFzaCc7CmltcG9ydCB7IGlzTG9jYWxob3N0LCBpc1NlcnZlclVybCB9IGZyb20gJ0BzaGVsbC91dGlscy92YWxpZGF0b3JzL3NldHRpbmcnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIENydVJlc291cmNlLAogICAgTGFiZWxlZElucHV0LAogICAgTGFiZWxlZFNlbGVjdCwKICAgIFJhZGlvR3JvdXAsCiAgICBUZXh0QXJlYUF1dG9Hcm93LAogICAgQmFubmVyCiAgfSwKCiAgbWl4aW5zOiBbQ3JlYXRlRWRpdFZpZXcsIEZvcm1WYWxpZGF0aW9uXSwKCiAgZGF0YSgpIHsKICAgIGNvbnN0IHQgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydpMThuL3QnXTsKCiAgICByZXR1cm4gewogICAgICBzZXR0aW5nOiAgICAgICAgQUxMT1dFRF9TRVRUSU5HU1t0aGlzLnZhbHVlLmlkXSwKICAgICAgZGVzY3JpcHRpb246ICAgIHQoYGFkdmFuY2VkU2V0dGluZ3MuZGVzY3JpcHRpb25zLiR7IHRoaXMudmFsdWUuaWQgfWApLAogICAgICBlZGl0SGVscDogICAgICAgdChgYWR2YW5jZWRTZXR0aW5ncy5lZGl0SGVscC4keyB0aGlzLnZhbHVlLmlkIH1gKSwKICAgICAgZW51bU9wdGlvbnM6ICAgIFtdLAogICAgICBjYW5SZXNldDogICAgICAgZmFsc2UsCiAgICAgIGVycm9yczogICAgICAgICBbXSwKICAgICAgZnZGb3JtUnVsZVNldHM6IFtdLAogICAgfTsKICB9LAoKICBjcmVhdGVkKCkgewogICAgdGhpcy52YWx1ZS52YWx1ZSA9IHRoaXMudmFsdWUudmFsdWUgfHwgdGhpcy52YWx1ZS5kZWZhdWx0OwogICAgdGhpcy5lbnVtT3B0aW9ucyA9IHRoaXMuc2V0dGluZz8ua2luZCA9PT0gJ2VudW0nID8gdGhpcy5zZXR0aW5nLm9wdGlvbnMubWFwKChpZCkgPT4gKHsKICAgICAgLy8gaTE4bi11c2VzIGFkdmFuY2VkU2V0dGluZ3MuZW51bS4qCiAgICAgIGxhYmVsOiBgYWR2YW5jZWRTZXR0aW5ncy5lbnVtLiR7IHRoaXMudmFsdWUuaWQgfS4keyBpZCB9YCwKICAgICAgdmFsdWU6IGlkLAogICAgfSkpIDogW107CiAgICB0aGlzLmNhblJlc2V0ID0gdGhpcy5zZXR0aW5nPy5jYW5SZXNldCB8fCAhIXRoaXMudmFsdWUuZGVmYXVsdDsKICAgIHRoaXMuZnZGb3JtUnVsZVNldHMgPSB0aGlzLnNldHRpbmc/LnJ1bGVTZXQgPyBbewogICAgICBwYXRoOiAgJ3ZhbHVlJywKICAgICAgcnVsZXM6IHRoaXMuc2V0dGluZy5ydWxlU2V0Lm1hcCgoeyBuYW1lIH0pID0+IG5hbWUpCiAgICB9XSA6IFtdOwoKICAgIC8vIERvbid0IGFsbG93IHRoZSB1c2VyIHRvIHJlc2V0IHRoZSBzZXJ2ZXIgVVJMIGlmIHRoZXJlIGlzIG5vIGRlZmF1bHQKICAgIC8vIGhlbHBzIHRvIGVuc3VyZSB0aGF0IGEgdmFsdWUgaXMgYWx3YXlzIHNldAogICAgaWYgKGlzU2VydmVyVXJsKHRoaXMudmFsdWUuaWQpICYmICF0aGlzLnZhbHVlLmRlZmF1bHQpIHsKICAgICAgdGhpcy5jYW5SZXNldCA9IGZhbHNlOwogICAgfQogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBmdkV4dHJhUnVsZXMoKSB7CiAgICAgIGNvbnN0IHQgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydpMThuL3QnXTsKCiAgICAgIC8vIFdlIG1hcCB0aGUgc2V0dGluZyBydWxlc2V0cyB0byB1c2UgdmFsdWVzIHRvIGRlZmluZSB2YWxpZGF0aW9uIGZyb20gZmFjdG9yeQogICAgICByZXR1cm4gdGhpcy5zZXR0aW5nPy5ydWxlU2V0ID8gbWFwVmFsdWVzKAogICAgICAgIGtleUJ5KHRoaXMuc2V0dGluZy5ydWxlU2V0LCAnbmFtZScpLAogICAgICAgIC8vIFRoZSB2YWxpZGF0aW9uIGlzIGN1cnJpZWQgYW5kIG1heSByZXF1aXJlIHRoZSBmYWN0b3J5IGFyZ3VtZW50IGZvciB0aGUgVmFsaWRhdG9yRmFjdG9yeQogICAgICAgICh7IGtleSwgbmFtZSwgZmFjdG9yeUFyZyB9KSA9PiB7CiAgICAgICAgICBjb25zdCBydWxlID0gZm9ybVJ1bGVzR2VuZXJhdG9yKHQsIGtleSA/IHsga2V5IH0gOiB7fSlbbmFtZV07CgogICAgICAgICAgcmV0dXJuIGZhY3RvcnlBcmcgPyBydWxlKGZhY3RvcnlBcmcpIDogcnVsZTsKICAgICAgICB9KSA6IHt9OwogICAgfSwKCiAgICBzaG93TG9jYWxob3N0V2FybmluZygpIHsKICAgICAgcmV0dXJuIGlzU2VydmVyVXJsKHRoaXMudmFsdWUuaWQpICYmIGlzTG9jYWxob3N0KHRoaXMudmFsdWUudmFsdWUpOwogICAgfSwKCiAgICBzaG93V2FybmluZ0Jhbm5lcigpIHsKICAgICAgcmV0dXJuIHRoaXMuc2V0dGluZz8ud2FybmluZzsKICAgIH0sCgogICAgdmFsaWRhdGlvblBhc3NlZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuZnZGb3JtSXNWYWxpZCAmJiB0aGlzLmZ2R2V0UGF0aEVycm9ycyhbJ3ZhbHVlJ10pLmxlbmd0aCA9PT0gMDsKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBjb252ZXJ0VG9TdHJpbmcoZXZlbnQpIHsKICAgICAgdGhpcy52YWx1ZS52YWx1ZSA9IGAkeyBldmVudC50YXJnZXQudmFsdWUgfWA7CiAgICB9LAoKICAgIHNhdmVTZXR0aW5ncyhkb25lKSB7CiAgICAgIGNvbnN0IHQgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydpMThuL3QnXTsKCiAgICAgIC8vIFZhbGlkYXRlIHRoZSBKU09OIGlmIHRoZSBzZXR0aW5nIGlzIGEganNvbiB2YWx1ZQogICAgICBpZiAodGhpcy5zZXR0aW5nLmtpbmQgPT09ICdqc29uJykgewogICAgICAgIHRyeSB7CiAgICAgICAgICBKU09OLnBhcnNlKHRoaXMudmFsdWUudmFsdWUpOwogICAgICAgICAgdGhpcy5lcnJvcnMgPSBbXTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICB0aGlzLmVycm9ycyA9IFt0KCdhZHZhbmNlZFNldHRpbmdzLmVkaXQuaW52YWxpZEpTT04nKV07CgogICAgICAgICAgcmV0dXJuIGRvbmUoZmFsc2UpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHRoaXMudmFsdWU/LmlkID09PSBTRVRUSU5HLkJSQU5EKSB7CiAgICAgICAgc2V0QnJhbmQodGhpcy52YWx1ZS52YWx1ZSk7CiAgICAgIH0KCiAgICAgIHRoaXMuc2F2ZShkb25lKTsKICAgIH0sCgogICAgdXNlRGVmYXVsdChldikgewogICAgICAvLyBMb3NlIHRoZSBmb2N1cyBvbiB0aGUgYnV0dG9uIGFmdGVyIGNsaWNrCiAgICAgIGlmIChldiAmJiBldi5zcmNFbGVtZW50KSB7CiAgICAgICAgZXYuc3JjRWxlbWVudC5ibHVyKCk7CiAgICAgIH0KCiAgICAgIGlmIChpc1NlcnZlclVybCh0aGlzLnZhbHVlLmlkKSAmJiAhdGhpcy52YWx1ZS5kZWZhdWx0KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLnZhbHVlLnZhbHVlID0gdGhpcy52YWx1ZS5kZWZhdWx0OwogICAgfQogIH0KfTsK"},{"version":3,"sources":["management.cattle.io.setting.vue"],"names":[],"mappingsfile":"management.cattle.io.setting.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\nimport CruResource from '@shell/components/CruResource';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Banner } from '@components/Banner';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport { TextAreaAutoGrow } from '@components/Form/TextArea';\nimport formRulesGenerator from '@shell/utils/validators/formRules/index';\n\nimport { ALLOWED_SETTINGS, SETTING } from '@shell/config/settings';\nimport { RadioGroup } from '@components/Form/Radio';\nimport FormValidation from '@shell/mixins/form-validation';\nimport { setBrand } from '@shell/config/private-label';\nimport { keyBy, mapValues } from 'lodash';\nimport { isLocalhost, isServerUrl } from '@shell/utils/validators/setting';\n\nexport default {\n  components: {\n    CruResource,\n    LabeledInput,\n    LabeledSelect,\n    RadioGroup,\n    TextAreaAutoGrow,\n    Banner\n  },\n\n  mixins: [CreateEditView, FormValidation],\n\n  data() {\n    const t = this.$store.getters['i18n/t'];\n\n    return {\n      setting:        ALLOWED_SETTINGS[this.value.id],\n      description:    t(`advancedSettings.descriptions.${ this.value.id }`),\n      editHelp:       t(`advancedSettings.editHelp.${ this.value.id }`),\n      enumOptions:    [],\n      canReset:       false,\n      errors:         [],\n      fvFormRuleSets: [],\n    };\n  },\n\n  created() {\n    this.value.value = this.value.value || this.value.default;\n    this.enumOptions = this.setting?.kind === 'enum' ? this.setting.options.map((id) => ({\n      // i18n-uses advancedSettings.enum.*\n      label: `advancedSettings.enum.${ this.value.id }.${ id }`,\n      value: id,\n    })) : [];\n    this.canReset = this.setting?.canReset || !!this.value.default;\n    this.fvFormRuleSets = this.setting?.ruleSet ? [{\n      path:  'value',\n      rules: this.setting.ruleSet.map(({ name }) => name)\n    }] : [];\n\n    // Don't allow the user to reset the server URL if there is no default\n    // helps to ensure that a value is always set\n    if (isServerUrl(this.value.id) && !this.value.default) {\n      this.canReset = false;\n    }\n  },\n\n  computed: {\n    fvExtraRules() {\n      const t = this.$store.getters['i18n/t'];\n\n      // We map the setting rulesets to use values to define validation from factory\n      return this.setting?.ruleSet ? mapValues(\n        keyBy(this.setting.ruleSet, 'name'),\n        // The validation is curried and may require the factory argument for the ValidatorFactory\n        ({ key, name, factoryArg }) => {\n          const rule = formRulesGenerator(t, key ? { key } : {})[name];\n\n          return factoryArg ? rule(factoryArg) : rule;\n        }) : {};\n    },\n\n    showLocalhostWarning() {\n      return isServerUrl(this.value.id) && isLocalhost(this.value.value);\n    },\n\n    showWarningBanner() {\n      return this.setting?.warning;\n    },\n\n    validationPassed() {\n      return this.fvFormIsValid && this.fvGetPathErrors(['value']).length === 0;\n    }\n  },\n\n  methods: {\n    convertToString(event) {\n      this.value.value = `${ event.target.value }`;\n    },\n\n    saveSettings(done) {\n      const t = this.$store.getters['i18n/t'];\n\n      // Validate the JSON if the setting is a json value\n      if (this.setting.kind === 'json') {\n        try {\n          JSON.parse(this.value.value);\n          this.errors = [];\n        } catch (e) {\n          this.errors = [t('advancedSettings.edit.invalidJSON')];\n\n          return done(false);\n        }\n      }\n\n      if (this.value?.id === SETTING.BRAND) {\n        setBrand(this.value.value);\n      }\n\n      this.save(done);\n    },\n\n    useDefault(ev) {\n      // Lose the focus on the button after click\n      if (ev && ev.srcElement) {\n        ev.srcElement.blur();\n      }\n\n      if (isServerUrl(this.value.id) && !this.value.default) {\n        return;\n      }\n\n      this.value.value = this.value.default;\n    }\n  }\n};\n</script>\n\n<template>\n  <CruResource\n    class=\"route\"\n    :done-route=\"'c-cluster-product-resource'\"\n    :errors=\"fvUnreportedValidationErrors\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :can-yaml=\"false\"\n    :validation-passed=\"validationPassed\"\n    @error=\"e=>errors = e\"\n    @finish=\"saveSettings\"\n    @cancel=\"done\"\n  >\n    <Banner\n      v-if=\"showWarningBanner\"\n      color=\"warning\"\n      :label=\"t(`advancedSettings.warnings.${ setting.warning }`)\"\n      data-testid=\"advanced_settings_warning_banner\"\n    />\n\n    <h4>{{ description }}</h4>\n\n    <h5\n      v-if=\"editHelp\"\n      v-clean-html=\"editHelp\"\n      class=\"edit-help\"\n    />\n\n    <div class=\"edit-change mt-20\">\n      <h5 v-t=\"'advancedSettings.edit.changeSetting'\" />\n      <button\n        data-testid=\"advanced_settings_use_default\"\n        :disabled=\"!canReset\"\n        type=\"button\"\n        class=\"btn role-primary\"\n        @click=\"useDefault\"\n      >\n        {{ t('advancedSettings.edit.useDefault') }}\n      </button>\n    </div>\n\n    <Banner\n      v-if=\"showLocalhostWarning\"\n      color=\"warning\"\n      :label=\"t('validation.setting.serverUrl.localhost')\"\n      data-testid=\"setting-serverurl-localhost-warning\"\n    />\n\n    <Banner\n      v-for=\"(err, i) in fvGetPathErrors(['value'])\"\n      :key=\"i\"\n      color=\"error\"\n      :label=\"err\"\n      data-testid=\"setting-error-banner\"\n    />\n\n    <div class=\"mt-20\">\n      <div v-if=\"setting.kind === 'enum'\">\n        <LabeledSelect\n          v-model=\"value.value\"\n          data-testid=\"input-setting-enum\"\n          :label=\"t('advancedSettings.edit.value')\"\n          :rules=\"fvGetAndReportPathRules('value')\"\n          :localized-label=\"true\"\n          :mode=\"mode\"\n          :required=\"true\"\n          :options=\"enumOptions\"\n        />\n      </div>\n      <div v-else-if=\"setting.kind === 'boolean'\">\n        <RadioGroup\n          v-model=\"value.value\"\n          data-testid=\"input-setting-boolean\"\n          name=\"settings_value\"\n          :rules=\"fvGetAndReportPathRules('value')\"\n          :labels=\"[t('advancedSettings.edit.trueOption'), t('advancedSettings.edit.falseOption')]\"\n          :options=\"['true', 'false']\"\n        />\n      </div>\n      <div v-else-if=\"setting.kind === 'multiline' || setting.kind === 'json'\">\n        <TextAreaAutoGrow\n          v-model=\"value.value\"\n          data-testid=\"input-setting-json\"\n          :required=\"true\"\n          :rules=\"fvGetAndReportPathRules('value')\"\n          :min-height=\"254\"\n        />\n      </div>\n      <div v-else-if=\"setting.kind === 'integer'\">\n        <LabeledInput\n          v-model=\"value.value\"\n          data-testid=\"input-setting-integer\"\n          :label=\"t('advancedSettings.edit.value')\"\n          :mode=\"mode\"\n          type=\"number\"\n          :rules=\"fvGetAndReportPathRules('value')\"\n          :required=\"true\"\n        />\n      </div>\n      <div v-else>\n        <LabeledInput\n          v-model=\"value.value\"\n          data-testid=\"input-setting-generic\"\n          :localized-label=\"true\"\n          :required=\"true\"\n          :mode=\"mode\"\n          :rules=\"fvGetAndReportPathRules('value')\"\n          :label=\"t('advancedSettings.edit.value')\"\n        />\n      </div>\n    </div>\n  </CruResource>\n</template>\n\n<style lang=\"scss\" scoped>\n  .edit-change {\n    align-items: center;\n    display: flex;\n\n    > h5 {\n      flex: 1;\n    }\n  }\n\n  ::v-deep .edit-help code {\n    padding: 1px 5px;\n  }\n</style>\n"]}]}