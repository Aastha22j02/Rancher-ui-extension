{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/c/_cluster/manager/jwt.authentication/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/c/_cluster/manager/jwt.authentication/index.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IE1BTkFHRU1FTlQgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IHsgU1RBVEUsIEFHRSB9IGZyb20gJ0BzaGVsbC9jb25maWcvdGFibGUtaGVhZGVycyc7CmltcG9ydCB7IFNUQVRFU19FTlVNLCBjb2xvckZvclN0YXRlIH0gZnJvbSAnQHNoZWxsL3BsdWdpbnMvZGFzaGJvYXJkLXN0b3JlL3Jlc291cmNlLWNsYXNzJzsKaW1wb3J0IFJlc291cmNlVGFibGUsIHsgZGVmYXVsdFRhYmxlU29ydEdlbmVyYXRpb25GbiB9IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1Jlc291cmNlVGFibGUnOwppbXBvcnQgTG9hZGluZyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Mb2FkaW5nJzsKaW1wb3J0IE1hc3RoZWFkIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1Jlc291cmNlTGlzdC9NYXN0aGVhZCc7CmltcG9ydCB7IGFsbEhhc2ggfSBmcm9tICdAc2hlbGwvdXRpbHMvcHJvbWlzZSc7CmltcG9ydCBSZXNvdXJjZUZldGNoIGZyb20gJ0BzaGVsbC9taXhpbnMvcmVzb3VyY2UtZmV0Y2gnOwppbXBvcnQgeyBCYWRnZVN0YXRlIH0gZnJvbSAnQGNvbXBvbmVudHMvQmFkZ2VTdGF0ZSc7CmltcG9ydCBUeXBlRGVzY3JpcHRpb24gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvVHlwZURlc2NyaXB0aW9uJzsKCmltcG9ydCB7IGV4Y2VwdGlvblRvRXJyb3JzQXJyYXkgfSBmcm9tICdAc2hlbGwvdXRpbHMvZXJyb3InOwppbXBvcnQgQmFubmVyIGZyb20gJ0Bjb21wb25lbnRzL0Jhbm5lci9CYW5uZXIudnVlJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAgICAgICAnQ2x1c3RlclByb3h5Q29uZmlnJywKICBjb21wb25lbnRzOiB7CiAgICBSZXNvdXJjZVRhYmxlLCBMb2FkaW5nLCBNYXN0aGVhZCwgQmFkZ2VTdGF0ZSwgQmFubmVyLCBUeXBlRGVzY3JpcHRpb24KICB9LAogIG1peGluczogW1Jlc291cmNlRmV0Y2hdLAogIGFzeW5jIGZldGNoKCkgewogICAgY29uc3QgaGFzaCA9IHsKICAgICAgbWdtdENsdXN0ZXJzOiB0aGlzLiRmZXRjaFR5cGUoTUFOQUdFTUVOVC5DTFVTVEVSKSwKICAgICAgcHJveHlDb25maWc6ICB0aGlzLiRmZXRjaFR5cGUoTUFOQUdFTUVOVC5DTFVTVEVSX1BST1hZX0NPTkZJRykKICAgIH07CgogICAgY29uc3QgcmVzID0gYXdhaXQgYWxsSGFzaChoYXNoKTsKCiAgICB0aGlzLmNsdXN0ZXJzID0gcmVzLm1nbXRDbHVzdGVyczsKICAgIHRoaXMucHJveHlDb25maWdzID0gcmVzLnByb3h5Q29uZmlnOwogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjbHVzdGVyczogICAgICAgICAgICAgICAgICAgICAgICAgW10sCiAgICAgIHByb3h5Q29uZmlnczogICAgICAgICAgICAgICAgICAgICBbXSwKICAgICAgcmVzb3VyY2U6ICAgICAgICAgICAgICAgICAgICAgICAgIE1BTkFHRU1FTlQuQ0xVU1RFUl9QUk9YWV9DT05GSUcsCiAgICAgIHNjaGVtYTogICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L3NjaGVtYUZvciddKE1BTkFHRU1FTlQuQ0xVU1RFUl9QUk9YWV9DT05GSUcpLAogICAgICB1c2VRdWVyeVBhcmFtc0ZvclNpbXBsZUZpbHRlcmluZzogZmFsc2UsCiAgICAgIGVycm9yczogICAgICAgICAgICAgICAgICAgICAgICAgICBbXSwKICAgICAgZm9yY2VVcGRhdGVMaXZlQW5kRGVsYXllZDogICAgICAgIDUKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBjbG9zZUVycm9yKGluZGV4KSB7CiAgICAgIHRoaXMuZXJyb3JzID0gdGhpcy5lcnJvcnMuZmlsdGVyKChfLCBpKSA9PiBpICE9PSBpbmRleCk7CiAgICB9LAogICAgc29ydEdlbmVyYXRpb25GbigpIHsKICAgICAgLy8gVGhpcyBpcyBuZWVkZWQgdG8gbWFrZSBzdXJlIHRhYmxlIGdldHMgcmVmcmVzaGVkIHdoZW4gdGhlIHN0YXR1cyBjaGFuZ2VzLiBPdGhlcndpc2UsIGl0IHVzZXMgY2FjaGVkIHZhbHVlcy4KICAgICAgY29uc3QgYmFzZSA9IGRlZmF1bHRUYWJsZVNvcnRHZW5lcmF0aW9uRm4odGhpcy5zY2hlbWEsIHRoaXMuJHN0b3JlKTsKCiAgICAgIHJldHVybiBiYXNlICsgdGhpcy5mb3JjZVVwZGF0ZUxpdmVBbmREZWxheWVkOwogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICBoZWFkZXJzKCkgewogICAgICBjb25zdCBvdXQgPSBbCiAgICAgICAgewogICAgICAgICAgLi4uU1RBVEUsCiAgICAgICAgICB2YWx1ZTogJ3ZhbHVlJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICAgICAgJ2NsdXN0ZXJOYW1lJywKICAgICAgICAgIGxhYmVsS2V5OiAgJ2p3dC5oZWFkZXJzLmNsdXN0ZXJOYW1lJywKICAgICAgICAgIHZhbHVlOiAgICAgJ2NsdXN0ZXJOYW1lJywKICAgICAgICAgIHNvcnQ6ICAgICAgJ2NsdXN0ZXJOYW1lJywKICAgICAgICAgIHNlYXJjaDogICAgWydjbHVzdGVyTmFtZSddLAogICAgICAgICAgZm9ybWF0dGVyOiAnTGlua0RldGFpbCcKICAgICAgICB9LAoKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAgICAgICd1cGRhdGVkT24nLAogICAgICAgICAgbGFiZWxLZXk6ICAnand0LmhlYWRlcnMudXBkYXRlZE9uJywKICAgICAgICAgIHZhbHVlOiAgICAgJ3VwZGF0ZWRPbicsCiAgICAgICAgICBzb3J0OiAgICAgICd1cGRhdGVkT24nLAogICAgICAgICAgZm9ybWF0dGVyOiAnRGF0ZScsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAuLi5BR0UsCiAgICAgICAgICBsYWJlbEtleTogJ2p3dC5oZWFkZXJzLmNsdXN0ZXJBZ2UnLAogICAgICAgIH0sCiAgICAgIF07CgogICAgICByZXR1cm4gb3V0OwogICAgfSwKICAgIHJvd3MoKSB7CiAgICAgIGNvbnN0IHByb3h5Q29uZmlnTWFwID0gbmV3IE1hcCgpOwogICAgICBjb25zdCByb3dzID0gW107CgogICAgICBjb25zdCBlbmFibGVBY3Rpb24gPSB7CiAgICAgICAgYWN0aW9uOiAgICAgJ2FjdGl2YXRlJywKICAgICAgICBhbGxFbmFibGVkOiBmYWxzZSwKICAgICAgICBhbnlFbmFibGVkOiB0cnVlLAogICAgICAgIGJ1bGthYmxlOiAgIHRydWUsCiAgICAgICAgZW5hYmxlZDogICAgdHJ1ZSwKICAgICAgICBpY29uOiAgICAgICAnaWNvbiBpY29uLWNoZWNrbWFyaycsCiAgICAgICAgbGFiZWw6ICAgICAgdGhpcy50KCdqd3QuYWN0aW9ucy5hY3RpdmF0ZScpLAogICAgICAgIGludm9rZTogICAgIGFzeW5jKG9wdHMsIHJlc291cmNlcykgPT4gewogICAgICAgICAgY29uc3QgcHJvbWlzZXMgPSBbXTsKCiAgICAgICAgICB0cnkgewogICAgICAgICAgICByZXNvdXJjZXMuZm9yRWFjaCgocmVzb3VyY2UpID0+IHsKICAgICAgICAgICAgICBjb25zdCByZXMgPSByZXNvdXJjZS5lbmFibGUoKTsKCiAgICAgICAgICAgICAgcHJvbWlzZXMucHVzaChyZXMpOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwocHJvbWlzZXMpOwogICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICB0aGlzLmVycm9ycyA9IGV4Y2VwdGlvblRvRXJyb3JzQXJyYXkoZSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9OwogICAgICBjb25zdCBkaXNhYmxlQWN0aW9uID0gewogICAgICAgIGFjdGlvbjogICAgICdkZWFjdGl2YXRlJywKICAgICAgICBhbGxFbmFibGVkOiBmYWxzZSwKICAgICAgICBhbnlFbmFibGVkOiB0cnVlLAogICAgICAgIGJ1bGthYmxlOiAgIHRydWUsCiAgICAgICAgZW5hYmxlZDogICAgdHJ1ZSwKICAgICAgICBpY29uOiAgICAgICAnaWNvbiBpY29uLXgnLAogICAgICAgIGxhYmVsOiAgICAgIHRoaXMudCgnand0LmFjdGlvbnMuZGVhY3RpdmF0ZScpLAogICAgICAgIGludm9rZTogICAgIGFzeW5jKG9wdHMsIHJlc291cmNlcykgPT4gewogICAgICAgICAgY29uc3QgcHJvbWlzZXMgPSBbXTsKCiAgICAgICAgICB0cnkgewogICAgICAgICAgICByZXNvdXJjZXMuZm9yRWFjaCgocmVzb3VyY2UpID0+IHsKICAgICAgICAgICAgICBjb25zdCByZXMgPSByZXNvdXJjZS5kaXNhYmxlKCk7CgogICAgICAgICAgICAgIHByb21pc2VzLnB1c2gocmVzKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKTsKICAgICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgdGhpcy5lcnJvcnMgPSBleGNlcHRpb25Ub0Vycm9yc0FycmF5KGUpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfTsKCiAgICAgIHRoaXMucHJveHlDb25maWdzLmZvckVhY2goKGNvbmZpZykgPT4gewogICAgICAgIGNvbnN0IGlkID0gY29uZmlnLm1ldGFkYXRhLm5hbWVzcGFjZTsKCiAgICAgICAgcHJveHlDb25maWdNYXAuc2V0KGlkLCB7IGNvbmZpZyB9KTsKICAgICAgfSk7CgogICAgICB0aGlzLmNsdXN0ZXJzLmZvckVhY2goKGNsdXN0ZXIpID0+IHsKICAgICAgICBjb25zdCBpZCA9IGNsdXN0ZXIuaWQ7CiAgICAgICAgY29uc3QgY2x1c3Rlck5hbWUgPSBjbHVzdGVyLnNwZWMuZGlzcGxheU5hbWU7CgogICAgICAgIGlmIChpZCAhPT0gJ2xvY2FsJykgewogICAgICAgICAgY29uc3QgY29uZmlnID0gcHJveHlDb25maWdNYXAuZ2V0KGlkKT8uY29uZmlnOwoKICAgICAgICAgIGNvbnN0IHZhbHVlID0gY29uZmlnPy5lbmFibGVkIHx8ICcnOwogICAgICAgICAgY29uc3QgY29uZmlnTmFtZSA9IGNvbmZpZz8ubWV0YWRhdGE/Lm5hbWUgfHwgJyc7CiAgICAgICAgICBjb25zdCB1cGRhdGVkT24gPSB2YWx1ZSA/IGNvbmZpZz8ubWV0YWRhdGE/LmNyZWF0aW9uVGltZXN0YW1wIDogJyc7CiAgICAgICAgICBjb25zdCBzdGF0ZUJhY2tncm91bmQgPSB2YWx1ZSA/IGNvbG9yRm9yU3RhdGUoU1RBVEVTX0VOVU0uQUNUSVZFKS5yZXBsYWNlKCd0ZXh0JywgJ2JnJykgOiBjb2xvckZvclN0YXRlKFNUQVRFU19FTlVNLklORk8pLnJlcGxhY2UoJ3RleHQnLCAnYmcnKTsKICAgICAgICAgIGNvbnN0IHN0YXRlTGFiZWwgPSB2YWx1ZSA/IHRoaXMudCgnand0LnN0YXRlLmVuYWJsZWQnKSA6IHRoaXMudCgnand0LnN0YXRlLmRpc2FibGVkJyk7CiAgICAgICAgICBjb25zdCBjcmVhdGlvblRpbWVzdGFtcCA9IGNsdXN0ZXIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXA7CiAgICAgICAgICBjb25zdCBhdmFpbGFibGVBY3Rpb25zID0gdmFsdWUgPyBbZGlzYWJsZUFjdGlvbl0gOiBbZW5hYmxlQWN0aW9uXTsKICAgICAgICAgIGNvbnN0IGVuYWJsZSA9IGFzeW5jKCkgPT4gewogICAgICAgICAgICBpZiAoIWNvbmZpZ05hbWUpIHsKICAgICAgICAgICAgICBjb25zdCBjbHVzdGVyUHJveHlDb25maWcgPSBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbWFuYWdlbWVudC9jcmVhdGUnLCB7CiAgICAgICAgICAgICAgICBlbmFibGVkOiAgdHJ1ZSwKICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IG5hbWVzcGFjZTogaWQsIGdlbmVyYXRlTmFtZTogJ2NsdXN0ZXItcHJveHktY29uZmlnLScgfSwKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgcmV0dXJuIGNsdXN0ZXJQcm94eUNvbmZpZy5zYXZlKHsgdXJsOiAndjEvbWFuYWdlbWVudC5jYXR0bGUuaW8uY2x1c3RlcnByb3h5Y29uZmlncycsIG1ldGhvZDogJ1BPU1QnIH0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGNvbmZpZy5lbmFibGVkID0gdHJ1ZTsKCiAgICAgICAgICAgICAgcmV0dXJuIGNvbmZpZy5zYXZlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH07CiAgICAgICAgICBjb25zdCBkaXNhYmxlID0gYXN5bmMoKSA9PiB7CiAgICAgICAgICAgIHJldHVybiBjb25maWcucmVtb3ZlKCk7CiAgICAgICAgICB9OwoKICAgICAgICAgIHJvd3MucHVzaCh7CiAgICAgICAgICAgIGlkLCBjbHVzdGVyTmFtZSwgdmFsdWUsIHN0YXRlQmFja2dyb3VuZCwgc3RhdGVMYWJlbCwgY3JlYXRpb25UaW1lc3RhbXAsIHVwZGF0ZWRPbiwgYXZhaWxhYmxlQWN0aW9ucywgZW5hYmxlLCBkaXNhYmxlCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICB0aGlzLmZvcmNlVXBkYXRlTGl2ZUFuZERlbGF5ZWQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKCiAgICAgIHJldHVybiByb3dzOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"node_modules/@rancher/shell/pages/c/_cluster/manager/jwt.authentication","sourcesContent":["<script>\nimport { MANAGEMENT } from '@shell/config/types';\nimport { STATE, AGE } from '@shell/config/table-headers';\nimport { STATES_ENUM, colorForState } from '@shell/plugins/dashboard-store/resource-class';\nimport ResourceTable, { defaultTableSortGenerationFn } from '@shell/components/ResourceTable';\nimport Loading from '@shell/components/Loading';\nimport Masthead from '@shell/components/ResourceList/Masthead';\nimport { allHash } from '@shell/utils/promise';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\nimport { BadgeState } from '@components/BadgeState';\nimport TypeDescription from '@shell/components/TypeDescription';\n\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport Banner from '@components/Banner/Banner.vue';\n\nexport default {\n  name:       'ClusterProxyConfig',\n  components: {\n    ResourceTable, Loading, Masthead, BadgeState, Banner, TypeDescription\n  },\n  mixins: [ResourceFetch],\n  async fetch() {\n    const hash = {\n      mgmtClusters: this.$fetchType(MANAGEMENT.CLUSTER),\n      proxyConfig:  this.$fetchType(MANAGEMENT.CLUSTER_PROXY_CONFIG)\n    };\n\n    const res = await allHash(hash);\n\n    this.clusters = res.mgmtClusters;\n    this.proxyConfigs = res.proxyConfig;\n  },\n\n  data() {\n    return {\n      clusters:                         [],\n      proxyConfigs:                     [],\n      resource:                         MANAGEMENT.CLUSTER_PROXY_CONFIG,\n      schema:                           this.$store.getters['management/schemaFor'](MANAGEMENT.CLUSTER_PROXY_CONFIG),\n      useQueryParamsForSimpleFiltering: false,\n      errors:                           [],\n      forceUpdateLiveAndDelayed:        5\n    };\n  },\n  methods: {\n    closeError(index) {\n      this.errors = this.errors.filter((_, i) => i !== index);\n    },\n    sortGenerationFn() {\n      // This is needed to make sure table gets refreshed when the status changes. Otherwise, it uses cached values.\n      const base = defaultTableSortGenerationFn(this.schema, this.$store);\n\n      return base + this.forceUpdateLiveAndDelayed;\n    },\n  },\n  computed: {\n    headers() {\n      const out = [\n        {\n          ...STATE,\n          value: 'value',\n        },\n        {\n          name:      'clusterName',\n          labelKey:  'jwt.headers.clusterName',\n          value:     'clusterName',\n          sort:      'clusterName',\n          search:    ['clusterName'],\n          formatter: 'LinkDetail'\n        },\n\n        {\n          name:      'updatedOn',\n          labelKey:  'jwt.headers.updatedOn',\n          value:     'updatedOn',\n          sort:      'updatedOn',\n          formatter: 'Date',\n        },\n        {\n          ...AGE,\n          labelKey: 'jwt.headers.clusterAge',\n        },\n      ];\n\n      return out;\n    },\n    rows() {\n      const proxyConfigMap = new Map();\n      const rows = [];\n\n      const enableAction = {\n        action:     'activate',\n        allEnabled: false,\n        anyEnabled: true,\n        bulkable:   true,\n        enabled:    true,\n        icon:       'icon icon-checkmark',\n        label:      this.t('jwt.actions.activate'),\n        invoke:     async(opts, resources) => {\n          const promises = [];\n\n          try {\n            resources.forEach((resource) => {\n              const res = resource.enable();\n\n              promises.push(res);\n            });\n            await Promise.all(promises);\n          } catch (e) {\n            this.errors = exceptionToErrorsArray(e);\n          }\n        }\n      };\n      const disableAction = {\n        action:     'deactivate',\n        allEnabled: false,\n        anyEnabled: true,\n        bulkable:   true,\n        enabled:    true,\n        icon:       'icon icon-x',\n        label:      this.t('jwt.actions.deactivate'),\n        invoke:     async(opts, resources) => {\n          const promises = [];\n\n          try {\n            resources.forEach((resource) => {\n              const res = resource.disable();\n\n              promises.push(res);\n            });\n            await Promise.all(promises);\n          } catch (e) {\n            this.errors = exceptionToErrorsArray(e);\n          }\n        }\n      };\n\n      this.proxyConfigs.forEach((config) => {\n        const id = config.metadata.namespace;\n\n        proxyConfigMap.set(id, { config });\n      });\n\n      this.clusters.forEach((cluster) => {\n        const id = cluster.id;\n        const clusterName = cluster.spec.displayName;\n\n        if (id !== 'local') {\n          const config = proxyConfigMap.get(id)?.config;\n\n          const value = config?.enabled || '';\n          const configName = config?.metadata?.name || '';\n          const updatedOn = value ? config?.metadata?.creationTimestamp : '';\n          const stateBackground = value ? colorForState(STATES_ENUM.ACTIVE).replace('text', 'bg') : colorForState(STATES_ENUM.INFO).replace('text', 'bg');\n          const stateLabel = value ? this.t('jwt.state.enabled') : this.t('jwt.state.disabled');\n          const creationTimestamp = cluster.metadata.creationTimestamp;\n          const availableActions = value ? [disableAction] : [enableAction];\n          const enable = async() => {\n            if (!configName) {\n              const clusterProxyConfig = await this.$store.dispatch('management/create', {\n                enabled:  true,\n                metadata: { namespace: id, generateName: 'cluster-proxy-config-' },\n              });\n\n              return clusterProxyConfig.save({ url: 'v1/management.cattle.io.clusterproxyconfigs', method: 'POST' });\n            } else {\n              config.enabled = true;\n\n              return config.save();\n            }\n          };\n          const disable = async() => {\n            return config.remove();\n          };\n\n          rows.push({\n            id, clusterName, value, stateBackground, stateLabel, creationTimestamp, updatedOn, availableActions, enable, disable\n          });\n        }\n      });\n      this.forceUpdateLiveAndDelayed = new Date().getTime();\n\n      return rows;\n    },\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <Masthead\n      :schema=\"schema\"\n      :resource=\"resource\"\n      :isCreatable=\"false\"\n      :type-display=\"t('jwt.title')\"\n    >\n      <template #typeDescription>\n        <TypeDescription :resource=\"'jwt.authentication'\" />\n      </template>\n    </Masthead>\n\n    <Banner\n      v-for=\"(err, i) in errors\"\n      :key=\"i\"\n      color=\"error\"\n      :label=\"err\"\n      :closable=\"true\"\n      @close=\"closeError(i)\"\n    />\n\n    <ResourceTable\n      :schema=\"schema\"\n      :headers=\"headers\"\n      :key-field=\"'id'\"\n      :namespaced=\"false\"\n      :rows=\"rows\"\n      :tableActions=\"true\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :sort-generation-fn=\"sortGenerationFn\"\n      data-testid=\"jwt-authentication-list\"\n    >\n      <template #col:state=\"{row}\">\n        <td>\n          <BadgeState\n            :color=\"row.stateBackground\"\n            :label=\"row.stateLabel\"\n            class=\"state-bagde\"\n          />\n        </td>\n      </template>\n    </ResourceTable>\n  </div>\n</template>\n"]}]}