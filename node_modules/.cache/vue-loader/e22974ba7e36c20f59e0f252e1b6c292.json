{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/CodeMirror.vue?vue&type=style&index=0&id=6922e7cf&lang=scss","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/CodeMirror.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1725271300564},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1725271300920},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/postcss-loader/src/index.js","mtime":1725271300857},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/sass-loader/dist/cjs.js","mtime":1725271288422},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb2RlLW1pcnJvciB7CiAgei1pbmRleDogMDsKCiAgLm92ZXJsYXkgewogICAgcG9zaXRpb246IHN0aWNreTsKICAgIGRpc3BsYXk6IGdyaWQ7CiAgICB0b3A6IDA7CiAgICBmbG9hdDogcmlnaHQ7CiAgICBoZWlnaHQ6IDA7CiAgICB6LWluZGV4OiAxOwoKICAgIC5sYWJlbCB7CiAgICAgIGJvcmRlci1yYWRpdXM6IDJweDsKICAgICAgYm9yZGVyLXN0eWxlOiBkYXNoZWQ7CiAgICAgIGJvcmRlci13aWR0aDogMC4xcHg7CiAgICAgIG1hcmdpbjogN3B4IDdweCAwIDA7CiAgICAgIHBhZGRpbmc6IDdweDsKICAgICAgY29sb3I6IHZhcigtLWRhcmtlcik7CiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW92ZXJsYXktYmcpOwogICAgICBmb250LXNpemU6IDEycHg7CgogICAgICAuaWNvbiB7CiAgICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICB9CiAgICB9CiAgfQoKICAudnVlLWNvZGVtaXJyb3IgLkNvZGVNaXJyb3IgewogICAgaGVpZ2h0OiBpbml0aWFsOwogICAgYmFja2dyb3VuZDogbm9uZQogIH0KCiAgJi5hcy10ZXh0LWFyZWEgewogICAgbWluLWhlaWdodDogNDBweDsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIGRpc3BsYXk6IGJsb2NrOwogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgIHdpZHRoOiAxMDAlOwogICAgcGFkZGluZzogMTBweDsKICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlucHV0LWJnKTsKICAgIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWRpdXMpOwogICAgYm9yZGVyOiBzb2xpZCB2YXIoLS1ib3JkZXItd2lkdGgpIHZhcigtLWlucHV0LWJvcmRlcik7CiAgICBjb2xvcjogdmFyKC0taW5wdXQtdGV4dCk7CgogICAgJjpob3ZlciB7CiAgICAgIGJvcmRlci1jb2xvcjogdmFyKC0taW5wdXQtaG92ZXItYm9yZGVyKTsKICAgIH0KCiAgICAmOmZvY3VzLCAmLmZvY3VzIHsKICAgICAgb3V0bGluZTogbm9uZTsKICAgICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1vdXRsaW5lKTsKICAgIH0KCiAgICAuQ29kZU1pcnJvci13cmFwIHByZSB7CiAgICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7CiAgICB9CiAgICAuQ29kZU1pcnJvci1jb2RlIHsKICAgICAgLkNvZGVNaXJyb3ItbGluZSB7CiAgICAgICAgJjpub3QoOmxhc3QtY2hpbGQpPnNwYW46YWZ0ZXIsCiAgICAgICAgLmNtLW1hcmtkb3duLXNpbmdsZS10cmFpbGluZy1zcGFjZS1vZGQ6YmVmb3JlLAogICAgICAgIC5jbS1tYXJrZG93bi1zaW5nbGUtdHJhaWxpbmctc3BhY2UtZXZlbjpiZWZvcmUgewogICAgICAgICAgY29sb3I6IHZhcigtLW11dGVkKTsKICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4OwogICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7CiAgICAgICAgfQogICAgICAgICY6bm90KDpsYXN0LWNoaWxkKT5zcGFuOmFmdGVyIHsKICAgICAgICAgIGNvbnRlbnQ6ICfihrUnOwogICAgICAgICAgbWFyZ2luLWxlZnQ6IDJweDsKICAgICAgICB9CiAgICAgICAgLmNtLW1hcmtkb3duLXNpbmdsZS10cmFpbGluZy1zcGFjZS1vZGQ6YmVmb3JlLAogICAgICAgIC5jbS1tYXJrZG93bi1zaW5nbGUtdHJhaWxpbmctc3BhY2UtZXZlbjpiZWZvcmUgewogICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgICAgICBjb250ZW50OiAnwrcnOwogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIC5Db2RlTWlycm9yLWxpbmVzIHsKICAgICAgY29sb3I6IHZhcigtLWlucHV0LXRleHQpOwogICAgICBwYWRkaW5nOiAwOwoKICAgICAgLkNvZGVNaXJyb3ItbGluZSA+IHNwYW4gPiBzcGFuIHsKICAgICAgICAmLmNtLW92ZXJsYXkgewogICAgICAgICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIC5Db2RlTWlycm9yLWxpbmUgPiBzcGFuIHsKICAgICAgICBmb250LWZhbWlseTogJGJvZHktZm9udDsKICAgICAgfQogICAgfQoKICAgIC5Db2RlTWlycm9yLXNpemVyIHsKICAgICAgbWluLWhlaWdodDogMjBweDsKICAgIH0KCiAgICAuQ29kZU1pcnJvci1zZWxlY3RlZCB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnkpICFpbXBvcnRhbnQ7CiAgICB9CgogICAgLkNvZGVNaXJyb3Itc2VsZWN0ZWR0ZXh0IHsKICAgICAgY29sb3I6IHZhcigtLXByaW1hcnktdGV4dCk7CiAgICB9CgogICAgLkNvZGVNaXJyb3ItbGluZTo6c2VsZWN0aW9uLAogICAgLkNvZGVNaXJyb3ItbGluZSA+IHNwYW46OnNlbGVjdGlvbiwKICAgIC5Db2RlTWlycm9yLWxpbmUgPiBzcGFuID4gc3Bhbjo6c2VsZWN0aW9uIHsKICAgICAgY29sb3I6IHZhcigtLXByaW1hcnktdGV4dCk7CiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnkpOwogICAgfQoKICAgIC5Db2RlTWlycm9yLWxpbmU6Oi1tb3otc2VsZWN0aW9uLAogICAgLkNvZGVNaXJyb3ItbGluZSA+IHNwYW46Oi1tb3otc2VsZWN0aW9uLAogICAgLkNvZGVNaXJyb3ItbGluZSA+IHNwYW4gPiBzcGFuOjotbW96LXNlbGVjdGlvbiB7CiAgICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5LXRleHQpOwogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5KTsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["CodeMirror.vue"],"names":[],"mappings":";AA4TA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CodeMirror.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport { KEYMAP } from '@shell/store/prefs';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\n\nexport default {\n  name:  'CodeMirror',\n  props: {\n    /**\n     * Sets the edit mode for Text Area.\n     * @values _EDIT, _VIEW\n     */\n    mode: {\n      type:    String,\n      default: _EDIT\n    },\n    value: {\n      type:     String,\n      required: true,\n    },\n    options: {\n      type:    Object,\n      default: () => {}\n    },\n    asTextArea: {\n      type:    Boolean,\n      default: false\n    },\n    showKeyMapBox: {\n      type:    Boolean,\n      default: false\n    },\n  },\n\n  data() {\n    return {\n      codeMirrorRef:       null,\n      loaded:              false,\n      showKeyMapCloseIcon: false,\n      removeKeyMapBox:     false,\n    };\n  },\n\n  computed: {\n    isDisabled() {\n      return this.mode === _VIEW;\n    },\n\n    combinedOptions() {\n      const theme = this.$store.getters['prefs/theme'];\n      const keymap = this.$store.getters['prefs/get'](KEYMAP);\n\n      const out = {\n        // codemirror default options\n        tabSize:                 2,\n        indentWithTabs:          false,\n        mode:                    'yaml',\n        keyMap:                  keymap,\n        theme:                   `base16-${ theme }`,\n        lineNumbers:             true,\n        line:                    true,\n        styleActiveLine:         true,\n        lineWrapping:            true,\n        foldGutter:              true,\n        styleSelectedText:       true,\n        showCursorWhenSelecting: true,\n      };\n\n      if (this.asTextArea) {\n        out.lineNumbers = false;\n        out.tabSize = 0;\n        out.extraKeys = { Tab: false };\n      }\n\n      Object.assign(out, this.options);\n\n      return out;\n    },\n\n    keyMapText() {\n      return this.combinedOptions?.keyMap ? this.t(`prefs.keymap.${ this.combinedOptions.keyMap }`) : null;\n    },\n  },\n\n  created() {\n    if (window.__codeMirrorLoader) {\n      window.__codeMirrorLoader().then(() => {\n        this.loaded = true;\n      });\n    } else {\n      console.error('Code mirror loader not available'); // eslint-disable-line no-console\n    }\n  },\n\n  methods: {\n\n    focus() {\n      if ( this.$refs.codeMirrorRef ) {\n        this.$refs.codeMirrorRef.codemirror.focus();\n      }\n    },\n\n    refresh() {\n      if ( this.$refs.codeMirrorRef ) {\n        this.$refs.codeMirrorRef.refresh();\n      }\n    },\n\n    onReady(codeMirrorRef) {\n      this.$nextTick(() => {\n        codeMirrorRef.refresh();\n        this.codeMirrorRef = codeMirrorRef;\n      });\n      this.$emit('onReady', codeMirrorRef);\n    },\n\n    onInput(newCode) {\n      this.$emit('onInput', newCode);\n    },\n\n    onChanges(codeMirrorRef, changes) {\n      this.$emit('onChanges', codeMirrorRef, changes);\n    },\n\n    onFocus() {\n      this.$emit('onFocus', true);\n    },\n\n    onBlur() {\n      this.$emit('onFocus', false);\n    },\n\n    updateValue(value) {\n      if ( this.$refs.codeMirrorRef ) {\n        this.$refs.codeMirrorRef.codemirror.doc.setValue(value);\n      }\n    },\n\n    closeKeyMapInfo() {\n      this.removeKeyMapBox = true;\n    },\n\n    onKeyMapMouseOver(v) {\n      this.showKeyMapCloseIcon = v;\n    }\n  }\n};\n</script>\n\n<template>\n  <div\n    class=\"code-mirror\"\n    :class=\"{['as-text-area']: asTextArea}\"\n  >\n    <div v-if=\"loaded\">\n      <div\n        v-if=\"showKeyMapBox && !removeKeyMapBox && keyMapText\"\n        class=\"keymap overlay\"\n      >\n        <div\n          v-clean-tooltip=\"t('codeMirror.keymap.tooltip')\"\n          class=\"label\"\n          data-testid=\"code-mirror-keymap\"\n          @mouseover=\"onKeyMapMouseOver(true)\"\n          @mouseleave=\"onKeyMapMouseOver(false)\"\n        >\n          <span>\n            {{ keyMapText }}\n          </span>\n          <i\n            v-if=\"showKeyMapCloseIcon\"\n            class=\"icon icon-close icon-sm\"\n            @click=\"closeKeyMapInfo\"\n          />\n        </div>\n      </div>\n      <codemirror\n        ref=\"codeMirrorRef\"\n        :value=\"value\"\n        :options=\"combinedOptions\"\n        :disabled=\"isDisabled\"\n        @ready=\"onReady\"\n        @input=\"onInput\"\n        @changes=\"onChanges\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n      />\n    </div>\n    <div v-else>\n      Loading...\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n  .code-mirror {\n    z-index: 0;\n\n    .overlay {\n      position: sticky;\n      display: grid;\n      top: 0;\n      float: right;\n      height: 0;\n      z-index: 1;\n\n      .label {\n        border-radius: 2px;\n        border-style: dashed;\n        border-width: 0.1px;\n        margin: 7px 7px 0 0;\n        padding: 7px;\n        color: var(--darker);\n        background-color: var(--overlay-bg);\n        font-size: 12px;\n\n        .icon {\n          cursor: pointer;\n        }\n      }\n    }\n\n    .vue-codemirror .CodeMirror {\n      height: initial;\n      background: none\n    }\n\n    &.as-text-area {\n      min-height: 40px;\n      position: relative;\n      display: block;\n      box-sizing: border-box;\n      width: 100%;\n      padding: 10px;\n      background-color: var(--input-bg);\n      border-radius: var(--border-radius);\n      border: solid var(--border-width) var(--input-border);\n      color: var(--input-text);\n\n      &:hover {\n        border-color: var(--input-hover-border);\n      }\n\n      &:focus, &.focus {\n        outline: none;\n        border-color: var(--outline);\n      }\n\n      .CodeMirror-wrap pre {\n        word-break: break-word;\n      }\n      .CodeMirror-code {\n        .CodeMirror-line {\n          &:not(:last-child)>span:after,\n          .cm-markdown-single-trailing-space-odd:before,\n          .cm-markdown-single-trailing-space-even:before {\n            color: var(--muted);\n            position: absolute;\n            line-height: 20px;\n            pointer-events: none;\n          }\n          &:not(:last-child)>span:after {\n            content: '↵';\n            margin-left: 2px;\n          }\n          .cm-markdown-single-trailing-space-odd:before,\n          .cm-markdown-single-trailing-space-even:before {\n            font-weight: bold;\n            content: '·';\n          }\n        }\n      }\n\n      .CodeMirror-lines {\n        color: var(--input-text);\n        padding: 0;\n\n        .CodeMirror-line > span > span {\n          &.cm-overlay {\n            font-family: monospace;\n          }\n        }\n\n        .CodeMirror-line > span {\n          font-family: $body-font;\n        }\n      }\n\n      .CodeMirror-sizer {\n        min-height: 20px;\n      }\n\n      .CodeMirror-selected {\n        background-color: var(--primary) !important;\n      }\n\n      .CodeMirror-selectedtext {\n        color: var(--primary-text);\n      }\n\n      .CodeMirror-line::selection,\n      .CodeMirror-line > span::selection,\n      .CodeMirror-line > span > span::selection {\n        color: var(--primary-text);\n        background-color: var(--primary);\n      }\n\n      .CodeMirror-line::-moz-selection,\n      .CodeMirror-line > span::-moz-selection,\n      .CodeMirror-line > span > span::-moz-selection {\n        color: var(--primary-text);\n        background-color: var(--primary);\n      }\n    }\n  }\n</style>\n"]}]}