{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/dialog/AddonConfigConfirmationDialog.vue?vue&type=style&index=0&id=d67f2c44&lang=scss&scoped=true","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/dialog/AddonConfigConfirmationDialog.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1725271300564},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1725271300920},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/postcss-loader/src/index.js","mtime":1725271300857},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/sass-loader/dist/cjs.js","mtime":1725271288422},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5wcm9tcHQtcmVzdG9yZSB7CiAgbWFyZ2luOiAwOwp9CgouYm90dG9tIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgZmxleDogMTsKCiAgLmJ1dHRvbnMgewogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7CiAgICB3aWR0aDogMTAwJTsKICB9Cn0K"},{"version":3,"sources":["AddonConfigConfirmationDialog.vue"],"names":[],"mappings":";AAqFA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"AddonConfigConfirmationDialog.vue","sourceRoot":"node_modules/@rancher/shell/dialog","sourcesContent":["<script>\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { Card } from '@components/Card';\n\nexport default {\n  components: {\n    Card,\n    AsyncButton,\n  },\n  props: {\n    resources: {\n      type:     Array,\n      required: true\n    },\n    registerBackgroundClosing: {\n      type:     Function,\n      required: true\n    }\n  },\n  created() {\n    this.registerBackgroundClosing(this.closing);\n  },\n  methods: {\n    continue(value) {\n      if (this.resources[0]) {\n        this.resources[0](value);\n        delete this.resources[0];\n        this.$emit('close', value);\n      }\n    },\n\n    close() {\n      this.continue(false);\n    },\n\n    closing() {\n      this.continue(false);\n    },\n\n    apply(buttonDone) {\n      this.continue(true);\n    }\n  }\n};\n</script>\n\n<template>\n  <Card\n    class=\"prompt-restore\"\n    :show-highlight-border=\"false\"\n  >\n    <h4\n      slot=\"title\"\n      class=\"text-default-text\"\n    >\n      {{ t('addonConfigConfirmation.title') }}\n    </h4>\n\n    <template slot=\"body\">\n      <slot name=\"body\">\n        {{ t('addonConfigConfirmation.body') }}\n      </slot>\n    </template>\n\n    <div\n      slot=\"actions\"\n      class=\"bottom\"\n    >\n      <div class=\"buttons\">\n        <button\n          type=\"button\"\n          class=\"btn role-secondary mr-10\"\n          @click=\"close\"\n        >\n          {{ t('generic.cancel') }}\n        </button>\n        <AsyncButton\n          mode=\"continue\"\n          @click=\"apply\"\n        />\n      </div>\n    </div>\n  </Card>\n</template>\n<style lang='scss' scoped>\n.prompt-restore {\n  margin: 0;\n}\n\n.bottom {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n\n  .buttons {\n    display: flex;\n    justify-content: flex-end;\n    width: 100%;\n  }\n}\n</style>\n"]}]}