{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/auth/ldap/index.vue?vue&type=style&index=0&id=71518edc&lang=scss&scoped=true","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/auth/ldap/index.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1725271300564},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1725271300920},{"path":"/home/ubuntu/suseconf/node_modules/postcss-loader/src/index.js","mtime":1725271300857},{"path":"/home/ubuntu/suseconf/node_modules/sass-loader/dist/cjs.js","mtime":1725271288422},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5iYW5uZXIgewogIGRpc3BsYXk6IGJsb2NrOwoKICAmOjp2LWRlZXAgY29kZSB7CiAgICBwYWRkaW5nOiAwIDNweDsKICAgIG1hcmdpbjogMCAzcHg7CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA6JA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/@rancher/shell/edit/auth/ldap","sourcesContent":["<script>\nimport Loading from '@shell/components/Loading';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport CruResource from '@shell/components/CruResource';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport AllowedPrincipals from '@shell/components/auth/AllowedPrincipals';\nimport config from '@shell/edit/auth/ldap/config';\nimport AuthConfig from '@shell/mixins/auth-config';\nimport AuthBanner from '@shell/components/auth/AuthBanner';\nimport Password from '@shell/components/form/Password';\nimport AuthProviderWarningBanners from '@shell/edit/auth/AuthProviderWarningBanners';\n\nconst AUTH_TYPE = 'ldap';\n\nexport default {\n  components: {\n    Loading,\n    CruResource,\n    LabeledInput,\n    AllowedPrincipals,\n    config,\n    AuthBanner,\n    Password,\n    AuthProviderWarningBanners\n  },\n\n  mixins: [CreateEditView, AuthConfig],\n\n  data() {\n    return {\n      username: null,\n      password: null\n    };\n  },\n\n  computed: {\n    tArgs() {\n      return {\n        provider: this.displayName,\n        username: this.principal.loginName || this.principal.name,\n      };\n    },\n\n    AUTH_TYPE() {\n      return AUTH_TYPE;\n    },\n\n    toSave() {\n      let out = {\n        enabled:    true,\n        ldapConfig: this.model,\n        username:   this.username,\n        password:   this.password\n      };\n\n      if (this.NAME === 'activedirectory') {\n        out = {\n          enabled:               true,\n          activeDirectoryConfig: this.model,\n          username:              this.username,\n          password:              this.password\n        };\n      }\n\n      return out;\n    },\n  },\n\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <CruResource\n      :cancel-event=\"true\"\n      :done-route=\"doneRoute\"\n      :mode=\"mode\"\n      :resource=\"model\"\n      :subtypes=\"[]\"\n      :validation-passed=\"true\"\n      :finish-button-mode=\"model.enabled ? 'edit' : 'enable'\"\n      :can-yaml=\"false\"\n      :errors=\"errors\"\n      :show-cancel=\"showCancel\"\n      @error=\"e=>errors = e\"\n      @finish=\"save\"\n      @cancel=\"cancel\"\n    >\n      <template v-if=\"model.enabled && !isEnabling && !editConfig\">\n        <AuthBanner\n          :t-args=\"tArgs\"\n          :disable=\"disable\"\n          :edit=\"goToEdit\"\n        >\n          <template slot=\"rows\">\n            <tr><td>{{ t(`authConfig.ldap.table.server`) }}: </td><td>{{ serverUrl }}</td></tr>\n            <tr><td>{{ t(`authConfig.ldap.table.clientId`) }}: </td><td>{{ model.serviceAccountDistinguishedName || model.serviceAccountUsername }}</td></tr>\n          </template>\n        </AuthBanner>\n\n        <hr>\n\n        <AllowedPrincipals\n          :provider=\"NAME\"\n          :auth-config=\"model\"\n          :mode=\"mode\"\n        />\n      </template>\n\n      <template v-else>\n        <AuthProviderWarningBanners\n          v-if=\"!model.enabled\"\n          :t-args=\"tArgs\"\n        />\n\n        <h3>{{ t(`authConfig.ldap.${NAME}`) }}</h3>\n        <config\n          v-model=\"model\"\n          :type=\"NAME\"\n          :mode=\"mode\"\n        />\n\n        <h4>{{ t('authConfig.testAndEnable') }}</h4>\n        <div class=\"row mb-20\">\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"username\"\n              :label=\"t(`authConfig.${AUTH_TYPE}.username`)\"\n              :mode=\"mode\"\n              required\n            />\n          </div>\n          <div class=\"col span-6\">\n            <Password\n              v-model=\"password\"\n              :label=\"t(`authConfig.${AUTH_TYPE}.password`)\"\n              :mode=\"mode\"\n              required\n            />\n          </div>\n        </div>\n      </template>\n    </CruResource>\n  </div>\n</template>\n<style lang=\"scss\" scoped>\n  .banner {\n    display: block;\n\n    &::v-deep code {\n      padding: 0 3px;\n      margin: 0 3px;\n    }\n  }\n</style>\n"]}]}