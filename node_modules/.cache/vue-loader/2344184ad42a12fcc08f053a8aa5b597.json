{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/ResourceTable.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/ResourceTable.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ResourceTable.vue"],"names":[],"mappingsfile":"ResourceTable.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport { get } from '@shell/utils/object';\nimport { mapPref, GROUP_RESOURCES } from '@shell/store/prefs';\nimport ButtonGroup from '@shell/components/ButtonGroup';\nimport SortableTable from '@shell/components/SortableTable';\nimport { NAMESPACE, AGE } from '@shell/config/table-headers';\nimport { findBy } from '@shell/utils/array';\nimport { ExtensionPoint, TableColumnLocation } from '@shell/core/types';\nimport { getApplicableExtensionEnhancements } from '@shell/core/plugin-helpers';\n\n// Default group-by in the case the group stored in the preference does not apply\nconst DEFAULT_GROUP = 'namespace';\n\nexport const defaultTableSortGenerationFn = (schema, $store) => {\n  if ( !schema ) {\n    return null;\n  }\n\n  const resource = schema.id;\n  let sortKey = resource;\n\n  const inStore = $store.getters['currentStore'](resource);\n  const generation = $store.getters[`${ inStore }/currentGeneration`]?.(resource);\n\n  if ( generation ) {\n    sortKey += `/${ generation }`;\n  }\n\n  const nsFilterKey = $store.getters['activeNamespaceCacheKey'];\n\n  if ( nsFilterKey ) {\n    return `${ sortKey }/${ nsFilterKey }`;\n  }\n\n  // covers case where we have no current cluster's ns cache\n  return sortKey;\n};\n\nexport default {\n\n  name: 'ResourceTable',\n\n  components: { ButtonGroup, SortableTable },\n\n  props: {\n    schema: {\n      type:    Object,\n      default: null,\n    },\n\n    rows: {\n      type:     Array,\n      required: true\n    },\n\n    loading: {\n      type:     Boolean,\n      required: false\n    },\n\n    altLoading: {\n      type:     Boolean,\n      required: false\n    },\n\n    keyField: {\n      // Field that is unique for each row.\n      type:    String,\n      default: '_key',\n    },\n\n    headers: {\n      type:    Array,\n      default: null,\n    },\n\n    groupBy: {\n      type:    String,\n      default: null\n    },\n\n    namespaced: {\n      type:    Boolean,\n      default: null, // Automatic from schema\n    },\n\n    search: {\n      // Show search input to filter rows\n      type:    Boolean,\n      default: true\n    },\n\n    tableActions: {\n      // Show bulk table actions\n      type:    [Boolean, null],\n      default: null\n    },\n\n    pagingLabel: {\n      type:    String,\n      default: 'sortableTable.paging.resource',\n    },\n\n    /**\n     * Additional params to pass to the pagingLabel translation\n     */\n    pagingParams: {\n      type:    Object,\n      default: null,\n    },\n\n    rowActions: {\n      type:    Boolean,\n      default: true,\n    },\n\n    groupable: {\n      type:    Boolean,\n      default: null, // Null: auto based on namespaced and type custom groupings\n    },\n\n    groupTooltip: {\n      type:    String,\n      default: 'resourceTable.groupBy.namespace',\n    },\n\n    overflowX: {\n      type:    Boolean,\n      default: false\n    },\n    overflowY: {\n      type:    Boolean,\n      default: false\n    },\n    sortGenerationFn: {\n      type:    Function,\n      default: null,\n    },\n    getCustomDetailLink: {\n      type:    Function,\n      default: null\n    },\n\n    ignoreFilter: {\n      type:    Boolean,\n      default: false\n    },\n    hasAdvancedFiltering: {\n      type:    Boolean,\n      default: false\n    },\n    advFilterHideLabelsAsCols: {\n      type:    Boolean,\n      default: false\n    },\n    advFilterPreventFilteringLabels: {\n      type:    Boolean,\n      default: false\n    },\n    /**\n     * Allows for the usage of a query param to work for simple filtering (q)\n     */\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    },\n    /**\n     * Manaul force the update of live and delayed cells. Change this number to kick off the update\n     */\n    forceUpdateLiveAndDelayed: {\n      type:    Number,\n      default: 0\n    },\n\n    externalPaginationEnabled: {\n      type:    Boolean,\n      default: false\n    },\n\n    externalPaginationResult: {\n      type:    Object,\n      default: null\n    }\n  },\n\n  mounted() {\n    /**\n     * v-shortkey prevents the event's propagation:\n     * https://github.com/fgr-araujo/vue-shortkey/blob/55d802ea305cadcc2ea970b55a3b8b86c7b44c05/src/index.js#L156-L157\n     *\n     * 'Enter' key press is handled via event listener in order to allow the event propagation\n     */\n    window.addEventListener('keyup', this.handleEnterKeyPress);\n  },\n\n  beforeDestroy() {\n    window.removeEventListener('keyup', this.handleEnterKeyPress);\n  },\n\n  data() {\n    // Confirm which store we're in, if schema isn't available we're probably showing a list with different types\n    const inStore = this.schema?.id ? this.$store.getters['currentStore'](this.schema.id) : undefined;\n\n    return { inStore };\n  },\n\n  computed: {\n    options() {\n      return this.$store.getters[`type-map/optionsFor`](this.schema, this.externalPaginationEnabled);\n    },\n\n    _listGroupMapped() {\n      return this.options?.listGroups?.reduce((acc, grp) => {\n        acc[grp.value] = grp;\n\n        return acc;\n      }, {});\n    },\n\n    _mandatorySort() {\n      return this.options?.listMandatorySort;\n    },\n\n    ...mapGetters(['currentProduct']),\n\n    isNamespaced() {\n      if ( this.namespaced !== null ) {\n        return this.namespaced;\n      }\n\n      return !!get( this.schema, 'attributes.namespaced');\n    },\n\n    showNamespaceColumn() {\n      const groupNamespaces = this.group === 'namespace';\n      const out = !this.showGrouping || !groupNamespaces;\n\n      return out;\n    },\n\n    _showBulkActions() {\n      if (this.tableActions !== null) {\n        return this.tableActions;\n      } else if (this.schema) {\n        const hideTableActions = this.$store.getters['type-map/hideBulkActionsFor'](this.schema);\n\n        return !hideTableActions;\n      }\n\n      return false;\n    },\n\n    _headers() {\n      let headers;\n      const showNamespace = this.showNamespaceColumn;\n\n      if ( this.headers ) {\n        headers = this.headers.slice();\n      } else {\n        headers = this.$store.getters['type-map/headersFor'](this.schema, this.externalPaginationEnabled);\n      }\n\n      // add custom table columns provided by the extensions ExtensionPoint.TABLE_COL hook\n      // gate it so that we prevent errors on older versions of dashboard\n      if (this.$store.$plugin?.getUIConfig) {\n        const extensionCols = getApplicableExtensionEnhancements(this, ExtensionPoint.TABLE_COL, TableColumnLocation.RESOURCE, this.$route);\n\n        // Try and insert the columns before the Age column\n        let insertPosition = headers.length;\n\n        if (headers.length > 0) {\n          const ageColIndex = headers.findIndex((h) => h.name === AGE.name);\n\n          if (ageColIndex >= 0) {\n            insertPosition = ageColIndex;\n          } else {\n            // we've found some labels with ' ', which isn't necessarily empty (explore action/button)\n            // if we are to add cols, let's push them before these so that the UI doesn't look weird\n            const lastViableColIndex = headers.findIndex((h) => (!h.label || !h.label?.trim()) && (!h.labelKey || !h.labelKey?.trim()));\n\n            if (lastViableColIndex >= 0) {\n              insertPosition = lastViableColIndex;\n            }\n          }\n        }\n\n        // adding extension defined cols to the correct header config\n        extensionCols.forEach((col) => {\n          // we need the 'value' prop to be populated in order for the rows to show the values\n          if (!col.value && col.getValue) {\n            col.value = col.getValue;\n          }\n          headers.splice(insertPosition, 0, col);\n        });\n      }\n\n      // If only one namespace is selected, hide the namespace column\n      if ( !showNamespace ) {\n        const idx = headers.findIndex((header) => header.name === NAMESPACE.name);\n\n        if ( idx >= 0 ) {\n          headers.splice(idx, 1);\n        }\n      }\n\n      // If we are grouping by a custom group, it may specify that we hide a specific column\n      const custom = this._listGroupMapped?.[this.group];\n\n      if (custom?.hideColumn) {\n        const idx = headers.findIndex((header) => header.name === custom.hideColumn);\n\n        if ( idx >= 0 ) {\n          headers.splice(idx, 1);\n        }\n      }\n\n      return headers;\n    },\n\n    /**\n     * Take rows and filter out entries given the namespace filter\n     */\n    filteredRows() {\n      const isAll = this.$store.getters['isAllNamespaces'];\n\n      // Do we need to filter by namespace like things?\n      if (\n        !this.isNamespaced || // Resource type isn't namespaced\n        this.ignoreFilter || // Component owner strictly states no filtering\n        this.externalPaginationEnabled ||\n        (isAll && !this.currentProduct?.hideSystemResources) || // Need all\n        (this.inStore ? this.$store.getters[`${ this.inStore }/haveNamespace`](this.schema.id)?.length : false)// Store reports type has namespace filter, so rows already contain the correctly filtered resources\n      ) {\n        return this.rows || [];\n      }\n\n      const includedNamespaces = this.$store.getters['namespaces']();\n\n      // Shouldn't happen, but does for resources like management.cattle.io.preference\n      if (!this.rows) {\n        return [];\n      }\n\n      const haveAllNamespace = this.$store.getters['haveAllNamespace'];\n\n      return this.rows.filter((row) => {\n        if (this.currentProduct?.hideSystemResources && this.isNamespaced) {\n          return !!includedNamespaces[row.metadata.namespace] && !row.isSystemResource;\n        } else if (!this.isNamespaced) {\n          return true;\n        } else if (haveAllNamespace) {\n          // `rows` only contains resource from a single namespace\n          return true;\n        } else {\n          return !!includedNamespaces[row.metadata.namespace];\n        }\n      });\n    },\n\n    _group: mapPref(GROUP_RESOURCES),\n\n    // The group stored in the preference (above) might not be valid for this resource table - so ensure we\n    // choose a group that is applicable (the default)\n    // This saves us from having to store a group preference per resource type - given that custom groupings aer not used much\n    // and it feels like a good UX to be able to keep the namespace/flat grouping across tables\n    group: {\n      get() {\n        // Check group is valid\n        const exists = this.groupOptions.find((g) => g.value === this._group);\n\n        if (!exists) {\n          // Attempt to find the default option in available options...\n          // if not use the first value in the options collection...\n          // and if not that just fall back to the default\n          if (this.groupOptions.find((g) => g.value === DEFAULT_GROUP)) {\n            return DEFAULT_GROUP;\n          }\n\n          return this.groupOptions[0]?.value || DEFAULT_GROUP;\n        }\n\n        return this._group;\n      },\n      set(value) {\n        this._group = value;\n      }\n    },\n\n    showGrouping() {\n      if ( this.groupable === null ) {\n        const namespaceGroupable = this.$store.getters['isMultipleNamespaces'] && this.isNamespaced;\n        const customGroupable = !!this.options?.listGroups?.length;\n\n        return namespaceGroupable || customGroupable;\n      }\n\n      return this.groupable || false;\n    },\n\n    computedGroupBy() {\n      if ( this.groupBy ) {\n        // This probably comes from the type-map config for the resource (see ResourceList)\n        return this.groupBy;\n      }\n\n      if ( this.group === 'namespace' && this.showGrouping ) {\n        // This switches to group rows by a key which is the label for the group (??)\n        return 'groupByLabel';\n      }\n\n      const custom = this._listGroupMapped?.[this.group];\n\n      if (custom?.field) {\n        // Override the normal filtering\n        return custom.field;\n      }\n\n      return null;\n    },\n\n    groupOptions() {\n      // Ignore the defaults below, we have an override set of groups\n      // REPLACE (instead of SUPPLEMENT) defaults with listGroups (given listGroupsWillOverride is true)\n      if (this.options?.listGroupsWillOverride && !!this.options?.listGroups?.length) {\n        return this.options?.listGroups;\n      }\n\n      const standard = [\n        {\n          tooltipKey: 'resourceTable.groupBy.none',\n          icon:       'icon-list-flat',\n          value:      'none',\n        },\n        {\n          tooltipKey: this.groupTooltip,\n          icon:       'icon-folder',\n          value:      'namespace',\n        },\n      ];\n\n      // SUPPLEMENT (instead of REPLACE) defaults with listGroups (given listGroupsWillOverride is false)\n      if (!!this.options?.listGroups?.length) {\n        return standard.concat(this.options.listGroups);\n      }\n\n      return standard;\n    },\n\n    parsedPagingParams() {\n      if (this.pagingParams) {\n        return this.pagingParams;\n      }\n\n      if ( !this.schema ) {\n        return {\n          singularLabel: '',\n          pluralLabel:   ''\n        };\n      }\n\n      return {\n        singularLabel: this.$store.getters['type-map/labelFor'](this.schema),\n        pluralLabel:   this.$store.getters['type-map/labelFor'](this.schema, 99),\n      };\n    },\n\n  },\n\n  methods: {\n    keyAction(action) {\n      const table = this.$refs.table;\n\n      if ( !table ) {\n        return;\n      }\n\n      const selection = table.selectedRows;\n\n      if ( action === 'remove' ) {\n        const act = findBy(table.availableActions, 'action', 'promptRemove');\n\n        if ( act ) {\n          table.setBulkActionOfInterest(act);\n          table.applyTableAction(act);\n        }\n\n        return;\n      }\n\n      if ( selection.length !== 1 ) {\n        return;\n      }\n\n      switch ( action ) {\n      case 'detail':\n        selection[0].goToDetail();\n        break;\n      case 'edit':\n        selection[0].goToEdit();\n        break;\n      case 'yaml':\n        selection[0].goToViewYaml();\n        break;\n      }\n    },\n\n    clearSelection() {\n      this.$refs.table.clearSelection();\n    },\n\n    safeSortGenerationFn() {\n      if (this.sortGenerationFn) {\n        return this.sortGenerationFn(this.schema, this.$store);\n      }\n\n      return defaultTableSortGenerationFn(this.schema, this.$store);\n    },\n\n    handleActionButtonClick(event) {\n      this.$emit('clickedActionButton', event);\n    },\n\n    handleEnterKeyPress(event) {\n      if (event.key === 'Enter') {\n        this.keyAction('detail');\n      }\n    }\n  },\n};\n</script>\n\n<template>\n  <SortableTable\n    ref=\"table\"\n    v-bind=\"$attrs\"\n    :headers=\"_headers\"\n    :rows=\"filteredRows\"\n    :loading=\"loading\"\n    :alt-loading=\"altLoading\"\n    :group-by=\"computedGroupBy\"\n    :group=\"group\"\n    :group-options=\"groupOptions\"\n    :search=\"search\"\n    :paging=\"true\"\n    :paging-params=\"parsedPagingParams\"\n    :paging-label=\"pagingLabel\"\n    :row-actions=\"rowActions\"\n    :table-actions=\"_showBulkActions\"\n    :overflow-x=\"overflowX\"\n    :overflow-y=\"overflowY\"\n    :get-custom-detail-link=\"getCustomDetailLink\"\n    :has-advanced-filtering=\"hasAdvancedFiltering\"\n    :adv-filter-hide-labels-as-cols=\"advFilterHideLabelsAsCols\"\n    :adv-filter-prevent-filtering-labels=\"advFilterPreventFilteringLabels\"\n    :key-field=\"keyField\"\n    :sort-generation-fn=\"safeSortGenerationFn\"\n    :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n    :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n    :external-pagination-enabled=\"externalPaginationEnabled\"\n    :external-pagination-result=\"externalPaginationResult\"\n    :mandatory-sort=\"_mandatorySort\"\n    @clickedActionButton=\"handleActionButtonClick\"\n    @group-value-change=\"group = $event\"\n\n    v-on=\"$listeners\"\n  >\n    <template\n      v-if=\"showGrouping\"\n      #header-middle\n    >\n      <slot name=\"more-header-middle\" />\n\n      <ButtonGroup\n        v-model=\"group\"\n        :options=\"groupOptions\"\n      />\n    </template>\n\n    <template\n      v-if=\"showGrouping\"\n      #header-right\n    >\n      <slot name=\"header-right\" />\n    </template>\n\n    <template #group-by=\"{group: thisGroup}\">\n      <div\n        v-clean-html=\"thisGroup.ref\"\n        class=\"group-tab\"\n      />\n    </template>\n\n    <!-- Pass down templates provided by the caller -->\n    <template\n      v-for=\"(_, slot) of $scopedSlots\"\n      v-slot:[slot]=\"scope\"\n    >\n      <slot\n        :name=\"slot\"\n        v-bind=\"scope\"\n      />\n    </template>\n\n    <template #shortkeys>\n      <button\n        v-shortkey.once=\"['e']\"\n        class=\"hide\"\n        @shortkey=\"keyAction('edit')\"\n      />\n      <button\n        v-shortkey.once=\"['y']\"\n        class=\"hide\"\n        @shortkey=\"keyAction('yaml')\"\n      />\n      <button\n        v-if=\"_showBulkActions\"\n        v-shortkey.once=\"['del']\"\n        class=\"hide\"\n        @shortkey=\"keyAction('remove')\"\n      />\n      <button\n        v-if=\"_showBulkActions\"\n        v-shortkey.once=\"['backspace']\"\n        class=\"hide\"\n        @shortkey=\"keyAction('remove')\"\n      />\n    </template>\n  </SortableTable>\n</template>\n"]}]}