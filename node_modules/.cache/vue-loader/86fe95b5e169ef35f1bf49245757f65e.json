{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/auth/verify.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/auth/verify.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IEdJVEhVQl9DT0RFLCBHSVRIVUJfTk9OQ0UsIEJBQ0tfVE8gfSBmcm9tICdAc2hlbGwvY29uZmlnL3F1ZXJ5LXBhcmFtcyc7CmltcG9ydCB7IGdldCB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwppbXBvcnQgeyBiYXNlNjREZWNvZGUgfSBmcm9tICdAc2hlbGwvdXRpbHMvY3J5cHRvJzsKaW1wb3J0IGxvYWRQbHVnaW5zIGZyb20gJ0BzaGVsbC9wbHVnaW5zL3BsdWdpbic7Cgpjb25zdCBzYW1sUHJvdmlkZXJzID0gWydwaW5nJywgJ2FkZnMnLCAna2V5Y2xvYWsnLCAnb2t0YScsICdzaGliYm9sZXRoJ107CgpmdW5jdGlvbiByZXBseShlcnIsIGNvZGUpIHsKICB0cnkgewogICAgd2luZG93Lm9wZW5lci53aW5kb3cub25BdXRoVGVzdChlcnIsIGNvZGUpOwogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHdpbmRvdy5jbG9zZSgpOwogICAgfSwgMjUwKTsKICB9IGNhdGNoIChlKSB7CiAgICB3aW5kb3cuY2xvc2UoKTsKICB9Cn0KCmZ1bmN0aW9uIGlzU2FtbCgkcm91dGUpIHsKICBjb25zdCB7IHF1ZXJ5IH0gPSAkcm91dGU7CiAgY29uc3QgY29uZmlnUXVlcnkgPSBnZXQocXVlcnksICdjb25maWcnKTsKCiAgcmV0dXJuIHNhbWxQcm92aWRlcnMuaW5jbHVkZXMoY29uZmlnUXVlcnkpOwp9CgpleHBvcnQgZGVmYXVsdCB7CiAgYXN5bmMgZmV0Y2goeyBzdG9yZSwgcm91dGUsIHJlZGlyZWN0IH0pIHsKICAgIGNvbnN0IGNvZGUgPSByb3V0ZS5xdWVyeVtHSVRIVUJfQ09ERV07CiAgICBjb25zdCBzdGF0ZVN0ciA9IHJvdXRlLnF1ZXJ5W0dJVEhVQl9OT05DRV07CiAgICBjb25zdCB7CiAgICAgIGVycm9yLCBlcnJvcl9kZXNjcmlwdGlvbjogZXJyb3JEZXNjcmlwdGlvbiwgZXJyb3JDb2RlLCBlcnJvck1zZwogICAgfSA9IHJvdXRlLnF1ZXJ5OwoKICAgIGlmIChlcnJvciB8fCBlcnJvckRlc2NyaXB0aW9uIHx8IGVycm9yQ29kZSB8fCBlcnJvck1zZykgewogICAgICBsZXQgb3V0ID0gZXJyb3JEZXNjcmlwdGlvbiB8fCBlcnJvciB8fCBlcnJvckNvZGU7CgogICAgICBpZiAoZXJyb3JNc2cpIHsKICAgICAgICBvdXQgPSBzdG9yZS5nZXR0ZXJzWydpMThuL3dpdGhGYWxsYmFjayddKGBsb2dpbi5zZXJ2ZXJFcnJvci4keyBlcnJvck1zZyB9YCwgbnVsbCwgZXJyb3JNc2cpOwogICAgICB9CgogICAgICByZWRpcmVjdChgL2F1dGgvbG9naW4/ZXJyPSR7IGVzY2FwZShvdXQpIH1gKTsKCiAgICAgIHJldHVybjsKICAgIH0KICAgIGxldCBwYXJzZWQ7CgogICAgdHJ5IHsKICAgICAgcGFyc2VkID0gSlNPTi5wYXJzZShiYXNlNjREZWNvZGUoKHN0YXRlU3RyKSkpOwogICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgIGlmIChpc1NhbWwocm91dGUpKSB7CiAgICAgICAgLy8gVGhpcyBpcyBhbiBvayBmYWlsdXJlLiBTQU1MIGhhcyBubyBzdGF0ZSBzdHJpbmcgc28gYSBmYWlsdXJlIGlzIGZpbmUgKHNlZSBzaW1pbGFyIGNoZWNrIGluIG1vdW50ZWQpLgogICAgICAgIC8vIFRoaXMgd2hvbGUgZmlsZSBjb3VsZCBiZSByZS13cml0dGVuIHdpdGggdGhhdCBpbiBtaW5kLCBidXQgdGhpcyBjaGFuZ2Uga2VlcHMgdGhpbmdzIHNpbXBsZSBhbmQgZml4ZXMgYSBicmVha2luZyBhZGRpdGlvbgogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBjb25zdCBvdXQgPSBzdG9yZS5nZXR0ZXJzWydpMThuL3QnXShgbG9naW4uZXJyb3JgKTsKCiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBwYXJzZSBub25jZScsIHN0YXRlU3RyLCBlcnIpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGUKCiAgICAgIHJlZGlyZWN0KGAvYXV0aC9sb2dpbj9lcnI9JHsgZXNjYXBlKG91dCkgfWApOwoKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGNvbnN0IHsgdGVzdCwgcHJvdmlkZXIsIG5vbmNlIH0gPSBwYXJzZWQ7CgogICAgaWYgKHRlc3QpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRyeSB7CiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHN0b3JlLmRpc3BhdGNoKCdhdXRoL3ZlcmlmeU9BdXRoJywgewogICAgICAgIGNvZGUsCiAgICAgICAgbm9uY2UsCiAgICAgICAgcHJvdmlkZXIKICAgICAgfSk7CgogICAgICBpZiAoIHJlcy5fc3RhdHVzID09PSAyMDApIHsKICAgICAgICBjb25zdCBiYWNrVG8gPSByb3V0ZS5xdWVyeVtCQUNLX1RPXSB8fCAnLyc7CgogICAgICAgIC8vIExvYWQgcGx1Z2lucwogICAgICAgIGF3YWl0IGxvYWRQbHVnaW5zKHsKICAgICAgICAgIGFwcDogICAgIHN0b3JlLmFwcCwKICAgICAgICAgIHN0b3JlLAogICAgICAgICAgJHBsdWdpbjogc3RvcmUuJHBsdWdpbgogICAgICAgIH0pOwoKICAgICAgICByZWRpcmVjdChiYWNrVG8pOwogICAgICB9IGVsc2UgewogICAgICAgIHJlZGlyZWN0KGAvYXV0aC9sb2dpbj9lcnI9JHsgZXNjYXBlKHJlcykgfWApOwogICAgICB9CiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgcmVkaXJlY3QoYC9hdXRoL2xvZ2luP2Vycj0keyBlc2NhcGUoZXJyKSB9YCk7CiAgICB9CiAgfSwKCiAgZGF0YSgpIHsKICAgIGNvbnN0IHN0YXRlSlNPTiA9IHRoaXMuJHJvdXRlLnF1ZXJ5W0dJVEhVQl9OT05DRV0gfHwgJyc7CgogICAgbGV0IHBhcnNlZCA9IHt9OwoKICAgIHRyeSB7CiAgICAgIHBhcnNlZCA9IEpTT04ucGFyc2UoYmFzZTY0RGVjb2RlKHN0YXRlSlNPTikpOwogICAgfSBjYXRjaCB7CiAgICB9CgogICAgY29uc3QgeyB0ZXN0IH0gPSBwYXJzZWQ7CgogICAgcmV0dXJuIHsgdGVzdGluZzogdGVzdCB9OwogIH0sCgogIG1vdW50ZWQoKSB7CiAgICBpZiAoIHRoaXMudGVzdGluZyApIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCB7CiAgICAgICAgICBlcnJvcjogcmVzcEVycm9yLCBlcnJvcl9kZXNjcmlwdGlvbjogcmVzcEVycm9yRGVzY3JpcHRpb24sIFtHSVRIVUJfQ09ERV06IGNvZGUsIGVycm9yTXNnCiAgICAgICAgfSA9IHRoaXMuJHJvdXRlLnF1ZXJ5OwoKICAgICAgICBsZXQgZXJyb3IgPSByZXNwRXJyb3JEZXNjcmlwdGlvbiB8fCByZXNwRXJyb3IgfHwgKCFjb2RlID8gJ05vIGNvZGUgc3VwcGxpZWQgYnkgYXV0aCBwcm92aWRlcicgOiBudWxsKTsKCiAgICAgICAgaWYgKGVycm9yTXNnKSB7CiAgICAgICAgICBlcnJvciA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2kxOG4vd2l0aEZhbGxiYWNrJ10oYGxvZ2luLnNlcnZlckVycm9yLiR7IGVycm9yTXNnIH1gLCBudWxsLCBlcnJvck1zZyk7CiAgICAgICAgfQoKICAgICAgICByZXBseShlcnJvciwgY29kZSApOwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgd2luZG93LmNsb3NlKCk7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIGlmICggd2luZG93Lm9wZW5lciApIHsKICAgICAgICBpZiAoaXNTYW1sKHRoaXMuJHJvdXRlKSkgewogICAgICAgICAgaWYgKCB3aW5kb3cub3BlbmVyLndpbmRvdy5vbkF1dGhUZXN0ICkgewogICAgICAgICAgICByZXBseShudWxsLCBudWxsKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJlcGx5KHsgZXJyOiAnZmFpbHVyZScgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["verify.vue"],"names":[],"mappingsfile":"verify.vue","sourceRoot":"node_modules/@rancher/shell/pages/auth","sourcesContent":["<script>\nimport { GITHUB_CODE, GITHUB_NONCE, BACK_TO } from '@shell/config/query-params';\nimport { get } from '@shell/utils/object';\nimport { base64Decode } from '@shell/utils/crypto';\nimport loadPlugins from '@shell/plugins/plugin';\n\nconst samlProviders = ['ping', 'adfs', 'keycloak', 'okta', 'shibboleth'];\n\nfunction reply(err, code) {\n  try {\n    window.opener.window.onAuthTest(err, code);\n    setTimeout(() => {\n      window.close();\n    }, 250);\n  } catch (e) {\n    window.close();\n  }\n}\n\nfunction isSaml($route) {\n  const { query } = $route;\n  const configQuery = get(query, 'config');\n\n  return samlProviders.includes(configQuery);\n}\n\nexport default {\n  async fetch({ store, route, redirect }) {\n    const code = route.query[GITHUB_CODE];\n    const stateStr = route.query[GITHUB_NONCE];\n    const {\n      error, error_description: errorDescription, errorCode, errorMsg\n    } = route.query;\n\n    if (error || errorDescription || errorCode || errorMsg) {\n      let out = errorDescription || error || errorCode;\n\n      if (errorMsg) {\n        out = store.getters['i18n/withFallback'](`login.serverError.${ errorMsg }`, null, errorMsg);\n      }\n\n      redirect(`/auth/login?err=${ escape(out) }`);\n\n      return;\n    }\n    let parsed;\n\n    try {\n      parsed = JSON.parse(base64Decode((stateStr)));\n    } catch (err) {\n      if (isSaml(route)) {\n        // This is an ok failure. SAML has no state string so a failure is fine (see similar check in mounted).\n        // This whole file could be re-written with that in mind, but this change keeps things simple and fixes a breaking addition\n        return;\n      }\n      const out = store.getters['i18n/t'](`login.error`);\n\n      console.error('Failed to parse nonce', stateStr, err); // eslint-disable-line no-console\n\n      redirect(`/auth/login?err=${ escape(out) }`);\n\n      return;\n    }\n\n    const { test, provider, nonce } = parsed;\n\n    if (test) {\n      return;\n    }\n\n    try {\n      const res = await store.dispatch('auth/verifyOAuth', {\n        code,\n        nonce,\n        provider\n      });\n\n      if ( res._status === 200) {\n        const backTo = route.query[BACK_TO] || '/';\n\n        // Load plugins\n        await loadPlugins({\n          app:     store.app,\n          store,\n          $plugin: store.$plugin\n        });\n\n        redirect(backTo);\n      } else {\n        redirect(`/auth/login?err=${ escape(res) }`);\n      }\n    } catch (err) {\n      redirect(`/auth/login?err=${ escape(err) }`);\n    }\n  },\n\n  data() {\n    const stateJSON = this.$route.query[GITHUB_NONCE] || '';\n\n    let parsed = {};\n\n    try {\n      parsed = JSON.parse(base64Decode(stateJSON));\n    } catch {\n    }\n\n    const { test } = parsed;\n\n    return { testing: test };\n  },\n\n  mounted() {\n    if ( this.testing ) {\n      try {\n        const {\n          error: respError, error_description: respErrorDescription, [GITHUB_CODE]: code, errorMsg\n        } = this.$route.query;\n\n        let error = respErrorDescription || respError || (!code ? 'No code supplied by auth provider' : null);\n\n        if (errorMsg) {\n          error = this.$store.getters['i18n/withFallback'](`login.serverError.${ errorMsg }`, null, errorMsg);\n        }\n\n        reply(error, code );\n      } catch (e) {\n        window.close();\n      }\n    } else {\n      if ( window.opener ) {\n        if (isSaml(this.$route)) {\n          if ( window.opener.window.onAuthTest ) {\n            reply(null, null);\n          } else {\n            reply({ err: 'failure' });\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <main class=\"main-layout\">\n    <h1 class=\"text-center mt-50\">\n      <span v-if=\"testing\">\n        Testing Configuration&hellip;\n      </span>\n      <span v-else>\n        Logging In&hellip;\n      </span>\n    </h1>\n  </main>\n</template>\n"]}]}