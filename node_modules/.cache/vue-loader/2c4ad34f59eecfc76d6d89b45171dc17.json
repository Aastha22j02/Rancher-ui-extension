{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/configmap.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/edit/configmap.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDcmVhdGVFZGl0VmlldyBmcm9tICdAc2hlbGwvbWl4aW5zL2NyZWF0ZS1lZGl0LXZpZXcnOwppbXBvcnQgQ3J1UmVzb3VyY2UgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvQ3J1UmVzb3VyY2UnOwppbXBvcnQgTmFtZU5zRGVzY3JpcHRpb24gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9OYW1lTnNEZXNjcmlwdGlvbic7CmltcG9ydCBLZXlWYWx1ZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0tleVZhbHVlJzsKaW1wb3J0IExhYmVscyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0xhYmVscyc7CmltcG9ydCBUYWIgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvVGFiYmVkL1RhYic7CmltcG9ydCBUYWJiZWQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvVGFiYmVkJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ3J1Q29uZmlnTWFwJywKCiAgY29tcG9uZW50czogewogICAgQ3J1UmVzb3VyY2UsCiAgICBOYW1lTnNEZXNjcmlwdGlvbiwKICAgIEtleVZhbHVlLAogICAgTGFiZWxzLAogICAgVGFiLAogICAgVGFiYmVkCiAgfSwKCiAgbWl4aW5zOiBbQ3JlYXRlRWRpdFZpZXddLAogIGRhdGEoKSB7CiAgICBjb25zdCB7IGJpbmFyeURhdGEgPSB7fSwgZGF0YSA9IHt9IH0gPSB0aGlzLnZhbHVlOwoKICAgIHJldHVybiB7CiAgICAgIGRhdGEsCiAgICAgIGJpbmFyeURhdGEKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgaGFzQmluYXJ5RGF0YSgpIHsKICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuYmluYXJ5RGF0YSkubGVuZ3RoID4gMDsKICAgIH0sCiAgICAvKioKICAgICAqIEtlZXAgYWxsIG5ld2xpbmVzIGZyb20gZW5kLCBzZWU6IGh0dHBzOi8veWFtbC1tdWx0aWxpbmUuaW5mbwogICAgICogQXBwbHkgdG8gJ2RhdGEnIGZpZWxkCiAgICAgKi8KICAgIHlhbWxNb2RpZmllcnMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgZGF0YTogT2JqZWN0LmtleXModGhpcy5kYXRhKS5yZWR1Y2UoKGFjYywga2V5KSA9PiAoewogICAgICAgICAgLi4uYWNjLAogICAgICAgICAgbGluZVdpZHRoOiAtMSwKICAgICAgICAgIFtrZXldOiAgICAgeyBjaG9tcGluZzogJysnIH0sCiAgICAgICAgfSksIHt9KSwKICAgICAgfTsKICAgIH0sCgogICAgdmFsaWRhdGlvblBhc3NlZCgpIHsKICAgICAgcmV0dXJuICEhdGhpcy52YWx1ZS5uYW1lOwogICAgfSwKICB9LAoKICB3YXRjaDogewogICAgZGF0YShuZXUpIHsKICAgICAgdGhpcy51cGRhdGVWYWx1ZShuZXUsICdkYXRhJyk7CiAgICB9LAogICAgYmluYXJ5RGF0YShuZXUpIHsKICAgICAgdGhpcy51cGRhdGVWYWx1ZShuZXUsICdiaW5hcnlEYXRhJyk7CiAgICB9LAogIH0sCgogIG1ldGhvZHM6IHsKICAgIGFzeW5jIHNhdmVDb25maWdNYXAoKSB7CiAgICAgIGNvbnN0IHlhbWwgPSB0aGlzLiRyZWZzLmNydS5jcmVhdGVSZXNvdXJjZVlhbWwodGhpcy55YW1sTW9kaWZpZXJzKTsKCiAgICAgIGF3YWl0IHRoaXMudmFsdWUuc2F2ZVlhbWwoeWFtbCk7CiAgICAgIHRoaXMuZG9uZSgpOwogICAgfSwKCiAgICB1cGRhdGVWYWx1ZSh2YWwsIHR5cGUpIHsKICAgICAgdGhpcy4kc2V0KHRoaXMudmFsdWUsIHR5cGUsIHt9KTsKCiAgICAgIE9iamVjdC5rZXlzKHZhbCkuZm9yRWFjaCgoa2V5KSA9PiB7CiAgICAgICAgdGhpcy4kc2V0KHRoaXMudmFsdWVbdHlwZV0sIGtleSwgdmFsW2tleV0pOwogICAgICB9KTsKICAgIH0sCiAgfQp9Owo="},{"version":3,"sources":["configmap.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"configmap.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport CruResource from '@shell/components/CruResource';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport KeyValue from '@shell/components/form/KeyValue';\nimport Labels from '@shell/components/form/Labels';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport Tabbed from '@shell/components/Tabbed';\n\nexport default {\n  name: 'CruConfigMap',\n\n  components: {\n    CruResource,\n    NameNsDescription,\n    KeyValue,\n    Labels,\n    Tab,\n    Tabbed\n  },\n\n  mixins: [CreateEditView],\n  data() {\n    const { binaryData = {}, data = {} } = this.value;\n\n    return {\n      data,\n      binaryData\n    };\n  },\n  computed: {\n    hasBinaryData() {\n      return Object.keys(this.binaryData).length > 0;\n    },\n    /**\n     * Keep all newlines from end, see: https://yaml-multiline.info\n     * Apply to 'data' field\n     */\n    yamlModifiers() {\n      return {\n        data: Object.keys(this.data).reduce((acc, key) => ({\n          ...acc,\n          lineWidth: -1,\n          [key]:     { chomping: '+' },\n        }), {}),\n      };\n    },\n\n    validationPassed() {\n      return !!this.value.name;\n    },\n  },\n\n  watch: {\n    data(neu) {\n      this.updateValue(neu, 'data');\n    },\n    binaryData(neu) {\n      this.updateValue(neu, 'binaryData');\n    },\n  },\n\n  methods: {\n    async saveConfigMap() {\n      const yaml = this.$refs.cru.createResourceYaml(this.yamlModifiers);\n\n      await this.value.saveYaml(yaml);\n      this.done();\n    },\n\n    updateValue(val, type) {\n      this.$set(this.value, type, {});\n\n      Object.keys(val).forEach((key) => {\n        this.$set(this.value[type], key, val[key]);\n      });\n    },\n  }\n};\n</script>\n\n<template>\n  <CruResource\n    ref=\"cru\"\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"validationPassed\"\n    :yaml-modifiers=\"yamlModifiers\"\n    :errors=\"errors\"\n    @error=\"e=>errors = e\"\n    @finish=\"saveConfigMap\"\n    @cancel=\"done\"\n  >\n    <NameNsDescription\n      :value=\"value\"\n      :mode=\"mode\"\n      :register-before-hook=\"registerBeforeHook\"\n    />\n\n    <Tabbed :side-tabs=\"true\">\n      <Tab\n        name=\"data\"\n        :label=\"t('configmap.tabs.data.label')\"\n        :weight=\"2\"\n      >\n        <KeyValue\n          key=\"data\"\n          v-model=\"data\"\n          :mode=\"mode\"\n          :protip=\"t('configmap.tabs.data.protip')\"\n          :initial-empty-row=\"true\"\n          :value-can-be-empty=\"true\"\n          :value-trim=\"false\"\n          :value-markdown-multiline=\"true\"\n          :read-multiple=\"true\"\n          :read-accept=\"'*'\"\n        />\n      </Tab>\n      <Tab\n        name=\"binary-data\"\n        :label=\"t('configmap.tabs.binaryData.label')\"\n        :weight=\"1\"\n      >\n        <KeyValue\n          key=\"binaryData\"\n          v-model=\"binaryData\"\n          :initial-empty-row=\"true\"\n          :handle-base64=\"true\"\n          :add-allowed=\"true\"\n          :read-allowed=\"true\"\n          :mode=\"mode\"\n          :protip=\"t('configmap.tabs.data.protip')\"\n        />\n      </Tab>\n      <Tab\n        name=\"labels-and-annotations\"\n        label-key=\"generic.labelsAndAnnotations\"\n        :weight=\"-1\"\n      >\n        <Labels\n          default-container-class=\"labels-and-annotations-container\"\n          :value=\"value\"\n          :mode=\"mode\"\n          :display-side-by-side=\"false\"\n        />\n      </Tab>\n    </Tabbed>\n  </CruResource>\n</template>\n\n<style lang=\"scss\" scoped>\n.no-binary-data {\n  opacity: 0.8;\n}\n</style>\n"]}]}