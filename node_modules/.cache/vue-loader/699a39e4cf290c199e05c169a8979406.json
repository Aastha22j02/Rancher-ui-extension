{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/nav/WindowManager/ContainerLogs.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/nav/WindowManager/ContainerLogs.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ContainerLogs.vue"],"names":[],"mappingsfile":"ContainerLogs.vue","sourceRoot":"node_modules/@rancher/shell/components/nav/WindowManager","sourcesContent":["<script>\nimport { saveAs } from 'file-saver';\nimport AnsiUp from 'ansi_up';\nimport { addParams } from '@shell/utils/url';\nimport { base64DecodeToBuffer } from '@shell/utils/crypto';\nimport { LOGS_RANGE, LOGS_TIME, LOGS_WRAP } from '@shell/store/prefs';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport Select from '@shell/components/form/Select';\nimport VirtualList from 'vue-virtual-scroll-list';\nimport LogItem from '@shell/components/LogItem';\n\nimport { escapeRegex } from '@shell/utils/string';\nimport { HARVESTER_NAME as VIRTUAL } from '@shell/config/features';\n\nimport Socket, {\n  EVENT_CONNECTED,\n  EVENT_DISCONNECTED,\n  EVENT_MESSAGE,\n  //  EVENT_FRAME_TIMEOUT,\n  EVENT_CONNECT_ERROR\n} from '@shell/utils/socket';\nimport Window from './Window';\n\nlet lastId = 1;\nconst ansiup = new AnsiUp();\n// Convert arrayBuffer(Uint8Array) to string\n// ref: https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder\n// ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/of\nconst ab2str = (input, outputEncoding = 'utf8') => {\n  const decoder = new TextDecoder(outputEncoding);\n\n  return decoder.decode(input);\n};\n\n// The utf-8 encoded messages pushed by websocket may truncate multi-byte utf-8 characters,\n// which causes the front-end to be unable to parse the truncated multi-byte utf-8 characters in the previous and next messages when decoding.\n// Therefore, we need to determine whether the last 4 bytes of the current pushed message contain incomplete utf-8 encoded characters.\n// ref: https://en.wikipedia.org/wiki/UTF-8#Encoding\nconst isLogTruncated = (uint8ArrayBuffer) => {\n  const len = uint8ArrayBuffer.length;\n  const count = Math.min(4, len);\n  let isTruncated = false;\n\n  // Parses the last ${count} bytes of the array to determine if there are any truncated utf-8 characters.\n  for ( let i = 0; i < count; i++ ) {\n    const a = uint8ArrayBuffer[len - (1 + i)];\n\n    // 1 byte utf-8 character in binary form: 0xxxxxxxxx\n    if ((a & 0b10000000) === 0b00000000) {\n      break;\n    }\n    // Multi-byte utf-8 character, intermediate binary form: 10xxxxxx\n    if ((a & 0b11000000) === 0b10000000) {\n      continue;\n    }\n    // 2 byte utf-8 character in binary form: 110xxxxx 10xxxxxx\n    if ((a & 0b11100000) === 0b11000000) {\n      if ( i !== 1) {\n        isTruncated = true;\n      }\n      break;\n    }\n    // 3 byte utf-8 character in binary form: 1110xxxx 10xxxxxx 10xxxxxx\n    if ((a & 0b11110000) === 0b11100000) {\n      if (i !== 2) {\n        isTruncated = true;\n      }\n      break;\n    }\n    // 4 byte utf-8 character in binary form: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n    if ((a & 0b11111000) === 0b11110000) {\n      if (i !== 3) {\n        isTruncated = true;\n      }\n      break;\n    }\n  }\n\n  return isTruncated;\n};\n\nexport default {\n  components: {\n    Window,\n    Select,\n    LabeledSelect,\n    Checkbox,\n    AsyncButton,\n    VirtualList,\n  },\n\n  props: {\n    // The definition of the tab itself\n    tab: {\n      type:     Object,\n      required: true,\n    },\n\n    // Is this tab currently displayed\n    active: {\n      type:     Boolean,\n      required: true,\n    },\n\n    // The height of the window\n    height: {\n      type:     Number,\n      required: true,\n    },\n\n    // The pod to connect to\n    pod: {\n      type:     Object,\n      required: true,\n    },\n\n    url: {\n      type:    String,\n      default: null,\n    },\n\n    // The container in the pod to initially show\n    initialContainer: {\n      type:    String,\n      default: null,\n    }\n  },\n\n  data() {\n    return {\n      container:   this.initialContainer || this.pod?.defaultContainerName,\n      socket:      null,\n      isOpen:      false,\n      isFollowing: true,\n      timestamps:  this.$store.getters['prefs/get'](LOGS_TIME),\n      wrap:        this.$store.getters['prefs/get'](LOGS_WRAP),\n      previous:    false,\n      search:      '',\n      backlog:     [],\n      lines:       [],\n      now:         new Date(),\n      logItem:     LogItem\n    };\n  },\n\n  fetch() {\n    // See https://github.com/rancher/dashboard/issues/6122. At some point prior to 2.6.5 LOGS_RANGE has become polluted with something\n    // invalid. To avoid everyone having to manually remove invalid user preferences fix it automatically here\n    const originalRange = this.$store.getters['prefs/get'](LOGS_RANGE);\n\n    this.range = originalRange.value || originalRange;\n\n    if (originalRange !== this.range) { // Rancher was broken, so persist the fix\n      this.$store.dispatch('prefs/set', { key: LOGS_RANGE, value: this.range });\n    }\n  },\n\n  computed: {\n    containerChoices() {\n      const isHarvester = this.$store.getters['currentProduct'].inStore === VIRTUAL;\n\n      const containers = (this.pod?.spec?.containers || []).map((x) => x.name);\n      const initContainers = (this.pod?.spec?.initContainers || []).map((x) => x.name);\n\n      return isHarvester ? [] : [...containers, ...initContainers];\n    },\n\n    rangeOptions() {\n      const out = [];\n      const t = this.$store.getters['i18n/t'];\n\n      const current = this.range;\n      let found = false;\n      let value;\n      const lines = [1000, 10000, 100000];\n      const minutes = [1, 15, 30];\n      const hours = [1, 12, 24];\n\n      for ( const x of lines ) {\n        value = `${ x } lines`;\n        out.push({\n          label: t('wm.containerLogs.range.lines', { value: x }),\n          value,\n        });\n        updateFound(value);\n      }\n\n      for ( const x of minutes ) {\n        value = `${ x } minutes`;\n        out.push({\n          label: t('wm.containerLogs.range.minutes', { value: x }),\n          value\n        });\n        updateFound(value);\n      }\n\n      for ( const x of hours ) {\n        value = `${ x } hours`;\n        out.push({\n          label: t('wm.containerLogs.range.hours', { value: x }),\n          value,\n        });\n        updateFound(value);\n      }\n\n      out.push({\n        label: t('wm.containerLogs.range.all'),\n        value: 'all'\n      });\n      updateFound('all');\n\n      if ( !found && current ) {\n        out.push({\n          label: current,\n          value: current,\n        });\n      }\n\n      return out;\n\n      function updateFound(entry) {\n        entry = entry.replace(/[, ]/g, '').replace(/s$/, '');\n        const normalized = current.replace(/[, ]/g, '').replace(/s$/, '');\n\n        if ( entry === normalized) {\n          found = true;\n        }\n      }\n    },\n\n    filtered() {\n      if ( !this.search ) {\n        return this.lines;\n      }\n\n      const re = new RegExp(escapeRegex(this.search), 'img');\n      const out = [];\n\n      for ( const line of this.lines ) {\n        let msg = line.rawMsg;\n        const matches = msg.match(re);\n\n        if ( !matches ) {\n          continue;\n        }\n\n        const parts = msg.split(re);\n\n        msg = '';\n        while ( parts.length || matches.length ) {\n          if ( parts.length ) {\n            msg += ansiup.ansi_to_html(parts.shift()); // This also escapes\n          }\n\n          if ( matches.length ) {\n            msg += `<span class=\"highlight\">${ ansiup.ansi_to_html(matches.shift()) }</span>`;\n          }\n        }\n\n        out.push({\n          id:   line.id,\n          time: line.time,\n          msg,\n        });\n      }\n\n      return out;\n    }\n  },\n\n  watch: {\n    container() {\n      this.connect();\n    },\n\n  },\n\n  beforeDestroy() {\n    this.cleanup();\n  },\n\n  async mounted() {\n    await this.connect();\n    this.boundFlush = this.flush.bind(this);\n    this.timerFlush = setInterval(this.boundFlush, 100);\n  },\n\n  methods: {\n    async connect() {\n      if ( this.socket ) {\n        await this.socket.disconnect();\n        this.socket = null;\n        this.lines = [];\n      }\n\n      let params = {\n        previous:   this.previous,\n        follow:     true,\n        timestamps: true,\n        pretty:     true,\n      };\n\n      if ( this.container ) {\n        params.container = this.container;\n      }\n\n      const rangeParams = this.parseRange(this.range);\n\n      params = { ...params, ...rangeParams };\n\n      let url = this.url || `${ this.pod.links.view }/log`;\n\n      url = addParams(url.replace(/^http/, 'ws'), params);\n\n      this.socket = new Socket(url, false, 0, 'base64.binary.k8s.io');\n      this.socket.addEventListener(EVENT_CONNECTED, (e) => {\n        this.isOpen = true;\n      });\n\n      this.socket.addEventListener(EVENT_DISCONNECTED, (e) => {\n        this.isOpen = false;\n      });\n\n      this.socket.addEventListener(EVENT_CONNECT_ERROR, (e) => {\n        this.isOpen = false;\n        console.error('Connect Error', e); // eslint-disable-line no-console\n      });\n\n      let logBuffer = [];\n      let truncatedLog = '';\n\n      this.socket.addEventListener(EVENT_MESSAGE, (e) => {\n        const decodedData = e.detail?.data || '';\n        const replacedData = decodedData.replace(/[-_]/g, (char) => char === '-' ? '+' : '/');\n        const b = base64DecodeToBuffer(replacedData);\n        const isTruncated = isLogTruncated(b);\n\n        if (isTruncated === true) {\n          logBuffer.push(...b);\n\n          return;\n        }\n\n        let d;\n\n        // If the logBuffer is not empty,\n        // there are truncated utf-8 characters in the previous message\n        // that need to be merged with the current message before decoding.\n        if (logBuffer.length > 0) {\n          // Convert arrayBuffer(Uint8Array) to string\n          // ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/of\n          d = ab2str(Uint8Array.of(...logBuffer, ...b));\n          logBuffer = [];\n        } else {\n          d = b.toString();\n        }\n        let data = d;\n\n        if (truncatedLog) {\n          data = `${ truncatedLog }${ d }`;\n          truncatedLog = '';\n        }\n\n        if (!d.endsWith('\\n')) {\n          const lines = data.split(/\\n/);\n\n          if (lines.length === 1) {\n            truncatedLog = data;\n\n            return;\n          }\n          data = lines.slice(0, -1).join('\\n');\n          truncatedLog = lines.slice(-1);\n        }\n        // Websocket message may contain multiple lines - loop through each line, one by one\n        data.split('\\n').filter((line) => line).forEach((line) => {\n          let msg = line;\n          let time = null;\n\n          const idx = line.indexOf(' ');\n\n          if ( idx > 0 ) {\n            const timeStr = line.substr(0, idx);\n            const date = new Date(timeStr);\n\n            if ( !isNaN(date.getSeconds()) ) {\n              time = date.toISOString();\n              msg = line.substr(idx + 1);\n            }\n          }\n\n          const parsedLine = {\n            id:     lastId++,\n            msg:    ansiup.ansi_to_html(msg),\n            rawMsg: msg,\n            time,\n          };\n\n          Object.freeze(parsedLine);\n\n          this.backlog.push(parsedLine);\n        });\n      });\n\n      this.socket.connect();\n    },\n\n    flush() {\n      if ( this.backlog.length ) {\n        this.lines.push(...this.backlog);\n        this.backlog = [];\n        const maxLines = this.parseRange(this.range)?.tailLines;\n\n        if (maxLines && this.lines.length > maxLines) {\n          this.lines = this.lines.slice(-maxLines);\n        }\n      }\n\n      if ( this.isFollowing ) {\n        this.$nextTick(() => {\n          this.follow();\n        });\n      }\n    },\n\n    updateFollowing() {\n      const virtualList = this.$refs.virtualList;\n\n      if (virtualList) {\n        this.isFollowing = virtualList.getScrollSize() - virtualList.getClientSize() === virtualList.getOffset();\n      }\n    },\n\n    parseRange(range) {\n      range = `${ range }`.trim().toLowerCase();\n      const match = range.match(/^(\\d+)?\\s*(.*?)s?$/);\n\n      const out = {};\n\n      if ( match ) {\n        const count = parseInt(match[1], 10) || 1;\n        const unit = match[2];\n\n        switch ( unit ) {\n        case 'all':\n          break;\n        case 'line':\n          out.tailLines = count;\n          break;\n        case 'second':\n          out.sinceSeconds = count;\n          break;\n        case 'minute':\n          out.sinceSeconds = count * 60;\n          break;\n        case 'hour':\n          out.sinceSeconds = count * 60 * 60;\n          break;\n        case 'day':\n          out.sinceSeconds = count * 60 * 60 * 24;\n          break;\n        }\n      } else {\n        out.tailLines = 100;\n      }\n\n      return out;\n    },\n\n    clear() {\n      this.lines = [];\n    },\n\n    async download(btnCb) {\n      let url = this.url || `${ this.pod.links.view }/log`;\n\n      if ( this.container ) {\n        url = addParams(url, { container: this.container });\n      }\n\n      url = addParams(url, {\n        previous:   this.previous,\n        pretty:     true,\n        limitBytes: 750 * 1024 * 1024,\n      });\n\n      try {\n        const inStore = this.$store.getters['currentStore']();\n        const res = await this.$store.dispatch(`${ inStore }/request`, { url, responseType: 'blob' });\n        // const blob = new Blob([res], { type: 'text/plain;charset=utf-8' });\n        const fileName = `${ this.pod.nameDisplay }_${ this.container }.log`;\n\n        saveAs(res.data, fileName);\n        btnCb(true);\n      } catch (e) {\n        btnCb(false);\n      }\n    },\n\n    follow() {\n      const virtualList = this.$refs.virtualList;\n\n      if (virtualList) {\n        virtualList.$el.scrollTop = virtualList.getScrollSize();\n      }\n    },\n\n    toggleWrap(on) {\n      this.wrap = on;\n      this.$store.dispatch('prefs/set', { key: LOGS_WRAP, value: this.wrap });\n    },\n\n    togglePrevious(on) {\n      this.previous = on;\n      // Intentionally not saved as a pref\n      this.connect();\n    },\n\n    toggleTimestamps(on) {\n      this.timestamps = on;\n      this.$store.dispatch('prefs/set', { key: LOGS_TIME, value: this.timestamps });\n    },\n\n    toggleRange(range) {\n      this.range = range;\n      this.$store.dispatch('prefs/set', { key: LOGS_RANGE, value: this.range });\n      this.connect();\n    },\n\n    cleanup() {\n      if ( this.socket ) {\n        this.socket.disconnect();\n        this.socket = null;\n      }\n      clearInterval(this.timerFlush);\n    },\n  },\n};\n</script>\n\n<template>\n  <Window\n    :active=\"active\"\n    :before-close=\"cleanup\"\n  >\n    <template #title>\n      <div class=\"wm-button-bar\">\n        <Select\n          v-if=\"containerChoices.length > 0\"\n          v-model=\"container\"\n          :disabled=\"containerChoices.length === 1\"\n          class=\"containerPicker\"\n          :options=\"containerChoices\"\n          :clearable=\"false\"\n          placement=\"top\"\n        >\n          <template #selected-option=\"option\">\n            <t\n              v-if=\"option\"\n              k=\"wm.containerLogs.containerName\"\n              :label=\"option.label\"\n            />\n          </template>\n        </Select>\n        <div class=\"log-action log-action-group ml-5\">\n          <button\n            class=\"btn bg-primary wm-btn\"\n            :disabled=\"isFollowing\"\n            @click=\"follow\"\n          >\n            <t\n              class=\"wm-btn-large\"\n              k=\"wm.containerLogs.follow\"\n            />\n            <i class=\"wm-btn-small icon icon-chevron-end\" />\n          </button>\n          <button\n            class=\"btn bg-primary wm-btn\"\n            @click=\"clear\"\n          >\n            <t\n              class=\"wm-btn-large\"\n              k=\"wm.containerLogs.clear\"\n            />\n            <i class=\"wm-btn-small icon icon-close\" />\n          </button>\n          <AsyncButton\n            mode=\"download\"\n            @click=\"download\"\n          />\n        </div>\n\n        <div class=\"wm-seperator\" />\n\n        <div class=\"log-action log-previous ml-5\">\n          <div>\n            <Checkbox\n              :label=\"t('wm.containerLogs.previous')\"\n              :value=\"previous\"\n              @input=\"togglePrevious\"\n            />\n          </div>\n        </div>\n\n        <div class=\"log-action log-action-group ml-5\">\n          <v-popover\n            trigger=\"click\"\n            placement=\"top\"\n          >\n            <button class=\"btn bg-primary btn-cog\">\n              <i class=\"icon icon-gear\" />\n              <i class=\"icon icon-chevron-up\" />\n            </button>\n\n            <template slot=\"popover\">\n              <div class=\"filter-popup\">\n                <LabeledSelect\n                  v-model=\"range\"\n                  class=\"range\"\n                  :label=\"t('wm.containerLogs.range.label')\"\n                  :options=\"rangeOptions\"\n                  :clearable=\"false\"\n                  placement=\"top\"\n                  @input=\"toggleRange($event)\"\n                />\n                <div>\n                  <Checkbox\n                    :label=\"t('wm.containerLogs.wrap')\"\n                    :value=\"wrap\"\n                    @input=\"toggleWrap \"\n                  />\n                </div>\n                <div>\n                  <Checkbox\n                    :label=\"t('wm.containerLogs.timestamps')\"\n                    :value=\"timestamps\"\n                    @input=\"toggleTimestamps\"\n                  />\n                </div>\n              </div>\n            </template>\n          </v-popover>\n        </div>\n\n        <div class=\"log-action log-action-group ml-5\">\n          <input\n            v-model=\"search\"\n            class=\"input-sm\"\n            type=\"search\"\n            :placeholder=\"t('wm.containerLogs.search')\"\n          >\n        </div>\n\n        <div class=\"status log-action p-10\">\n          <t\n            :class=\"{'text-success': isOpen, 'text-error': !isOpen}\"\n            :k=\"isOpen ? 'wm.connection.connected' : 'wm.connection.disconnected'\"\n          />\n        </div>\n      </div>\n    </template>\n    <template #body>\n      <div\n        ref=\"body\"\n        :class=\"{'logs-container': true, 'open': isOpen, 'closed': !isOpen, 'show-times': timestamps && filtered.length, 'wrap-lines': wrap}\"\n      >\n        <VirtualList\n          v-show=\"filtered.length\"\n          ref=\"virtualList\"\n          data-key=\"id\"\n          :data-sources=\"filtered\"\n          :data-component=\"logItem\"\n          direction=\"vertical\"\n          class=\"virtual-list\"\n          :keeps=\"200\"\n          @scroll=\"updateFollowing\"\n        />\n        <template v-if=\"!filtered.length\">\n          <div v-if=\"search\">\n            <span class=\"msg text-muted\">{{ t('wm.containerLogs.noMatch') }}</span>\n          </div>\n          <div v-else>\n            <span class=\"msg text-muted\">{{ t('wm.containerLogs.noData') }}</span>\n          </div>\n        </template>\n      </div>\n    </template>\n  </Window>\n</template>\n\n<style lang=\"scss\" scoped>\n  .wm-button-bar {\n    display: flex;\n\n    .wm-seperator {\n      flex: 1;\n    }\n\n    .wm-btn-small {\n      display: none;\n      margin: 0;\n    }\n  }\n\n  .logs-container{\n    height: 100%;\n    overflow: auto;\n    padding: 5px;\n    background-color: var(--logs-bg);\n    font-family: Menlo,Consolas,monospace;\n    color: var(--logs-text);\n\n    .closed {\n      opacity: 0.25;\n    }\n\n    &.wrap-lines ::v-deep .msg {\n      white-space: pre-wrap;\n    }\n\n    &.show-times ::v-deep .time {\n      display: initial;\n      width: auto;\n    }\n\n  }\n\n  .containerPicker {\n    ::v-deep &.unlabeled-select {\n      display: inline-block;\n      min-width: 200px;\n      height: 30px;\n      min-height: 30px;\n      width: initial;\n    }\n  }\n\n  .log-action {\n    button {\n      border: 0 !important;\n      min-height: 30px;\n      line-height: 30px;\n    }\n\n    > input {\n      height: 30px;\n    }\n\n    .btn-cog {\n      padding: 0 5px;\n      > i {\n        margin: 0;\n      }\n    }\n  }\n\n  .log-action-group {\n    display: flex;\n    gap: 3px;\n\n    .input-sm {\n      min-width: 180px;\n    }\n  }\n\n  .log-previous {\n    align-items: center;\n    display: flex;\n    min-width: 175px;\n    height: 30px;\n    text-overflow : ellipsis;\n    overflow      : hidden;\n    white-space   : nowrap;\n  }\n\n  .status {\n    align-items: center;\n    display: flex;\n    justify-content: flex-end;\n    min-width: 105px;\n    height: 30px;\n  }\n\n  .filter-popup {\n    > * {\n      margin-bottom: 10px;\n    }\n  }\n\n  .virtual-list {\n    overflow-y: auto;\n    height:100%;\n  }\n\n  @media only screen and (max-width: 1060px) {\n    .wm-button-bar {\n      .wm-btn {\n        padding: 0 10px;\n\n        .wm-btn-large {\n          display: none;\n        }\n\n        .wm-btn-small {\n          display: inline;\n          margin: 0;\n        }\n      }\n    }\n  }\n</style>\n"]}]}