{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/tabs/Basics.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/tabs/Basics.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Basics.vue"],"names":[],"mappingsfile":"Basics.vue","sourceRoot":"node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/tabs","sourcesContent":["<script>\nimport difference from 'lodash/difference';\nimport { mapGetters } from 'vuex';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport FormValidation from '@shell/mixins/form-validation';\n\nimport { set, get } from '@shell/utils/object';\nimport { Banner } from '@components/Banner';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport YamlEditor from '@shell/components/YamlEditor';\nimport { LEGACY } from '@shell/store/features';\nimport semver from 'semver';\nimport { _EDIT } from '@shell/config/query-params';\n\nconst HARVESTER = 'harvester';\n\nexport default {\n  components: {\n    Banner,\n    Checkbox,\n    LabeledSelect,\n    YamlEditor,\n  },\n\n  mixins: [CreateEditView, FormValidation],\n\n  props: {\n    mode: {\n      type:     String,\n      required: true,\n    },\n\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    provider: {\n      type:     String,\n      required: true,\n    },\n\n    credential: {\n      type:     Object,\n      default:  null,\n      required: false\n    },\n\n    userChartValues: {\n      type:     Object,\n      required: true\n    },\n    cisOverride: {\n      type:     Boolean,\n      required: true\n    },\n\n    allPsas: {\n      type:     Array,\n      required: true\n    },\n\n    addonVersions: {\n      type:     Array,\n      required: false,\n      default:  null\n    },\n\n    selectedVersion: {\n      type:     Object,\n      required: true\n    },\n    versionOptions: {\n      type:     Array,\n      required: true\n    },\n    isHarvesterDriver: {\n      type:     Boolean,\n      required: true\n    },\n    isHarvesterIncompatible: {\n      type:     Boolean,\n      required: true\n    },\n    showDeprecatedPatchVersions: {\n      type:     Boolean,\n      required: true\n    },\n    isElementalCluster: {\n      type:     Boolean,\n      required: true\n    },\n    haveArgInfo: {\n      type:     Boolean,\n      required: true\n    },\n    showCni: {\n      type:     Boolean,\n      required: true\n    },\n    showCloudProvider: {\n      type:     Boolean,\n      required: true\n    },\n    cloudProviderOptions: {\n      type:     Array,\n      required: true\n    }\n  },\n\n  watch: {\n    selectedVersion(neu, old) {\n      if (neu?.value !== old?.value && this.ciliumIpv6) {\n        // Re-assign so that the setter updates the structure for the new k8s version if needed\n        this.ciliumIpv6 = !!this.ciliumIpv6;\n      }\n    }\n  },\n\n  computed: {\n    ...mapGetters({ features: 'features/get' }),\n\n    serverConfig() {\n      return this.value.spec.rkeConfig.machineGlobalConfig;\n    },\n\n    showCniNoneBanner() {\n      return this.serverConfig?.cni === 'none';\n    },\n\n    showCiliumIpv6Controls() {\n      return this.serverConfig?.cni === 'cilium' || this.serverConfig?.cni === 'multus,cilium';\n    },\n\n    showNetworkPolicyWarningBanner() {\n      return this.serverConfig?.cni === 'cilium' && this.value?.spec?.enableNetworkPolicy;\n    },\n\n    agentConfig() {\n      return this.value.agentConfig;\n    },\n\n    profileOptions() {\n      const out = (this.agentArgs?.profile?.options || []).map((x) => {\n        return { label: x, value: x };\n      });\n\n      out.unshift({\n        label: this.$store.getters['i18n/t']('cluster.rke2.cisProfile.option'),\n        value: ''\n      });\n\n      return out;\n    },\n\n    /**\n     * Allow to display override if PSA is needed and profile is set\n     */\n    hasCisOverride() {\n      return (this.serverConfig?.profile || this.agentConfig?.profile) &&\n        // Also check other cases on when to display the override\n        this.showCisProfile && this.isCisSupported;\n    },\n\n    /**\n     * Disable PSA if CIS hardening is enabled, except override\n     */\n    isPsaDisabled() {\n      const cisValue = this.agentConfig?.profile || this.serverConfig?.profile;\n\n      return !(!cisValue || this.cisOverride) && this.isCisSupported;\n    },\n\n    /**\n     * Get the default label for the PSA template option\n     */\n    defaultPsaOptionLabel() {\n      const optionCase = !this.value.isK3s ? 'default' : 'none';\n\n      return this.$store.getters['i18n/t'](`cluster.rke2.defaultPodSecurityAdmissionConfigurationTemplateName.option.${ optionCase }`);\n    },\n\n    /**\n     * Convert PSA templates into options, sorting and flagging if any selected\n     */\n    psaOptions() {\n      const out = [{\n        label: this.defaultPsaOptionLabel,\n        value: ''\n      }];\n\n      if ( this.allPsas ) {\n        for ( const psa of this.allPsas ) {\n          out.push({\n            label: psa.nameDisplay,\n            value: psa.id,\n          });\n        }\n      }\n      const cur = this.value.spec.defaultPodSecurityAdmissionConfigurationTemplateName;\n\n      if ( cur && !out.find((x) => x.value === cur) ) {\n        out.unshift({ label: `${ cur } (Current)`, value: cur });\n      }\n\n      return out;\n    },\n\n    /**\n     * Check if current CIS profile is required and listed in the options\n     */\n    isCisSupported() {\n      const cisProfile = this.serverConfig?.profile || this.agentConfig?.profile;\n\n      return !cisProfile || this.profileOptions.map((option) => option.value).includes(cisProfile);\n    },\n\n    disableOptions() {\n      return (this.serverArgs.disable.options || []).map((value) => {\n        return {\n          label: this.$store.getters['i18n/withFallback'](`cluster.${ this.value.isK3s ? 'k3s' : 'rke2' }.systemService.\"${ value }\"`, null, value.replace(/^(rke2|rancher)-/, '')),\n          value,\n        };\n      });\n    },\n\n    serverArgs() {\n      return this.selectedVersion?.serverArgs || {};\n    },\n\n    agentArgs() {\n      return this.selectedVersion?.agentArgs || {};\n    },\n\n    /**\n     * The addons (kube charts) applicable for the selected kube version\n     *\n     * { [chartName:string]: { repo: string, version: string } }\n     */\n    chartVersions() {\n      return this.selectedVersion?.charts || {};\n    },\n\n    showCisProfile() {\n      return (this.provider === 'custom' || this.isElementalCluster) && ( this.serverArgs?.profile || this.agentArgs?.profile );\n    },\n\n    enabledSystemServices: {\n      get() {\n        const out = difference(this.serverArgs.disable.options, this.serverConfig.disable || []);\n\n        return out;\n      },\n\n      set(neu) {\n        const out = difference(this.serverArgs.disable.options, neu);\n\n        this.$emit('enabled-system-services-changed', out);\n      },\n    },\n\n    showCloudConfigYaml() {\n      if ( !this.agentArgs['cloud-provider-name'] ) {\n        return false;\n      }\n\n      const name = this.agentConfig?.['cloud-provider-name'];\n\n      if ( !name ) {\n        return false;\n      }\n\n      switch ( name ) {\n      case 'none': return false;\n      case 'aws': return false;\n      case 'rancher-vsphere': return false;\n      case HARVESTER: return false;\n      default: return true;\n      }\n    },\n\n    showVsphereNote() {\n      if ( !this.agentArgs['cloud-provider-name'] ) {\n        return false;\n      }\n\n      const name = this.agentConfig?.['cloud-provider-name'];\n\n      return name === 'rancher-vsphere';\n    },\n\n    showk8s21LegacyWarning() {\n      const isLegacyEnabled = this.features(LEGACY);\n\n      if (!isLegacyEnabled) {\n        return false;\n      }\n      const selectedVersion = semver.coerce(this.value.spec.kubernetesVersion);\n\n      return semver.satisfies(selectedVersion, '>=1.21.0');\n    },\n\n    ciliumIpv6: {\n      get() {\n        // eslint-disable-next-line no-unused-vars\n        const cni = this.serverConfig.cni; // force this property to recalculate if cni was changed away from cilium and chartValues['rke-cilium'] deleted\n\n        const chart = this.userChartValues[this.chartVersionKey('rke2-cilium')];\n\n        return chart?.cilium?.ipv6?.enabled || chart?.ipv6?.enabled || false;\n      },\n      set(neu) {\n        const name = this.chartVersionKey('rke2-cilium');\n        const values = this.userChartValues[name];\n\n        // RKE2 older than 1.23.5 uses different Helm chart values structure - need to take that into account\n        const version = this.selectedVersion.value;\n        let ciliumValues = {};\n\n        if (semver.gt(version, '1.23.5')) {\n          // New style\n          ciliumValues = {\n            ...values,\n            ipv6: {\n              ...values?.ipv6,\n              enabled: neu\n            }\n          };\n\n          delete ciliumValues.cilium;\n        } else {\n          // Old style\n          ciliumValues = {\n            ...values,\n            cilium: {\n              ...values?.cilium,\n              ipv6: {\n                ...values?.cilium?.ipv6,\n                enabled: neu\n              }\n            }\n          };\n\n          delete ciliumValues.ipv6;\n        }\n\n        this.$emit('cilium-values-changed', ciliumValues);\n      }\n    },\n\n    ciliumBandwidthManager: {\n      get() {\n        // eslint-disable-next-line no-unused-vars\n        const cni = this.serverConfig.cni; // force this property to recalculate if cni was changed away from cilium and chartValues['rke-cilium'] deleted\n\n        return this.userChartValues[this.chartVersionKey('rke2-cilium')]?.bandwidthManager?.enabled || false;\n      },\n      set(neu) {\n        const name = this.chartVersionKey('rke2-cilium');\n        const values = this.userChartValues[name];\n\n        const ciliumValues = {\n          ...values,\n          bandwidthManager: {\n            ...values?.bandwidthManager,\n            enabled: neu\n          }\n        };\n\n        this.$emit('cilium-values-changed', ciliumValues);\n      }\n    },\n\n    isEdit() {\n      return this.mode === _EDIT;\n    },\n\n    canNotEditCloudProvider() {\n      const canNotEdit = this.isEdit;\n\n      return canNotEdit;\n    },\n\n    /**\n     * Display warning about additional configuration needed for cloud provider Amazon if kube >= 1.27\n     */\n    showCloudProviderAmazonAdditionalConfigWarning() {\n      return !!semver.gte(this.value.spec.kubernetesVersion, 'v1.27.0') && this.agentConfig?.['cloud-provider-name'] === 'aws';\n    }\n  },\n\n  methods: {\n    set,\n\n    chartVersionKey(name) {\n      const addonVersion = this.addonVersions.find((av) => av.name === name);\n\n      return addonVersion ? `${ name }-${ addonVersion.version }` : name;\n    },\n    get,\n  },\n};\n</script>\n\n<template>\n  <div>\n    <Banner\n      v-if=\"!haveArgInfo\"\n      color=\"warning\"\n      :label=\"t('cluster.banner.haveArgInfo')\"\n    />\n    <Banner\n      v-if=\"showk8s21LegacyWarning\"\n      color=\"warning\"\n      :label=\"t('cluster.legacyWarning')\"\n    />\n    <Banner\n      v-if=\"isHarvesterDriver && isHarvesterIncompatible && showCloudProvider\"\n      color=\"warning\"\n    >\n      <span\n        v-clean-html=\"t('cluster.harvester.warning.cloudProvider.incompatible', null, true)\"\n      />\n    </Banner>\n    <Banner\n      v-if=\"showCloudProviderAmazonAdditionalConfigWarning\"\n      color=\"warning\"\n    >\n      <span v-clean-html=\"t('cluster.banner.cloudProviderAddConfig', {}, true)\" />\n    </Banner>\n    <Banner\n      v-if=\"showCniNoneBanner\"\n      color=\"warning\"\n      data-testid=\"clusterBasics__noneOptionSelectedForCni\"\n    >\n      <span v-clean-html=\"t('cluster.rke2.cni.cniNoneBanner', {}, true)\" />\n    </Banner>\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <LabeledSelect\n          v-model=\"value.spec.kubernetesVersion\"\n          :mode=\"mode\"\n          :options=\"versionOptions\"\n          data-testid=\"clusterBasics__kubernetesVersions\"\n          label-key=\"cluster.kubernetesVersion.label\"\n          @input=\"$emit('kubernetes-changed', $event)\"\n        />\n        <Checkbox\n          :value=\"showDeprecatedPatchVersions\"\n          :label=\"t('cluster.kubernetesVersion.deprecatedPatches')\"\n          :tooltip=\"t('cluster.kubernetesVersion.deprecatedPatchWarning')\"\n          class=\"patch-version\"\n          @input=\"$emit('show-deprecated-patch-versions-changed', $event)\"\n        />\n      </div>\n      <div\n        v-if=\"showCloudProvider\"\n        class=\"col span-6\"\n      >\n        <LabeledSelect\n          v-if=\"agentConfig\"\n          v-model=\"agentConfig['cloud-provider-name']\"\n          :mode=\"mode\"\n          :disabled=\"canNotEditCloudProvider\"\n          :options=\"cloudProviderOptions\"\n          :label=\"t('cluster.rke2.cloudProvider.label')\"\n        />\n      </div>\n    </div>\n    <div\n      v-if=\"showCni\"\n      :style=\"{'align-items':'center'}\"\n      class=\"row\"\n    >\n      <div class=\"col span-6\">\n        <LabeledSelect\n          v-model=\"serverConfig.cni\"\n          data-testid=\"cluster-rke2-cni-select\"\n          :mode=\"mode\"\n          :disabled=\"isEdit\"\n          :options=\"serverArgs.cni.options\"\n          :label=\"t('cluster.rke2.cni.label')\"\n        />\n      </div>\n      <div\n        v-if=\"showCiliumIpv6Controls\"\n        class=\"col\"\n      >\n        <Checkbox\n          v-model=\"ciliumIpv6\"\n          data-testid=\"cluster-rke2-cni-ipv6-checkbox\"\n          :mode=\"mode\"\n          :label=\"t('cluster.rke2.address.ipv6.enable')\"\n        />\n        <Checkbox\n          v-model=\"ciliumBandwidthManager\"\n          data-testid=\"cluster-rke2-cni-cilium-bandwidth-manager-checkbox\"\n          :mode=\"mode\"\n          :label=\"t('cluster.rke2.cni.cilium.BandwidthManager.enable')\"\n        />\n      </div>\n    </div>\n    <template v-if=\"showVsphereNote\">\n      <Banner\n        color=\"warning\"\n        label-key=\"cluster.cloudProvider.rancher-vsphere.note\"\n      />\n    </template>\n    <template v-else-if=\"showCloudConfigYaml\">\n      <div class=\"spacer\" />\n\n      <div class=\"col span-12\">\n        <h3>\n          {{ t('cluster.rke2.cloudProvider.header') }}\n        </h3>\n        <YamlEditor\n          v-if=\"agentConfig\"\n          ref=\"yaml\"\n          v-model=\"agentConfig['cloud-provider-config']\"\n          :editor-mode=\"mode === 'view' ? 'VIEW_CODE' : 'EDIT_CODE'\"\n          initial-yaml-values=\"# Cloud Provider Config\"\n          class=\"yaml-editor\"\n        />\n      </div>\n    </template>\n\n    <div class=\"spacer\" />\n\n    <h3>\n      {{ t('cluster.rke2.security.header') }}\n    </h3>\n\n    <Banner\n      v-if=\"showCisProfile && !isCisSupported && isEdit\"\n      color=\"info\"\n    >\n      <p v-clean-html=\"t('cluster.rke2.banner.cisUnsupported', {cisProfile: serverConfig.profile || agentConfig.profile}, true)\" />\n    </Banner>\n\n    <div class=\"row mb-10\">\n      <div\n        v-if=\"showCisProfile\"\n        class=\"col span-6\"\n      >\n        <LabeledSelect\n          v-if=\"serverArgs && serverArgs.profile && serverConfig\"\n          v-model=\"serverConfig.profile\"\n          :mode=\"mode\"\n          :options=\"profileOptions\"\n          :label=\"t('cluster.rke2.cis.sever')\"\n          @input=\"$emit('cis-changed')\"\n        />\n        <LabeledSelect\n          v-else-if=\"agentArgs && agentArgs.profile && agentConfig\"\n          v-model=\"agentConfig.profile\"\n          data-testid=\"rke2-custom-edit-cis-agent\"\n          :mode=\"mode\"\n          :options=\"profileOptions\"\n          :label=\"t('cluster.rke2.cis.agent')\"\n          @input=\"$emit('cis-changed')\"\n        />\n      </div>\n    </div>\n\n    <template v-if=\"hasCisOverride\">\n      <Checkbox\n        v-model=\"cisOverride\"\n        :mode=\"mode\"\n        :label=\"t('cluster.rke2.cis.override')\"\n        @input=\"$emit('psa-default-changed')\"\n      />\n\n      <Banner\n        v-if=\"cisOverride\"\n        color=\"warning\"\n        :label=\"t('cluster.rke2.banner.cisOverride')\"\n      />\n      <Banner\n        v-if=\"!cisOverride\"\n        color=\"info\"\n        :label=\"t('cluster.rke2.banner.psaChange')\"\n      />\n    </template>\n\n    <div\n      class=\"row mb-10 mt-10\"\n    >\n      <div class=\"col span-6\">\n        <!-- PSA template selector -->\n        <LabeledSelect\n          :key=\"defaultPsaOptionLabel\"\n          v-model=\"value.spec.defaultPodSecurityAdmissionConfigurationTemplateName\"\n          :mode=\"mode\"\n          data-testid=\"rke2-custom-edit-psa\"\n          :options=\"psaOptions\"\n          :disabled=\"isPsaDisabled\"\n          :label=\"t('cluster.rke2.defaultPodSecurityAdmissionConfigurationTemplateName.label')\"\n        />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col span-12 mt-20\">\n        <Checkbox\n          v-if=\"serverArgs['secrets-encryption']\"\n          v-model=\"serverConfig['secrets-encryption']\"\n          :mode=\"mode\"\n          :label=\"t('cluster.rke2.secretEncryption.label')\"\n        />\n        <Checkbox\n          v-model=\"value.spec.enableNetworkPolicy\"\n          :mode=\"mode\"\n          :label=\"t('cluster.rke2.enableNetworkPolicy.label')\"\n        />\n      </div>\n    </div>\n\n    <div\n      v-if=\"showNetworkPolicyWarningBanner\"\n      class=\"row\"\n    >\n      <div class=\"col span-12\">\n        <Banner\n          color=\"info\"\n          :label=\"t('cluster.rke2.enableNetworkPolicy.warning')\"\n        />\n      </div>\n    </div>\n\n    <div class=\"spacer\" />\n\n    <div\n      v-if=\"serverArgs.disable\"\n      class=\"row\"\n    >\n      <div class=\"col span-12\">\n        <div>\n          <h3>\n            {{ t('cluster.rke2.systemService.header') }}\n          </h3>\n        </div>\n        <Checkbox\n          v-for=\"opt in disableOptions\"\n          :key=\"opt.value\"\n          v-model=\"enabledSystemServices\"\n          :mode=\"mode\"\n          :label=\"opt.label\"\n          :value-when-true=\"opt.value\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .patch-version {\n    margin-top: 5px;\n  }\n</style>\n"]}]}