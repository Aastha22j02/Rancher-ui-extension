{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/rancher-components/Form/Checkbox/Checkbox.vue?vue&type=style&index=0&id=f6954e2a&lang=scss","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/rancher-components/Form/Checkbox/Checkbox.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1725271300564},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1725271300920},{"path":"/home/ubuntu/suseconf/node_modules/postcss-loader/src/index.js","mtime":1725271300857},{"path":"/home/ubuntu/suseconf/node_modules/sass-loader/dist/cjs.js","mtime":1725271288422},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiRmb250Q29sb3I6IHZhcigtLWlucHV0LWxhYmVsKTsKCi5jaGVja2JveC1vdXRlci1jb250YWluZXIgewogIGRpc3BsYXk6IGlubGluZS1mbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgJi1kZXNjcmlwdGlvbiB7CiAgICBjb2xvcjogJGZvbnRDb2xvcjsKICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIG1hcmdpbi1sZWZ0OiAxOXB4OwogICAgbWFyZ2luLXRvcDogNXB4OwogICAgb3BhY2l0eTogMC44OwogIH0KfQoKLy8gTk9URTogU29ydGFibGVUYWJsZSBkZXBlbmRzIG9uIHRoZSBuYW1lcyBvZiB0aGlzIGNsYXNzLCBkbyBub3QgYXJiaXRyYXJpbHkgY2hhbmdlLgouY2hlY2tib3gtY29udGFpbmVyIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgZGlzcGxheTogaW5saW5lLWZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBtYXJnaW46IDA7CiAgY3Vyc29yOiBwb2ludGVyOwogIHVzZXItc2VsZWN0OiBub25lOwogIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWRpdXMpOwoKICAuY2hlY2tib3gtbGFiZWwgewogICAgY29sb3I6IHZhcigtLWlucHV0LWxhYmVsKTsKICAgIGRpc3BsYXk6IGlubGluZS1mbGV4OwogICAgbWFyZ2luOiAwcHggMTBweCAwcHggNXB4OwoKICAgICYuY2hlY2tib3gtcHJpbWFyeSB7CiAgICAgIGNvbG9yOiBpbmhlcml0OwogICAgICBmb250LXdlaWdodDogNjAwOwogICAgfQogIH0KCiAgLmNoZWNrYm94LWluZm8gewogICAgbGluZS1oZWlnaHQ6IG5vcm1hbDsKICAgIG1hcmdpbi1sZWZ0OiAycHg7CiAgfQoKIC5jaGVja2JveC1jdXN0b20gewogICAgaGVpZ2h0OiAxNHB4OwogICAgd2lkdGg6IDE0cHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ib2R5LWJnKTsKICAgIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWRpdXMpOwogICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1vdXQ7CiAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXIpOwogICAgZmxleC1zaHJpbms6IDA7CiAgfQoKICBpbnB1dCB7CiAgICAvLyBkaXNwbGF5OiBub25lOwogICAgb3BhY2l0eTogMDsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHotaW5kZXg6IC0xOwogIH0KCiAgaW5wdXQ6Y2hlY2tlZCB+IC5jaGVja2JveC1jdXN0b20gewogICAgYmFja2dyb3VuZC1jb2xvcjp2YXIoLS1wcmltYXJ5KTsKICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZykgc2NhbGUoMSk7CiAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMGRlZykgc2NhbGUoMSk7CiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKSBzY2FsZSgxKTsKICAgIG9wYWNpdHk6MTsKICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXByaW1hcnkpOwogIH0KCiAgLy8gQ3VzdG9tIENoZWNrYm94IHRpY2sKICAuY2hlY2tib3gtY3VzdG9tOjphZnRlciB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBjb250ZW50OiAiIjsKICAgIGxlZnQ6IDBweDsKICAgIHRvcDogMHB4OwogICAgaGVpZ2h0OiAwcHg7CiAgICB3aWR0aDogMHB4OwogICAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZGl1cyk7CiAgICBib3JkZXI6IHNvbGlkOwogICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1pbnB1dC10ZXh0KTsKICAgIGJvcmRlci13aWR0aDogMCAzcHggM3B4IDA7CiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpIHNjYWxlKDApOwogICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDBkZWcpIHNjYWxlKDApOwogICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZykgc2NhbGUoMCk7CiAgICBvcGFjaXR5OjE7CiAgfQoKICBpbnB1dDpjaGVja2VkIH4gLmNoZWNrYm94LWN1c3RvbTo6YWZ0ZXIgewogICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgc2NhbGUoMSk7CiAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHNjYWxlKDEpOwogICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHNjYWxlKDEpOwogICAgb3BhY2l0eToxOwogICAgbGVmdDogNHB4OwogICAgd2lkdGg6IDRweDsKICAgIGhlaWdodDogMTBweDsKICAgIGJvcmRlcjogc29saWQ7CiAgICBib3JkZXItY29sb3I6IHZhcigtLWNoZWNrYm94LXRpY2spOwogICAgYm9yZGVyLXdpZHRoOiAwIDJweCAycHggMDsKICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OwogIH0KCiAgaW5wdXQ6Y2hlY2tlZCB+IC5jaGVja2JveC1jdXN0b20uaW5kZXRlcm1pbmF0ZTo6YWZ0ZXIgewogICAgLXdlYmtpdC10cmFuc2Zvcm06ICBzY2FsZSgxKTsKICAgIC1tcy10cmFuc2Zvcm06ICBzY2FsZSgxKTsKICAgIHRyYW5zZm9ybTogIHNjYWxlKDEpOwogICAgb3BhY2l0eToxOwogICAgbGVmdDogM3B4OwogICAgdG9wOjJweDsKICAgIHdpZHRoOiA2cHg7CiAgICBoZWlnaHQ6IDVweDsKICAgIGJvcmRlcjogc29saWQ7CiAgICBib3JkZXItY29sb3I6IHZhcigtLWNoZWNrYm94LXRpY2spOwogICAgYm9yZGVyLXdpZHRoOiAwIDAgMnB4IDA7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICB9CgogIC8vIERpc2FibGVkIHN0eWxlcwogICYuZGlzYWJsZWQgewogICAgLmNoZWNrYm94LWN1c3RvbSB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNoZWNrYm94LWRpc2FibGVkLWJnKTsKICAgICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1jaGVja2JveC1kaXNhYmxlZC1iZyk7CiAgICB9CiAgICBpbnB1dDpjaGVja2VkIH4gLmNoZWNrYm94LWN1c3RvbSB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNoZWNrYm94LWRpc2FibGVkLWJnKTsKICAgICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1jaGVja2JveC1kaXNhYmxlZC1iZyk7CiAgICAgICY6OmFmdGVyIHsKICAgICAgICBib3JkZXItY29sb3I6IHZhcigtLWNoZWNrYm94LXRpY2stZGlzYWJsZWQpOwogICAgICB9CiAgICB9CiAgfQoKICAmLmRpc2FibGVkIHsKICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7CiAgfQoKICAuY2hlY2tib3gtdmlldyB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgIExBQkVMIHsKICAgICAgY29sb3I6ICRmb250Q29sb3I7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Checkbox.vue"],"names":[],"mappings":";AAwfile":"Checkbox.vue","sourceRoot":"node_modules/@rancher/shell/rancher-components/Form/Checkbox","sourcesContent":["<script lang=\"ts\">\nimport { PropType, defineComponent } from 'vue';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport { addObject, removeObject } from '@shell/utils/array';\nimport cloneDeep from 'lodash/cloneDeep';\n\nexport default defineComponent({\n  name: 'Checkbox',\n\n  props: {\n    /**\n     * The checkbox value.\n     */\n    value: {\n      type:    [Boolean, Array, String] as PropType<boolean | boolean[] | string>,\n      default: false\n    },\n\n    /**\n     * The checkbox label.\n     */\n    label: {\n      type:    String,\n      default: null\n    },\n\n    /**\n     * The i18n key to use for the checkbox label.\n     */\n    labelKey: {\n      type:    String,\n      default: null\n    },\n\n    /**\n     * Random ID generated for binding label to input.\n     */\n    id: {\n      type:    String,\n      default: String(Math.random() * 1000)\n    },\n\n    /**\n     * Disable the checkbox.\n     */\n    disabled: {\n      type:    Boolean,\n      default: false\n    },\n\n    /**\n     * Display an indeterminate state. Useful for cases where a checkbox might\n     * be the parent to child checkboxes, and we need to show that a subset of\n     * children are checked.\n     */\n    indeterminate: {\n      type:    Boolean,\n      default: false\n    },\n\n    /**\n     * The checkbox editing mode.\n     * @values _EDIT, _VIEW\n     */\n    mode: {\n      type:    String,\n      default: _EDIT\n    },\n\n    /**\n     * The contents of the checkbox tooltip.\n     */\n    tooltip: {\n      type:    [String, Object],\n      default: null\n    },\n\n    /**\n     * The i18n key to use for the checkbox tooltip.\n     */\n    tooltipKey: {\n      type:    String,\n      default: null\n    },\n\n    /**\n     * A custom value to use when the checkbox is checked.\n     */\n    valueWhenTrue: {\n      type:    [Boolean, String, Number],\n      default: true\n    },\n\n    /**\n     * The i18n key to use for the checkbox description.\n     */\n    descriptionKey: {\n      type:    String,\n      default: null\n    },\n\n    /**\n     * The checkbox description.\n     */\n    description: {\n      type:    String,\n      default: null\n    },\n\n    /**\n     * Primary checkbox displays label so that it stands out more\n     */\n    primary: {\n      type:    Boolean,\n      default: false\n    },\n  },\n\n  computed: {\n    /**\n     * Determines if the checkbox is disabled.\n     * @returns boolean: True when the disabled prop is true or when mode is\n     * View.\n     */\n    isDisabled(): boolean {\n      return (this.disabled || this.mode === _VIEW);\n    },\n    /**\n     * Determines if the checkbox is checked when using custom values or\n     * multiple values.\n     * @returns boolean: True when at least one value is true in a collection or\n     * when value matches `this.valueWhenTrue`.\n     */\n    isChecked(): boolean {\n      return this.isMulti(this.value) ? this.findTrueValues(this.value) : this.value === this.valueWhenTrue;\n    }\n  },\n\n  methods: {\n    /**\n     * Toggles the checked state for the checkbox and emits an 'input' event.\n     */\n    clicked(event: MouseEvent | KeyboardEvent): boolean | void {\n      if ((event.target as HTMLLinkElement).tagName === 'A' && (event.target as HTMLLinkElement).href) {\n        // Ignore links inside the checkbox label so you can click them\n        return true;\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n\n      if (this.isDisabled) {\n        return;\n      }\n\n      const customEvent = {\n        bubbles:    true,\n        cancelable: false,\n        shiftKey:   event.shiftKey,\n        altKey:     event.altKey,\n        ctrlKey:    event.ctrlKey,\n        metaKey:    event.metaKey\n      };\n\n      const click = new CustomEvent('click', customEvent);\n\n      // Flip the value\n      const value = cloneDeep(this.value);\n\n      if (this.isMulti(value)) {\n        if (this.isChecked) {\n          removeObject(value, this.valueWhenTrue);\n        } else {\n          addObject(value, this.valueWhenTrue);\n        }\n        this.$emit('input', value);\n      } else if (this.isString(this.valueWhenTrue)) {\n        if (this.isChecked) {\n          this.$emit('input', null);\n        } else {\n          this.$emit('input', this.valueWhenTrue);\n        }\n      } else {\n        this.$emit('input', !value);\n        this.$el.dispatchEvent(click);\n      }\n    },\n\n    /**\n     * Determines if there are multiple values for the checkbox.\n     */\n    isMulti(value: boolean | boolean[] | string): value is boolean[] {\n      return Array.isArray(value);\n    },\n\n    isString(value: boolean | number | string): value is boolean {\n      return typeof value === 'string';\n    },\n\n    /**\n     * Finds the first true value for multiple checkboxes.\n     * @param value A collection of values for the checkbox.\n     */\n    findTrueValues(value: boolean[]): boolean {\n      return value.find((v) => v === this.valueWhenTrue) || false;\n    }\n  }\n});\n</script>\n\n<template>\n  <div\n    class=\"checkbox-outer-container\"\n    data-checkbox-ctrl\n  >\n    <label\n      class=\"checkbox-container\"\n      :class=\"{ 'disabled': isDisabled}\"\n      :for=\"id\"\n      @keydown.enter.prevent=\"clicked($event)\"\n      @keydown.space.prevent=\"clicked($event)\"\n      @click=\"clicked($event)\"\n    >\n      <input\n        :checked=\"isChecked\"\n        :value=\"valueWhenTrue\"\n        type=\"checkbox\"\n        :tabindex=\"-1\"\n        :name=\"id\"\n        @click.stop.prevent\n      >\n      <span\n        class=\"checkbox-custom\"\n        :class=\"{indeterminate: indeterminate}\"\n        :tabindex=\"isDisabled ? -1 : 0\"\n        :aria-label=\"label\"\n        :aria-checked=\"!!value\"\n        role=\"checkbox\"\n      />\n      <span\n        v-if=\"$slots.label || label || labelKey || tooltipKey || tooltip\"\n        class=\"checkbox-label\"\n        :class=\"{ 'checkbox-primary': primary }\"\n      >\n        <slot name=\"label\">\n          <t\n            v-if=\"labelKey\"\n            :k=\"labelKey\"\n            :raw=\"true\"\n          />\n          <template v-else-if=\"label\">{{ label }}</template>\n          <i\n            v-if=\"tooltipKey\"\n            v-clean-tooltip=\"t(tooltipKey)\"\n            class=\"checkbox-info icon icon-info icon-lg\"\n          />\n          <i\n            v-else-if=\"tooltip\"\n            v-clean-tooltip=\"tooltip\"\n            class=\"checkbox-info icon icon-info icon-lg\"\n          />\n        </slot>\n      </span>\n    </label>\n    <div\n      v-if=\"descriptionKey || description\"\n      class=\"checkbox-outer-container-description\"\n    >\n      <t\n        v-if=\"descriptionKey\"\n        :k=\"descriptionKey\"\n      />\n      <template v-else-if=\"description\">\n        {{ description }}\n      </template>\n    </div>\n  </div>\n</template>\n\n<style lang='scss'>\n$fontColor: var(--input-label);\n\n.checkbox-outer-container {\n  display: inline-flex;\n  flex-direction: column;\n  &-description {\n    color: $fontColor;\n    font-size: 14px;\n    margin-left: 19px;\n    margin-top: 5px;\n    opacity: 0.8;\n  }\n}\n\n// NOTE: SortableTable depends on the names of this class, do not arbitrarily change.\n.checkbox-container {\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  margin: 0;\n  cursor: pointer;\n  user-select: none;\n  border-radius: var(--border-radius);\n\n  .checkbox-label {\n    color: var(--input-label);\n    display: inline-flex;\n    margin: 0px 10px 0px 5px;\n\n    &.checkbox-primary {\n      color: inherit;\n      font-weight: 600;\n    }\n  }\n\n  .checkbox-info {\n    line-height: normal;\n    margin-left: 2px;\n  }\n\n .checkbox-custom {\n    height: 14px;\n    width: 14px;\n    background-color: var(--body-bg);\n    border-radius: var(--border-radius);\n    transition: all 0.3s ease-out;\n    border: 1px solid var(--border);\n    flex-shrink: 0;\n  }\n\n  input {\n    // display: none;\n    opacity: 0;\n    position: absolute;\n    z-index: -1;\n  }\n\n  input:checked ~ .checkbox-custom {\n    background-color:var(--primary);\n    -webkit-transform: rotate(0deg) scale(1);\n    -ms-transform: rotate(0deg) scale(1);\n    transform: rotate(0deg) scale(1);\n    opacity:1;\n    border: 1px solid var(--primary);\n  }\n\n  // Custom Checkbox tick\n  .checkbox-custom::after {\n    position: absolute;\n    content: \"\";\n    left: 0px;\n    top: 0px;\n    height: 0px;\n    width: 0px;\n    border-radius: var(--border-radius);\n    border: solid;\n    border-color: var(--input-text);\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(0deg) scale(0);\n    -ms-transform: rotate(0deg) scale(0);\n    transform: rotate(0deg) scale(0);\n    opacity:1;\n  }\n\n  input:checked ~ .checkbox-custom::after {\n    -webkit-transform: rotate(45deg) scale(1);\n    -ms-transform: rotate(45deg) scale(1);\n    transform: rotate(45deg) scale(1);\n    opacity:1;\n    left: 4px;\n    width: 4px;\n    height: 10px;\n    border: solid;\n    border-color: var(--checkbox-tick);\n    border-width: 0 2px 2px 0;\n    background-color: transparent;\n  }\n\n  input:checked ~ .checkbox-custom.indeterminate::after {\n    -webkit-transform:  scale(1);\n    -ms-transform:  scale(1);\n    transform:  scale(1);\n    opacity:1;\n    left: 3px;\n    top:2px;\n    width: 6px;\n    height: 5px;\n    border: solid;\n    border-color: var(--checkbox-tick);\n    border-width: 0 0 2px 0;\n    background-color: transparent;\n  }\n\n  // Disabled styles\n  &.disabled {\n    .checkbox-custom {\n      background-color: var(--checkbox-disabled-bg);\n      border-color: var(--checkbox-disabled-bg);\n    }\n    input:checked ~ .checkbox-custom {\n      background-color: var(--checkbox-disabled-bg);\n      border-color: var(--checkbox-disabled-bg);\n      &::after {\n        border-color: var(--checkbox-tick-disabled);\n      }\n    }\n  }\n\n  &.disabled {\n    cursor: not-allowed;\n  }\n\n  .checkbox-view {\n    display: flex;\n    flex-direction: column;\n    LABEL {\n      color: $fontColor;\n    }\n  }\n}\n</style>\n"]}]}