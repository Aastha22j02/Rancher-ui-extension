{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/management.cattle.io.user.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/management.cattle.io.user.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IE1BTkFHRU1FTlQsIE5PUk1BTiB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgQ3JlYXRlRWRpdFZpZXcgZnJvbSAnQHNoZWxsL21peGlucy9jcmVhdGUtZWRpdC12aWV3JzsKaW1wb3J0IEdsb2JhbFJvbGVCaW5kaW5ncyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9HbG9iYWxSb2xlQmluZGluZ3MudnVlJzsKaW1wb3J0IENoYW5nZVBhc3N3b3JkIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vQ2hhbmdlUGFzc3dvcmQnOwppbXBvcnQgeyBMYWJlbGVkSW5wdXQgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0xhYmVsZWRJbnB1dCc7CmltcG9ydCBDcnVSZXNvdXJjZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DcnVSZXNvdXJjZSc7CmltcG9ydCB7IGV4Y2VwdGlvblRvRXJyb3JzQXJyYXkgfSBmcm9tICdAc2hlbGwvdXRpbHMvZXJyb3InOwppbXBvcnQgeyBfQ1JFQVRFLCBfRURJVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKaW1wb3J0IExvYWRpbmcgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvTG9hZGluZyc7CmltcG9ydCB7IHdhaXQgfSBmcm9tICdAc2hlbGwvdXRpbHMvYXN5bmMnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIENoYW5nZVBhc3N3b3JkLCBHbG9iYWxSb2xlQmluZGluZ3MsIENydVJlc291cmNlLCBMYWJlbGVkSW5wdXQsIExvYWRpbmcKICB9LAogIG1peGluczogWwogICAgQ3JlYXRlRWRpdFZpZXcKICBdLAoKICBkYXRhKCkgewogICAgY29uc3Qgc2hvd0dsb2JhbFJvbGVzID0gISF0aGlzLiRzdG9yZS5nZXR0ZXJzW2BtYW5hZ2VtZW50L3NjaGVtYUZvcmBdKE1BTkFHRU1FTlQuR0xPQkFMX1JPTEUpOwoKICAgIHJldHVybiB7CiAgICAgIHNob3dHbG9iYWxSb2xlcywKICAgICAgZm9ybTogewogICAgICAgIHVzZXJuYW1lOiAgICB0aGlzLnZhbHVlLnVzZXJuYW1lLAogICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLnZhbHVlLmRlc2NyaXB0aW9uLAogICAgICAgIGRpc3BsYXlOYW1lOiB0aGlzLnZhbHVlLmRpc3BsYXlOYW1lLAogICAgICAgIHBhc3N3b3JkOiAgICB7CiAgICAgICAgICBwYXNzd29yZDogICAgICAgICAgJycsCiAgICAgICAgICB1c2VyQ2hhbmdlT25Mb2dpbjogZmFsc2UsCiAgICAgICAgfQogICAgICB9LAogICAgICB2YWxpZGF0aW9uOiB7CiAgICAgICAgcGFzc3dvcmQ6ICAgICBmYWxzZSwKICAgICAgICByb2xlczogICAgICAgICFzaG93R2xvYmFsUm9sZXMsCiAgICAgICAgcm9sZXNDaGFuZ2VkOiBmYWxzZSwKICAgICAgfSwKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIHZhbGlkKCkgewogICAgICBjb25zdCB2YWxpZCA9IHRoaXMuY3JlZGVudGlhbHNWYWxpZCAmJiB0aGlzLnJvbGVzVmFsaWQ7CgogICAgICBpZiAodGhpcy5pc0NyZWF0ZSkgewogICAgICAgIHJldHVybiB2YWxpZDsKICAgICAgfQogICAgICBpZiAodGhpcy5pc0VkaXQpIHsKICAgICAgICByZXR1cm4gdmFsaWQgJiYgKHRoaXMuY3JlZGVudGlhbHNDaGFuZ2VkIHx8IHRoaXMudmFsaWRhdGlvbi5yb2xlc0NoYW5nZWQpOwogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgY3JlZGVudGlhbHNWYWxpZCgpIHsKICAgICAgaWYgKHRoaXMuaXNDcmVhdGUpIHsKICAgICAgICAvLyBVc2VybmFtZSBtdXN0IGJlIHN1cHBsaWVkLCBwYXNzd29yZCB2YWxpZAogICAgICAgIHJldHVybiAhIXRoaXMuZm9ybS51c2VybmFtZSAmJiB0aGlzLnZhbGlkYXRpb24ucGFzc3dvcmQ7CiAgICAgIH0KICAgICAgaWYgKHRoaXMuaXNFZGl0KSB7CiAgICAgICAgLy8gUGFzc3dvcmQgbXVzdCBiZSB2YWxpZCAodGhvdWdoIHBhc3N3b3JkIGZpZWxkIGRvZXNuJ3QgaGF2ZSB0byBleGlzdCkKICAgICAgICByZXR1cm4gdGhpcy52YWxpZGF0aW9uLnBhc3N3b3JkOwogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgY3JlZGVudGlhbHNDaGFuZ2VkKCkgewogICAgICBpZiAodGhpcy5pc0NyZWF0ZSkgewogICAgICAgIHJldHVybiB0cnVlOyAvLyBDb3ZlcmVkIGJ5IHZhbGlkCiAgICAgIH0KICAgICAgaWYgKHRoaXMuaXNFZGl0KSB7CiAgICAgICAgcmV0dXJuICEhdGhpcy5mb3JtLnBhc3N3b3JkLnBhc3N3b3JkIHx8CiAgICAgICAgICB0aGlzLmZvcm0uZGVzY3JpcHRpb24gIT09IHRoaXMudmFsdWUuZGVzY3JpcHRpb24gfHwKICAgICAgICAgIHRoaXMuZm9ybS5kaXNwbGF5TmFtZSAhPT0gdGhpcy52YWx1ZS5kaXNwbGF5TmFtZSB8fAogICAgICAgICAgdGhpcy5mb3JtLnBhc3N3b3JkLnVzZXJDaGFuZ2VPbkxvZ2luICE9PSB0aGlzLnZhbHVlLm11c3RDaGFuZ2VQYXNzd29yZDsKICAgICAgfQoKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfSwKICAgIHJvbGVzVmFsaWQoKSB7CiAgICAgIHJldHVybiB0aGlzLnZhbGlkYXRpb24ucm9sZXM7CiAgICB9LAogICAgaXNDcmVhdGUoKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGUgPT09IF9DUkVBVEU7CiAgICB9LAogICAgaXNFZGl0KCkgewogICAgICByZXR1cm4gdGhpcy5tb2RlID09PSBfRURJVDsKICAgIH0KICB9LAoKICBtb3VudGVkKCkgewogICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICBpZiAodGhpcy4kcmVmcy5uYW1lKSB7CiAgICAgICAgdGhpcy4kcmVmcy5uYW1lLmZvY3VzKCk7CiAgICAgIH0KICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgc2F2ZShidXR0b25Eb25lKSB7CiAgICAgIHRoaXMuZXJyb3JzID0gW107CiAgICAgIHRyeSB7CiAgICAgICAgaWYgKHRoaXMuaXNDcmVhdGUpIHsKICAgICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlzLmNyZWF0ZVVzZXIoKTsKCiAgICAgICAgICBhd2FpdCB0aGlzLnVwZGF0ZVJvbGVzKHVzZXIuaWQpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBhd2FpdCB0aGlzLmVkaXRVc2VyKCk7CiAgICAgICAgICBhd2FpdCB0aGlzLnVwZGF0ZVJvbGVzKCk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLiRyb3V0ZXIucmVwbGFjZSh7IG5hbWU6IHRoaXMuZG9uZVJvdXRlIH0pOwogICAgICAgIGJ1dHRvbkRvbmUodHJ1ZSk7CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIHRoaXMuZXJyb3JzID0gZXhjZXB0aW9uVG9FcnJvcnNBcnJheShlcnIpOwogICAgICAgIGJ1dHRvbkRvbmUoZmFsc2UpOwogICAgICB9CiAgICB9LAoKICAgIGFzeW5jIGNyZWF0ZVVzZXIoKSB7CiAgICAgIC8vIEVuc3VyZSB1c2VybmFtZSBpcyB1bmlxdWUgKHRoaXMgZG9lcyBub3QgaGFwcGVuIGluIHRoZSBiYWNrZW5kKQogICAgICBjb25zdCB1c2VycyA9IGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2ZpbmRBbGwnLCB7IHR5cGU6IE1BTkFHRU1FTlQuVVNFUiB9KTsKCiAgICAgIGlmICh1c2Vycy5maW5kKCh1KSA9PiB1LnVzZXJuYW1lID09PSB0aGlzLmZvcm0udXNlcm5hbWUpKSB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHRoaXMudCgndXNlci5lZGl0LmNyZWRlbnRpYWxzLnVzZXJuYW1lLmV4aXN0cycpKTsKICAgICAgfQoKICAgICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdyYW5jaGVyL2NyZWF0ZScsIHsKICAgICAgICB0eXBlOiAgICAgICAgICAgICAgIE5PUk1BTi5VU0VSLAogICAgICAgIGRlc2NyaXB0aW9uOiAgICAgICAgdGhpcy5mb3JtLmRlc2NyaXB0aW9uLAogICAgICAgIGVuYWJsZWQ6ICAgICAgICAgICAgdHJ1ZSwKICAgICAgICBtdXN0Q2hhbmdlUGFzc3dvcmQ6IHRoaXMuZm9ybS5wYXNzd29yZC51c2VyQ2hhbmdlT25Mb2dpbiwKICAgICAgICBuYW1lOiAgICAgICAgICAgICAgIHRoaXMuZm9ybS5kaXNwbGF5TmFtZSwKICAgICAgICBwYXNzd29yZDogICAgICAgICAgIHRoaXMuZm9ybS5wYXNzd29yZC5wYXNzd29yZCwKICAgICAgICB1c2VybmFtZTogICAgICAgICAgIHRoaXMuZm9ybS51c2VybmFtZQogICAgICB9KTsKCiAgICAgIGNvbnN0IG5ld05vcm1hblVzZXIgPSBhd2FpdCB1c2VyLnNhdmUoKTsKCiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbWFuYWdlbWVudC9maW5kJywgeyB0eXBlOiBNQU5BR0VNRU5ULlVTRVIsIGlkOiBuZXdOb3JtYW5Vc2VyLmlkIH0pOwogICAgfSwKCiAgICBhc3luYyBlZGl0VXNlcigpIHsKICAgICAgaWYgKCF0aGlzLmNyZWRlbnRpYWxzQ2hhbmdlZCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3Qgbm9ybWFuVXNlciA9IGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdyYW5jaGVyL2ZpbmQnLCB7CiAgICAgICAgdHlwZTogTk9STUFOLlVTRVIsCiAgICAgICAgaWQ6ICAgdGhpcy52YWx1ZS5pZCwKICAgICAgfSk7CgogICAgICAvLyBTYXZlIGNoYW5nZSBvZiBwYXNzd29yZAogICAgICAvLyAtIFBhc3N3b3JkIG11c3QgYmUgY2hhbmdlZCBiZWZvcmUgZWRpdGluZyBtdXN0Q2hhbmdlUGFzc3dvcmQgKHNldHBhc3N3b3JkIGFjdGlvbiBzZXRzIHRoaXMgdG8gZmFsc2UpCiAgICAgIGlmICh0aGlzLmZvcm0ucGFzc3dvcmQucGFzc3dvcmQpIHsKICAgICAgICBhd2FpdCB0aGlzLiRyZWZzLmNoYW5nZVBhc3N3b3JkLnNhdmUobm9ybWFuVXNlcik7CgogICAgICAgIC8vIFdoeSB0aGUgd2FpdD8gV2l0aG91dCB0aGVzZSB0aGUgdXNlciB1cGRhdGVzIGJlbG93IGFyZSBpZ25vcmVkCiAgICAgICAgLy8gLSBUaGUgdXBkYXRlIHJlcXVlc3Qgc3VjY2VlZHMgYW5kIHNob3dzIHRoZSBjb3JyZWN0IHZhbHVlcyBpbiBpdCdzIHJlc3BvbnNlLgogICAgICAgIC8vIC0gRmV0Y2hpbmcgdGhlIG5vcm1hbiB1c2VyIGFnYWluIHNvbWV0aW1lcyBzaG93cyB0aGUgY29ycmVjdCB2YWx1ZSwgc29tZXRpbWVzIG5vdAogICAgICAgIC8vIC0gRXZlbiBpZiB0aGUgZmV0Y2hlZCBub3JtYW4gdXNlciBzaG93cyB0aGUgY29ycmVjdCB2YWx1ZSwgaXQgZG9lc24ndCBzaG93IHVwIGluIHRoZSBzdGV2ZSB1c2VyCiAgICAgICAgLy8gICAtIExvb2tzIGxpa2Ugd2UgcmUtcmVxdWVzdCB0aGUgc3RhbGUgdmVyc2lvbiB2aWEgc29ja2V0PwogICAgICAgIGF3YWl0IHdhaXQoNTAwMCk7CiAgICAgIH0KCiAgICAgIC8vIFNhdmUgdXNlciB1cGRhdGVzCiAgICAgIG5vcm1hblVzZXIuZGVzY3JpcHRpb24gPSB0aGlzLmZvcm0uZGVzY3JpcHRpb247CiAgICAgIG5vcm1hblVzZXIuX25hbWUgPSB0aGlzLmZvcm0uZGlzcGxheU5hbWU7CiAgICAgIG5vcm1hblVzZXIubXVzdENoYW5nZVBhc3N3b3JkID0gdGhpcy5mb3JtLnBhc3N3b3JkLnVzZXJDaGFuZ2VPbkxvZ2luOwoKICAgICAgYXdhaXQgbm9ybWFuVXNlci5zYXZlKCk7CgogICAgICByZXR1cm4gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ21hbmFnZW1lbnQvZmluZCcsIHsKICAgICAgICB0eXBlOiBNQU5BR0VNRU5ULlVTRVIsCiAgICAgICAgaWQ6ICAgdGhpcy52YWx1ZS5pZCwKICAgICAgICBvcHQ6ICB7IGZvcmNlOiB0cnVlIH0KICAgICAgfSk7CiAgICB9LAoKICAgIGFzeW5jIHVwZGF0ZVJvbGVzKHVzZXJJZCkgewogICAgICBpZiAodGhpcy4kcmVmcy5ncmIpIHsKICAgICAgICBhd2FpdCB0aGlzLiRyZWZzLmdyYi5zYXZlKHVzZXJJZCk7CiAgICAgIH0KICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["management.cattle.io.user.vue"],"names":[],"mappingsfile":"management.cattle.io.user.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\nimport { MANAGEMENT, NORMAN } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport GlobalRoleBindings from '@shell/components/GlobalRoleBindings.vue';\nimport ChangePassword from '@shell/components/form/ChangePassword';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport CruResource from '@shell/components/CruResource';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport { _CREATE, _EDIT } from '@shell/config/query-params';\nimport Loading from '@shell/components/Loading';\nimport { wait } from '@shell/utils/async';\n\nexport default {\n  components: {\n    ChangePassword, GlobalRoleBindings, CruResource, LabeledInput, Loading\n  },\n  mixins: [\n    CreateEditView\n  ],\n\n  data() {\n    const showGlobalRoles = !!this.$store.getters[`management/schemaFor`](MANAGEMENT.GLOBAL_ROLE);\n\n    return {\n      showGlobalRoles,\n      form: {\n        username:    this.value.username,\n        description: this.value.description,\n        displayName: this.value.displayName,\n        password:    {\n          password:          '',\n          userChangeOnLogin: false,\n        }\n      },\n      validation: {\n        password:     false,\n        roles:        !showGlobalRoles,\n        rolesChanged: false,\n      },\n    };\n  },\n\n  computed: {\n    valid() {\n      const valid = this.credentialsValid && this.rolesValid;\n\n      if (this.isCreate) {\n        return valid;\n      }\n      if (this.isEdit) {\n        return valid && (this.credentialsChanged || this.validation.rolesChanged);\n      }\n\n      return false;\n    },\n    credentialsValid() {\n      if (this.isCreate) {\n        // Username must be supplied, password valid\n        return !!this.form.username && this.validation.password;\n      }\n      if (this.isEdit) {\n        // Password must be valid (though password field doesn't have to exist)\n        return this.validation.password;\n      }\n\n      return false;\n    },\n    credentialsChanged() {\n      if (this.isCreate) {\n        return true; // Covered by valid\n      }\n      if (this.isEdit) {\n        return !!this.form.password.password ||\n          this.form.description !== this.value.description ||\n          this.form.displayName !== this.value.displayName ||\n          this.form.password.userChangeOnLogin !== this.value.mustChangePassword;\n      }\n\n      return false;\n    },\n    rolesValid() {\n      return this.validation.roles;\n    },\n    isCreate() {\n      return this.mode === _CREATE;\n    },\n    isEdit() {\n      return this.mode === _EDIT;\n    }\n  },\n\n  mounted() {\n    this.$nextTick(() => {\n      if (this.$refs.name) {\n        this.$refs.name.focus();\n      }\n    });\n  },\n  methods: {\n    async save(buttonDone) {\n      this.errors = [];\n      try {\n        if (this.isCreate) {\n          const user = await this.createUser();\n\n          await this.updateRoles(user.id);\n        } else {\n          await this.editUser();\n          await this.updateRoles();\n        }\n\n        this.$router.replace({ name: this.doneRoute });\n        buttonDone(true);\n      } catch (err) {\n        this.errors = exceptionToErrorsArray(err);\n        buttonDone(false);\n      }\n    },\n\n    async createUser() {\n      // Ensure username is unique (this does not happen in the backend)\n      const users = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.USER });\n\n      if (users.find((u) => u.username === this.form.username)) {\n        throw new Error(this.t('user.edit.credentials.username.exists'));\n      }\n\n      const user = await this.$store.dispatch('rancher/create', {\n        type:               NORMAN.USER,\n        description:        this.form.description,\n        enabled:            true,\n        mustChangePassword: this.form.password.userChangeOnLogin,\n        name:               this.form.displayName,\n        password:           this.form.password.password,\n        username:           this.form.username\n      });\n\n      const newNormanUser = await user.save();\n\n      return this.$store.dispatch('management/find', { type: MANAGEMENT.USER, id: newNormanUser.id });\n    },\n\n    async editUser() {\n      if (!this.credentialsChanged) {\n        return;\n      }\n\n      const normanUser = await this.$store.dispatch('rancher/find', {\n        type: NORMAN.USER,\n        id:   this.value.id,\n      });\n\n      // Save change of password\n      // - Password must be changed before editing mustChangePassword (setpassword action sets this to false)\n      if (this.form.password.password) {\n        await this.$refs.changePassword.save(normanUser);\n\n        // Why the wait? Without these the user updates below are ignored\n        // - The update request succeeds and shows the correct values in it's response.\n        // - Fetching the norman user again sometimes shows the correct value, sometimes not\n        // - Even if the fetched norman user shows the correct value, it doesn't show up in the steve user\n        //   - Looks like we re-request the stale version via socket?\n        await wait(5000);\n      }\n\n      // Save user updates\n      normanUser.description = this.form.description;\n      normanUser._name = this.form.displayName;\n      normanUser.mustChangePassword = this.form.password.userChangeOnLogin;\n\n      await normanUser.save();\n\n      return await this.$store.dispatch('management/find', {\n        type: MANAGEMENT.USER,\n        id:   this.value.id,\n        opt:  { force: true }\n      });\n    },\n\n    async updateRoles(userId) {\n      if (this.$refs.grb) {\n        await this.$refs.grb.save(userId);\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"!value\" />\n  <CruResource\n    v-else\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :validation-passed=\"valid\"\n    :errors=\"errors\"\n    :can-yaml=\"false\"\n    class=\"create-edit\"\n    @finish=\"save\"\n  >\n    <div class=\"credentials\">\n      <h2> {{ t(\"user.edit.credentials.label\") }}</h2>\n      <div class=\"row\">\n        <div class=\"col span-4\">\n          <LabeledInput\n            ref=\"name\"\n            v-model=\"form.username\"\n            label-key=\"user.edit.credentials.username.label\"\n            placeholder-key=\"user.edit.credentials.username.placeholder\"\n            :required=\"isCreate\"\n            :readonly=\"isEdit\"\n            :disabled=\"isView || isEdit\"\n            :ignore-password-managers=\"!isCreate\"\n          />\n        </div>\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model=\"form.displayName\"\n            label-key=\"user.edit.credentials.displayName.label\"\n            placeholder-key=\"user.edit.credentials.displayName.placeholder\"\n            :disabled=\"isView\"\n          />\n        </div>\n      </div>\n      <div class=\"row mt-20 mb-10\">\n        <div class=\"col span-8\">\n          <LabeledInput\n            v-model=\"form.description\"\n            label-key=\"user.edit.credentials.userDescription.label\"\n            placeholder-key=\"user.edit.credentials.userDescription.placeholder\"\n            :disabled=\"isView\"\n          />\n        </div>\n      </div>\n\n      <ChangePassword\n        v-if=\"!isView\"\n        ref=\"changePassword\"\n        v-model=\"form.password\"\n        :mode=\"mode\"\n        :must-change-password=\"value.mustChangePassword\"\n        @valid=\"validation.password = $event\"\n      />\n    </div>\n    <div\n      v-if=\"showGlobalRoles\"\n      class=\"global-permissions\"\n    >\n      <GlobalRoleBindings\n        ref=\"grb\"\n        :user-id=\"value.id || liveValue.id\"\n        :mode=\"mode\"\n        :real-mode=\"realMode\"\n        type=\"user\"\n        @hasChanges=\"validation.rolesChanged = $event\"\n        @canLogIn=\"validation.roles = $event\"\n      />\n    </div>\n  </CruResource>\n</template>\n"]}]}