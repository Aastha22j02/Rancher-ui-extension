{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/Certificates.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/Certificates.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/ts-loader/index.js","mtime":1725271299135},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgUmVzb3VyY2VUYWJsZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9SZXNvdXJjZVRhYmxlJzsKaW1wb3J0IHsgU0VDUkVUIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IE5BTUUgYXMgTkFNRV9DT0wsIE5BTUVTUEFDRSBhcyBOQU1FU1BBQ0VfQ09MLCBBR0UsIFNUQVRFIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90YWJsZS1oZWFkZXJzJzsKaW1wb3J0IFNlY3JldCwgeyBUWVBFUyB9IGZyb20gJ0BzaGVsbC9tb2RlbHMvc2VjcmV0JzsKaW1wb3J0IHsgQmFubmVyIH0gZnJvbSAnQGNvbXBvbmVudHMvQmFubmVyJzsKaW1wb3J0IHsgU1RBVEVTX0VOVU0gfSBmcm9tICdAc2hlbGwvcGx1Z2lucy9kYXNoYm9hcmQtc3RvcmUvcmVzb3VyY2UtY2xhc3MnOwppbXBvcnQgeyBCYWRnZVN0YXRlIH0gZnJvbSAnQGNvbXBvbmVudHMvQmFkZ2VTdGF0ZSc7CgppbnRlcmZhY2UgRGF0YSB7CiAgc2NoZW1hOiBPYmplY3QsCiAgaGVhZGVyczogT2JqZWN0W10sCiAgY2VydHM6IFNlY3JldFtdLAogIHBhZ2luZ1BhcmFtczogewogICAgcGx1cmFsTGFiZWw6IHN0cmluZywKICAgIHNpbmd1bGFyTGFiZWw6IHN0cmluZwogIH0KfQoKZXhwb3J0IGRlZmF1bHQgVnVlLmV4dGVuZDxEYXRhLCBhbnksIGFueSwgYW55Pih7CiAgY29tcG9uZW50czogewogICAgUmVzb3VyY2VUYWJsZSwgQmFubmVyLCBCYWRnZVN0YXRlCiAgfSwKCiAgYXN5bmMgZmV0Y2goKSB7CiAgICAvLyBXZSdyZSBmZXRjaGluZyBzZWNyZXRzIHdpdGggYSBmaWx0ZXIsIHRoaXMgd2lsbCBjbGFzaCB3aXRoIHNlY3JldHMgaW4gb3RoZXIgY29udGV4dHMKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjbHVzdGVyL2ZvcmdldFR5cGUnLCBTRUNSRVQpOwoKICAgIHRoaXMuY2VydHMgPSBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9maW5kQWxsJywgewogICAgICB0eXBlOiBTRUNSRVQsCiAgICAgIG9wdDogIHsKICAgICAgICB3YXRjaDogIGZhbHNlLAogICAgICAgIC8vIE5vdGUgLSB1cmxPcHRpb25zIGhhbmRsZXMgZmlsdGVyIGluIGEgd2VpcmQgd2F5CiAgICAgICAgZmlsdGVyOiB7ICdtZXRhZGF0YS5maWVsZHMuMSc6IFRZUEVTLlRMUyB9CiAgICAgIH0KICAgIH0pOwogIH0sCgogIGRhdGEoKTogRGF0YSB7CiAgICByZXR1cm4gewogICAgICBzY2hlbWE6ICB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjbHVzdGVyL3NjaGVtYUZvciddKFNFQ1JFVCksCiAgICAgIGhlYWRlcnM6IFsKICAgICAgICB7CiAgICAgICAgICAuLi5TVEFURSwKICAgICAgICAgIGZvcm1hdHRlcjogbnVsbCwKICAgICAgICAgIG5hbWU6ICAgICAgJ2NlcnRTdGF0ZScsCiAgICAgICAgICBzb3J0OiAgICAgIFsnY2VydFN0YXRlJywgJ25hbWVTb3J0J10sCiAgICAgICAgICB2YWx1ZTogICAgICdjZXJ0U3RhdGUnLAogICAgICAgIH0sCiAgICAgICAgTkFNRV9DT0wsCiAgICAgICAgTkFNRVNQQUNFX0NPTCwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAgICAgJ2NuJywKICAgICAgICAgIGxhYmVsS2V5OiAnc2VjcmV0LmNlcnRpZmljYXRlLmNuJywKICAgICAgICAgIHZhbHVlOiAgICAocm93OiBTZWNyZXQpID0+IHsKICAgICAgICAgICAgaWYgKCFyb3cuY24pIHsKICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiByb3cuY24gKyAocm93LnVucmVwZWF0ZWRTYW5zLmxlbmd0aCA/IGAgJHsgdGhpcy50KCdzZWNyZXQuY2VydGlmaWNhdGUucGx1c01vcmUnLCB7IG46IHJvdy51bnJlcGVhdGVkU2Fucy5sZW5ndGggfSkgfWAgOiAnJyk7CiAgICAgICAgICB9LAogICAgICAgICAgc29ydDogICBbJ2NuJ10sCiAgICAgICAgICBzZWFyY2g6IFsnY24nXSwKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAgICAgICAgJ2NlcnQtZXhwaXJlczInLAogICAgICAgICAgbGFiZWxLZXk6ICAgICdzZWNyZXQuY2VydGlmaWNhdGUuZXhwaXJlc0R1cmF0aW9uJywKICAgICAgICAgIHZhbHVlOiAgICAgICAocm93OiBTZWNyZXQpID0+IHJvdy50aW1lVGlsRXhwaXJhdGlvbkRhdGUsCiAgICAgICAgICBmb3JtYXR0ZXI6ICAgJ0xpdmVEYXRlJywKICAgICAgICAgIHNvcnQ6ICAgICAgICBbJ3RpbWVUaWxFeHBpcmF0aW9uJ10sCiAgICAgICAgICBzZWFyY2g6ICAgICAgWyd0aW1lVGlsRXhwaXJhdGlvbiddLAogICAgICAgICAgZGVmYXVsdFNvcnQ6IHRydWUsCiAgICAgICAgICB3aWR0aDogICAgICAgMTAwCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogICAgICAnY2VydC1leHBpcmVzJywKICAgICAgICAgIGxhYmVsS2V5OiAgJ3NlY3JldC5jZXJ0aWZpY2F0ZS5leHBpcmVzT24nLAogICAgICAgICAgdmFsdWU6ICAgICAnY2FjaGVkQ2VydEluZm8ubm90QWZ0ZXInLAogICAgICAgICAgZm9ybWF0dGVyOiAnRGF0ZScsCiAgICAgICAgICBzb3J0OiAgICAgIFsnY2FjaGVkQ2VydEluZm8ubm90QWZ0ZXInXSwKICAgICAgICAgIHNlYXJjaDogICAgWydjYWNoZWRDZXJ0SW5mby5ub3RBZnRlciddLAogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICAgICAnY2VydC1saWZldGltZScsCiAgICAgICAgICBsYWJlbEtleTogJ3NlY3JldC5jZXJ0aWZpY2F0ZS5saWZldGltZScsCiAgICAgICAgICB2YWx1ZTogICAgKHJvdzogU2VjcmV0KSA9PiByb3cuY2VydExpZmV0aW1lLAogICAgICAgICAgc29ydDogICAgIFsnY2VydExpZmV0aW1lJ10sCiAgICAgICAgICBzZWFyY2g6ICAgWydjZXJ0TGlmZXRpbWUnXSwKICAgICAgICB9LAogICAgICAgIEFHRQogICAgICBdLAogICAgICBjZXJ0czogICAgICAgIFtdLAogICAgICBwYWdpbmdQYXJhbXM6IHsKICAgICAgICBwbHVyYWxMYWJlbDogICB0aGlzLnQoJ3NlY3JldC5jZXJ0aWZpY2F0ZS5jZXJ0aWZpY2F0ZXMnKSwKICAgICAgICBzaW5ndWxhckxhYmVsOiB0aGlzLnQoJ3NlY3JldC5jZXJ0aWZpY2F0ZS5jZXJ0aWZpY2F0ZScpCiAgICAgIH0KICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoWydpc0FsbE5hbWVzcGFjZXMnXSksCgogICAgZXhwaXJlZERhdGEoKSB7CiAgICAgIGxldCBleHBpcmluZyA9IDA7CiAgICAgIGxldCBleHBpcmVkID0gMDsKCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5jZXJ0cy5sZW5ndGg7IGkrKykgewogICAgICAgIGNvbnN0IGNlcnQgPSB0aGlzLmNlcnRzW2ldOwoKICAgICAgICBpZiAoY2VydC5jZXJ0U3RhdGUgPT09IFNUQVRFU19FTlVNLkVYUElSSU5HKSB7CiAgICAgICAgICBleHBpcmluZysrOwogICAgICAgIH0KICAgICAgICBpZiAoY2VydC5jZXJ0U3RhdGUgPT09IFNUQVRFU19FTlVNLkVYUElSRUQpIHsKICAgICAgICAgIGV4cGlyZWQrKzsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGNvbnN0IGZpbHRlcldhcm5pbmcgPSAhdGhpcy5pc0FsbE5hbWVzcGFjZXMgPyB0aGlzLnQoJ3NlY3JldC5jZXJ0aWZpY2F0ZS53YXJuaW5ncy5maWx0ZXJlZCcpIDogJyc7CgogICAgICByZXR1cm4gewogICAgICAgIGV4cGlyaW5nOiBleHBpcmluZyA/IHRoaXMudCgnc2VjcmV0LmNlcnRpZmljYXRlLndhcm5pbmdzLmV4cGlyaW5nJywgeyBjb3VudDogZXhwaXJpbmcsIGZpbHRlcmVkOiAhdGhpcy5pc0FsbE5hbWVzcGFjZXMgfSkgKyBmaWx0ZXJXYXJuaW5nIDogJycsCiAgICAgICAgZXhwaXJlZDogIGV4cGlyZWQgPyB0aGlzLnQoJ3NlY3JldC5jZXJ0aWZpY2F0ZS53YXJuaW5ncy5leHBpcmVkJywgeyBjb3VudDogZXhwaXJlZCwgZmlsdGVyZWQ6ICF0aGlzLmlzQWxsTmFtZXNwYWNlcyB9KSArIGZpbHRlcldhcm5pbmcgOiAnJywKICAgICAgfTsKICAgIH0KICB9LAoKICBiZWZvcmVEZXN0cm95KCkgewogICAgLy8gV2UncmUgZmV0Y2hpbmcgc2VjcmV0cyB3aXRoIGEgZmlsdGVyLCBjbGVhciBpdCBzbyBhcyB0byBub3QgY2xhc2ggd2l0aCBvdGhlciBjb250ZXh0cwogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvZm9yZ2V0VHlwZScsIFNFQ1JFVCk7CiAgfSwKCn0pOwo="},{"version":3,"sources":["Certificates.vue"],"names":[],"mappingsfile":"Certificates.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script lang=\"ts\">\nimport Vue from 'vue';\nimport { mapGetters } from 'vuex';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport { SECRET } from '@shell/config/types';\nimport { NAME as NAME_COL, NAMESPACE as NAMESPACE_COL, AGE, STATE } from '@shell/config/table-headers';\nimport Secret, { TYPES } from '@shell/models/secret';\nimport { Banner } from '@components/Banner';\nimport { STATES_ENUM } from '@shell/plugins/dashboard-store/resource-class';\nimport { BadgeState } from '@components/BadgeState';\n\ninterface Data {\n  schema: Object,\n  headers: Object[],\n  certs: Secret[],\n  pagingParams: {\n    pluralLabel: string,\n    singularLabel: string\n  }\n}\n\nexport default Vue.extend<Data, any, any, any>({\n  components: {\n    ResourceTable, Banner, BadgeState\n  },\n\n  async fetch() {\n    // We're fetching secrets with a filter, this will clash with secrets in other contexts\n    this.$store.dispatch('cluster/forgetType', SECRET);\n\n    this.certs = await this.$store.dispatch('cluster/findAll', {\n      type: SECRET,\n      opt:  {\n        watch:  false,\n        // Note - urlOptions handles filter in a weird way\n        filter: { 'metadata.fields.1': TYPES.TLS }\n      }\n    });\n  },\n\n  data(): Data {\n    return {\n      schema:  this.$store.getters['cluster/schemaFor'](SECRET),\n      headers: [\n        {\n          ...STATE,\n          formatter: null,\n          name:      'certState',\n          sort:      ['certState', 'nameSort'],\n          value:     'certState',\n        },\n        NAME_COL,\n        NAMESPACE_COL,\n        {\n          name:     'cn',\n          labelKey: 'secret.certificate.cn',\n          value:    (row: Secret) => {\n            if (!row.cn) {\n              return;\n            }\n\n            return row.cn + (row.unrepeatedSans.length ? ` ${ this.t('secret.certificate.plusMore', { n: row.unrepeatedSans.length }) }` : '');\n          },\n          sort:   ['cn'],\n          search: ['cn'],\n        }, {\n          name:        'cert-expires2',\n          labelKey:    'secret.certificate.expiresDuration',\n          value:       (row: Secret) => row.timeTilExpirationDate,\n          formatter:   'LiveDate',\n          sort:        ['timeTilExpiration'],\n          search:      ['timeTilExpiration'],\n          defaultSort: true,\n          width:       100\n        }, {\n          name:      'cert-expires',\n          labelKey:  'secret.certificate.expiresOn',\n          value:     'cachedCertInfo.notAfter',\n          formatter: 'Date',\n          sort:      ['cachedCertInfo.notAfter'],\n          search:    ['cachedCertInfo.notAfter'],\n        }, {\n          name:     'cert-lifetime',\n          labelKey: 'secret.certificate.lifetime',\n          value:    (row: Secret) => row.certLifetime,\n          sort:     ['certLifetime'],\n          search:   ['certLifetime'],\n        },\n        AGE\n      ],\n      certs:        [],\n      pagingParams: {\n        pluralLabel:   this.t('secret.certificate.certificates'),\n        singularLabel: this.t('secret.certificate.certificate')\n      }\n    };\n  },\n\n  computed: {\n    ...mapGetters(['isAllNamespaces']),\n\n    expiredData() {\n      let expiring = 0;\n      let expired = 0;\n\n      for (let i = 0; i < this.certs.length; i++) {\n        const cert = this.certs[i];\n\n        if (cert.certState === STATES_ENUM.EXPIRING) {\n          expiring++;\n        }\n        if (cert.certState === STATES_ENUM.EXPIRED) {\n          expired++;\n        }\n      }\n\n      const filterWarning = !this.isAllNamespaces ? this.t('secret.certificate.warnings.filtered') : '';\n\n      return {\n        expiring: expiring ? this.t('secret.certificate.warnings.expiring', { count: expiring, filtered: !this.isAllNamespaces }) + filterWarning : '',\n        expired:  expired ? this.t('secret.certificate.warnings.expired', { count: expired, filtered: !this.isAllNamespaces }) + filterWarning : '',\n      };\n    }\n  },\n\n  beforeDestroy() {\n    // We're fetching secrets with a filter, clear it so as to not clash with other contexts\n    this.$store.dispatch('cluster/forgetType', SECRET);\n  },\n\n});\n</script>\n\n<template>\n  <div>\n    <Banner\n      v-if=\"expiredData.expiring\"\n      color=\"warning\"\n      :label=\"expiredData.expiring\"\n    />\n    <Banner\n      v-if=\"expiredData.expired\"\n      color=\"error\"\n      :label=\"expiredData.expired\"\n    />\n    <ResourceTable\n      :loading=\"$fetchState.pending\"\n      :schema=\"schema\"\n      :headers=\"headers\"\n      :rows=\"certs\"\n      :paging-label=\"'secret.certificate.paging'\"\n      :paging-params=\"pagingParams\"\n    >\n      <template #col:certState=\"{row}\">\n        <td>\n          <BadgeState\n            :color=\"row.certStateBackground\"\n            :label=\"row.certStateDisplay\"\n          />\n        </td>\n      </template>\n    </ResourceTable>\n  </div>\n</template>\n"]}]}