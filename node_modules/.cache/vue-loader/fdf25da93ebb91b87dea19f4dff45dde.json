{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/form/KeyValue.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/form/KeyValue.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["KeyValue.vue"],"names":[],"mappingsfile":"KeyValue.vue","sourceRoot":"node_modules/@rancher/shell/components/form","sourcesContent":["<script>\nimport debounce from 'lodash/debounce';\nimport { typeOf } from '@shell/utils/sort';\nimport { removeAt, removeObject } from '@shell/utils/array';\nimport { base64Encode, base64Decode, binarySize } from '@shell/utils/crypto';\nimport { downloadFile } from '@shell/utils/download';\nimport { TextAreaAutoGrow } from '@components/Form/TextArea';\nimport { get } from '@shell/utils/object';\nimport Select from '@shell/components/form/Select';\nimport FileSelector from '@shell/components/form/FileSelector';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport { asciiLike } from '@shell/utils/string';\nimport CodeMirror from '@shell/components/CodeMirror';\nimport isEqual from 'lodash/isEqual';\n\nexport default {\n  name: 'KeyValue',\n\n  components: {\n    CodeMirror,\n    Select,\n    TextAreaAutoGrow,\n    FileSelector\n  },\n  props: {\n    value: {\n      type:    [Array, Object],\n      default: null,\n    },\n    defaultValue: {\n      type:    [Array, Object],\n      default: null,\n    },\n    // If the user supplies this array, then it indicates which keys should be shown as binary\n    binaryValueKeys: {\n      type:    [Array, Object],\n      default: null\n    },\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n    asMap: {\n      type:    Boolean,\n      default: true,\n    },\n    initialEmptyRow: {\n      type:    Boolean,\n      default: false,\n    },\n    title: {\n      type:    String,\n      default: ''\n    },\n\n    titleProtip: {\n      type:    String,\n      default: ''\n    },\n\n    protip: {\n      type:    [String, Boolean],\n      default: '',\n    },\n    // For asMap=false, the name of the field that goes into the row objects\n    keyName: {\n      type:    String,\n      default: 'key',\n    },\n    keyLabel: {\n      type:    String,\n      default: '',\n    },\n    keyEditable: {\n      type:    Boolean,\n      default: true,\n    },\n    // Offer a set of suggestions for the keys as a Select instead of Input\n    keyOptions: {\n      type:    Array,\n      default: null,\n    },\n    // If false and keyOptions are provided, the key MUST be one of the keyOptions.\n    keyTaggable: {\n      type:    Boolean,\n      default: true,\n    },\n    keyOptionUnique: {\n      type:    Boolean,\n      default: false,\n    },\n    keyPlaceholder: {\n      type:    String,\n      default: '',\n    },\n    /**\n     * List of keys which needs to be disabled and hidden based on toggler\n     */\n    protectedKeys: {\n      type:    Array,\n      default: () => [],\n    },\n    /**\n     * Conditionally display protected keys, if any\n     */\n    toggleFilter: {\n      type:    Boolean,\n      default: false,\n    },\n    separatorLabel: {\n      type:    String,\n      default: '',\n    },\n    // For asMap=false, the name of the field that goes into the row objects\n    valueName: {\n      type:    String,\n      default: 'value',\n    },\n    valueLabel: {\n      type:    String,\n      default: '',\n    },\n    valuePlaceholder: {\n      type:    String,\n      default: '',\n    },\n    valueCanBeEmpty: {\n      type:    Boolean,\n      default: false,\n    },\n    displayValuesAsBinary: {\n      type:    Boolean,\n      default: false,\n    },\n    valueMarkdownMultiline: {\n      type:    Boolean,\n      default: false,\n    },\n    valueMultiline: {\n      type:    Boolean,\n      default: true,\n    },\n    valueTrim: {\n      type:    Boolean,\n      default: true,\n    },\n    handleBase64: {\n      type:    Boolean,\n      default: false,\n    },\n    valueConcealed: {\n      type:    Boolean,\n      default: false,\n    },\n    // On initial reading of the existing value, this function is called\n    // and can return false to say that a value is not supported for editing.\n    // This is mainly useful for resources like envVars that have a valueFrom\n    // you want to preserve but not support editing\n    supported: {\n      type:    Function,\n      default: (v) => true,\n    },\n    // For asMap=false, preserve (copy) these keys from the original value into the emitted value.\n    // Also useful for valueFrom as above.\n    preserveKeys: {\n      type:    Array,\n      default: null,\n    },\n    extraColumns: {\n      type:    Array,\n      default: () => [],\n    },\n    defaultAddData: {\n      type:    Object,\n      default: () => {},\n    },\n    addLabel: {\n      type:    String,\n      default: '',\n    },\n    addIcon: {\n      type:    String,\n      default: 'icon-plus',\n    },\n    addAllowed: {\n      type:    Boolean,\n      default: true,\n    },\n    readIcon: {\n      type:    String,\n      default: 'icon-upload',\n    },\n    readAllowed: {\n      type:    Boolean,\n      default: true,\n    },\n    readAccept: {\n      type:    String,\n      default: '*',\n    },\n    readMultiple: {\n      type:    Boolean,\n      default: false,\n    },\n    removeLabel: {\n      type:    String,\n      default: '',\n    },\n    removeIcon: {\n      type:    String,\n      default: 'icon-minus',\n    },\n    removeAllowed: {\n      type:    Boolean,\n      default: true,\n    },\n    fileModifier: {\n      type:    Function,\n      default: (name, value) => ({ name, value })\n    },\n    parserSeparators: {\n      type:    Array,\n      default: () => [':', '='],\n    },\n    loading: {\n      default: false,\n      type:    Boolean\n    },\n    parseLinesFromFile: {\n      default: false,\n      type:    Boolean\n    },\n    parseValueFromFile: {\n      default: false,\n      type:    Boolean\n    },\n    disabled: {\n      default: false,\n      type:    Boolean\n    },\n  },\n  data() {\n    const rows = this.getRows(this.value);\n\n    return {\n      rows,\n      codeMirrorFocus: {},\n      lastUpdated:     null\n    };\n  },\n  computed: {\n    _protip() {\n      return this.protip || this.t('keyValue.protip', null, true);\n    },\n    _keyLabel() {\n      return this.keyLabel || this.t('generic.key');\n    },\n    _keyPlaceholder() {\n      return this.keyPlaceholder || this.t('keyValue.keyPlaceholder');\n    },\n    _valueLabel() {\n      return this.valueLabel || this.t('generic.value');\n    },\n    _valuePlaceholder() {\n      return this.valuePlaceholder || this.t('keyValue.valuePlaceholder');\n    },\n    _addLabel() {\n      return this.addLabel || this.t('generic.add');\n    },\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n    containerStyle() {\n      const gap = this.canRemove ? ' 50px' : '';\n      const size = 2 + this.extraColumns.length;\n\n      return `grid-template-columns: repeat(${ size }, 1fr)${ gap };`;\n    },\n    usedKeyOptions() {\n      return this.rows.map((row) => row[this.keyName]);\n    },\n    filteredKeyOptions() {\n      if (this.keyOptionUnique) {\n        return this.keyOptions\n          .filter((option) => !this.usedKeyOptions.includes(option.value));\n      }\n\n      return this.keyOptions;\n    },\n    /**\n     * Prevent removal if expressly not allowed and not in view mode\n     */\n    canRemove() {\n      return !this.isView && this.removeAllowed;\n    },\n    /**\n     * Filter rows based on toggler, keeping to still emit all the values\n     */\n    filteredRows() {\n      return this.rows.filter((row) => !(this.isProtected(row.key) && !this.toggleFilter));\n    }\n  },\n  created() {\n    this.queueUpdate = debounce(this.update, 500);\n  },\n  watch: {\n    /**\n     * KV works with v-model=value\n     * value is transformed into this.rows (base64 decode, mark supported etc)\n     * on input, this.update constructs a new value from this.rows and emits\n     * if the parent component changes value, KV needs to re-compute this.rows\n     * If the value changes because the user has edited it using KV, then KV should NOT re-compute rows\n     * the value watcher will compare the last value KV emitted with the new value KV detects and re-compute rows if they don't match\n     */\n    value: {\n      deep: true,\n      handler(neu, old) {\n        this.valuePropChanged(neu, old);\n      }\n    }\n  },\n  methods: {\n    valuePropChanged(neu) {\n      if (!isEqual(neu, this.lastUpdated)) {\n        this.rows = this.getRows(neu);\n      }\n    },\n\n    isProtected(key) {\n      return this.protectedKeys && this.protectedKeys.includes(key);\n    },\n\n    getRows(value) {\n      const rows = [];\n\n      if ( this.asMap ) {\n        const input = value || {};\n\n        Object.keys(input).forEach((key) => {\n          let value = input[key];\n          const decodedValue = base64Decode(input[key]);\n          const asciiValue = asciiLike(decodedValue);\n\n          if ( this.handleBase64 && asciiValue) {\n            value = base64Decode(value);\n          }\n\n          rows.push({\n            key,\n            value,\n            binary:    this.displayValuesAsBinary || (this.handleBase64 && !asciiValue),\n            canEncode: this.handleBase64 && asciiValue,\n            supported: true,\n          });\n        });\n      } else {\n        const input = value || [];\n\n        for ( const row of input ) {\n          let value = row[this.valueName] || '';\n\n          const decodedValue = base64Decode(row[this.valueName]);\n          const asciiValue = asciiLike(decodedValue);\n\n          if ( this.handleBase64 && asciiValue) {\n            value = base64Decode(value);\n          }\n          const entry = {\n            [this.keyName]:   row[this.keyName] || '',\n            [this.valueName]: value,\n            binary:           this.displayValuesAsBinary || (this.handleBase64 && !asciiValue),\n            canEncode:        this.handleBase64 && asciiValue,\n            supported:        this.supported(row),\n          };\n\n          this.preserveKeys?.map((k) => {\n            if ( typeof row[k] !== 'undefined' ) {\n              entry[k] = row[k];\n            }\n          });\n          rows.push(entry);\n        }\n      }\n      if ( rows && !rows.length && this.initialEmptyRow ) {\n        rows.push({\n          [this.keyName]:   '',\n          [this.valueName]: '',\n          binary:           false,\n          canEncode:        this.handleBase64,\n          supported:        true\n        });\n      }\n\n      return rows;\n    },\n\n    add(key = '', value = '') {\n      const obj = {\n        ...this.defaultAddData,\n        [this.keyName]:   key,\n        [this.valueName]: value,\n      };\n\n      obj.binary = false;\n      obj.canEncode = this.handleBase64;\n      obj.supported = true;\n      this.rows.push(obj);\n      this.queueUpdate();\n      this.$nextTick(() => {\n        if (this.$refs.key) {\n          const keys = this.$refs.key;\n\n          const lastKey = keys[keys.length - 1];\n\n          lastKey.focus();\n        } else {\n          this.$emit('focusKey');\n        }\n      });\n    },\n    remove(idx) {\n      removeAt(this.rows, idx);\n      this.queueUpdate();\n    },\n    removeEmptyRows() {\n      const cleaned = this.rows.filter((row) => {\n        return (row.value.length || row.key.length);\n      });\n\n      this.$set(this, 'rows', cleaned);\n    },\n    onFileSelected(file) {\n      const { name, value } = this.fileModifier(file.name, file.value);\n\n      if (!this.parseLinesFromFile) {\n        this.add(name, value, this.displayValuesAsBinary);\n      } else {\n        const lines = value.split('\\n');\n\n        lines.forEach((line) => {\n          // Ignore empty lines\n          if (line.length) {\n            const [key, value] = line.split('=');\n\n            this.add(key, value);\n          }\n        });\n\n        if (lines.length > 0) {\n          this.removeEmptyRows();\n        }\n      }\n    },\n    download(idx, ev) {\n      const row = this.rows[idx];\n      const name = row[this.keyName];\n      const value = row[this.valueName];\n\n      downloadFile(name, value, 'application/octet-stream');\n    },\n    update() {\n      let out;\n\n      if ( this.asMap ) {\n        out = {};\n        const keyName = this.keyName;\n        const valueName = this.valueName;\n\n        for ( const row of this.rows ) {\n          let value = (row[valueName] || '');\n          const key = (row[keyName] || '').trim();\n\n          if (value && typeOf(value) === 'object') {\n            out[key] = JSON.parse(JSON.stringify(value));\n          } else {\n            value = value || '';\n            if (this.valueTrim && asciiLike(value)) {\n              value = value.trim();\n            }\n            if (row.canEncode) {\n              value = base64Encode(value);\n            }\n            if ( key && (value || this.valueCanBeEmpty) ) {\n              out[key] = value;\n            }\n          }\n        }\n      } else {\n        const preserveKeys = this.preserveKeys || [];\n\n        removeObject(preserveKeys, this.keyName);\n        removeObject(preserveKeys, this.valueName);\n        out = this.rows.map((row) => {\n          let value = row[this.valueName];\n\n          if (row.canEncode) {\n            value = base64Encode(value);\n          }\n          const entry = {\n            [this.keyName]:   row[this.keyName],\n            [this.valueName]: value,\n          };\n\n          for ( const k of preserveKeys ) {\n            if ( typeof row[k] !== 'undefined' ) {\n              entry[k] = row[k];\n            }\n          }\n\n          return entry;\n        });\n      }\n      this.lastUpdated = out;\n\n      this.$emit('input', out);\n    },\n    onPaste(index, event) {\n      const text = event.clipboardData.getData('text/plain');\n      const lines = text.split('\\n');\n      const splits = lines.map((line) => {\n        const splitter = this.parserSeparators.find((sep) => line.includes(sep));\n\n        return splitter ? line.split(splitter) : '';\n      }).filter((split) => split && split.length > 0);\n\n      if (splits.length === 0 || (splits.length === 1 && splits[0].length < 2)) {\n        return;\n      }\n      event.preventDefault();\n      const keyValues = splits.map((split) => ({\n        [this.keyName]:   (split[0] || '').trim(),\n        [this.valueName]: (split[1] || '').trim(),\n        supported:        true,\n        canEncode:        this.handleBase64,\n        binary:           this.displayValuesAsBinary\n      }));\n\n      this.rows.splice(index, 1, ...keyValues);\n      this.queueUpdate();\n    },\n    calculateOptions(value) {\n      const valueOption = this.keyOptions.find((o) => o.value === value);\n\n      if (valueOption) {\n        return [valueOption, ...this.filteredKeyOptions];\n      }\n\n      return this.filteredKeyOptions;\n    },\n    binaryTextSize(val) {\n      const handledValue = this.handleBase64 ? base64Decode(val) : val;\n      const n = val.length ? binarySize(handledValue) : 0;\n\n      return this.t('detailText.binary', { n }, true);\n    },\n    get,\n    /**\n     * Update 'rows' variable with the user's input and prevents to update queue before the row model is updated\n     */\n    onInputMarkdownMultiline(idx, value) {\n      this.rows = this.rows.map((row, i) => i === idx ? { ...row, value } : row);\n      this.queueUpdate();\n    },\n    /**\n     * Set focus on CodeMirror fields\n     */\n    onFocusMarkdownMultiline(idx, value) {\n      this.$set(this.codeMirrorFocus, idx, value);\n    },\n    onValueFileSelected(idx, file) {\n      const { name, value } = file;\n\n      if (!this.rows[idx][this.keyName]) {\n        this.rows[idx][this.keyName] = name;\n      }\n      this.rows[idx][this.valueName] = value;\n    },\n    isValueFieldEmpty(value) {\n      return !value || value.trim().length === 0;\n    }\n  }\n};\n</script>\n<template>\n  <div class=\"key-value\">\n    <div\n      v-if=\"title || $slots.title\"\n      class=\"clearfix\"\n    >\n      <slot name=\"title\">\n        <h3>\n          {{ title }}\n          <i\n            v-if=\"titleProtip\"\n            v-clean-tooltip=\"titleProtip\"\n            class=\"icon icon-info\"\n          />\n        </h3>\n      </slot>\n    </div>\n    <div\n      class=\"kv-container\"\n      :style=\"containerStyle\"\n    >\n      <template v-if=\"rows.length || isView\">\n        <label class=\"text-label\">\n          {{ _keyLabel }}\n          <i\n            v-if=\"_protip && !isView && addAllowed\"\n            v-clean-tooltip=\"_protip\"\n            class=\"icon icon-info\"\n          />\n        </label>\n        <label class=\"text-label\">\n          {{ _valueLabel }}\n        </label>\n        <label\n          v-for=\"c in extraColumns\"\n          :key=\"c\"\n        >\n          <slot :name=\"'label:'+c\">{{ c }}</slot>\n        </label>\n        <slot\n          v-if=\"canRemove\"\n          name=\"remove\"\n        >\n          <span />\n        </slot>\n      </template>\n      <template v-if=\"!rows.length && isView\">\n        <div class=\"kv-item key text-muted\">\n          &mdash;\n        </div>\n        <div class=\"kv-item key text-muted\">\n          &mdash;\n        </div>\n      </template>\n      <template\n        v-for=\"(row,i) in filteredRows\"\n        v-else\n      >\n        <!-- Key -->\n        <div\n          :key=\"i+'key'\"\n          class=\"kv-item key\"\n        >\n          <slot\n            name=\"key\"\n            :row=\"row\"\n            :mode=\"mode\"\n            :keyName=\"keyName\"\n            :valueName=\"valueName\"\n            :queueUpdate=\"queueUpdate\"\n            :disabled=\"disabled\"\n          >\n            <Select\n              v-if=\"keyOptions\"\n              ref=\"key\"\n              v-model=\"row[keyName]\"\n              :searchable=\"true\"\n              :disabled=\"disabled || isProtected(row.key)\"\n              :clearable=\"false\"\n              :taggable=\"keyTaggable\"\n              :options=\"calculateOptions(row[keyName])\"\n              :data-testid=\"`select-kv-item-key-${i}`\"\n              @input=\"queueUpdate\"\n            />\n            <input\n              v-else\n              ref=\"key\"\n              v-model=\"row[keyName]\"\n              :disabled=\"isView || disabled || !keyEditable || isProtected(row.key)\"\n              :placeholder=\"_keyPlaceholder\"\n              :data-testid=\"`input-kv-item-key-${i}`\"\n              @input=\"queueUpdate\"\n              @paste=\"onPaste(i, $event)\"\n            >\n          </slot>\n        </div>\n\n        <!-- Value -->\n        <div\n          :key=\"i+'value'\"\n          :data-testid=\"`kv-item-value-${i}`\"\n          class=\"kv-item value\"\n        >\n          <slot\n            name=\"value\"\n            :row=\"row\"\n            :mode=\"mode\"\n            :keyName=\"keyName\"\n            :valueName=\"valueName\"\n            :queueUpdate=\"queueUpdate\"\n          >\n            <div v-if=\"!row.supported\">\n              {{ t('detailText.unsupported', null, true) }}\n            </div>\n            <div v-else-if=\"row.binary\">\n              {{ binaryTextSize(row.value) }}\n            </div>\n            <div\n              v-else\n              class=\"value-container\"\n              :class=\"{ 'upload-button': parseValueFromFile }\"\n            >\n              <CodeMirror\n                v-if=\"valueMarkdownMultiline\"\n                ref=\"cm\"\n                data-testid=\"code-mirror-multiline-field\"\n                :class=\"{['focus']: codeMirrorFocus[i]}\"\n                :value=\"row[valueName]\"\n                :as-text-area=\"true\"\n                :mode=\"mode\"\n                @onInput=\"onInputMarkdownMultiline(i, $event)\"\n                @onFocus=\"onFocusMarkdownMultiline(i, $event)\"\n              />\n              <TextAreaAutoGrow\n                v-else-if=\"valueMultiline\"\n                v-model=\"row[valueName]\"\n                data-testid=\"value-multiline\"\n                :class=\"{'conceal': valueConcealed}\"\n                :disabled=\"disabled || isProtected(row.key)\"\n                :mode=\"mode\"\n                :placeholder=\"_valuePlaceholder\"\n                :min-height=\"40\"\n                :spellcheck=\"false\"\n                @input=\"queueUpdate\"\n              />\n              <input\n                v-else\n                v-model=\"row[valueName]\"\n                :disabled=\"isView || disabled || isProtected(row.key)\"\n                :type=\"valueConcealed ? 'password' : 'text'\"\n                :placeholder=\"_valuePlaceholder\"\n                autocorrect=\"off\"\n                autocapitalize=\"off\"\n                spellcheck=\"false\"\n                :data-testid=\"`input-kv-item-value-${i}`\"\n                @input=\"queueUpdate\"\n              >\n              <FileSelector\n                v-if=\"parseValueFromFile && readAllowed && !isView && isValueFieldEmpty(row[valueName])\"\n                class=\"btn btn-sm role-secondary file-selector\"\n                :label=\"t('generic.upload')\"\n                :include-file-name=\"true\"\n                @selected=\"onValueFileSelected(i, $event)\"\n              />\n            </div>\n          </slot>\n        </div>\n        <div\n          v-for=\"c in extraColumns\"\n          :key=\"i + c\"\n          class=\"kv-item extra\"\n        >\n          <slot\n            :name=\"'col:' + c\"\n            :row=\"row\"\n            :queue-update=\"queueUpdate\"\n            :i=\"i\"\n          />\n        </div>\n        <div\n          v-if=\"canRemove\"\n          :key=\"i\"\n          class=\"kv-item remove\"\n          :data-testid=\"`remove-column-${i}`\"\n        >\n          <slot\n            name=\"removeButton\"\n            :remove=\"remove\"\n            :row=\"row\"\n            :i=\"i\"\n          >\n            <button\n              type=\"button\"\n              :disabled=\"isView || isProtected(row.key) || disabled\"\n              class=\"btn role-link\"\n              @click=\"remove(i)\"\n            >\n              {{ removeLabel || t('generic.remove') }}\n            </button>\n          </slot>\n        </div>\n      </template>\n    </div>\n    <div\n      v-if=\"(addAllowed || readAllowed) && !isView\"\n      class=\"footer mt-20\"\n    >\n      <slot\n        name=\"add\"\n        :add=\"add\"\n      >\n        <button\n          v-if=\"addAllowed\"\n          type=\"button\"\n          class=\"btn role-tertiary add\"\n          data-testid=\"add_link_button\"\n          :disabled=\"loading || disabled || (keyOptions && filteredKeyOptions.length === 0)\"\n          @click=\"add()\"\n        >\n          <i\n            v-if=\"loading\"\n            class=\"mr-5 icon icon-spinner icon-spin icon-lg\"\n          /> {{ _addLabel }}\n        </button>\n        <FileSelector\n          v-if=\"readAllowed\"\n          :disabled=\"isView\"\n          class=\"role-tertiary\"\n          :label=\"t('generic.readFromFile')\"\n          :include-file-name=\"true\"\n          @selected=\"onFileSelected\"\n        />\n      </slot>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.key-value {\n  width: 100%;\n  .file-selector.role-link {\n    text-transform: initial;\n    padding: 0;\n  }\n  .kv-container {\n    display: grid;\n    align-items: center;\n    column-gap: 20px;\n    label {\n      margin-bottom: 0;\n    }\n    & .kv-item {\n      width: 100%;\n      margin: 10px 0px 10px 0px;\n      &.key, &.extra {\n        align-self: flex-start;\n      }\n      &.value .value-container {\n        &.upload-button {\n          position: relative;\n          display: flex;\n          justify-content: right;\n          align-items: center;\n        }\n        .file-selector {\n          position: absolute;\n          margin-right: 5px;\n        }\n      }\n      &.value textarea {\n        padding: 10px 10px 10px 10px;\n      }\n\n      .text-monospace:not(.conceal) {\n        font-family: monospace, monospace;\n      }\n    }\n  }\n  .remove {\n    text-align: center;\n    BUTTON {\n      padding: 0px;\n    }\n  }\n  .title {\n    margin-bottom: 10px;\n    .read-from-file {\n      float: right;\n    }\n  }\n  input {\n    height: 40px;\n    line-height: 1;\n  }\n  .footer {\n    .protip {\n      float: right;\n      padding: 5px 0;\n    }\n  }\n  .download {\n    text-align: right;\n  }\n  .copy-value {\n    padding: 0px 0px 0px 10px;\n  }\n}\n</style>\n"]}]}