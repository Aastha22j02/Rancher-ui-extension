{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/initialize/App.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/initialize/App.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBOdXh0RXJyb3IgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvdGVtcGxhdGVzL2Vycm9yLnZ1ZSc7CmltcG9ydCBOdXh0TG9hZGluZyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9uYXYvR2xvYmFsTG9hZGluZy52dWUnOwoKaW1wb3J0ICdAc2hlbGwvYXNzZXRzL3N0eWxlcy9hcHAuc2Nzcyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogKCkgPT4gKHsKICAgIGlzT25saW5lOiB0cnVlLAoKICAgIHNob3dFcnJvclBhZ2U6IGZhbHNlLAogIH0pLAoKICBjcmVhdGVkKCkgewogICAgLy8gYWRkIHRvIHdpbmRvdyBzbyB3ZSBjYW4gbGlzdGVuIHdoZW4gcmVhZHkKICAgIHdpbmRvdy4kZ2xvYmFsQXBwID0gdGhpczsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICckbnV4dCcsIHsKICAgICAgZ2V0KCkgewogICAgICAgIGNvbnN0IGlzSGFydmVzdGVyID0gdGhpcy4kZ2xvYmFsQXBwPy4kc3RvcmUuZ2V0dGVyc1snY3VycmVudENsdXN0ZXInXT8uaXNIYXJ2ZXN0ZXI7CgogICAgICAgIGlmICghaXNIYXJ2ZXN0ZXIpIHsKICAgICAgICAgIGNvbnNvbGUud2Fybignd2luZG93LiRudXh0IGlzIGRlcHJlY2F0ZWQuIEl0IHdvdWxkIGJlIGJlc3QgdG8gc3RvcCB1c2luZyBnbG9iYWxTdGF0ZSBhbGwgdG9nZXRoZXIuIEZvciBhbiBhbHRlcm5hdGl2ZSB5b3UgY2FuIHVzZSB3aW5kb3cuJGdsb2JhbEFwcC4nKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlCiAgICAgICAgfQoKICAgICAgICByZXR1cm4gd2luZG93LiRnbG9iYWxBcHA7CiAgICAgIH0KICAgIH0pOwoKICAgIHRoaXMucmVmcmVzaE9ubGluZVN0YXR1cygpOwogICAgLy8gU2V0dXAgdGhlIGxpc3RlbmVycwogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29ubGluZScsIHRoaXMucmVmcmVzaE9ubGluZVN0YXR1cyk7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignb2ZmbGluZScsIHRoaXMucmVmcmVzaE9ubGluZVN0YXR1cyk7CgogICAgLy8gQWRkICRudXh0LmNvbnRleHQKICAgIHRoaXMuY29udGV4dCA9IHRoaXMuJG9wdGlvbnMuY29udGV4dDsKICB9LAoKICBtb3VudGVkKCkgewogICAgdGhpcy4kbG9hZGluZyA9IHRoaXMuJHJlZnMubG9hZGluZzsKICB9LAoKICBjb21wdXRlZDogewogICAgaXNPZmZsaW5lKCkgewogICAgICByZXR1cm4gIXRoaXMuaXNPbmxpbmU7CiAgICB9LAogIH0sCgogIG1ldGhvZHM6IHsKICAgIHJlZnJlc2hPbmxpbmVTdGF0dXMoKSB7CiAgICAgIGlmICh0eXBlb2Ygd2luZG93Lm5hdmlnYXRvci5vbkxpbmUgPT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgLy8gSWYgdGhlIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNvbm5lY3Rpb24gc3RhdHVzIHJlcG9ydHMKICAgICAgICAvLyBhc3N1bWUgdGhhdCB3ZSBhcmUgb25saW5lIGJlY2F1c2UgbW9zdCBhcHBzJyBvbmx5IHJlYWN0CiAgICAgICAgLy8gd2hlbiB0aGV5IG5vdyB0aGF0IHRoZSBjb25uZWN0aW9uIGhhcyBiZWVuIGludGVycnVwdGVkCiAgICAgICAgdGhpcy5pc09ubGluZSA9IHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5pc09ubGluZSA9IHdpbmRvdy5uYXZpZ2F0b3Iub25MaW5lOwogICAgICB9CiAgICB9LAogIH0sCgogIGNvbXBvbmVudHM6IHsgTnV4dExvYWRpbmcsIE51eHRFcnJvciB9Cn07Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"App.vue","sourceRoot":"node_modules/@rancher/shell/initialize","sourcesContent":["<script>\nimport NuxtError from '@shell/components/templates/error.vue';\nimport NuxtLoading from '@shell/components/nav/GlobalLoading.vue';\n\nimport '@shell/assets/styles/app.scss';\n\nexport default {\n  data: () => ({\n    isOnline: true,\n\n    showErrorPage: false,\n  }),\n\n  created() {\n    // add to window so we can listen when ready\n    window.$globalApp = this;\n    Object.defineProperty(window, '$nuxt', {\n      get() {\n        const isHarvester = this.$globalApp?.$store.getters['currentCluster']?.isHarvester;\n\n        if (!isHarvester) {\n          console.warn('window.$nuxt is deprecated. It would be best to stop using globalState all together. For an alternative you can use window.$globalApp.'); // eslint-disable-line no-console\n        }\n\n        return window.$globalApp;\n      }\n    });\n\n    this.refreshOnlineStatus();\n    // Setup the listeners\n    window.addEventListener('online', this.refreshOnlineStatus);\n    window.addEventListener('offline', this.refreshOnlineStatus);\n\n    // Add $nuxt.context\n    this.context = this.$options.context;\n  },\n\n  mounted() {\n    this.$loading = this.$refs.loading;\n  },\n\n  computed: {\n    isOffline() {\n      return !this.isOnline;\n    },\n  },\n\n  methods: {\n    refreshOnlineStatus() {\n      if (typeof window.navigator.onLine === 'undefined') {\n        // If the browser doesn't support connection status reports\n        // assume that we are online because most apps' only react\n        // when they now that the connection has been interrupted\n        this.isOnline = true;\n      } else {\n        this.isOnline = window.navigator.onLine;\n      }\n    },\n  },\n\n  components: { NuxtLoading, NuxtError }\n};\n</script>\n<template>\n  <div id=\"__nuxt\">\n    <NuxtLoading ref=\"loading\" />\n    <div\n      id=\"__layout\"\n      :key=\"showErrorPage\"\n    >\n      <NuxtError v-if=\"showErrorPage\" />\n      <router-view v-else />\n    </div>\n  </div>\n</template>\n"]}]}