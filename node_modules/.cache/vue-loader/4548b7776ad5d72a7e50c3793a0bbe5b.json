{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/AlertTable.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/AlertTable.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBpc0VtcHR5IGZyb20gJ2xvZGFzaC9pc0VtcHR5JzsKaW1wb3J0IFBvbGxlciBmcm9tICdAc2hlbGwvdXRpbHMvcG9sbGVyJzsKaW1wb3J0IFNvcnRhYmxlVGFibGUgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvU29ydGFibGVUYWJsZSc7CmltcG9ydCB7IEVORFBPSU5UUyB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmNvbnN0IEFMRVJUTUFOQUdFUl9QT0xMX1JBVEVfTVMgPSAzMDAwMDsKY29uc3QgTUFYX0ZBSUxVUkVTID0gMjsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IFNvcnRhYmxlVGFibGUgfSwKCiAgcHJvcHM6IHsKICAgIG1vbml0b3JpbmdOYW1lc3BhY2U6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnY2F0dGxlLW1vbml0b3Jpbmctc3lzdGVtJwogICAgfSwKICAgIGFsZXJ0U2VydmljZUVuZHBvaW50OiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJ3JhbmNoZXItbW9uaXRvcmluZy1hbGVydG1hbmFnZXInCiAgICB9LAogIH0sCgogIGRhdGEoKSB7CiAgICBjb25zdCBldmVudEhlYWRlcnMgPSBbCiAgICAgIHsKICAgICAgICBuYW1lOiAgICAgJ3NldmVyaXR5JywKICAgICAgICBsYWJlbDogICAgJ1NldmVyaXR5JywKICAgICAgICBsYWJlbEtleTogJ21vbml0b3Jpbmcub3ZlcnZpZXcuYWxlcnRzTGlzdC5zZXZlcml0eS5sYWJlbCcsCiAgICAgICAgdmFsdWU6ICAgICdsYWJlbHMuc2V2ZXJpdHknLAogICAgICAgIHNvcnQ6ICAgICBbJ2xhYmVscy5zZXZlcml0eScsICdsYWJlbHMuYWxlcnRuYW1lJ10sCiAgICAgICAgd2lkdGg6ICAgIDEyNSwKICAgICAgfSwKICAgICAgewogICAgICAgIG5hbWU6ICAgICAnbmFtZScsCiAgICAgICAgbGFiZWw6ICAgICdOYW1lJywKICAgICAgICBsYWJlbEtleTogJ2dlbmVyaWMubmFtZScsCiAgICAgICAgdmFsdWU6ICAgICdsYWJlbHMuYWxlcnRuYW1lJywKICAgICAgICBzb3J0OiAgICAgWydsYWJlbHMuYWxlcnRuYW1lJywgJ2xhYmVscy5zZXZlcml0eSddLAogICAgICB9LAogICAgICB7CiAgICAgICAgbmFtZTogICAgICAnbWVzc2FnZScsCiAgICAgICAgbGFiZWw6ICAgICAnbWVzc2FnZScsCiAgICAgICAgbGFiZWxLZXk6ICAnbW9uaXRvcmluZy5vdmVydmlldy5hbGVydHNMaXN0Lm1lc3NhZ2UubGFiZWwnLAogICAgICAgIHZhbHVlOiAgICAgJ2Fubm90YXRpb25zJywKICAgICAgICBmb3JtYXR0ZXI6ICdSdW5Cb29rTGluaycsCiAgICAgICAgc29ydDogICAgICBbJ2Fubm90YXRpb25zLm1lc3NhZ2UnLCAnbGFiZWxzLmFsZXJ0bmFtZScsICdsYWJlbHMuc2V2ZXJpdHknXSwKICAgICAgfSwKICAgIF07CgogICAgcmV0dXJuIHsKICAgICAgaW5TdG9yZTogICAgICAgICAgICB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjdXJyZW50UHJvZHVjdCddLmluU3RvcmUsCiAgICAgIGFsZXJ0TWFuYWdlclBvbGxlcjogbmV3IFBvbGxlcigKICAgICAgICB0aGlzLmxvYWRBbGVydE1hbmFnZXJFdmVudHMsCiAgICAgICAgQUxFUlRNQU5BR0VSX1BPTExfUkFURV9NUywKICAgICAgICBNQVhfRkFJTFVSRVMKICAgICAgKSwKICAgICAgYWxsQWxlcnRzOiBbXSwKICAgICAgZXZlbnRIZWFkZXJzCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsgLi4ubWFwR2V0dGVycyhbJ2N1cnJlbnRDbHVzdGVyJ10pIH0sCgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmZldGNoRGVwcygpOwogIH0sCgogIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLmFsZXJ0TWFuYWdlclBvbGxlci5zdG9wKCk7CiAgfSwKCiAgbWV0aG9kczogewogICAgYXN5bmMgZmV0Y2hBbGVydE1hbmFnZXJFdmVudHModmVyc2lvbikgewogICAgICByZXR1cm4gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goCiAgICAgICAgYCR7IHRoaXMuaW5TdG9yZSB9L3JlcXVlc3RgLAogICAgICAgIHsgdXJsOiBgL2s4cy9jbHVzdGVycy8keyB0aGlzLmN1cnJlbnRDbHVzdGVyLmlkIH0vYXBpL3YxL25hbWVzcGFjZXMvJHsgdGhpcy5tb25pdG9yaW5nTmFtZXNwYWNlIH0vc2VydmljZXMvaHR0cDokeyB0aGlzLmFsZXJ0U2VydmljZUVuZHBvaW50IH06OTA5My9wcm94eS9hcGkvJHsgdmVyc2lvbiB9L2FsZXJ0c2AgfQogICAgICApOwogICAgfSwKCiAgICBhc3luYyBsb2FkQWxlcnRNYW5hZ2VyRXZlbnRzKCkgewogICAgICBsZXQgYWxlcnRFdmVudHM7CgogICAgICB0cnkgewogICAgICAgIGFsZXJ0RXZlbnRzID0gYXdhaXQgdGhpcy5mZXRjaEFsZXJ0TWFuYWdlckV2ZW50cygndjInKTsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgYWxlcnRFdmVudHMgPSBhd2FpdCB0aGlzLmZldGNoQWxlcnRNYW5hZ2VyRXZlbnRzKCd2MScpLnRoZW4oKHJlcykgPT4gcmVzPy5kYXRhKTsKICAgICAgfQoKICAgICAgaWYgKGFsZXJ0RXZlbnRzKSB7CiAgICAgICAgdGhpcy5hbGxBbGVydHMgPSBhbGVydEV2ZW50czsKICAgICAgfQogICAgfSwKCiAgICBhc3luYyBmZXRjaERlcHMoKSB7CiAgICAgIGlmICh0aGlzLiRzdG9yZS5nZXR0ZXJzWydjbHVzdGVyL2Nhbkxpc3QnXShFTkRQT0lOVFMpKSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGNvbnN0IGFtID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvZmluZCcsIHsgdHlwZTogRU5EUE9JTlRTLCBpZDogYCR7IHRoaXMubW9uaXRvcmluZ05hbWVzcGFjZSB9LyR7IHRoaXMuYWxlcnRTZXJ2aWNlRW5kcG9pbnQgfWAgfSk7CgogICAgICAgICAgaWYgKCFpc0VtcHR5KGFtKSAmJiAhaXNFbXB0eShhbS5zdWJzZXRzKSkgewogICAgICAgICAgICB0aGlzLmFsZXJ0TWFuYWdlclBvbGxlci5zdGFydCgpOwogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggewoKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgfQp9Owo="},{"version":3,"sources":["AlertTable.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"AlertTable.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport isEmpty from 'lodash/isEmpty';\nimport Poller from '@shell/utils/poller';\nimport SortableTable from '@shell/components/SortableTable';\nimport { ENDPOINTS } from '@shell/config/types';\nimport { mapGetters } from 'vuex';\nconst ALERTMANAGER_POLL_RATE_MS = 30000;\nconst MAX_FAILURES = 2;\n\nexport default {\n  components: { SortableTable },\n\n  props: {\n    monitoringNamespace: {\n      type:    String,\n      default: 'cattle-monitoring-system'\n    },\n    alertServiceEndpoint: {\n      type:    String,\n      default: 'rancher-monitoring-alertmanager'\n    },\n  },\n\n  data() {\n    const eventHeaders = [\n      {\n        name:     'severity',\n        label:    'Severity',\n        labelKey: 'monitoring.overview.alertsList.severity.label',\n        value:    'labels.severity',\n        sort:     ['labels.severity', 'labels.alertname'],\n        width:    125,\n      },\n      {\n        name:     'name',\n        label:    'Name',\n        labelKey: 'generic.name',\n        value:    'labels.alertname',\n        sort:     ['labels.alertname', 'labels.severity'],\n      },\n      {\n        name:      'message',\n        label:     'message',\n        labelKey:  'monitoring.overview.alertsList.message.label',\n        value:     'annotations',\n        formatter: 'RunBookLink',\n        sort:      ['annotations.message', 'labels.alertname', 'labels.severity'],\n      },\n    ];\n\n    return {\n      inStore:            this.$store.getters['currentProduct'].inStore,\n      alertManagerPoller: new Poller(\n        this.loadAlertManagerEvents,\n        ALERTMANAGER_POLL_RATE_MS,\n        MAX_FAILURES\n      ),\n      allAlerts: [],\n      eventHeaders\n    };\n  },\n  computed: { ...mapGetters(['currentCluster']) },\n\n  mounted() {\n    this.fetchDeps();\n  },\n\n  beforeDestroy() {\n    this.alertManagerPoller.stop();\n  },\n\n  methods: {\n    async fetchAlertManagerEvents(version) {\n      return await this.$store.dispatch(\n        `${ this.inStore }/request`,\n        { url: `/k8s/clusters/${ this.currentCluster.id }/api/v1/namespaces/${ this.monitoringNamespace }/services/http:${ this.alertServiceEndpoint }:9093/proxy/api/${ version }/alerts` }\n      );\n    },\n\n    async loadAlertManagerEvents() {\n      let alertEvents;\n\n      try {\n        alertEvents = await this.fetchAlertManagerEvents('v2');\n      } catch (err) {\n        alertEvents = await this.fetchAlertManagerEvents('v1').then((res) => res?.data);\n      }\n\n      if (alertEvents) {\n        this.allAlerts = alertEvents;\n      }\n    },\n\n    async fetchDeps() {\n      if (this.$store.getters['cluster/canList'](ENDPOINTS)) {\n        try {\n          const am = await this.$store.dispatch('cluster/find', { type: ENDPOINTS, id: `${ this.monitoringNamespace }/${ this.alertServiceEndpoint }` });\n\n          if (!isEmpty(am) && !isEmpty(am.subsets)) {\n            this.alertManagerPoller.start();\n          }\n        } catch {\n\n        }\n      }\n    },\n  }\n};\n</script>\n\n<template>\n  <SortableTable\n    :rows=\"allAlerts\"\n    :headers=\"eventHeaders\"\n    :search=\"false\"\n    :table-actions=\"false\"\n    :row-actions=\"false\"\n    :paging=\"true\"\n    :rows-per-page=\"10\"\n    default-sort-by=\"name\"\n    key-field=\"id\"\n  />\n</template>\n"]}]}