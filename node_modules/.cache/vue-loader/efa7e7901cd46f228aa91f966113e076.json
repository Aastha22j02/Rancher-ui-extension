{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/fleet/FleetIntro.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/fleet/FleetIntro.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IEZMRUVUIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IE5BTUUgfSBmcm9tICdAc2hlbGwvY29uZmlnL3Byb2R1Y3QvZmxlZXQnOwoKZXhwb3J0IGRlZmF1bHQgewoKICBuYW1lOiAnRmxlZXRJbnRybycsCgogIGRhdGEoKSB7CiAgICBjb25zdCBnaXRSZXBvUm91dGUgPSB7CiAgICAgIG5hbWU6ICAgJ2MtY2x1c3Rlci1wcm9kdWN0LXJlc291cmNlLWNyZWF0ZScsCiAgICAgIHBhcmFtczogewogICAgICAgIHByb2R1Y3Q6ICBOQU1FLAogICAgICAgIHJlc291cmNlOiBGTEVFVC5HSVRfUkVQTwogICAgICB9LAogICAgfTsKCiAgICBjb25zdCBnaXRSZXBvU2NoZW1hID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snbWFuYWdlbWVudC9zY2hlbWFGb3InXShGTEVFVC5HSVRfUkVQTyk7CiAgICBjb25zdCBjYW5DcmVhdGVSZXBvcyA9IGdpdFJlcG9TY2hlbWEgJiYgZ2l0UmVwb1NjaGVtYS5yZXNvdXJjZU1ldGhvZHMuaW5jbHVkZXMoJ1BVVCcpOwoKICAgIHJldHVybiB7CiAgICAgIGdpdFJlcG9Sb3V0ZSwKICAgICAgY2FuQ3JlYXRlUmVwb3MKICAgIH07CiAgfSwKfTsK"},{"version":3,"sources":["FleetIntro.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"FleetIntro.vue","sourceRoot":"node_modules/@rancher/shell/components/fleet","sourcesContent":["<script>\nimport { FLEET } from '@shell/config/types';\nimport { NAME } from '@shell/config/product/fleet';\n\nexport default {\n\n  name: 'FleetIntro',\n\n  data() {\n    const gitRepoRoute = {\n      name:   'c-cluster-product-resource-create',\n      params: {\n        product:  NAME,\n        resource: FLEET.GIT_REPO\n      },\n    };\n\n    const gitRepoSchema = this.$store.getters['management/schemaFor'](FLEET.GIT_REPO);\n    const canCreateRepos = gitRepoSchema && gitRepoSchema.resourceMethods.includes('PUT');\n\n    return {\n      gitRepoRoute,\n      canCreateRepos\n    };\n  },\n};\n</script>\n<template>\n  <div class=\"intro-box\">\n    <i class=\"icon icon-repository\" />\n    <div class=\"title\">\n      {{ t('fleet.gitRepo.repo.noRepos') }}\n    </div>\n    <div\n      v-if=\"canCreateRepos\"\n      class=\"actions\"\n    >\n      <router-link\n        :to=\"gitRepoRoute\"\n        class=\"btn role-secondary\"\n      >\n        {{ t('fleet.gitRepo.repo.addRepo') }}\n      </router-link>\n    </div>\n  </div>\n</template>\n<style lang=\"scss\" scoped>\n.intro-box {\n  flex: 0 0 100%;\n  height: calc(100vh - 246px); // 2(48 content header + 20 padding + 55 pageheader)\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n\n.title {\n  margin-bottom: 15px;\n  font-size: $font-size-h2;\n}\n.icon-repository {\n  font-size: 96px;\n  margin-bottom: 32px;\n}\n</style>\n"]}]}