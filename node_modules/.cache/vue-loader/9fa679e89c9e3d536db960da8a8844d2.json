{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/detail/node.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/detail/node.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDb25zdW1wdGlvbkdhdWdlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0NvbnN1bXB0aW9uR2F1Z2UnOwppbXBvcnQgQWxlcnQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvQWxlcnQnOwppbXBvcnQgUmVzb3VyY2VUYWJsZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9SZXNvdXJjZVRhYmxlJzsKaW1wb3J0IFRhYiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9UYWJiZWQvVGFiJzsKaW1wb3J0IHsKICBFRkZFQ1QsCiAgSU1BR0VfU0laRSwKICBLRVksCiAgU0lNUExFX05BTUUsCiAgVkFMVUUKfSBmcm9tICdAc2hlbGwvY29uZmlnL3RhYmxlLWhlYWRlcnMnOwppbXBvcnQgUmVzb3VyY2VUYWJzIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vUmVzb3VyY2VUYWJzJzsKaW1wb3J0IHsgTUVUUklDLCBQT0QgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IGNyZWF0ZUVkaXRWaWV3IGZyb20gJ0BzaGVsbC9taXhpbnMvY3JlYXRlLWVkaXQtdmlldyc7CmltcG9ydCB7IGZvcm1hdFNpLCBleHBvbmVudE5lZWRlZCwgVU5JVFMgfSBmcm9tICdAc2hlbGwvdXRpbHMvdW5pdHMnOwppbXBvcnQgRGFzaGJvYXJkTWV0cmljcyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9EYXNoYm9hcmRNZXRyaWNzJzsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgeyBhbGxEYXNoYm9hcmRzRXhpc3QgfSBmcm9tICdAc2hlbGwvdXRpbHMvZ3JhZmFuYSc7CmltcG9ydCBMb2FkaW5nIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0xvYWRpbmcnOwppbXBvcnQgbWV0cmljUG9sbGVyIGZyb20gJ0BzaGVsbC9taXhpbnMvbWV0cmljLXBvbGxlcic7CmltcG9ydCB7IEZpbHRlckFyZ3MsIFBhZ2luYXRpb25QYXJhbUZpbHRlciB9IGZyb20gJ0BzaGVsbC90eXBlcy9zdG9yZS9wYWdpbmF0aW9uLnR5cGVzJzsKCmNvbnN0IE5PREVfTUVUUklDU19ERVRBSUxfVVJMID0gJy9hcGkvdjEvbmFtZXNwYWNlcy9jYXR0bGUtbW9uaXRvcmluZy1zeXN0ZW0vc2VydmljZXMvaHR0cDpyYW5jaGVyLW1vbml0b3JpbmctZ3JhZmFuYTo4MC9wcm94eS9kL3JhbmNoZXItbm9kZS1kZXRhaWwtMS9yYW5jaGVyLW5vZGUtZGV0YWlsP29yZ0lkPTEnOwpjb25zdCBOT0RFX01FVFJJQ1NfU1VNTUFSWV9VUkwgPSAnL2FwaS92MS9uYW1lc3BhY2VzL2NhdHRsZS1tb25pdG9yaW5nLXN5c3RlbS9zZXJ2aWNlcy9odHRwOnJhbmNoZXItbW9uaXRvcmluZy1ncmFmYW5hOjgwL3Byb3h5L2QvcmFuY2hlci1ub2RlLTEvcmFuY2hlci1ub2RlP29yZ0lkPTEnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEZXRhaWxOb2RlJywKCiAgY29tcG9uZW50czogewogICAgQWxlcnQsCiAgICBDb25zdW1wdGlvbkdhdWdlLAogICAgRGFzaGJvYXJkTWV0cmljcywKICAgIExvYWRpbmcsCiAgICBSZXNvdXJjZVRhYnMsCiAgICBUYWIsCiAgICBSZXNvdXJjZVRhYmxlLAogIH0sCgogIG1peGluczogW2NyZWF0ZUVkaXRWaWV3LCBtZXRyaWNQb2xsZXJdLAoKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogICAgIE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogIH0sCgogIGFzeW5jIGZldGNoKCkgewogICAgdGhpcy5maWx0ZXJCeUFwaSA9IHRoaXMuJHN0b3JlLmdldHRlcnNbYGNsdXN0ZXIvcGFnaW5hdGlvbkVuYWJsZWRgXShQT0QpOwoKICAgIGlmICh0aGlzLmZpbHRlckJ5QXBpKSB7CiAgICAgIC8vIE9ubHkgZ2V0IHBvZHMgYXNzb2NpYXRlZCB3aXRoIHRoaXMgbm9kZS4gVGhlIGFjdHVhbCB2YWx1ZXMgdXNlZCBhcmUgZnJvbSBhIGdldCBhbGwgaW4gbm9kZSBtb2RlbCBgcG9kc2AgZ2V0dGVyICh0aGlzIHdvcmtzIGFzIGl0IGp1c3QgZ2V0cyBhbGwuLi4pCiAgICAgIGNvbnN0IG9wdCA9IHsgLy8gT2YgdHlwZSBBY3Rpb25GaW5kUGFnZUFyZ3MKICAgICAgICBwYWdpbmF0aW9uOiBuZXcgRmlsdGVyQXJncyh7CiAgICAgICAgICBzb3J0OiAgICBbeyBmaWVsZDogJ21ldGFkYXRhLm5hbWUnLCBhc2M6IHRydWUgfV0sCiAgICAgICAgICBmaWx0ZXJzOiBQYWdpbmF0aW9uUGFyYW1GaWx0ZXIuY3JlYXRlU2luZ2xlRmllbGQoewogICAgICAgICAgICBmaWVsZDogJ3NwZWMubm9kZU5hbWUnLAogICAgICAgICAgICB2YWx1ZTogdGhpcy52YWx1ZS5pZCwKICAgICAgICAgIH0pCiAgICAgICAgfSkKICAgICAgfTsKCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKGBjbHVzdGVyL2ZpbmRQYWdlYCwgeyB0eXBlOiBQT0QsIG9wdCB9KTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjbHVzdGVyL2ZpbmRBbGwnLCB7IHR5cGU6IFBPRCB9KTsKICAgIH0KCiAgICB0aGlzLnNob3dNZXRyaWNzID0gYXdhaXQgYWxsRGFzaGJvYXJkc0V4aXN0KHRoaXMuJHN0b3JlLCB0aGlzLmN1cnJlbnRDbHVzdGVyLmlkLCBbTk9ERV9NRVRSSUNTX0RFVEFJTF9VUkwsIE5PREVfTUVUUklDU19TVU1NQVJZX1VSTF0pOwogIH0sCgogIGRhdGEoKSB7CiAgICBjb25zdCBwb2RTY2hlbWEgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjbHVzdGVyL3NjaGVtYUZvciddKFBPRCk7CgogICAgcmV0dXJuIHsKICAgICAgbWV0cmljczogICAgICAgICAgeyBjcHU6IDAsIG1lbW9yeTogMCB9LAogICAgICBpbmZvVGFibGVIZWFkZXJzOiBbCiAgICAgICAgewogICAgICAgICAgLi4uS0VZLAogICAgICAgICAgbGFiZWw6ICcnLAogICAgICAgICAgd2lkdGg6IDIwMAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgLi4uVkFMVUUsCiAgICAgICAgICBsYWJlbDogICAgICAgJycsCiAgICAgICAgICBkYXNoSWZFbXB0eTogdHJ1ZSwKICAgICAgICB9CiAgICAgIF0sCiAgICAgIGltYWdlVGFibGVIZWFkZXJzOiBbCiAgICAgICAgeyAuLi5TSU1QTEVfTkFNRSwgd2lkdGg6IG51bGwgfSwKICAgICAgICB7IC4uLklNQUdFX1NJWkUsIHdpZHRoOiAxMDAgfSAvLyBFbnN1cmUgb25lIGhlYWRlciBoYXMgYSBzaXplLCBhbGwgb3RoZXIgY29sdW1ucyB3aWxsIHNjYWxlCiAgICAgIF0sCiAgICAgIHRhaW50VGFibGVIZWFkZXJzOiBbCiAgICAgICAgS0VZLAogICAgICAgIFZBTFVFLAogICAgICAgIEVGRkVDVAogICAgICBdLAogICAgICBwb2RUYWJsZUhlYWRlcnM6IHRoaXMuJHN0b3JlLmdldHRlcnNbJ3R5cGUtbWFwL2hlYWRlcnNGb3InXShwb2RTY2hlbWEpLAogICAgICBOT0RFX01FVFJJQ1NfREVUQUlMX1VSTCwKICAgICAgTk9ERV9NRVRSSUNTX1NVTU1BUllfVVJMLAogICAgICBzaG93TWV0cmljczogICAgIGZhbHNlLAogICAgICBmaWx0ZXJCeUFwaTogICAgIHVuZGVmaW5lZCwKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoWydjdXJyZW50Q2x1c3RlciddKSwKICAgIG1lbW9yeVVuaXRzKCkgewogICAgICBjb25zdCBleHBvbmVudCA9IGV4cG9uZW50TmVlZGVkKHRoaXMudmFsdWUucmFtUmVzZXJ2ZWQsIDEwMjQpOwoKICAgICAgcmV0dXJuIGAkeyBVTklUU1tleHBvbmVudF0gfWlCYDsKICAgIH0sCgogICAgcGlkUHJlc3N1cmVTdGF0dXMoKSB7CiAgICAgIHJldHVybiB0aGlzLm1hcFRvU3RhdHVzKHRoaXMudmFsdWUuaXNQaWRQcmVzc3VyZU9rKTsKICAgIH0sCgogICAgZGlza1ByZXNzdXJlU3RhdHVzKCkgewogICAgICByZXR1cm4gdGhpcy5tYXBUb1N0YXR1cyh0aGlzLnZhbHVlLmlzRGlza1ByZXNzdXJlT2spOwogICAgfSwKCiAgICBtZW1vcnlQcmVzc3VyZVN0YXR1cygpIHsKICAgICAgcmV0dXJuIHRoaXMubWFwVG9TdGF0dXModGhpcy52YWx1ZS5pc01lbW9yeVByZXNzdXJlT2spOwogICAgfSwKCiAgICBrdWJlbGV0U3RhdHVzKCkgewogICAgICByZXR1cm4gdGhpcy5tYXBUb1N0YXR1cyh0aGlzLnZhbHVlLmlzS3ViZWxldE9rKTsKICAgIH0sCgogICAgaW5mb1RhYmxlUm93cygpIHsKICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMudmFsdWUuc3RhdHVzLm5vZGVJbmZvKQogICAgICAgIC5tYXAoKGtleSkgPT4gKHsKICAgICAgICAgIGtleTogICB0aGlzLnQoYG5vZGUuZGV0YWlsLnRhYi5pbmZvLmtleS4keyBrZXkgfWApLAogICAgICAgICAgdmFsdWU6IHRoaXMudmFsdWUuc3RhdHVzLm5vZGVJbmZvW2tleV0KICAgICAgICB9KSk7CiAgICB9LAoKICAgIGltYWdlVGFibGVSb3dzKCkgewogICAgICBjb25zdCBpbWFnZXMgPSB0aGlzLnZhbHVlLnN0YXR1cy5pbWFnZXMgfHwgW107CgogICAgICByZXR1cm4gaW1hZ2VzLm1hcCgoaW1hZ2UpID0+ICh7CiAgICAgICAgLy8gaW1hZ2UubmFtZXNbMV0gdHlwaWNhbGx5IGhhcyB0aGUgdXNlciBmcmllbmRseSBuYW1lIGJ1dCBvbiBvY2Nhc2lvbiB0aGVyZSdzIG9ubHkgb25lIG5hbWUgYW5kIHdlIHNob3VsZCB1c2UgdGhhdAogICAgICAgIG5hbWU6ICAgICAgaW1hZ2UubmFtZXMgPyAoaW1hZ2UubmFtZXNbMV0gfHwgaW1hZ2UubmFtZXNbMF0pIDogJy0tLScsCiAgICAgICAgc2l6ZUJ5dGVzOiBpbWFnZS5zaXplQnl0ZXMKICAgICAgfSkpOwogICAgfSwKCiAgICB0YWludFRhYmxlUm93cygpIHsKICAgICAgcmV0dXJuIHRoaXMudmFsdWUuc3BlYy50YWludHMgfHwgW107CiAgICB9LAoKICAgIGdyYXBoVmFycygpIHsKICAgICAgcmV0dXJuIHsgaW5zdGFuY2U6IGAkeyB0aGlzLnZhbHVlLmludGVybmFsSXAgfTo5Nzk2YCB9OwogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIG1lbW9yeUZvcm1hdHRlcih2YWx1ZSkgewogICAgICBjb25zdCBmb3JtYXRPcHRpb25zID0gewogICAgICAgIGFkZFN1ZmZpeDogZmFsc2UsCiAgICAgICAgaW5jcmVtZW50OiAxMDI0LAogICAgICB9OwoKICAgICAgcmV0dXJuIGZvcm1hdFNpKHZhbHVlLCBmb3JtYXRPcHRpb25zKTsKICAgIH0sCgogICAgbWFwVG9TdGF0dXMoaXNPaykgewogICAgICByZXR1cm4gaXNPayA/ICdzdWNjZXNzJyA6ICdlcnJvcic7CiAgICB9LAoKICAgIGFzeW5jIGxvYWRNZXRyaWNzKCkgewogICAgICBjb25zdCBzY2hlbWEgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjbHVzdGVyL3NjaGVtYUZvciddKE1FVFJJQy5OT0RFKTsKCiAgICAgIGlmIChzY2hlbWEpIHsKICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9maW5kJywgewogICAgICAgICAgdHlwZTogTUVUUklDLk5PREUsCiAgICAgICAgICBpZDogICB0aGlzLnZhbHVlLmlkLAogICAgICAgICAgb3B0OiAgeyBmb3JjZTogdHJ1ZSB9CiAgICAgICAgfSk7CgogICAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7CiAgICAgIH0KICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["node.vue"],"names":[],"mappingsfile":"node.vue","sourceRoot":"node_modules/@rancher/shell/detail","sourcesContent":["<script>\nimport ConsumptionGauge from '@shell/components/ConsumptionGauge';\nimport Alert from '@shell/components/Alert';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport {\n  EFFECT,\n  IMAGE_SIZE,\n  KEY,\n  SIMPLE_NAME,\n  VALUE\n} from '@shell/config/table-headers';\nimport ResourceTabs from '@shell/components/form/ResourceTabs';\nimport { METRIC, POD } from '@shell/config/types';\nimport createEditView from '@shell/mixins/create-edit-view';\nimport { formatSi, exponentNeeded, UNITS } from '@shell/utils/units';\nimport DashboardMetrics from '@shell/components/DashboardMetrics';\nimport { mapGetters } from 'vuex';\nimport { allDashboardsExist } from '@shell/utils/grafana';\nimport Loading from '@shell/components/Loading';\nimport metricPoller from '@shell/mixins/metric-poller';\nimport { FilterArgs, PaginationParamFilter } from '@shell/types/store/pagination.types';\n\nconst NODE_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-node-detail-1/rancher-node-detail?orgId=1';\nconst NODE_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-node-1/rancher-node?orgId=1';\n\nexport default {\n  name: 'DetailNode',\n\n  components: {\n    Alert,\n    ConsumptionGauge,\n    DashboardMetrics,\n    Loading,\n    ResourceTabs,\n    Tab,\n    ResourceTable,\n  },\n\n  mixins: [createEditView, metricPoller],\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n  },\n\n  async fetch() {\n    this.filterByApi = this.$store.getters[`cluster/paginationEnabled`](POD);\n\n    if (this.filterByApi) {\n      // Only get pods associated with this node. The actual values used are from a get all in node model `pods` getter (this works as it just gets all...)\n      const opt = { // Of type ActionFindPageArgs\n        pagination: new FilterArgs({\n          sort:    [{ field: 'metadata.name', asc: true }],\n          filters: PaginationParamFilter.createSingleField({\n            field: 'spec.nodeName',\n            value: this.value.id,\n          })\n        })\n      };\n\n      this.$store.dispatch(`cluster/findPage`, { type: POD, opt });\n    } else {\n      this.$store.dispatch('cluster/findAll', { type: POD });\n    }\n\n    this.showMetrics = await allDashboardsExist(this.$store, this.currentCluster.id, [NODE_METRICS_DETAIL_URL, NODE_METRICS_SUMMARY_URL]);\n  },\n\n  data() {\n    const podSchema = this.$store.getters['cluster/schemaFor'](POD);\n\n    return {\n      metrics:          { cpu: 0, memory: 0 },\n      infoTableHeaders: [\n        {\n          ...KEY,\n          label: '',\n          width: 200\n        },\n        {\n          ...VALUE,\n          label:       '',\n          dashIfEmpty: true,\n        }\n      ],\n      imageTableHeaders: [\n        { ...SIMPLE_NAME, width: null },\n        { ...IMAGE_SIZE, width: 100 } // Ensure one header has a size, all other columns will scale\n      ],\n      taintTableHeaders: [\n        KEY,\n        VALUE,\n        EFFECT\n      ],\n      podTableHeaders: this.$store.getters['type-map/headersFor'](podSchema),\n      NODE_METRICS_DETAIL_URL,\n      NODE_METRICS_SUMMARY_URL,\n      showMetrics:     false,\n      filterByApi:     undefined,\n    };\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n    memoryUnits() {\n      const exponent = exponentNeeded(this.value.ramReserved, 1024);\n\n      return `${ UNITS[exponent] }iB`;\n    },\n\n    pidPressureStatus() {\n      return this.mapToStatus(this.value.isPidPressureOk);\n    },\n\n    diskPressureStatus() {\n      return this.mapToStatus(this.value.isDiskPressureOk);\n    },\n\n    memoryPressureStatus() {\n      return this.mapToStatus(this.value.isMemoryPressureOk);\n    },\n\n    kubeletStatus() {\n      return this.mapToStatus(this.value.isKubeletOk);\n    },\n\n    infoTableRows() {\n      return Object.keys(this.value.status.nodeInfo)\n        .map((key) => ({\n          key:   this.t(`node.detail.tab.info.key.${ key }`),\n          value: this.value.status.nodeInfo[key]\n        }));\n    },\n\n    imageTableRows() {\n      const images = this.value.status.images || [];\n\n      return images.map((image) => ({\n        // image.names[1] typically has the user friendly name but on occasion there's only one name and we should use that\n        name:      image.names ? (image.names[1] || image.names[0]) : '---',\n        sizeBytes: image.sizeBytes\n      }));\n    },\n\n    taintTableRows() {\n      return this.value.spec.taints || [];\n    },\n\n    graphVars() {\n      return { instance: `${ this.value.internalIp }:9796` };\n    }\n  },\n\n  methods: {\n    memoryFormatter(value) {\n      const formatOptions = {\n        addSuffix: false,\n        increment: 1024,\n      };\n\n      return formatSi(value, formatOptions);\n    },\n\n    mapToStatus(isOk) {\n      return isOk ? 'success' : 'error';\n    },\n\n    async loadMetrics() {\n      const schema = this.$store.getters['cluster/schemaFor'](METRIC.NODE);\n\n      if (schema) {\n        await this.$store.dispatch('cluster/find', {\n          type: METRIC.NODE,\n          id:   this.value.id,\n          opt:  { force: true }\n        });\n\n        this.$forceUpdate();\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div\n    v-else\n    class=\"node\"\n  >\n    <div class=\"spacer\" />\n    <div class=\"alerts\">\n      <Alert\n        class=\"mr-10\"\n        :status=\"pidPressureStatus\"\n        :message=\"t('node.detail.glance.pidPressure')\"\n      />\n      <Alert\n        class=\"mr-10\"\n        :status=\"diskPressureStatus\"\n        :message=\"t('node.detail.glance.diskPressure')\"\n      />\n      <Alert\n        class=\"mr-10\"\n        :status=\"memoryPressureStatus\"\n        :message=\"t('node.detail.glance.memoryPressure')\"\n      />\n      <Alert\n        :status=\"kubeletStatus\"\n        :message=\"t('node.detail.glance.kubelet')\"\n      />\n    </div>\n    <div class=\"mt-20 resources\">\n      <ConsumptionGauge\n        :resource-name=\"t('node.detail.glance.consumptionGauge.cpu')\"\n        :capacity=\"value.cpuCapacity\"\n        :used=\"value.cpuUsage\"\n      />\n      <ConsumptionGauge\n        :resource-name=\"t('node.detail.glance.consumptionGauge.memory')\"\n        :capacity=\"value.ramReserved\"\n        :used=\"value.ramUsage\"\n        :units=\"memoryUnits\"\n        :number-formatter=\"memoryFormatter\"\n      />\n      <ConsumptionGauge\n        :resource-name=\"t('node.detail.glance.consumptionGauge.pods')\"\n        :capacity=\"value.podCapacity\"\n        :used=\"value.podConsumed\"\n      />\n    </div>\n    <div class=\"spacer\" />\n    <ResourceTabs\n      v-model=\"value\"\n      :mode=\"mode\"\n    >\n      <Tab\n        name=\"pods\"\n        :label=\"t('node.detail.tab.pods')\"\n        :weight=\"4\"\n      >\n        <ResourceTable\n          key-field=\"_key\"\n          :headers=\"podTableHeaders\"\n          :rows=\"value.pods\"\n          :row-actions=\"false\"\n          :table-actions=\"false\"\n          :search=\"false\"\n        />\n      </Tab>\n      <Tab\n        v-if=\"showMetrics\"\n        :label=\"t('node.detail.tab.metrics')\"\n        name=\"node-metrics\"\n        :weight=\"3\"\n      >\n        <template #default=\"props\">\n          <DashboardMetrics\n            v-if=\"props.active\"\n            :detail-url=\"NODE_METRICS_DETAIL_URL\"\n            :summary-url=\"NODE_METRICS_SUMMARY_URL\"\n            :vars=\"graphVars\"\n            graph-height=\"825px\"\n          />\n        </template>\n      </Tab>\n      <Tab\n        name=\"info\"\n        :label=\"t('node.detail.tab.info.label')\"\n        class=\"bordered-table\"\n        :weight=\"2\"\n      >\n        <ResourceTable\n          key-field=\"_key\"\n          :headers=\"infoTableHeaders\"\n          :rows=\"infoTableRows\"\n          :row-actions=\"false\"\n          :table-actions=\"false\"\n          :show-headers=\"false\"\n          :search=\"false\"\n        />\n      </Tab>\n      <Tab\n        name=\"images\"\n        :label=\"t('node.detail.tab.images')\"\n        :weight=\"1\"\n      >\n        <ResourceTable\n          key-field=\"_key\"\n          :headers=\"imageTableHeaders\"\n          :rows=\"imageTableRows\"\n          :row-actions=\"false\"\n          :table-actions=\"false\"\n        />\n      </Tab>\n      <Tab\n        name=\"taints\"\n        :label=\"t('node.detail.tab.taints')\"\n        :weight=\"0\"\n      >\n        <ResourceTable\n          key-field=\"_key\"\n          :headers=\"taintTableHeaders\"\n          :rows=\"taintTableRows\"\n          :row-actions=\"false\"\n          :table-actions=\"false\"\n          :search=\"false\"\n        />\n      </Tab>\n    </ResourceTabs>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.resources {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  & > * {\n    width: 30%;\n  }\n}\n</style>\n"]}]}