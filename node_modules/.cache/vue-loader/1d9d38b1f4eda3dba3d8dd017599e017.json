{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/CodeMirror.vue?vue&type=style&index=0&id=6922e7cf&lang=scss","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/CodeMirror.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1725271300564},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1725271300920},{"path":"/home/ubuntu/suseconf/node_modules/postcss-loader/src/index.js","mtime":1725271300857},{"path":"/home/ubuntu/suseconf/node_modules/sass-loader/dist/cjs.js","mtime":1725271288422},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiRjb2RlLW1pcnJvci1hbmltYXRpb24tdGltZTogMC4xczsKCi5jb2RlLW1pcnJvciB7CiAgei1pbmRleDogMDsKCiAgLy8gS2V5Ym9hcmQgbWFwcGluZyBvdmVybGFwCiAgLmtleW1hcC5vdmVybGF5IHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICB0b3A6IDdweDsKICAgIHJpZ2h0OiA3cHg7CiAgICB6LWluZGV4OiAxOwogICAgY3Vyc29yOiBwb2ludGVyOwoKICAgIC5rZXltYXAtaW5kaWNhdG9yIHsKICAgICAgd2lkdGg6IDQ4cHg7CiAgICAgIGhlaWdodDogMzJweDsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50OwogICAgICBjb2xvcjogdmFyKC0tZGFya2VyKTsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tb3ZlcmxheS1iZyk7CiAgICAgIGZvbnQtc2l6ZTogMTJweDsKCiAgICAgIC5jbG9zZS1pbmRpY2F0b3IgewogICAgICAgIHdpZHRoOiAwOwoKICAgICAgICAuaWNvbi1jbG9zZSB7CiAgICAgICAgICBjb2xvcjogdmFyKC0tcHJpbWFyeSk7CiAgICAgICAgICBvcGFjaXR5OiAwOwogICAgICAgIH0KICAgICAgfQoKICAgICAgLmtleW1hcC1pY29uIHsKICAgICAgICBmb250LXNpemU6IDI0cHg7CiAgICAgICAgb3BhY2l0eTogMC44OwogICAgICAgIHRyYW5zaXRpb246IG1hcmdpbi1yaWdodCAkY29kZS1taXJyb3ItYW5pbWF0aW9uLXRpbWUgZWFzZS1pbi1vdXQ7CiAgICAgIH0KCiAgICAgICY6aG92ZXIgewogICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXByaW1hcnkpOwogICAgICAgIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWRpdXMpOzsKCiAgICAgICAgLmNsb3NlLWluZGljYXRvciB7CiAgICAgICAgICBtYXJnaW4tbGVmdDogLTZweDsKICAgICAgICAgIHdpZHRoOiBhdXRvOwoKICAgICAgICAgIC5pY29uLWNsb3NlIHsKICAgICAgICAgICAgb3BhY2l0eTogMTsKICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAkY29kZS1taXJyb3ItYW5pbWF0aW9uLXRpbWUgZWFzZS1pbi1vdXQgJGNvZGUtbWlycm9yLWFuaW1hdGlvbi10aW1lOyAvLyBPbmx5IGFuaW1hdGUgd2hlbiBiZWluZyBzaG93bgogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLmtleW1hcC1pY29uIHsKICAgICAgICAgIG9wYWNpdHk6IDAuNjsKICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9CgogIC52dWUtY29kZW1pcnJvciAuQ29kZU1pcnJvciB7CiAgICBoZWlnaHQ6IGluaXRpYWw7CiAgICBiYWNrZ3JvdW5kOiBub25lCiAgfQoKICAmLmFzLXRleHQtYXJlYSB7CiAgICBtaW4taGVpZ2h0OiA0MHB4OwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgZGlzcGxheTogYmxvY2s7CiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgd2lkdGg6IDEwMCU7CiAgICBwYWRkaW5nOiAxMHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW5wdXQtYmcpOwogICAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZGl1cyk7CiAgICBib3JkZXI6IHNvbGlkIHZhcigtLWJvcmRlci13aWR0aCkgdmFyKC0taW5wdXQtYm9yZGVyKTsKICAgIGNvbG9yOiB2YXIoLS1pbnB1dC10ZXh0KTsKCiAgICAmOmhvdmVyIHsKICAgICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1pbnB1dC1ob3Zlci1ib3JkZXIpOwogICAgfQoKICAgICY6Zm9jdXMsICYuZm9jdXMgewogICAgICBvdXRsaW5lOiBub25lOwogICAgICBib3JkZXItY29sb3I6IHZhcigtLW91dGxpbmUpOwogICAgfQoKICAgIC5Db2RlTWlycm9yLXdyYXAgcHJlIHsKICAgICAgd29yZC1icmVhazogYnJlYWstd29yZDsKICAgIH0KICAgIC5Db2RlTWlycm9yLWNvZGUgewogICAgICAuQ29kZU1pcnJvci1saW5lIHsKICAgICAgICAmOm5vdCg6bGFzdC1jaGlsZCk+c3BhbjphZnRlciwKICAgICAgICAuY20tbWFya2Rvd24tc2luZ2xlLXRyYWlsaW5nLXNwYWNlLW9kZDpiZWZvcmUsCiAgICAgICAgLmNtLW1hcmtkb3duLXNpbmdsZS10cmFpbGluZy1zcGFjZS1ldmVuOmJlZm9yZSB7CiAgICAgICAgICBjb2xvcjogdmFyKC0tbXV0ZWQpOwogICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7CiAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTsKICAgICAgICB9CiAgICAgICAgJjpub3QoOmxhc3QtY2hpbGQpPnNwYW46YWZ0ZXIgewogICAgICAgICAgY29udGVudDogJ+KGtSc7CiAgICAgICAgICBtYXJnaW4tbGVmdDogMnB4OwogICAgICAgIH0KICAgICAgICAuY20tbWFya2Rvd24tc2luZ2xlLXRyYWlsaW5nLXNwYWNlLW9kZDpiZWZvcmUsCiAgICAgICAgLmNtLW1hcmtkb3duLXNpbmdsZS10cmFpbGluZy1zcGFjZS1ldmVuOmJlZm9yZSB7CiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICAgIGNvbnRlbnQ6ICfCtyc7CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgLkNvZGVNaXJyb3ItbGluZXMgewogICAgICBjb2xvcjogdmFyKC0taW5wdXQtdGV4dCk7CiAgICAgIHBhZGRpbmc6IDA7CgogICAgICAuQ29kZU1pcnJvci1saW5lID4gc3BhbiA+IHNwYW4gewogICAgICAgICYuY20tb3ZlcmxheSB7CiAgICAgICAgICBmb250LWZhbWlseTogbW9ub3NwYWNlOwogICAgICAgIH0KICAgICAgfQoKICAgICAgLkNvZGVNaXJyb3ItbGluZSA+IHNwYW4gewogICAgICAgIGZvbnQtZmFtaWx5OiAkYm9keS1mb250OwogICAgICB9CiAgICB9CgogICAgLkNvZGVNaXJyb3Itc2l6ZXIgewogICAgICBtaW4taGVpZ2h0OiAyMHB4OwogICAgfQoKICAgIC5Db2RlTWlycm9yLXNlbGVjdGVkIHsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeSkgIWltcG9ydGFudDsKICAgIH0KCiAgICAuQ29kZU1pcnJvci1zZWxlY3RlZHRleHQgewogICAgICBjb2xvcjogdmFyKC0tcHJpbWFyeS10ZXh0KTsKICAgIH0KCiAgICAuQ29kZU1pcnJvci1saW5lOjpzZWxlY3Rpb24sCiAgICAuQ29kZU1pcnJvci1saW5lID4gc3Bhbjo6c2VsZWN0aW9uLAogICAgLkNvZGVNaXJyb3ItbGluZSA+IHNwYW4gPiBzcGFuOjpzZWxlY3Rpb24gewogICAgICBjb2xvcjogdmFyKC0tcHJpbWFyeS10ZXh0KTsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeSk7CiAgICB9CgogICAgLkNvZGVNaXJyb3ItbGluZTo6LW1vei1zZWxlY3Rpb24sCiAgICAuQ29kZU1pcnJvci1saW5lID4gc3Bhbjo6LW1vei1zZWxlY3Rpb24sCiAgICAuQ29kZU1pcnJvci1saW5lID4gc3BhbiA+IHNwYW46Oi1tb3otc2VsZWN0aW9uIHsKICAgICAgY29sb3I6IHZhcigtLXByaW1hcnktdGV4dCk7CiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnkpOwogICAgfQogIH0KfQo="},{"version":3,"sources":["CodeMirror.vue"],"names":[],"mappings":";AA+VA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CodeMirror.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport { KEYMAP } from '@shell/store/prefs';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\n\nexport default {\n  name:  'CodeMirror',\n  props: {\n    /**\n     * Sets the edit mode for Text Area.\n     * @values _EDIT, _VIEW\n     */\n    mode: {\n      type:    String,\n      default: _EDIT\n    },\n    value: {\n      type:     String,\n      required: true,\n    },\n    options: {\n      type:    Object,\n      default: () => {}\n    },\n    asTextArea: {\n      type:    Boolean,\n      default: false\n    },\n    showKeyMapBox: {\n      type:    Boolean,\n      default: false\n    },\n  },\n\n  data() {\n    return {\n      codeMirrorRef:   null,\n      loaded:          false,\n      removeKeyMapBox: false,\n    };\n  },\n\n  computed: {\n    isDisabled() {\n      return this.mode === _VIEW;\n    },\n\n    combinedOptions() {\n      const theme = this.$store.getters['prefs/theme'];\n      const keymap = this.$store.getters['prefs/get'](KEYMAP);\n\n      const out = {\n        // codemirror default options\n        tabSize:                 2,\n        indentWithTabs:          false,\n        mode:                    'yaml',\n        keyMap:                  keymap,\n        theme:                   `base16-${ theme }`,\n        lineNumbers:             true,\n        line:                    true,\n        styleActiveLine:         true,\n        lineWrapping:            true,\n        foldGutter:              true,\n        styleSelectedText:       true,\n        showCursorWhenSelecting: true,\n      };\n\n      if (this.asTextArea) {\n        out.lineNumbers = false;\n        out.tabSize = 0;\n        out.extraKeys = { Tab: false };\n      }\n\n      Object.assign(out, this.options);\n\n      return out;\n    },\n\n    keyMapTooltip() {\n      if (this.combinedOptions?.keyMap) {\n        const name = this.t(`prefs.keymap.${ this.combinedOptions.keyMap }`);\n\n        return this.t('codeMirror.keymap.indicatorToolip', { name });\n      }\n\n      return null;\n    },\n\n    isNonDefaultKeyMap() {\n      return this.combinedOptions?.keyMap !== 'sublime';\n    }\n  },\n\n  created() {\n    if (window.__codeMirrorLoader) {\n      window.__codeMirrorLoader().then(() => {\n        this.loaded = true;\n      });\n    } else {\n      console.error('Code mirror loader not available'); // eslint-disable-line no-console\n    }\n  },\n\n  methods: {\n\n    focus() {\n      if ( this.$refs.codeMirrorRef ) {\n        this.$refs.codeMirrorRef.codemirror.focus();\n      }\n    },\n\n    refresh() {\n      if ( this.$refs.codeMirrorRef ) {\n        this.$refs.codeMirrorRef.refresh();\n      }\n    },\n\n    onReady(codeMirrorRef) {\n      this.$nextTick(() => {\n        codeMirrorRef.refresh();\n        this.codeMirrorRef = codeMirrorRef;\n      });\n      this.$emit('onReady', codeMirrorRef);\n    },\n\n    onInput(newCode) {\n      this.$emit('onInput', newCode);\n    },\n\n    onChanges(codeMirrorRef, changes) {\n      this.$emit('onChanges', codeMirrorRef, changes);\n    },\n\n    onFocus() {\n      this.$emit('onFocus', true);\n    },\n\n    onBlur() {\n      this.$emit('onFocus', false);\n    },\n\n    updateValue(value) {\n      if ( this.$refs.codeMirrorRef ) {\n        this.$refs.codeMirrorRef.codemirror.doc.setValue(value);\n      }\n    },\n\n    closeKeyMapInfo() {\n      this.removeKeyMapBox = true;\n    },\n  }\n};\n</script>\n\n<template>\n  <div\n    class=\"code-mirror\"\n    :class=\"{['as-text-area']: asTextArea}\"\n  >\n    <div v-if=\"loaded\">\n      <div\n        v-if=\"showKeyMapBox && !removeKeyMapBox && keyMapTooltip && isNonDefaultKeyMap\"\n        class=\"keymap overlay\"\n      >\n        <div\n          v-clean-tooltip=\"keyMapTooltip\"\n          class=\"keymap-indicator\"\n          data-testid=\"code-mirror-keymap\"\n          @click=\"closeKeyMapInfo\"\n        >\n          <i class=\"icon icon-keyboard keymap-icon\" />\n          <div class=\"close-indicator\">\n            <i class=\"icon icon-close icon-sm\" />\n          </div>\n        </div>\n      </div>\n      <codemirror\n        ref=\"codeMirrorRef\"\n        :value=\"value\"\n        :options=\"combinedOptions\"\n        :disabled=\"isDisabled\"\n        @ready=\"onReady\"\n        @input=\"onInput\"\n        @changes=\"onChanges\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n      />\n    </div>\n    <div v-else>\n      Loading...\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n  $code-mirror-animation-time: 0.1s;\n\n  .code-mirror {\n    z-index: 0;\n\n    // Keyboard mapping overlap\n    .keymap.overlay {\n      position: absolute;\n      display: flex;\n      top: 7px;\n      right: 7px;\n      z-index: 1;\n      cursor: pointer;\n\n      .keymap-indicator {\n        width: 48px;\n        height: 32px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border: 1px solid transparent;\n        color: var(--darker);\n        background-color: var(--overlay-bg);\n        font-size: 12px;\n\n        .close-indicator {\n          width: 0;\n\n          .icon-close {\n            color: var(--primary);\n            opacity: 0;\n          }\n        }\n\n        .keymap-icon {\n          font-size: 24px;\n          opacity: 0.8;\n          transition: margin-right $code-mirror-animation-time ease-in-out;\n        }\n\n        &:hover {\n          border: 1px solid var(--primary);\n          border-radius: var(--border-radius);;\n\n          .close-indicator {\n            margin-left: -6px;\n            width: auto;\n\n            .icon-close {\n              opacity: 1;\n              transition: opacity $code-mirror-animation-time ease-in-out $code-mirror-animation-time; // Only animate when being shown\n            }\n          }\n\n          .keymap-icon {\n            opacity: 0.6;\n            margin-right: 10px;\n          }\n        }\n      }\n    }\n\n    .vue-codemirror .CodeMirror {\n      height: initial;\n      background: none\n    }\n\n    &.as-text-area {\n      min-height: 40px;\n      position: relative;\n      display: block;\n      box-sizing: border-box;\n      width: 100%;\n      padding: 10px;\n      background-color: var(--input-bg);\n      border-radius: var(--border-radius);\n      border: solid var(--border-width) var(--input-border);\n      color: var(--input-text);\n\n      &:hover {\n        border-color: var(--input-hover-border);\n      }\n\n      &:focus, &.focus {\n        outline: none;\n        border-color: var(--outline);\n      }\n\n      .CodeMirror-wrap pre {\n        word-break: break-word;\n      }\n      .CodeMirror-code {\n        .CodeMirror-line {\n          &:not(:last-child)>span:after,\n          .cm-markdown-single-trailing-space-odd:before,\n          .cm-markdown-single-trailing-space-even:before {\n            color: var(--muted);\n            position: absolute;\n            line-height: 20px;\n            pointer-events: none;\n          }\n          &:not(:last-child)>span:after {\n            content: '↵';\n            margin-left: 2px;\n          }\n          .cm-markdown-single-trailing-space-odd:before,\n          .cm-markdown-single-trailing-space-even:before {\n            font-weight: bold;\n            content: '·';\n          }\n        }\n      }\n\n      .CodeMirror-lines {\n        color: var(--input-text);\n        padding: 0;\n\n        .CodeMirror-line > span > span {\n          &.cm-overlay {\n            font-family: monospace;\n          }\n        }\n\n        .CodeMirror-line > span {\n          font-family: $body-font;\n        }\n      }\n\n      .CodeMirror-sizer {\n        min-height: 20px;\n      }\n\n      .CodeMirror-selected {\n        background-color: var(--primary) !important;\n      }\n\n      .CodeMirror-selectedtext {\n        color: var(--primary-text);\n      }\n\n      .CodeMirror-line::selection,\n      .CodeMirror-line > span::selection,\n      .CodeMirror-line > span > span::selection {\n        color: var(--primary-text);\n        background-color: var(--primary);\n      }\n\n      .CodeMirror-line::-moz-selection,\n      .CodeMirror-line > span::-moz-selection,\n      .CodeMirror-line > span > span::-moz-selection {\n        color: var(--primary-text);\n        background-color: var(--primary);\n      }\n    }\n  }\n</style>\n"]}]}