{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/ClusterBadge.vue?vue&type=style&index=0&id=fb5f6f68&lang=scss&scoped=true","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/ClusterBadge.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1725271300564},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1725271300920},{"path":"/home/ubuntu/suseconf/node_modules/postcss-loader/src/index.js","mtime":1725271300857},{"path":"/home/ubuntu/suseconf/node_modules/sass-loader/dist/cjs.js","mtime":1725271288422},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jbHVzdGVyLWJhZGdlIHsKICBjdXJzb3I6IGRlZmF1bHQ7CiAgYm9yZGVyLXJhZGl1czogMTBweDsKICBmb250LXNpemU6IDEycHg7CiAgcGFkZGluZzogMnB4IDEwcHg7CiAgbWF4LXdpZHRoOiAyNTBweDsKICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsKICBvdmVyZmxvdzogaGlkZGVuOwoKICAgJi1ib3JkZXIgewogICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYm9yZGVyKTsKICAgIGJvcmRlci1yYWRpdXM6IDVweDsKICAgIGNvbG9yOiB2YXIoLS1ib2R5LXRleHQpICFpbXBvcnRhbnQ7IC8vICFpbXBvcnRhbnQgaXMgbmVlZGVkIHRvIG92ZXJyaWRlIHRoZSBjb2xvciBzZXQgYnkgdGhlIGJhZGdlIHdoZW4gdGhlcmUncyBhIHRyYW5zcGFyZW50IGJhY2tncm91bmQuCiAgfQp9Cg=="},{"version":3,"sources":["ClusterBadge.vue"],"names":[],"mappings":";AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ClusterBadge.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\nexport default {\n  props: {\n    cluster: {\n      type:     Object,\n      required: true,\n    },\n  },\n  computed: {\n    hasBadge() {\n      return !!this.cluster?.badge?.text;\n    },\n    showBorders() {\n      return this.cluster?.badge?.color === 'transparent';\n    },\n  }\n};\n</script>\n\n<template>\n  <div\n    v-if=\"hasBadge\"\n    :style=\"{ backgroundColor: cluster.badge.color, color: cluster.badge.textColor }\"\n    class=\"cluster-badge\"\n    :class=\"{'cluster-badge-border': showBorders}\"\n  >\n    {{ cluster.badge.text }}\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .cluster-badge {\n    cursor: default;\n    border-radius: 10px;\n    font-size: 12px;\n    padding: 2px 10px;\n    max-width: 250px;\n    text-overflow: ellipsis;\n    overflow: hidden;\n\n     &-border {\n      border: 1px solid var(--border);\n      border-radius: 5px;\n      color: var(--body-text) !important; // !important is needed to override the color set by the badge when there's a transparent background.\n    }\n  }\n</style>\n"]}]}