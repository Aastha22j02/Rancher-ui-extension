{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/resources.cattle.io.restore.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/resources.cattle.io.restore.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["resources.cattle.io.restore.vue"],"names":[],"mappingsfile":"resources.cattle.io.restore.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\nimport CruResource from '@shell/components/CruResource';\nimport createEditView from '@shell/mixins/create-edit-view';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport Loading from '@shell/components/Loading';\nimport { RadioGroup } from '@components/Form/Radio';\nimport S3 from '@shell/chart/rancher-backup/S3';\nimport { mapGetters } from 'vuex';\nimport { SECRET, BACKUP_RESTORE, CATALOG } from '@shell/config/types';\nimport { allHash } from '@shell/utils/promise';\nimport { get } from '@shell/utils/object';\nimport { _CREATE } from '@shell/config/query-params';\nimport { formatEncryptionSecretNames } from '@shell/utils/formatter';\nimport { FilterArgs, PaginationParamFilter } from '@shell/types/store/pagination.types';\nimport { SECRET_TYPES } from '@shell/config/secret';\n\nexport default {\n\n  components: {\n    CruResource,\n    UnitInput,\n    LabeledInput,\n    Checkbox,\n    S3,\n    LabeledSelect,\n    Loading,\n    RadioGroup,\n  },\n\n  mixins: [createEditView],\n\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    mode: {\n      type:    String,\n      default: 'create'\n    }\n  },\n\n  async fetch() {\n    const hash = await allHash({\n      catalog:     this.$store.dispatch('catalog/load'),\n      resourceSet: this.$store.dispatch('cluster/find', { type: BACKUP_RESTORE.RESOURCE_SET, id: this.value?.spec?.resourceSetName || 'rancher-resource-set' }),\n      apps:        this.$store.dispatch('cluster/findAll', { type: CATALOG.APP })\n    });\n\n    this.apps = hash.apps;\n    this.resourceSet = hash.resourceSet;\n\n    const BRORelease = this.apps.filter((release) => get(release, 'spec.name') === 'rancher-backup')[0];\n\n    this.chartNamespace = BRORelease?.spec.namespace || '';\n\n    if (this.$store.getters[`cluster/paginationEnabled`](SECRET)) {\n      const findPageArgs = { // Of type ActionFindPageArgs\n        namespaced: this.chartNamespace,\n        pagination: new FilterArgs({\n          filters: PaginationParamFilter.createSingleField({\n            field: 'metadata.fields.1',\n            value: SECRET_TYPES.OPAQUE\n          })\n        }),\n      };\n\n      const url = this.$store.getters[`cluster/urlFor`](SECRET, null, findPageArgs);\n      const res = await this.$store.dispatch(`cluster/request`, { url });\n\n      this.secrets = res?.data || [];\n    } else {\n      this.secrets = await this.$store.dispatch('cluster/findAll', { type: SECRET });\n    }\n  },\n\n  data() {\n    if (!this.value.spec) {\n      this.$set(this.value, 'spec', { prune: true, deleteTimeoutSeconds: 10 });\n    }\n\n    if (!this.value.metadata.name) {\n      this.value.metadata.generateName = 'restore-';\n    }\n\n    let s3 = {};\n    let storageSource = 'useDefault';\n\n    if (this.value?.spec?.storageLocation?.s3) {\n      storageSource = 'configureS3';\n      s3 = this.value.spec.storageLocation.s3;\n    }\n\n    return {\n      secrets:        [],\n      allBackups:     [],\n      s3,\n      targetBackup:   null,\n      storageSource,\n      apps:           [],\n      chartNamespace: null,\n    };\n  },\n\n  computed: {\n    isClone() {\n      return this.mode === _CREATE && !!this.liveValue.id;\n    },\n\n    availableBackups() {\n      return this.allBackups.filter((backup) => backup.state !== 'error');\n    },\n\n    encryptionSecretNames() {\n      return formatEncryptionSecretNames(this.secrets, this.chartNamespace);\n    },\n\n    isEncrypted() {\n      return !!((this.value.spec.backupFilename || '').match(/.*\\.enc$/));\n    },\n\n    radioOptions() {\n      const options = ['useDefault', 'configureS3'];\n      const labels = [this.t('backupRestoreOperator.restoreFrom.default'), this.t('backupRestoreOperator.restoreFrom.s3')];\n\n      if (this.availableBackups.length || this.storageSource === 'useBackup') {\n        options.unshift('useBackup');\n        labels.unshift( this.t('backupRestoreOperator.restoreFrom.existing'));\n      }\n\n      return { options, labels };\n    },\n\n    validationPassed() {\n      const hasBackupFile = (!!this.value.spec.backupFilename && !!this.value.spec.backupFilename.length);\n      const hasEncryption = !!this.value.spec.encryptionConfigSecretName;\n\n      if (!hasBackupFile) {\n        return false;\n      }\n\n      return !this.isEncrypted || hasEncryption;\n    },\n\n    targetBackupFilename() {\n      return get(this.targetBackup, 'status.filename');\n    },\n\n    ...mapGetters({ t: 'i18n/t' })\n  },\n\n  watch: {\n    storageSource(neu, old) {\n      if (neu === 'useDefault') {\n        delete this.value.spec.storageLocation;\n        delete this.value.spec.backupFilename;\n      } else if (!this.value.spec.storageLocation && neu === 'configureS3') {\n        this.$set(this.value.spec, 'storageLocation', { s3: {} });\n        this.s3 = this.value.spec.storageLocation.s3;\n      }\n      if (neu === 'useBackup') {\n        delete this.value.spec.storageLocation;\n\n        if (this.availableBackups.length === 1) {\n          this.updateTargetBackup(this.availableBackups[0]);\n        }\n      } else {\n        delete this.value.spec.backupFilename;\n        this.value.spec.storageLocation = { s3: this.s3 };\n      }\n    },\n\n    availableBackups(neu, old) {\n      if ((neu.length && !old.length) && !this.isClone && this.mode !== 'view') {\n        this.storageSource = 'useBackup';\n      }\n    },\n\n    targetBackupFilename(neu) {\n      this.value.spec.backupFilename = neu;\n    }\n  },\n\n  methods: {\n    updateTargetBackup(neu) {\n      const out = { backupFilename: neu?.status?.filename };\n\n      if (neu?.spec?.storageLocation?.s3) {\n        out.storageLocation = neu.spec.storageLocation;\n      } else {\n        delete this.value.spec.storageLocation;\n      }\n      if (neu.spec.encryptionConfigSecretName && this.encryptionSecretNames.includes(neu.spec.encryptionConfigSecretName)) {\n        out.encryptionConfigSecretName = neu.spec.encryptionConfigSecretName;\n      }\n      this.$set(this.value, 'spec', { ...this.value.spec, ...out });\n\n      this.targetBackup = neu;\n    }\n  }\n\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n\n  <CruResource\n    v-else\n    :validation-passed=\"validationPassed\"\n    :done-route=\"doneRoute\"\n    :resource=\"value\"\n    :mode=\"mode\"\n    @finish=\"save\"\n  >\n    <template>\n      <div>\n        <div class=\"row mb-10\">\n          <div class=\"col span-12\">\n            <RadioGroup\n              v-model=\"storageSource\"\n              name=\"storageSource\"\n              :label=\"t('backupRestoreOperator.s3.titles.backupLocation')\"\n              :options=\"radioOptions.options\"\n              :labels=\"radioOptions.labels\"\n              :mode=\"mode\"\n            />\n          </div>\n        </div>\n        <template v-if=\"storageSource === 'configureS3'\">\n          <S3\n            v-model=\"s3\"\n            :mode=\"mode\"\n          />\n        </template>\n        <div\n          v-else-if=\"storageSource==='useBackup'\"\n          class=\"row mb-10\"\n        >\n          <div class=\"col span-6\">\n            <LabeledSelect\n              :disabled=\"!availableBackups.length\"\n              :value=\"targetBackup\"\n              :options=\"availableBackups\"\n              :mode=\"mode\"\n              option-label=\"metadata.name\"\n              :label=\"t('backupRestoreOperator.targetBackup')\"\n              @input=\"updateTargetBackup\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"spacer\" />\n\n      <div>\n        <div\n          :style=\"{'align-items':'center'}\"\n          class=\"row mb-10\"\n        >\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"value.spec.backupFilename\"\n              :spellcheck=\"false\"\n              required\n              :mode=\"mode\"\n              :label=\"t('backupRestoreOperator.backupFilename')\"\n            />\n          </div>\n          <div class=\"col span-6\">\n            <LabeledSelect\n              v-if=\"isEncrypted\"\n              v-model=\"value.spec.encryptionConfigSecretName\"\n              :status=\"mode === 'view' ? null : 'warning'\"\n              :tooltip=\"mode === 'view' ? null : t('backupRestoreOperator.encryptionConfigName.restoretip')\"\n              :hover-tooltip=\"true\"\n              :mode=\"mode\"\n              :options=\"encryptionSecretNames\"\n              :label=\"t('backupRestoreOperator.encryptionConfigName.label')\"\n            />\n          </div>\n        </div>\n        <div\n          :style=\"{'align-items':'center'}\"\n          class=\"row\"\n        >\n          <div class=\"col span-6\">\n            <Checkbox\n              v-model=\"value.spec.prune\"\n              class=\"mb-5\"\n              :label=\"t('backupRestoreOperator.prune.label')\"\n              :mode=\"mode\"\n            >\n              <template #label>\n                <span\n                  v-clean-tooltip=\"t('backupRestoreOperator.prune.tip')\"\n                  class=\"text-label\"\n                >\n                  {{ t('backupRestoreOperator.prune.label') }} <i class=\"icon icon-info\" />\n                </span>\n              </template>\n            </Checkbox>\n            <UnitInput\n              v-if=\"value.spec.prune\"\n              v-model=\"value.spec.deleteTimeoutSeconds\"\n              :suffix=\"t('suffix.seconds', {count: value.spec.deleteTimeoutSeconds})\"\n              :mode=\"mode\"\n              :label=\"t('backupRestoreOperator.deleteTimeout.label')\"\n            >\n              <template #label>\n                <label\n                  v-clean-tooltip=\"t('backupRestoreOperator.deleteTimeout.tip')\"\n                  class=\"has-tooltip\"\n                >\n                  {{ t('backupRestoreOperator.deleteTimeout.label') }} <i class=\"icon icon-info\" />\n                </label>\n              </template>\n            </UnitInput>\n          </div>\n        </div>\n      </div>\n    </template>\n  </CruResource>\n</template>\n"]}]}