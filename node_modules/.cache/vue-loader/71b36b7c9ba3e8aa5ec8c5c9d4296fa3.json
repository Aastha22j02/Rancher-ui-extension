{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/c/_cluster/auth/user.retention/index.vue?vue&type=style&index=0&id=5d2d43ae&lang=scss&scoped=true","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/pages/c/_cluster/auth/user.retention/index.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1725271300564},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1725271300920},{"path":"/home/ubuntu/suseconf/node_modules/postcss-loader/src/index.js","mtime":1725271300857},{"path":"/home/ubuntu/suseconf/node_modules/sass-loader/dist/cjs.js","mtime":1725271288422},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5mb3JtLXVzZXItcmV0ZW50aW9uIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXg6IDE7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBnYXA6IDEuNXJlbTsKfQoKLmZvb3Rlci11c2VyLXJldGVudGlvbiB7CiAgYm9yZGVyLXRvcDogdmFyKC0taGVhZGVyLWJvcmRlci1zaXplKSBzb2xpZCB2YXIoLS1oZWFkZXItYm9yZGVyKTsKICByaWdodDogMDsKICBwb3NpdGlvbjogc3RpY2t5OwogIGJvdHRvbTogMDsKICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1oZWFkZXItYmcpOwogIG1hcmdpbi1sZWZ0OiAtMjBweDsKICBtYXJnaW4tcmlnaHQ6IC0yMHB4OwogIG1hcmdpbi1ib3R0b206IC0yMHB4OwogIG1hcmdpbi10b3A6IDIwcHg7CiAgcGFkZGluZzogMTBweCAyMHB4OwoKICA6OnYtZGVlcCAuc3BhY2VyLXNtYWxsIHsKICAgIHBhZGRpbmc6IDA7CiAgfQp9CgouaW5wdXQtZmllbGRzZXQgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBnYXA6IDAuNzVyZW07CgogICYuY29uZGVuc2VkIHsKICAgIGdhcDogMC4yNXJlbTsKICB9CgogICYucHQtMTIgewogICAgcGFkZGluZy10b3A6IDNyZW07CiAgfQp9CgouaW5wdXQtZmllbGQgewogIG1heC13aWR0aDogMjRyZW0KfQoKLmlucHV0LWRldGFpbCB7CiAgY29sb3I6IHZhcigtLWlucHV0LWxhYmVsKTsKICBwYWRkaW5nLWxlZnQ6IDYxcHg7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAiYA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/@rancher/shell/pages/c/_cluster/auth/user.retention","sourcesContent":["<script lang=\"ts\" setup>\nimport { ref, reactive, watch, onMounted } from 'vue';\nimport { useRouter, onBeforeRouteUpdate } from 'vue-router/composables';\n\nimport UserRetentionHeader from '@shell/components/user.retention/user-retention-header.vue';\nimport Footer from '@shell/components/form/Footer.vue';\nimport { useStore } from '@shell/composables/useStore';\nimport { useI18n } from '@shell/composables/useI18n';\nimport { MANAGEMENT } from '@shell/config/types';\nimport { SETTING } from '@shell/config/settings';\nimport { isAdminUser } from '@shell/store/type-map';\n\nimport Banner from '@components/Banner/Banner.vue';\nimport Checkbox from '@components/Form/Checkbox/Checkbox.vue';\nimport LabeledInput from '@components/Form/LabeledInput/LabeledInput.vue';\nimport { ToggleSwitch } from '@components/Form/ToggleSwitch';\n\nimport { isValidCron } from 'cron-validator';\nimport dayjs from 'dayjs';\n\ntype Links = {\n  remove: string;\n  self: string;\n  update: string;\n  view: string;\n};\n\ntype FieldsV1 = {\n  'f:customized': {};\n  'f:default': {};\n  'f:source': {};\n  'f:value': {};\n};\n\ntype ManagedFields = {\n  apiVersion: string;\n  fieldsType: string;\n  fieldsV1: FieldsV1;\n  manager: string;\n  operation: string;\n  time: string;\n};\n\ntype Metadata = {\n  creationTimestamp: string;\n  fields: string[];\n  generation: number;\n  managedFields: ManagedFields[];\n  name: string;\n  relationships: null;\n  resourceVersion: string;\n  state: {\n    error: boolean;\n    message: string;\n    name: string;\n    transitioning: boolean;\n  };\n  uid: string;\n};\n\ntype Setting = {\n  id: string;\n  type: string;\n  links: Links;\n  apiVersion: string;\n  customized: boolean;\n  default: string;\n  kind: string;\n  metadata: Metadata;\n  source: string;\n  value: string | null;\n  save: () => void;\n};\n\nconst store = useStore();\nconst userRetentionSettings = reactive<{[id: string]: string | null }>({\n  [SETTING.DISABLE_INACTIVE_USER_AFTER]: null,\n  [SETTING.DELETE_INACTIVE_USER_AFTER]:  null,\n  [SETTING.USER_RETENTION_CRON]:         null,\n  [SETTING.USER_RETENTION_DRY_RUN]:      null,\n  [SETTING.USER_LAST_LOGIN_DEFAULT]:     null,\n});\nconst disableAfterPeriod = ref(false);\nconst deleteAfterPeriod = ref(false);\nconst loading = ref(true);\nlet settings: { [id: string]: Setting } = {};\n\n/**\n * Watches the disable after period and removes the value if the checkbox is\n * not selected. Lookup the value when the checkbox is selected.\n */\nwatch(disableAfterPeriod, (newVal) => {\n  if (!newVal) {\n    userRetentionSettings[SETTING.DISABLE_INACTIVE_USER_AFTER] = null;\n\n    return;\n  }\n\n  userRetentionSettings[SETTING.DISABLE_INACTIVE_USER_AFTER] = settings[SETTING.DISABLE_INACTIVE_USER_AFTER].value;\n});\n\n/**\n * Watches the delete after period and removes the value if the checkbox is\n * not selected. Lookup the value when the checkbox is selected.\n */\nwatch(deleteAfterPeriod, (newVal) => {\n  if (!newVal) {\n    userRetentionSettings[SETTING.DELETE_INACTIVE_USER_AFTER] = null;\n\n    return;\n  }\n\n  userRetentionSettings[SETTING.DELETE_INACTIVE_USER_AFTER] = settings[SETTING.DELETE_INACTIVE_USER_AFTER].value;\n});\n\n/**\n * Watches both the disable and delete after periods. Clear all values in\n * the form if both checkboxes are not selected. If one of the checkboxes\n * are selected, lookup each of the values in the form.\n */\nwatch([disableAfterPeriod, deleteAfterPeriod], ([newDisableAfterPeriod, newDeleteAfterPeriod]) => {\n  if (!newDisableAfterPeriod && !newDeleteAfterPeriod) {\n    ids.forEach((key) => {\n      userRetentionSettings[key] = null;\n    });\n\n    validateUserRetentionCron();\n\n    return;\n  }\n\n  ids.filter((id) => ![SETTING.DISABLE_INACTIVE_USER_AFTER, SETTING.DELETE_INACTIVE_USER_AFTER].includes(id))\n    .forEach(assignSettings);\n\n  validateUserRetentionCron();\n});\n\nconst assignSettings = (key: string) => {\n  if (settings[key].id === SETTING.USER_LAST_LOGIN_DEFAULT && settings[key].value && typeof settings[key].value === 'string') {\n    const value = settings[key].value as string;\n\n    userRetentionSettings[key] = dayjs(value).valueOf().toString();\n\n    return;\n  }\n\n  userRetentionSettings[key] = settings[key].value;\n};\n\nconst fetchSetting = async(id: string) => {\n  return await store.dispatch('management/find', { type: MANAGEMENT.SETTING, id });\n};\n\nconst ids = Object.keys(userRetentionSettings);\nconst settingPromises = ids.map((id) => fetchSetting(id));\n\nonMounted(async() => {\n  settings = await Promise\n    .all(settingPromises)\n    .then((results) => results.reduce((acc, result) => {\n      return {\n        [result.id]: result,\n        ...acc,\n      };\n    }, { }));\n\n  ids.forEach(assignSettings);\n\n  disableAfterPeriod.value = !!userRetentionSettings[SETTING.DISABLE_INACTIVE_USER_AFTER];\n  deleteAfterPeriod.value = !!userRetentionSettings[SETTING.DELETE_INACTIVE_USER_AFTER];\n  loading.value = false;\n\n  validateUserRetentionCron();\n});\n\nconst isFormValid = ref(false);\nconst { t } = useI18n(store);\nconst validateUserRetentionCron = () => {\n  const { [SETTING.USER_RETENTION_CRON]: cronSetting } = userRetentionSettings;\n\n  // Only require user retention cron when disable or delete after are active\n  if (!disableAfterPeriod.value && !deleteAfterPeriod.value) {\n    isFormValid.value = true;\n\n    return;\n  }\n\n  if (!cronSetting) {\n    isFormValid.value = false;\n\n    return;\n  }\n\n  if (typeof cronSetting === 'string' && !isValidCron(cronSetting)) {\n    isFormValid.value = false;\n\n    return t('user.retention.edit.form.cron.errorMessage');\n  }\n\n  isFormValid.value = true;\n};\n\nconst error = ref<string | null>(null);\nconst save = async(btnCB: (arg: boolean) => void) => {\n  try {\n    error.value = null;\n    ids.forEach((key) => {\n      settings[key].value = userRetentionSettings[key];\n\n      if (key === SETTING.USER_LAST_LOGIN_DEFAULT && userRetentionSettings[key]) {\n        settings[key].value = dayjs(Number(userRetentionSettings[key])).format();\n      }\n    });\n\n    await Promise.all(ids.map((setting) => settings[setting].save()));\n\n    btnCB(true);\n    store.dispatch(\n      'growl/success',\n      {\n        title:   t('user.retention.growl.title'),\n        message: t('user.retention.growl.message'),\n      },\n      { root: true }\n    );\n    routeBack();\n  } catch (err) {\n    error.value = (err as Error).message;\n    btnCB(false);\n  }\n};\n\nconst router = useRouter();\nconst routeBack = () => {\n  router.back();\n};\n\nonBeforeRouteUpdate((_to: unknown, _from: unknown) => {\n  if (!isAdminUser(store.getters)) {\n    router.replace({ name: 'home' });\n  }\n});\n</script>\n\n<template>\n  <div>\n    <user-retention-header />\n    <div\n      v-if=\"!loading\"\n      class=\"form-user-retention\"\n    >\n      <banner\n        v-if=\"error\"\n        color=\"error\"\n      >\n        {{ error }}\n      </banner>\n      <div class=\"input-fieldset\">\n        <checkbox\n          v-model=\"disableAfterPeriod\"\n          data-testid=\"disableAfterPeriod\"\n          :label=\"t('user.retention.edit.form.disableAfter.checkbox')\"\n        />\n        <labeled-input\n          v-model=\"userRetentionSettings[SETTING.DISABLE_INACTIVE_USER_AFTER]\"\n          data-testid=\"disableAfterPeriodInput\"\n          :tooltip=\"t('user.retention.edit.form.disableAfter.input.tooltip')\"\n          class=\"input-field\"\n          :label=\"t('user.retention.edit.form.disableAfter.input.label')\"\n          :disabled=\"!disableAfterPeriod\"\n        />\n      </div>\n      <div class=\"input-fieldset\">\n        <checkbox\n          v-model=\"deleteAfterPeriod\"\n          data-testid=\"deleteAfterPeriod\"\n          :label=\"t('user.retention.edit.form.deleteAfter.checkbox')\"\n        />\n        <labeled-input\n          v-model=\"userRetentionSettings[SETTING.DELETE_INACTIVE_USER_AFTER]\"\n          data-testid=\"deleteAfterPeriodInput\"\n          :tooltip=\"t('user.retention.edit.form.deleteAfter.input.tooltip')\"\n          class=\"input-field\"\n          :label=\"t('user.retention.edit.form.deleteAfter.input.label')\"\n          :sub-label=\"t('user.retention.edit.form.deleteAfter.input.subLabel')\"\n          :disabled=\"!deleteAfterPeriod\"\n        />\n      </div>\n      <template\n        v-if=\"disableAfterPeriod || deleteAfterPeriod\"\n      >\n        <div class=\"input-fieldset pt-12\">\n          <labeled-input\n            v-model=\"userRetentionSettings[SETTING.USER_RETENTION_CRON]\"\n            data-testid=\"userRetentionCron\"\n            class=\"input-field\"\n            required\n            type=\"cron\"\n            :tooltip=\"t('user.retention.edit.form.cron.subLabel')\"\n            :rules=\"[validateUserRetentionCron]\"\n            :label=\"t('user.retention.edit.form.cron.label')\"\n            @input=\"validateUserRetentionCron\"\n          />\n        </div>\n        <div class=\"input-fieldset condensed pt-12\">\n          <toggle-switch\n            v-model=\"userRetentionSettings[SETTING.USER_RETENTION_DRY_RUN]\"\n            data-testid=\"userRetentionDryRun\"\n            :onValue=\"'true'\"\n            :offValue=\"'false'\"\n            :on-label=\"t('user.retention.edit.form.dryRun.label')\"\n          />\n          <span class=\"input-detail\">{{ t('user.retention.edit.form.dryRun.subLabel') }}</span>\n        </div>\n        <div class=\"input-fieldset condensed\">\n          <labeled-input\n            v-model=\"userRetentionSettings[SETTING.USER_LAST_LOGIN_DEFAULT]\"\n            data-testid=\"userLastLoginDefault\"\n            class=\"input-field\"\n            :label=\"t('user.retention.edit.form.defaultLastLogin.label')\"\n            :sub-label=\"t('user.retention.edit.form.defaultLastLogin.subLabel')\"\n            :placeholder=\"t('user.retention.edit.form.defaultLastLogin.placeholder')\"\n          />\n        </div>\n      </template>\n    </div>\n    <Footer\n      class=\"footer-user-retention\"\n      mode=\"edit\"\n      :disable-save=\"!isFormValid\"\n      @save=\"save\"\n      @done=\"routeBack\"\n    />\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .form-user-retention {\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    gap: 1.5rem;\n  }\n\n  .footer-user-retention {\n    border-top: var(--header-border-size) solid var(--header-border);\n    right: 0;\n    position: sticky;\n    bottom: 0;\n    background-color: var(--header-bg);\n    margin-left: -20px;\n    margin-right: -20px;\n    margin-bottom: -20px;\n    margin-top: 20px;\n    padding: 10px 20px;\n\n    ::v-deep .spacer-small {\n      padding: 0;\n    }\n  }\n\n  .input-fieldset {\n    display: flex;\n    flex-direction: column;\n    gap: 0.75rem;\n\n    &.condensed {\n      gap: 0.25rem;\n    }\n\n    &.pt-12 {\n      padding-top: 3rem;\n    }\n  }\n\n  .input-field {\n    max-width: 24rem\n  }\n\n  .input-detail {\n    color: var(--input-label);\n    padding-left: 61px;\n  }\n</style>\n"]}]}