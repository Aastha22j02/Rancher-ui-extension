{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/form/ResourceLabeledSelect.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/form/ResourceLabeledSelect.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IFByb3BUeXBlLCBkZWZpbmVDb21wb25lbnQgfSBmcm9tICd2dWUnOwppbXBvcnQgTGFiZWxlZFNlbGVjdCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0xhYmVsZWRTZWxlY3QudnVlJzsKaW1wb3J0IHsgUGFnaW5hdGlvblBhcmFtRmlsdGVyIH0gZnJvbSAnQHNoZWxsL3R5cGVzL3N0b3JlL3BhZ2luYXRpb24udHlwZXMnOwppbXBvcnQgeyBsYWJlbFNlbGVjdFBhZ2luYXRpb25GdW5jdGlvbiwgTGFiZWxTZWxlY3RQYWdpbmF0aW9uRnVuY3Rpb25PcHRpb25zIH0gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9sYWJlbGVkLXNlbGVjdC11dGlscy9sYWJlbGVkLXNlbGVjdC51dGlscyc7CmltcG9ydCB7IExhYmVsU2VsZWN0UGFnaW5hdGVGbiwgTGFiZWxTZWxlY3RQYWdpbmF0ZUZuT3B0aW9ucywgTGFiZWxTZWxlY3RQYWdpbmF0ZUZuUmVzcG9uc2UgfSBmcm9tICdAc2hlbGwvdHlwZXMvY29tcG9uZW50cy9sYWJlbGVkU2VsZWN0JzsKCnR5cGUgUGFnaW5hdGVUeXBlT3ZlcnJpZGVzRm4gPSAob3B0czogTGFiZWxTZWxlY3RQYWdpbmF0aW9uRnVuY3Rpb25PcHRpb25zKSA9PiBMYWJlbFNlbGVjdFBhZ2luYXRpb25GdW5jdGlvbk9wdGlvbnM7CgppbnRlcmZhY2UgU2hhcmVkU2V0dGluZ3MgewogIC8qKgogICAqIFByb3ZpZGUgc3BlY2lmaWMgTGFiZWxTZWxlY3Qgb3B0aW9ucyBmb3IgdGhpcyBtb2RlIChwYWdpbmF0ZWQgLyBub3QgcGFnaW5hdGVkKQogICAqLwogIGxhYmVsU2VsZWN0T3B0aW9ucz86IHsgW2tleTogc3RyaW5nXTogYW55IH0sCiAgLyoqCiAgICogTWFwIHRoZSByZXNvdXJjZXMgc2hvd24gaW4gTGFiZWxTZWxlY3QKICAgKi8KICBtYXBSZXN1bHQ/OiAocmVzb3VyY2VzOiBhbnlbXSkgPT4gYW55W10KfQoKLyoqCiAqIFNldHRpbmdzIHRvIHVzZSB3aGVuIHRoZSBMYWJlbFNlbGVjdCBpcyBwYWdpbmF0aW5nCiAqLwpleHBvcnQgaW50ZXJmYWNlIFJlc291cmNlTGFiZWxlZFNlbGVjdFBhZ2luYXRlU2V0dGluZ3MgZXh0ZW5kcyBTaGFyZWRTZXR0aW5ncyB7CiAgLyoqCiAgICogT3ZlcnJpZGUgdGhlIGNvbnZpZW5jZSBmdW5jdGlvbiB3aGljaCBmZXRjaGVzIGEgcGFnZSBvZiByZXN1bHRzCiAgICovCiAgb3ZlcnJpZGVSZXF1ZXN0PzogTGFiZWxTZWxlY3RQYWdpbmF0ZUZuLAogIC8qKgogICAqIE92ZXJyaWRlIHRoZSBkZWZhdWx0IHNldHRpbmdzIHVzZWQgaW4gdGhlIGNvbnZpZW5jZSBmdW5jdGlvbiB0byBmZXRjaCBhIHBhZ2Ugb2YgcmVzdWx0cwogICAqLwogIHJlcXVlc3RTZXR0aW5ncz86IFBhZ2luYXRlVHlwZU92ZXJyaWRlc0ZuLAp9CgovKioKICogU2V0dGluZ3MgdG8gdXNlIHdoZW4gdGhlIExhYmVsU2VsZWN0IGlzIGZldGNoaW5nIGFsbCByZXNvdXJjZXMgKG5vdCBwYWdpbmF0aW5nKQogKi8KZXhwb3J0IHR5cGUgUmVzb3VyY2VMYWJlbGVkU2VsZWN0U2V0dGluZ3MgPSBTaGFyZWRTZXR0aW5ncwoKLyoqCiAqIEZvcmNlIGEgc3BlY2lmaWMgbW9kZQogKi8KZXhwb3J0IGVudW0gUkVTT1VSQ0VfTEFCRUxfU0VMRUNUX01PREUgewogIC8qKgogICAqIEZldGNoIGFsbCByZXNvdXJjZXMKICAgKi8KICBBTExfUkVTT1VSQ0VTID0gJ0FMTCcsIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnMKICAvKioKICAgKiBEZXRlcm1pbmUgaWYgYWxsIHJlc291cmNlcyBhcmUgZmV0Y2hlZCBnaXZlbiBzeXN0ZW0gc2V0dGluZ3MKICAgKi8KICBEWU5BTUlDID0gJ0RZTkFNSUMnLCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzCn0KCi8qKgogKiBDb252aWVuY2Ugd3JhcHBlciBhcm91bmQgdGhlIExhYmVsU2VsZWN0IGNvbXBvbmVudCB0byBzdXBwb3J0IHBhZ2luYXRpb24KICoKICogSGFuZGxlcwogKgogKiAxKSBDb25kaXRpb25hbGx5IGVuYWJsaW5nIHRoZSBwYWdpbmF0aW9uIGZlYXR1cmUgZ2l2ZW4gc3lzdGVtIHNldHRpbmdzCiAqIDIpIEhlbHBlciBmdW5jdGlvbiB0byBmZXRjaCB0aGUgcGFnaW5hdGlvbiByZXN1bHQKICoKICogQSBudW1iZXIgb2Ygd2F5cyBjYW4gYmUgcHJvdmlkZWQgdG8gb3ZlcnJpZGUgdGhlIGNvbnZpZW5lbmNlcyAoc2VlIHByb3BzKQogKi8KZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnUmVzb3VyY2VMYWJlbGVkU2VsZWN0JywKCiAgY29tcG9uZW50czogeyBMYWJlbGVkU2VsZWN0IH0sCgogIHByb3BzOiB7CiAgICAvKioKICAgICAqIFJlc291cmNlIHRvIHNob3cKICAgICAqLwogICAgcmVzb3VyY2VUeXBlOiB7CiAgICAgIHR5cGU6ICAgICBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAoKICAgIGluU3RvcmU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnY2x1c3RlcicsCiAgICB9LAoKICAgIC8qKgogICAgICogRGV0ZXJtaW5lIGlmIHBhZ2luYXRpb24gaXMgdXNlZCB2aWEgc2V0dGluZ3MgKERZTkFNSUMpIG9yIGhhcmRjb2RlIG9mZgogICAgICovCiAgICBwYWdpbmF0ZU1vZGU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nIGFzIFByb3BUeXBlPFJFU09VUkNFX0xBQkVMX1NFTEVDVF9NT0RFPiwKICAgICAgZGVmYXVsdDogUkVTT1VSQ0VfTEFCRUxfU0VMRUNUX01PREUuRFlOQU1JQywKICAgIH0sCgogICAgLyoqCiAgICAgKiBTcGVjaWZpYyBzZXR0aW5ncyB0byB1c2Ugd2hlbiB3ZSdyZSBzaG93aW5nIGFsbCByZXN1bHRzCiAgICAgKi8KICAgIGFsbFJlc291cmNlc1NldHRpbmdzOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCBhcyBQcm9wVHlwZTxSZXNvdXJjZUxhYmVsZWRTZWxlY3RTZXR0aW5ncz4sCiAgICAgIGRlZmF1bHQ6IG51bGwsCiAgICB9LAoKICAgIC8qKgogICAgICogU3BlY2lmaWMgc2V0dGluZ3MgdG8gdXNlIHdoZW4gd2UncmUgc2hvd2luZyBwYWdpbmF0ZWQgcmVzdWx0cwogICAgICovCiAgICBwYWdpbmF0ZWRSZXNvdXJjZVNldHRpbmdzOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCBhcyBQcm9wVHlwZTxSZXNvdXJjZUxhYmVsZWRTZWxlY3RQYWdpbmF0ZVNldHRpbmdzPiwKICAgICAgZGVmYXVsdDogbnVsbCwKICAgIH0sCiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7IHBhZ2luYXRlOiBmYWxzZSB9OwogIH0sCgogIGFzeW5jIGZldGNoKCkgewogICAgc3dpdGNoICh0aGlzLnBhZ2luYXRlTW9kZSkgewogICAgY2FzZSBSRVNPVVJDRV9MQUJFTF9TRUxFQ1RfTU9ERS5BTExfUkVTT1VSQ0VTOgogICAgICB0aGlzLnBhZ2luYXRlID0gZmFsc2U7CiAgICAgIGJyZWFrOwogICAgY2FzZSBSRVNPVVJDRV9MQUJFTF9TRUxFQ1RfTU9ERS5EWU5BTUlDOgogICAgICB0aGlzLnBhZ2luYXRlID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1tgJHsgdGhpcy5pblN0b3JlIH0vcGFnaW5hdGlvbkVuYWJsZWRgXSh0aGlzLnJlc291cmNlVHlwZSk7CiAgICAgIGJyZWFrOwogICAgfQoKICAgIGlmICghdGhpcy5wYWdpbmF0ZSkgewogICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaChgJHsgdGhpcy5pblN0b3JlIH0vZmluZEFsbGAsIHsgdHlwZTogdGhpcy5yZXNvdXJjZVR5cGUgfSk7CiAgICB9CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGxhYmVsU2VsZWN0QXR0cmlidXRlcygpIHsKICAgICAgcmV0dXJuIHRoaXMucGFnaW5hdGUgPyB7CiAgICAgICAgLi4udGhpcy4kYXR0cnMsCiAgICAgICAgLi4udGhpcy5wYWdpbmF0ZWRSZXNvdXJjZVNldHRpbmdzPy5sYWJlbFNlbGVjdE9wdGlvbnMgfHwge30KICAgICAgfSA6IHsKICAgICAgICAuLi50aGlzLiRhdHRycywKICAgICAgICAuLi50aGlzLmFsbFJlc291cmNlc1NldHRpbmdzPy5sYWJlbFNlbGVjdE9wdGlvbnMgfHwge30KICAgICAgfTsKICAgIH0sCgogICAgYWxsT2ZUeXBlKCkgewogICAgICBpZiAodGhpcy4kZmV0Y2hTdGF0ZS5wZW5kaW5nIHx8IHRoaXMucGFnaW5hdGUpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KCiAgICAgIGNvbnN0IGFsbCA9IHRoaXMuJHN0b3JlLmdldHRlcnNbYCR7IHRoaXMuaW5TdG9yZSB9L2FsbGBdKHRoaXMucmVzb3VyY2VUeXBlKTsKCiAgICAgIHJldHVybiB0aGlzLmFsbFJlc291cmNlc1NldHRpbmdzPy5tYXBSZXN1bHQgPyB0aGlzLmFsbFJlc291cmNlc1NldHRpbmdzLm1hcFJlc3VsdChhbGwpIDogYWxsOwogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIC8qKgogICAgICogVHlwZW9mIExhYmVsU2VsZWN0UGFnaW5hdGVGbgogICAgICovCiAgICBhc3luYyBwYWdpbmF0ZVR5cGUob3B0czogTGFiZWxTZWxlY3RQYWdpbmF0ZUZuT3B0aW9ucyk6IFByb21pc2U8TGFiZWxTZWxlY3RQYWdpbmF0ZUZuUmVzcG9uc2U+IHsKICAgICAgaWYgKHRoaXMucGFnaW5hdGVkUmVzb3VyY2VTZXR0aW5ncz8ub3ZlcnJpZGVSZXF1ZXN0KSB7CiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucGFnaW5hdGVkUmVzb3VyY2VTZXR0aW5ncy5vdmVycmlkZVJlcXVlc3Qob3B0cyk7CiAgICAgIH0KCiAgICAgIGNvbnN0IHsgZmlsdGVyIH0gPSBvcHRzOwogICAgICBjb25zdCBmaWx0ZXJzID0gISFmaWx0ZXIgPyBbUGFnaW5hdGlvblBhcmFtRmlsdGVyLmNyZWF0ZVNpbmdsZUZpZWxkKHsgZmllbGQ6ICdtZXRhZGF0YS5uYW1lJywgdmFsdWU6IGZpbHRlciB9KV0gOiBbXTsKICAgICAgY29uc3QgZGVmYXVsdE9wdGlvbnM6IExhYmVsU2VsZWN0UGFnaW5hdGlvbkZ1bmN0aW9uT3B0aW9ucyA9IHsKICAgICAgICBvcHRzLAogICAgICAgIGZpbHRlcnMsCiAgICAgICAgdHlwZTogdGhpcy5yZXNvdXJjZVR5cGUsCiAgICAgICAgY3R4OiAgeyBnZXR0ZXJzOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLCBkaXNwYXRjaDogdGhpcy4kc3RvcmUuZGlzcGF0Y2ggfSwKICAgICAgICBzb3J0OiBbeyBhc2M6IHRydWUsIGZpZWxkOiAnbWV0YWRhdGEubmFtZScgfV0sCiAgICAgIH07CiAgICAgIGNvbnN0IG9wdGlvbnMgPSB0aGlzLnBhZ2luYXRlZFJlc291cmNlU2V0dGluZ3M/LnJlcXVlc3RTZXR0aW5ncyA/IHRoaXMucGFnaW5hdGVkUmVzb3VyY2VTZXR0aW5ncy5yZXF1ZXN0U2V0dGluZ3MoZGVmYXVsdE9wdGlvbnMpIDogZGVmYXVsdE9wdGlvbnM7CiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGxhYmVsU2VsZWN0UGFnaW5hdGlvbkZ1bmN0aW9uKG9wdGlvbnMpOwoKICAgICAgcmV0dXJuIHRoaXMucGFnaW5hdGVkUmVzb3VyY2VTZXR0aW5ncz8ubWFwUmVzdWx0ID8gewogICAgICAgIC4uLnJlcywKICAgICAgICBwYWdlOiB0aGlzLnBhZ2luYXRlZFJlc291cmNlU2V0dGluZ3MubWFwUmVzdWx0KHJlcy5wYWdlKQogICAgICB9IDogcmVzOwogICAgfSwKICB9LAp9KTsK"},{"version":3,"sources":["ResourceLabeledSelect.vue"],"names":[],"mappingsfile":"ResourceLabeledSelect.vue","sourceRoot":"node_modules/@rancher/shell/components/form","sourcesContent":["<script lang=\"ts\">\nimport { PropType, defineComponent } from 'vue';\nimport LabeledSelect from '@shell/components/form/LabeledSelect.vue';\nimport { PaginationParamFilter } from '@shell/types/store/pagination.types';\nimport { labelSelectPaginationFunction, LabelSelectPaginationFunctionOptions } from '@shell/components/form/labeled-select-utils/labeled-select.utils';\nimport { LabelSelectPaginateFn, LabelSelectPaginateFnOptions, LabelSelectPaginateFnResponse } from '@shell/types/components/labeledSelect';\n\ntype PaginateTypeOverridesFn = (opts: LabelSelectPaginationFunctionOptions) => LabelSelectPaginationFunctionOptions;\n\ninterface SharedSettings {\n  /**\n   * Provide specific LabelSelect options for this mode (paginated / not paginated)\n   */\n  labelSelectOptions?: { [key: string]: any },\n  /**\n   * Map the resources shown in LabelSelect\n   */\n  mapResult?: (resources: any[]) => any[]\n}\n\n/**\n * Settings to use when the LabelSelect is paginating\n */\nexport interface ResourceLabeledSelectPaginateSettings extends SharedSettings {\n  /**\n   * Override the convience function which fetches a page of results\n   */\n  overrideRequest?: LabelSelectPaginateFn,\n  /**\n   * Override the default settings used in the convience function to fetch a page of results\n   */\n  requestSettings?: PaginateTypeOverridesFn,\n}\n\n/**\n * Settings to use when the LabelSelect is fetching all resources (not paginating)\n */\nexport type ResourceLabeledSelectSettings = SharedSettings\n\n/**\n * Force a specific mode\n */\nexport enum RESOURCE_LABEL_SELECT_MODE {\n  /**\n   * Fetch all resources\n   */\n  ALL_RESOURCES = 'ALL', // eslint-disable-line no-unused-vars\n  /**\n   * Determine if all resources are fetched given system settings\n   */\n  DYNAMIC = 'DYNAMIC', // eslint-disable-line no-unused-vars\n}\n\n/**\n * Convience wrapper around the LabelSelect component to support pagination\n *\n * Handles\n *\n * 1) Conditionally enabling the pagination feature given system settings\n * 2) Helper function to fetch the pagination result\n *\n * A number of ways can be provided to override the convienences (see props)\n */\nexport default defineComponent({\n  name: 'ResourceLabeledSelect',\n\n  components: { LabeledSelect },\n\n  props: {\n    /**\n     * Resource to show\n     */\n    resourceType: {\n      type:     String,\n      required: true\n    },\n\n    inStore: {\n      type:    String,\n      default: 'cluster',\n    },\n\n    /**\n     * Determine if pagination is used via settings (DYNAMIC) or hardcode off\n     */\n    paginateMode: {\n      type:    String as PropType<RESOURCE_LABEL_SELECT_MODE>,\n      default: RESOURCE_LABEL_SELECT_MODE.DYNAMIC,\n    },\n\n    /**\n     * Specific settings to use when we're showing all results\n     */\n    allResourcesSettings: {\n      type:    Object as PropType<ResourceLabeledSelectSettings>,\n      default: null,\n    },\n\n    /**\n     * Specific settings to use when we're showing paginated results\n     */\n    paginatedResourceSettings: {\n      type:    Object as PropType<ResourceLabeledSelectPaginateSettings>,\n      default: null,\n    },\n  },\n\n  data() {\n    return { paginate: false };\n  },\n\n  async fetch() {\n    switch (this.paginateMode) {\n    case RESOURCE_LABEL_SELECT_MODE.ALL_RESOURCES:\n      this.paginate = false;\n      break;\n    case RESOURCE_LABEL_SELECT_MODE.DYNAMIC:\n      this.paginate = this.$store.getters[`${ this.inStore }/paginationEnabled`](this.resourceType);\n      break;\n    }\n\n    if (!this.paginate) {\n      await this.$store.dispatch(`${ this.inStore }/findAll`, { type: this.resourceType });\n    }\n  },\n\n  computed: {\n    labelSelectAttributes() {\n      return this.paginate ? {\n        ...this.$attrs,\n        ...this.paginatedResourceSettings?.labelSelectOptions || {}\n      } : {\n        ...this.$attrs,\n        ...this.allResourcesSettings?.labelSelectOptions || {}\n      };\n    },\n\n    allOfType() {\n      if (this.$fetchState.pending || this.paginate) {\n        return [];\n      }\n\n      const all = this.$store.getters[`${ this.inStore }/all`](this.resourceType);\n\n      return this.allResourcesSettings?.mapResult ? this.allResourcesSettings.mapResult(all) : all;\n    }\n  },\n\n  methods: {\n    /**\n     * Typeof LabelSelectPaginateFn\n     */\n    async paginateType(opts: LabelSelectPaginateFnOptions): Promise<LabelSelectPaginateFnResponse> {\n      if (this.paginatedResourceSettings?.overrideRequest) {\n        return await this.paginatedResourceSettings.overrideRequest(opts);\n      }\n\n      const { filter } = opts;\n      const filters = !!filter ? [PaginationParamFilter.createSingleField({ field: 'metadata.name', value: filter })] : [];\n      const defaultOptions: LabelSelectPaginationFunctionOptions = {\n        opts,\n        filters,\n        type: this.resourceType,\n        ctx:  { getters: this.$store.getters, dispatch: this.$store.dispatch },\n        sort: [{ asc: true, field: 'metadata.name' }],\n      };\n      const options = this.paginatedResourceSettings?.requestSettings ? this.paginatedResourceSettings.requestSettings(defaultOptions) : defaultOptions;\n      const res = await labelSelectPaginationFunction(options);\n\n      return this.paginatedResourceSettings?.mapResult ? {\n        ...res,\n        page: this.paginatedResourceSettings.mapResult(res.page)\n      } : res;\n    },\n  },\n});\n</script>\n\n<template>\n  <LabeledSelect\n    v-bind=\"labelSelectAttributes\"\n    :loading=\"$fetchState.pending\"\n    :options=\"allOfType\"\n    :paginate=\"paginateType\"\n    v-on=\"$listeners\"\n  />\n</template>\n"]}]}