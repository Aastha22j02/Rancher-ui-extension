{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/auth/azuread.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/auth/azuread.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["azuread.vue"],"names":[],"mappingsfile":"azuread.vue","sourceRoot":"node_modules/@rancher/shell/edit/auth","sourcesContent":["<script>\r\nimport isEqual from 'lodash/isEqual';\r\nimport Loading from '@shell/components/Loading';\r\nimport CreateEditView from '@shell/mixins/create-edit-view';\r\nimport FormValidation from '@shell/mixins/form-validation';\r\nimport CruResource from '@shell/components/CruResource';\r\nimport InfoBox from '@shell/components/InfoBox';\r\nimport { RadioGroup } from '@components/Form/Radio';\r\nimport { LabeledInput } from '@components/Form/LabeledInput';\r\nimport { Checkbox } from '@components/Form/Checkbox';\r\nimport AuthBanner from '@shell/components/auth/AuthBanner';\r\nimport CopyToClipboardText from '@shell/components/CopyToClipboardText.vue';\r\nimport AllowedPrincipals from '@shell/components/auth/AllowedPrincipals';\r\nimport AuthConfig from '@shell/mixins/auth-config';\r\nimport { AZURE_MIGRATED } from '@shell/config/labels-annotations';\r\nimport { get } from '@shell/utils/object';\r\nimport AuthProviderWarningBanners from '@shell/edit/auth/AuthProviderWarningBanners';\r\nimport formRulesGenerator from '@shell/utils/validators/formRules/index';\r\n\r\nconst TENANT_ID_TOKEN = '__[[TENANT_ID]]__';\r\n\r\n// Azure AD Graph will be deprecated end of 2022, see: https://docs.microsoft.com/en-us/graph/migrate-azure-ad-graph-overview\r\nexport const OLD_ENDPOINTS = {\r\n  standard: {\r\n    graphEndpoint: 'https://graph.windows.net/',\r\n    tokenEndpoint: `https://login.microsoftonline.com/${ TENANT_ID_TOKEN }/oauth2/token`,\r\n    authEndpoint:  `https://login.microsoftonline.com/${ TENANT_ID_TOKEN }/oauth2/authorize`\r\n  },\r\n  china: {\r\n    graphEndpoint: 'https://graph.chinacloudapi.cn/',\r\n    tokenEndpoint: `https://login.chinacloudapi.cn/${ TENANT_ID_TOKEN }/oauth2/token`,\r\n    authEndpoint:  `https://login.chinacloudapi.cn/${ TENANT_ID_TOKEN }/oauth2/authorize`\r\n  }\r\n};\r\n\r\nconst ENDPOINT_MAPPING = {\r\n  standard: {\r\n    endpoint:      'https://login.microsoftonline.com/',\r\n    graphEndpoint: 'https://graph.microsoft.com',\r\n    tokenEndpoint: `https://login.microsoftonline.com/${ TENANT_ID_TOKEN }/oauth2/v2.0/token`,\r\n    authEndpoint:  `https://login.microsoftonline.com/${ TENANT_ID_TOKEN }/oauth2/v2.0/authorize`\r\n  },\r\n  china: {\r\n    endpoint:      'https://login.partner.microsoftonline.cn/',\r\n    graphEndpoint: 'https://microsoftgraph.chinacloudapi.cn',\r\n    tokenEndpoint: `https://login.partner.microsoftonline.cn/${ TENANT_ID_TOKEN }/oauth2/v2.0/token`,\r\n    authEndpoint:  `https://login.partner.microsoftonline.cn/${ TENANT_ID_TOKEN }/oauth2/v2.0/authorize`\r\n  },\r\n  custom: {\r\n    endpoint:      'https://login.microsoftonline.com/',\r\n    graphEndpoint: '',\r\n    tokenEndpoint: '',\r\n    authEndpoint:  ''\r\n  }\r\n};\r\n\r\nexport default {\r\n  components: {\r\n    Loading,\r\n    CruResource,\r\n    InfoBox,\r\n    RadioGroup,\r\n    LabeledInput,\r\n    Checkbox,\r\n    CopyToClipboardText,\r\n    AllowedPrincipals,\r\n    AuthBanner,\r\n    AuthProviderWarningBanners\r\n  },\r\n\r\n  mixins: [CreateEditView, AuthConfig, FormValidation],\r\n\r\n  async fetch() {\r\n    await this.reloadModel();\r\n\r\n    if ( this.value?.graphEndpoint ) {\r\n      this.setInitialEndpoint(this.value.graphEndpoint);\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      isGroupMembershipFilterEnabled: !!this.value.groupMembershipFilter,\r\n      endpoint:                       'standard',\r\n      oldEndpoint:                    false,\r\n\r\n      // Storing the applicationSecret is necessary because norman doesn't support returning secrets and when we\r\n      // override the steve authconfig with a norman config the applicationSecret is lost\r\n      applicationSecret: this.value.applicationSecret,\r\n      fvFormRuleSets:    [\r\n        { path: 'tenantId', rules: ['tenantIdRequired'] },\r\n        { path: 'applicationId', rules: ['applicationIdRequired'] },\r\n        { path: 'applicationSecret', rules: ['applicationSecretRequired'] },\r\n        { path: 'endpoint', rules: ['endpointRequired', 'endpointMustBeURL'] },\r\n        { path: 'graphEndpoint', rules: ['graphEndpointRequired', 'graphEndpointMustBeURL'] },\r\n        { path: 'tokenEndpoint', rules: ['tokenEndpointRequired', 'tokenEndpointMustBeURL'] },\r\n        { path: 'authEndpoint', rules: ['authEndpointRequired', 'authEndpointMustBeURL'] },\r\n      ]\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    // Cannot pass this.model as a rootObject because it is undefined at that point, so had to use a workaround\r\n    fvExtraRules() {\r\n      return {\r\n        tenantIdRequired:          this.modelFieldRequired('tenantId', 'authConfig.azuread.tenantId.label'),\r\n        applicationIdRequired:     this.modelFieldRequired('applicationId', 'authConfig.azuread.applicationId.label'),\r\n        applicationSecretRequired: this.applicationSecretRequired(),\r\n        endpointRequired:          this.modelFieldRequired('endpoint', 'authConfig.azuread.endpoint.label'),\r\n        endpointMustBeURL:         this.modelFieldURL('endpoint'),\r\n        graphEndpointRequired:     this.modelFieldRequired('graphEndpoint', 'authConfig.azuread.graphEndpoint.label'),\r\n        graphEndpointMustBeURL:    this.modelFieldURL('graphEndpoint'),\r\n        tokenEndpointRequired:     this.modelFieldRequired('tokenEndpoint', 'authConfig.azuread.tokenEndpoint.label'),\r\n        tokenEndpointMustBeURL:    this.modelFieldURL('tokenEndpoint'),\r\n        authEndpointRequired:      this.modelFieldRequired('authEndpoint', 'authConfig.azuread.authEndpoint.label'),\r\n        authEndpointMustBeURL:     this.modelFieldURL('authEndpoint')\r\n      };\r\n    },\r\n\r\n    tArgs() {\r\n      return {\r\n        baseUrl:  this.baseUrl,\r\n        provider: this.displayName,\r\n        username: this.principal.loginName || this.principal.name\r\n      };\r\n    },\r\n\r\n    replyUrl() {\r\n      return `${ this.serverUrl }/verify-auth-azure`;\r\n    },\r\n\r\n    tenantId() {\r\n      return this.model?.tenantId;\r\n    },\r\n\r\n    toSave() {\r\n      const applicationSecret = this.getNewApplicationSecret();\r\n\r\n      if (applicationSecret) {\r\n        this.$set(this.model, 'applicationSecret', applicationSecret);\r\n      }\r\n\r\n      return {\r\n        config: {\r\n          ...this.model,\r\n          enabled:     true,\r\n          description: 'Enable AzureAD'\r\n        }\r\n      };\r\n    },\r\n\r\n    needsUpdate() {\r\n      return (\r\n        get(this.model, `annotations.\"${ AZURE_MIGRATED }\"`) !== 'true'\r\n      );\r\n    },\r\n\r\n    modalConfig() {\r\n      return {\r\n        applyAction: this.updateEndpoint,\r\n        applyMode:   'update',\r\n        title:       this.t('authConfig.azuread.updateEndpoint.modal.title'),\r\n        body:        this.t('authConfig.azuread.updateEndpoint.modal.body', null, { raw: true })\r\n      };\r\n    },\r\n    editMemberConfig() {\r\n      return this.model.enabled && !this.isEnabling && !this.editConfig;\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    endpoint(value) {\r\n      this.setEndpoints(value);\r\n    },\r\n\r\n    tenantId() {\r\n      if (this.endpoint !== 'custom') {\r\n        this.setEndpoints(this.endpoint);\r\n      }\r\n    },\r\n\r\n    model: {\r\n      deep: true,\r\n      handler() {\r\n        this.model.accessMode = this.model.accessMode || 'unrestricted';\r\n        this.model.rancherUrl = this.model.rancherUrl || this.replyUrl;\r\n\r\n        if (this.model.applicationSecret) {\r\n          this.$set(this, 'applicationSecret', this.model.applicationSecret);\r\n        }\r\n      }\r\n    },\r\n\r\n  },\r\n\r\n  methods: {\r\n    toggleGroupMembershipFilter(enabled) {\r\n      // reset the value of groupMembershipFilter when its filter gets disabled\r\n      if (!enabled) {\r\n        this.model.groupMembershipFilter = '';\r\n      }\r\n    },\r\n\r\n    setEndpoints(endpoint) {\r\n      if (this.editConfig || !this.model.enabled) {\r\n        const endpointType = this.oldEndpoint && endpoint !== 'custom' ? OLD_ENDPOINTS : ENDPOINT_MAPPING;\r\n\r\n        Object.keys(endpointType[endpoint]).forEach((key) => {\r\n          this.$set(\r\n            this.model,\r\n            key,\r\n            endpointType[endpoint][key].replace(\r\n              TENANT_ID_TOKEN,\r\n              this.model.tenantId\r\n            )\r\n          );\r\n        });\r\n      }\r\n    },\r\n\r\n    setInitialEndpoint(endpoint) {\r\n      const newEndpointKey = this.determineEndpointKeyType(ENDPOINT_MAPPING);\r\n      const oldEndpointKey = Object.keys(OLD_ENDPOINTS).find((key) => OLD_ENDPOINTS[key].graphEndpoint === endpoint);\r\n\r\n      if ( oldEndpointKey ) {\r\n        this.endpoint = this.determineEndpointKeyType(OLD_ENDPOINTS);\r\n        this.oldEndpoint = true;\r\n      } else {\r\n        this.endpoint = newEndpointKey;\r\n      }\r\n    },\r\n\r\n    determineEndpointKeyType(endpointTypes) {\r\n      let out = 'custom';\r\n\r\n      for ( const [endpointKey, endpointKeyValues] of Object.entries(endpointTypes) ) {\r\n        const mappedValues = Object.values(endpointKeyValues).map((endpoint) => endpoint.replace(TENANT_ID_TOKEN, this.model?.tenantId));\r\n        const valuesToCheck = Object.keys(endpointKeyValues).map((key) => this.value[key]);\r\n\r\n        if ( isEqual(mappedValues, valuesToCheck) ) {\r\n          out = endpointKey;\r\n        }\r\n      }\r\n\r\n      return out;\r\n    },\r\n\r\n    getNewApplicationSecret() {\r\n      const applicationSecretOrId =\r\n        this.model.applicationSecret || this.applicationSecret;\r\n\r\n      // The application secret comes back as an ID from steve API and this indicates\r\n      // that the current application secret isn't new\r\n      if (applicationSecretOrId.includes('cattle-global-data')) {\r\n        return null;\r\n      }\r\n\r\n      return applicationSecretOrId;\r\n    },\r\n\r\n    promptUpdate() {\r\n      this.$store.dispatch('management/promptModal', {\r\n        component:      'GenericPrompt',\r\n        componentProps: this.modalConfig\r\n      });\r\n    },\r\n\r\n    // update the authconfig to change the azure ad graph endpoint to the microsoft graph endpoint\r\n    // only relevant for setups upgrading to 2.6.6 with azuread auth already enabled\r\n    updateEndpoint(btnCB) {\r\n      if (this.needsUpdate) {\r\n        this.model\r\n          .doAction('upgrade')\r\n          .then(() => {\r\n            this.reloadModel();\r\n            this.$store.dispatch('growl/success', { message: 'Graph endpoint updated successfully.' });\r\n            btnCB(true);\r\n          })\r\n          .catch((err) => {\r\n            this.$store.dispatch('growl/fromError', {\r\n              title: 'Error updating graph endpoint',\r\n              err\r\n            });\r\n            btnCB(false);\r\n          });\r\n      }\r\n    },\r\n    modelFieldRequired(path, label) {\r\n      return () => {\r\n        return !this.model[path] ? `${ this.t('validation.required', { key: this.t(label) }) }` : undefined;\r\n      };\r\n    },\r\n    applicationSecretRequired() {\r\n      return () => {\r\n        return !this.editMemberConfig && !this.model.applicationSecret ? `${ this.t('validation.required', { key: this.t('authConfig.azuread.applicationSecret.label') }) }` : undefined;\r\n      };\r\n    },\r\n    modelFieldURL(path) {\r\n      return () => {\r\n        const rule = formRulesGenerator(this.$store.getters['i18n/t'], {}).url;\r\n\r\n        return rule(this.model[path]);\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <Loading v-if=\"$fetchState.pending\" />\r\n  <div v-else>\r\n    <CruResource\r\n      :done-route=\"doneRoute\"\r\n      :mode=\"mode\"\r\n      :resource=\"model\"\r\n      :subtypes=\"[]\"\r\n      :validation-passed=\"fvFormIsValid\"\r\n      :finish-button-mode=\"model && model.enabled ? 'edit' : 'enable'\"\r\n      :can-yaml=\"false\"\r\n      :errors=\"errors\"\r\n      :show-cancel=\"showCancel\"\r\n      :cancel-event=\"true\"\r\n      @error=\"e=>errors = e\"\r\n      @finish=\"save\"\r\n      @cancel=\"cancel\"\r\n    >\r\n      <template v-if=\"editMemberConfig\">\r\n        <AuthBanner\r\n          :t-args=\"tArgs\"\r\n          :disable=\"disable\"\r\n          :edit=\"goToEdit\"\r\n        >\r\n          <template slot=\"rows\">\r\n            <tr>\r\n              <td>{{ t(`authConfig.azuread.tenantId.label`) }}:</td>\r\n              <td>{{ model.tenantId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>{{ t(`authConfig.azuread.applicationId.label`) }}:</td>\r\n              <td>{{ model.applicationId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>{{ t(`authConfig.azuread.endpoint.label`) }}:</td>\r\n              <td>{{ model.endpoint }}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>{{ t(`authConfig.azuread.graphEndpoint.label`) }}:</td>\r\n              <td>{{ model.graphEndpoint }}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>{{ t(`authConfig.azuread.tokenEndpoint.label`) }}:</td>\r\n              <td>{{ model.tokenEndpoint }}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>{{ t(`authConfig.azuread.authEndpoint.label`) }}:</td>\r\n              <td>{{ model.authEndpoint }}</td>\r\n            </tr>\r\n          </template>\r\n          <template\r\n            v-if=\"needsUpdate\"\r\n            slot=\"actions\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-sm role-secondary mr-10 update\"\r\n              @click=\"promptUpdate\"\r\n            >\r\n              {{ t('authConfig.azuread.updateEndpoint.button') }}\r\n            </button>\r\n          </template>\r\n        </AuthBanner>\r\n\r\n        <hr>\r\n\r\n        <AllowedPrincipals\r\n          provider=\"azuread\"\r\n          :auth-config=\"model\"\r\n          :mode=\"mode\"\r\n        />\r\n      </template>\r\n\r\n      <template v-else>\r\n        <AuthProviderWarningBanners\r\n          v-if=\"!model.enabled\"\r\n          :t-args=\"tArgs\"\r\n        />\r\n\r\n        <InfoBox\r\n          v-if=\"!model.enabled\"\r\n          id=\"reply-info\"\r\n          class=\"mt-20 mb-20 p-10\"\r\n        >\r\n          {{ t('authConfig.azuread.reply.info') }}\r\n          <br>\r\n          <label class=\"reply-url\">{{ t('authConfig.azuread.reply.label') }} </label>\r\n          <CopyToClipboardText\r\n            :plain=\"true\"\r\n            :text=\"replyUrl\"\r\n          />\r\n        </InfoBox>\r\n\r\n        <div class=\"row mb-20\">\r\n          <div class=\"col span-6\">\r\n            <LabeledInput\r\n              id=\"tenant-id\"\r\n              v-model=\"model.tenantId\"\r\n              :label=\"t('authConfig.azuread.tenantId.label')\"\r\n              :mode=\"mode\"\r\n              :required=\"true\"\r\n              :rules=\"fvGetAndReportPathRules('tenantId')\"\r\n              :tooltip=\"t('authConfig.azuread.tenantId.tooltip')\"\r\n              :placeholder=\"t('authConfig.azuread.tenantId.placeholder')\"\r\n              data-testid=\"input-azureAD-tenantId\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mb-20\">\r\n          <div class=\"col span-6\">\r\n            <LabeledInput\r\n              id=\"application-id\"\r\n              v-model=\"model.applicationId\"\r\n              :label=\"t('authConfig.azuread.applicationId.label')\"\r\n              :mode=\"mode\"\r\n              :required=\"true\"\r\n              :rules=\"fvGetAndReportPathRules('applicationId')\"\r\n              :placeholder=\"t('authConfig.azuread.applicationId.placeholder')\"\r\n              data-testid=\"input-azureAD-applcationId\"\r\n            />\r\n          </div>\r\n          <div class=\"col span-6\">\r\n            <LabeledInput\r\n              id=\"application-secret\"\r\n              v-model=\"model.applicationSecret\"\r\n              type=\"password\"\r\n              :label=\"t('authConfig.azuread.applicationSecret.label')\"\r\n              :required=\"true\"\r\n              :rules=\"fvGetAndReportPathRules('applicationSecret')\"\r\n              :mode=\"mode\"\r\n              data-testid=\"input-azureAD-applicationSecret\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mb-20\">\r\n          <div class=\"col span-12\">\r\n            <Checkbox\r\n              v-model=\"isGroupMembershipFilterEnabled\"\r\n              class=\"mb-10 mr-10\"\r\n              :mode=\"mode\"\r\n              :label=\"t('authConfig.azuread.groupMembershipFilter.enable')\"\r\n              :tooltip=\"t('authConfig.azuread.groupMembershipFilter.tooltip')\"\r\n              data-testid=\"checkbox-azureAD-groupMembershipFilter\"\r\n              @input=\"toggleGroupMembershipFilter\"\r\n            />\r\n            <div v-if=\"isGroupMembershipFilterEnabled\">\r\n              <LabeledInput\r\n                v-model=\"model.groupMembershipFilter\"\r\n                :label=\"t('authConfig.azuread.groupMembershipFilter.label')\"\r\n                placeholder=\"e.g. (displayName eq 'group1') or (displayName eq 'group2')\"\r\n                :mode=\"mode\"\r\n                class=\"mb-10\"\r\n                data-testid=\"input-azureAD-groupMembershipFilter\"\r\n              />\r\n              <a\r\n                :href=\"t('authConfig.azuread.groupMembershipFilter.externalHelpLink')\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer nofollow\"\r\n              >\r\n                {{ t('authConfig.azuread.groupMembershipFilter.externalHelp') }} <i class=\"icon icon-external-link\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <RadioGroup\r\n          v-model=\"endpoint\"\r\n          class=\"mb-20\"\r\n          :required=\"true\"\r\n          :label=\"t('authConfig.azuread.endpoints.label')\"\r\n          name=\"endpoints\"\r\n          :options=\"['standard', 'china', 'custom']\"\r\n          :mode=\"mode\"\r\n          :labels=\"[t('authConfig.azuread.endpoints.standard'), t('authConfig.azuread.endpoints.china'), t('authConfig.azuread.endpoints.custom')]\"\r\n          data-testid=\"endpoints-radio-input\"\r\n        />\r\n        <div v-if=\"endpoint === 'custom'\">\r\n          <div class=\"row mb-20\">\r\n            <div class=\"col span-6\">\r\n              <LabeledInput\r\n                v-model=\"model.endpoint\"\r\n                :label=\"t('authConfig.azuread.endpoint.label')\"\r\n                :mode=\"mode\"\r\n                :required=\"true\"\r\n                :rules=\"fvGetAndReportPathRules('endpoint')\"\r\n                data-testid=\"input-azureAD-endpoint\"\r\n              />\r\n            </div>\r\n            <div class=\"col span-6\">\r\n              <LabeledInput\r\n                v-model=\"model.graphEndpoint\"\r\n                :label=\"t('authConfig.azuread.graphEndpoint.label')\"\r\n                :required=\"true\"\r\n                :rules=\"fvGetAndReportPathRules('graphEndpoint')\"\r\n                :mode=\"mode\"\r\n                data-testid=\"input-azureAD-graphEndpoint\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"row mb-20\">\r\n            <div class=\"col span-6\">\r\n              <LabeledInput\r\n                v-model=\"model.tokenEndpoint\"\r\n                :label=\"t('authConfig.azuread.tokenEndpoint.label')\"\r\n                :mode=\"mode\"\r\n                :required=\"true\"\r\n                :rules=\"fvGetAndReportPathRules('tokenEndpoint')\"\r\n                data-testid=\"input-azureAD-tokenEndpoint\"\r\n              />\r\n            </div>\r\n            <div class=\"col span-6\">\r\n              <LabeledInput\r\n                v-model=\"model.authEndpoint\"\r\n                :label=\"t('authConfig.azuread.authEndpoint.label')\"\r\n                :required=\"true\"\r\n                :rules=\"fvGetAndReportPathRules('authEndpoint')\"\r\n                :mode=\"mode\"\r\n                data-testid=\"input-azureAD-authEndpoint\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </CruResource>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"scss\">\r\n#reply-info {\r\n  flex-grow: 0;\r\n}\r\n\r\n.reply-url {\r\n  color: inherit;\r\n  font-weight: 700;\r\n}\r\n</style>\r\n"]}]}