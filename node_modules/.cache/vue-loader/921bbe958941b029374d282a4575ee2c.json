{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/c/_cluster/settings/banners.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/pages/c/_cluster/settings/banners.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBpc0VtcHR5IGZyb20gJ2xvZGFzaC9pc0VtcHR5JzsKCmltcG9ydCB7IENoZWNrYm94IH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9DaGVja2JveCc7CmltcG9ydCBMb2FkaW5nIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0xvYWRpbmcnOwppbXBvcnQgQXN5bmNCdXR0b24gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvQXN5bmNCdXR0b24nOwppbXBvcnQgeyBCYW5uZXIgfSBmcm9tICdAY29tcG9uZW50cy9CYW5uZXInOwppbXBvcnQgQmFubmVyU2V0dGluZ3MgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9CYW5uZXJTZXR0aW5ncyc7CmltcG9ydCB7IGFsbEhhc2ggfSBmcm9tICdAc2hlbGwvdXRpbHMvcHJvbWlzZSc7CmltcG9ydCB7IE1BTkFHRU1FTlQgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IHsgZ2V0VmVuZG9yIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9wcml2YXRlLWxhYmVsJzsKaW1wb3J0IHsgU0VUVElORyB9IGZyb20gJ0BzaGVsbC9jb25maWcvc2V0dGluZ3MnOwppbXBvcnQgeyBjbG9uZSB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwppbXBvcnQgeyBfRURJVCwgX1ZJRVcgfSBmcm9tICdAc2hlbGwvY29uZmlnL3F1ZXJ5LXBhcmFtcyc7CmltcG9ydCBOb3RpZmljYXRpb25TZXR0aW5ncyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL05vdGlmaWNhdGlvblNldHRpbmdzLnZ1ZSc7Cgpjb25zdCBERUZBVUxUX0JBTk5FUl9TRVRUSU5HID0gewogIGxvZ2luRXJyb3I6ICAgeyBtZXNzYWdlOiAnJywgc2hvd01lc3NhZ2U6ICdmYWxzZScgfSwKICBiYW5uZXJIZWFkZXI6IHsKICAgIGJhY2tncm91bmQ6ICAgICBudWxsLAogICAgY29sb3I6ICAgICAgICAgIG51bGwsCiAgICB0ZXh0QWxpZ25tZW50OiAgJ2NlbnRlcicsCiAgICBmb250V2VpZ2h0OiAgICAgbnVsbCwKICAgIGZvbnRTdHlsZTogICAgICBudWxsLAogICAgZm9udFNpemU6ICAgICAgICcxNHB4JywKICAgIHRleHREZWNvcmF0aW9uOiBudWxsLAogICAgdGV4dDogICAgICAgICAgIG51bGwsCiAgfSwKICBiYW5uZXJGb290ZXI6IHsKICAgIGJhY2tncm91bmQ6ICAgICBudWxsLAogICAgY29sb3I6ICAgICAgICAgIG51bGwsCiAgICB0ZXh0QWxpZ25tZW50OiAgJ2NlbnRlcicsCiAgICBmb250V2VpZ2h0OiAgICAgbnVsbCwKICAgIGZvbnRTdHlsZTogICAgICBudWxsLAogICAgZm9udFNpemU6ICAgICAgICcxNHB4JywKICAgIHRleHREZWNvcmF0aW9uOiBudWxsLAogICAgdGV4dDogICAgICAgICAgIG51bGwKICB9LAogIGJhbm5lckNvbnNlbnQ6IHsKICAgIGJhY2tncm91bmQ6ICAgICBudWxsLAogICAgY29sb3I6ICAgICAgICAgIG51bGwsCiAgICB0ZXh0QWxpZ25tZW50OiAgJ2NlbnRlcicsCiAgICBmb250V2VpZ2h0OiAgICAgbnVsbCwKICAgIGZvbnRTdHlsZTogICAgICBudWxsLAogICAgZm9udFNpemU6ICAgICAgICcxNHB4JywKICAgIHRleHREZWNvcmF0aW9uOiBudWxsLAogICAgdGV4dDogICAgICAgICAgIG51bGwsCiAgICBidXR0b246ICAgICAgICAgbnVsbCwKICB9LAogIHNob3dIZWFkZXI6ICAnZmFsc2UnLAogIHNob3dGb290ZXI6ICAnZmFsc2UnLAogIHNob3dDb25zZW50OiAnZmFsc2UnCn07CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQ2hlY2tib3gsCiAgICBMb2FkaW5nLAogICAgQXN5bmNCdXR0b24sCiAgICBCYW5uZXIsCiAgICBCYW5uZXJTZXR0aW5ncywKICAgIE5vdGlmaWNhdGlvblNldHRpbmdzCiAgfSwKCiAgYXN5bmMgZmV0Y2goKSB7CiAgICBjb25zdCBoYXNoID0gYXdhaXQgYWxsSGFzaCh7IHVpQmFubmVyU2V0dGluZzogdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ21hbmFnZW1lbnQvZmluZCcsIHsgdHlwZTogTUFOQUdFTUVOVC5TRVRUSU5HLCBpZDogU0VUVElORy5CQU5ORVJTIH0pIH0pOwoKICAgIE9iamVjdC5hc3NpZ24odGhpcywgaGFzaCk7CiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZlbmRvcjogZ2V0VmVuZG9yKCksCgogICAgICB1aUJhbm5lclNldHRpbmc6IG51bGwsCiAgICAgIGJhbm5lclZhbDogICAgICAge30sCgogICAgICBlcnJvcnM6IFtdLAoKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIG1vZGUoKSB7CiAgICAgIGNvbnN0IHNjaGVtYSA9IHRoaXMuJHN0b3JlLmdldHRlcnNbYG1hbmFnZW1lbnQvc2NoZW1hRm9yYF0oTUFOQUdFTUVOVC5TRVRUSU5HKTsKCiAgICAgIHJldHVybiBzY2hlbWE/LnJlc291cmNlTWV0aG9kcz8uaW5jbHVkZXMoJ1BVVCcpID8gX0VESVQgOiBfVklFVzsKICAgIH0sCgogICAgaGVhZGVyTW9kZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuYmFubmVyVmFsPy5zaG93SGVhZGVyID09PSAndHJ1ZScgPyBfRURJVCA6IF9WSUVXOwogICAgfSwKICAgIGZvb3Rlck1vZGUoKSB7CiAgICAgIHJldHVybiB0aGlzLmJhbm5lclZhbD8uc2hvd0Zvb3RlciA9PT0gJ3RydWUnID8gX0VESVQgOiBfVklFVzsKICAgIH0sCiAgICBjb25zZW50TW9kZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuYmFubmVyVmFsPy5zaG93Q29uc2VudCA9PT0gJ3RydWUnID8gX0VESVQgOiBfVklFVzsKICAgIH0KICB9LAoKICB3YXRjaDogewogICAgdWlCYW5uZXJTZXR0aW5nKG5ldSkgewogICAgICBpZiAobmV1Py52YWx1ZSAmJiBuZXUudmFsdWUgIT09ICcnKSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGNvbnN0IHBhcnNlZEJhbm5lciA9IEpTT04ucGFyc2UobmV1LnZhbHVlKTsKCiAgICAgICAgICB0aGlzLmJhbm5lclZhbCA9IHRoaXMuY2hlY2tPclVwZGF0ZUxlZ2FjeVVJQmFubmVyU2V0dGluZyhwYXJzZWRCYW5uZXIpOwogICAgICAgIH0gY2F0Y2gge30KICAgICAgfQogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIGNoZWNrT3JVcGRhdGVMZWdhY3lVSUJhbm5lclNldHRpbmcocGFyc2VkQmFubmVyKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBiYW5uZXJIZWFkZXIsIGJhbm5lckZvb3RlciwgYmFubmVyQ29uc2VudCwgYmFubmVyLCBsb2dpbkVycm9yCiAgICAgIH0gPSBwYXJzZWRCYW5uZXI7CgogICAgICBpZiAoaXNFbXB0eShiYW5uZXJIZWFkZXIpICYmIGlzRW1wdHkoYmFubmVyRm9vdGVyKSAmJiBpc0VtcHR5KGJhbm5lckNvbnNlbnQpKSB7CiAgICAgICAgbGV0IG5ldSA9IERFRkFVTFRfQkFOTkVSX1NFVFRJTkc7CgogICAgICAgIGlmICghaXNFbXB0eShiYW5uZXIpKSB7CiAgICAgICAgICBjb25zdCBjbG9uZWQgPSBjbG9uZSgoIGJhbm5lciA/PyB7fSApKTsKCiAgICAgICAgICBpZiAoY2xvbmVkPy50ZXh0Q29sb3IpIHsKICAgICAgICAgICAgY2xvbmVkWydjb2xvciddID0gY2xvbmVkLnRleHRDb2xvcjsKICAgICAgICAgICAgZGVsZXRlIGNsb25lZC50ZXh0Q29sb3I7CiAgICAgICAgICB9CgogICAgICAgICAgbmV1ID0gewogICAgICAgICAgICBiYW5uZXJIZWFkZXI6ICB7IC4uLmNsb25lZCB9LAogICAgICAgICAgICBiYW5uZXJGb290ZXI6ICB7IC4uLmNsb25lZCB9LAogICAgICAgICAgICBsb2dpbkVycm9yOiAgICB7IC4uLkRFRkFVTFRfQkFOTkVSX1NFVFRJTkcubG9naW5FcnJvciwgbG9naW5FcnJvcjogbG9naW5FcnJvcj8uc2hvd01lc3NhZ2UgPT09ICdmYWxzZScgPyAnZmFsc2UnIDogJ3RydWUnIH0sCiAgICAgICAgICAgIGJhbm5lckNvbnNlbnQ6IHsgLi4uREVGQVVMVF9CQU5ORVJfU0VUVElORy5iYW5uZXJDb25zZW50IH0sCiAgICAgICAgICAgIHNob3dIZWFkZXI6ICAgIHBhcnNlZEJhbm5lcj8uc2hvd0hlYWRlciA9PT0gJ3RydWUnID8gJ3RydWUnIDogJ2ZhbHNlJywKICAgICAgICAgICAgc2hvd0Zvb3RlcjogICAgcGFyc2VkQmFubmVyPy5zaG93Rm9vdGVyID09PSAndHJ1ZScgPyAndHJ1ZScgOiAnZmFsc2UnLAogICAgICAgICAgICBzaG93Q29uc2VudDogICBwYXJzZWRCYW5uZXI/LnNob3dDb25zZW50ID09PSAndHJ1ZScgPyAndHJ1ZScgOiAnZmFsc2UnCiAgICAgICAgICB9OwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIG5ldTsKICAgICAgfQoKICAgICAgLy8gSWYgdXNlciBoYXMgZXhpc3RpbmcgYmFubmVycywgdGhleSBtYXkgbm90IGhhdmUgY29uc2VudCBiYW5uZXIgLSB1c2UgZGVmYXVsdCB2YWx1ZQogICAgICBpZiAoaXNFbXB0eShiYW5uZXJDb25zZW50KSkgewogICAgICAgIHBhcnNlZEJhbm5lci5iYW5uZXJDb25zZW50ID0geyAuLi5ERUZBVUxUX0JBTk5FUl9TRVRUSU5HLmJhbm5lckNvbnNlbnQgfTsKICAgICAgfQoKICAgICAgaWYgKGlzRW1wdHkobG9naW5FcnJvcikpIHsKICAgICAgICBwYXJzZWRCYW5uZXIubG9naW5FcnJvciA9IHsgLi4uREVGQVVMVF9CQU5ORVJfU0VUVElORy5sb2dpbkVycm9yIH07CiAgICAgIH0KCiAgICAgIHJldHVybiBwYXJzZWRCYW5uZXI7CiAgICB9LAoKICAgIGFzeW5jIHNhdmUoYnRuQ0IpIHsKICAgICAgdGhpcy51aUJhbm5lclNldHRpbmcudmFsdWUgPSBKU09OLnN0cmluZ2lmeSh0aGlzLmJhbm5lclZhbCk7CgogICAgICB0aGlzLmVycm9ycyA9IFtdOwoKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChbCiAgICAgICAgICB0aGlzLnVpQmFubmVyU2V0dGluZy5zYXZlKCkKICAgICAgICBdKTsKICAgICAgICBidG5DQih0cnVlKTsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgdGhpcy5lcnJvcnMucHVzaChlcnIpOwogICAgICAgIGJ0bkNCKGZhbHNlKTsKICAgICAgfQogICAgfSwKICB9Cn07Cg=="},{"version":3,"sources":["banners.vue"],"names":[],"mappingsfile":"banners.vue","sourceRoot":"node_modules/@rancher/shell/pages/c/_cluster/settings","sourcesContent":["<script>\nimport isEmpty from 'lodash/isEmpty';\n\nimport { Checkbox } from '@components/Form/Checkbox';\nimport Loading from '@shell/components/Loading';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { Banner } from '@components/Banner';\nimport BannerSettings from '@shell/components/form/BannerSettings';\nimport { allHash } from '@shell/utils/promise';\nimport { MANAGEMENT } from '@shell/config/types';\nimport { getVendor } from '@shell/config/private-label';\nimport { SETTING } from '@shell/config/settings';\nimport { clone } from '@shell/utils/object';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport NotificationSettings from '@shell/components/form/NotificationSettings.vue';\n\nconst DEFAULT_BANNER_SETTING = {\n  loginError:   { message: '', showMessage: 'false' },\n  bannerHeader: {\n    background:     null,\n    color:          null,\n    textAlignment:  'center',\n    fontWeight:     null,\n    fontStyle:      null,\n    fontSize:       '14px',\n    textDecoration: null,\n    text:           null,\n  },\n  bannerFooter: {\n    background:     null,\n    color:          null,\n    textAlignment:  'center',\n    fontWeight:     null,\n    fontStyle:      null,\n    fontSize:       '14px',\n    textDecoration: null,\n    text:           null\n  },\n  bannerConsent: {\n    background:     null,\n    color:          null,\n    textAlignment:  'center',\n    fontWeight:     null,\n    fontStyle:      null,\n    fontSize:       '14px',\n    textDecoration: null,\n    text:           null,\n    button:         null,\n  },\n  showHeader:  'false',\n  showFooter:  'false',\n  showConsent: 'false'\n};\n\nexport default {\n  components: {\n    Checkbox,\n    Loading,\n    AsyncButton,\n    Banner,\n    BannerSettings,\n    NotificationSettings\n  },\n\n  async fetch() {\n    const hash = await allHash({ uiBannerSetting: this.$store.dispatch('management/find', { type: MANAGEMENT.SETTING, id: SETTING.BANNERS }) });\n\n    Object.assign(this, hash);\n  },\n\n  data() {\n    return {\n      vendor: getVendor(),\n\n      uiBannerSetting: null,\n      bannerVal:       {},\n\n      errors: [],\n\n    };\n  },\n\n  computed: {\n    mode() {\n      const schema = this.$store.getters[`management/schemaFor`](MANAGEMENT.SETTING);\n\n      return schema?.resourceMethods?.includes('PUT') ? _EDIT : _VIEW;\n    },\n\n    headerMode() {\n      return this.bannerVal?.showHeader === 'true' ? _EDIT : _VIEW;\n    },\n    footerMode() {\n      return this.bannerVal?.showFooter === 'true' ? _EDIT : _VIEW;\n    },\n    consentMode() {\n      return this.bannerVal?.showConsent === 'true' ? _EDIT : _VIEW;\n    }\n  },\n\n  watch: {\n    uiBannerSetting(neu) {\n      if (neu?.value && neu.value !== '') {\n        try {\n          const parsedBanner = JSON.parse(neu.value);\n\n          this.bannerVal = this.checkOrUpdateLegacyUIBannerSetting(parsedBanner);\n        } catch {}\n      }\n    }\n  },\n\n  methods: {\n    checkOrUpdateLegacyUIBannerSetting(parsedBanner) {\n      const {\n        bannerHeader, bannerFooter, bannerConsent, banner, loginError\n      } = parsedBanner;\n\n      if (isEmpty(bannerHeader) && isEmpty(bannerFooter) && isEmpty(bannerConsent)) {\n        let neu = DEFAULT_BANNER_SETTING;\n\n        if (!isEmpty(banner)) {\n          const cloned = clone(( banner ?? {} ));\n\n          if (cloned?.textColor) {\n            cloned['color'] = cloned.textColor;\n            delete cloned.textColor;\n          }\n\n          neu = {\n            bannerHeader:  { ...cloned },\n            bannerFooter:  { ...cloned },\n            loginError:    { ...DEFAULT_BANNER_SETTING.loginError, loginError: loginError?.showMessage === 'false' ? 'false' : 'true' },\n            bannerConsent: { ...DEFAULT_BANNER_SETTING.bannerConsent },\n            showHeader:    parsedBanner?.showHeader === 'true' ? 'true' : 'false',\n            showFooter:    parsedBanner?.showFooter === 'true' ? 'true' : 'false',\n            showConsent:   parsedBanner?.showConsent === 'true' ? 'true' : 'false'\n          };\n        }\n\n        return neu;\n      }\n\n      // If user has existing banners, they may not have consent banner - use default value\n      if (isEmpty(bannerConsent)) {\n        parsedBanner.bannerConsent = { ...DEFAULT_BANNER_SETTING.bannerConsent };\n      }\n\n      if (isEmpty(loginError)) {\n        parsedBanner.loginError = { ...DEFAULT_BANNER_SETTING.loginError };\n      }\n\n      return parsedBanner;\n    },\n\n    async save(btnCB) {\n      this.uiBannerSetting.value = JSON.stringify(this.bannerVal);\n\n      this.errors = [];\n\n      try {\n        await Promise.all([\n          this.uiBannerSetting.save()\n        ]);\n        btnCB(true);\n      } catch (err) {\n        this.errors.push(err);\n        btnCB(false);\n      }\n    },\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <h1 class=\"mb-20\">\n      {{ t('banner.label') }}\n    </h1>\n    <div>\n      <label class=\"text-label\">\n        {{ t(`advancedSettings.descriptions.${ 'ui-banners' }`, {}, true) }}\n      </label>\n\n      <template>\n        <!-- Header Settings -->\n        <h2 class=\"mt-40 mb-40\">\n          {{ t('banner.headerBanner') }}\n        </h2>\n        <div class=\"row mb-20\">\n          <div class=\"col span-6\">\n            <Checkbox\n              :value=\"bannerVal.showHeader === 'true'\"\n              :label=\"t('banner.showHeader')\"\n              :mode=\"mode\"\n              @input=\"e=>$set(bannerVal, 'showHeader', e.toString())\"\n            />\n          </div>\n        </div>\n        <BannerSettings\n          v-model=\"bannerVal\"\n          banner-type=\"bannerHeader\"\n          :mode=\"headerMode\"\n        />\n\n        <!-- Footer settings -->\n        <h2 class=\"mt-40 mb-40\">\n          {{ t('banner.footerBanner') }}\n        </h2>\n        <div class=\"row mt-40 mb-20\">\n          <div class=\"col span-6\">\n            <Checkbox\n              :value=\"bannerVal.showFooter === 'true'\"\n              :label=\"t('banner.showFooter')\"\n              :mode=\"mode\"\n              @input=\"e=>$set(bannerVal, 'showFooter', e.toString())\"\n            />\n          </div>\n        </div>\n        <BannerSettings\n          v-model=\"bannerVal\"\n          banner-type=\"bannerFooter\"\n          :mode=\"footerMode\"\n        />\n      </template>\n\n      <!-- Consent settings -->\n      <h2 class=\"mt-40 mb-40\">\n        {{ t('banner.loginScreenBanner') }}\n      </h2>\n      <template>\n        <div class=\"row mt-40 mb-20\">\n          <div class=\"col span-6\">\n            <Checkbox\n              :value=\"bannerVal.showConsent === 'true'\"\n              :label=\"t('banner.showConsent')\"\n              :mode=\"mode\"\n              @input=\"e => $set(bannerVal, 'showConsent', e.toString())\"\n            />\n          </div>\n        </div>\n        <BannerSettings\n          v-model=\"bannerVal\"\n          banner-type=\"bannerConsent\"\n          :mode=\"consentMode\"\n        />\n      </template>\n      <h2 class=\"mt-40 mb-40\">\n        {{ t('notifications.loginError.header') }}\n      </h2>\n      <NotificationSettings\n        v-model=\"bannerVal.loginError\"\n        :mode=\"mode\"\n        :label=\"t('notifications.loginError.messageLabel')\"\n      />\n    </div>\n    <template v-for=\"err in errors\">\n      <Banner\n        :key=\"err\"\n        color=\"error\"\n        :label=\"err\"\n      />\n    </template>\n    <div v-if=\"mode === 'edit'\">\n      <AsyncButton\n        class=\"pull-right mt-20\"\n        mode=\"apply\"\n        @click=\"save\"\n      />\n    </div>\n  </div>\n</template>\n\n<style scoped lang='scss'>\n.overlay {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: var(--overlay-bg);\n  z-index: 1;\n}\n</style>\n"]}]}