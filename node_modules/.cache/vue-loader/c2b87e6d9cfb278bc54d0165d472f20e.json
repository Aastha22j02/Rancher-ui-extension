{"remainingRequest":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/CopyToClipboard.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@rancher/shell/components/CopyToClipboard.vue","mtime":1725271280091},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/susecon-2024-ext-demo/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBBc3luY0J1dHRvbiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Bc3luY0J1dHRvbic7CmltcG9ydCB7IGNvcHlUZXh0VG9DbGlwYm9hcmQgfSBmcm9tICdAc2hlbGwvdXRpbHMvY2xpcGJvYXJkJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IEFzeW5jQnV0dG9uIH0sCgogIHByb3BzOiB7CiAgICB0ZXh0OiB7CiAgICAgIHR5cGU6ICAgICBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKCiAgICBzaG93TGFiZWw6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZSwKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBjbGlja2VkKGJ1dHRvbkNiKSB7CiAgICAgIGNvcHlUZXh0VG9DbGlwYm9hcmQodGhpcy50ZXh0KS50aGVuKCgpID0+IHsKICAgICAgICBidXR0b25DYih0cnVlKTsKICAgICAgfSkuY2F0Y2goKCkgPT4gewogICAgICAgIGJ1dHRvbkNiKGZhbHNlKTsKICAgICAgfSk7CiAgICB9LAogIH0KfTsK"},{"version":3,"sources":["CopyToClipboard.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CopyToClipboard.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { copyTextToClipboard } from '@shell/utils/clipboard';\n\nexport default {\n  components: { AsyncButton },\n\n  props: {\n    text: {\n      type:     String,\n      required: true,\n    },\n\n    showLabel: {\n      type:    Boolean,\n      default: true,\n    }\n  },\n\n  methods: {\n    clicked(buttonCb) {\n      copyTextToClipboard(this.text).then(() => {\n        buttonCb(true);\n      }).catch(() => {\n        buttonCb(false);\n      });\n    },\n  }\n};\n</script>\n\n<template>\n  <AsyncButton\n    icon=\"icon-copy\"\n    :show-label=\"showLabel\"\n    action-label=\"Copy\"\n    waiting-label=\"Copying...\"\n    success-label=\"Copied!\"\n    error-label=\"Error Copying\"\n    v-bind=\"$attrs\"\n    :delay=\"2000\"\n    @click=\"clicked\"\n  />\n</template>\n"]}]}