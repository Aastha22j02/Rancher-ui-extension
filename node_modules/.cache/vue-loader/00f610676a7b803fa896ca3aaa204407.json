{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/management.cattle.io.podsecurityadmissionconfigurationtemplate.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/edit/management.cattle.io.podsecurityadmissionconfigurationtemplate.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IFByb3BUeXBlLCBkZWZpbmVDb21wb25lbnQgfSBmcm9tICd2dWUnOwppbXBvcnQgQ3JlYXRlRWRpdFZpZXcgZnJvbSAnQHNoZWxsL21peGlucy9jcmVhdGUtZWRpdC12aWV3JzsKaW1wb3J0IENydVJlc291cmNlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0NydVJlc291cmNlLnZ1ZSc7CmltcG9ydCBQb2RTZWN1cml0eUFkbWlzc2lvbiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Qb2RTZWN1cml0eUFkbWlzc2lvbi52dWUnOwppbXBvcnQgTG9hZGluZyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Mb2FkaW5nLnZ1ZSc7CmltcG9ydCBOYW1lTnNEZXNjcmlwdGlvbiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL05hbWVOc0Rlc2NyaXB0aW9uLnZ1ZSc7CmltcG9ydCB7IFBTQSwgUFNBQ29uZmlnLCBQU0FEZWZhdWx0cywgUFNBRXhlbXB0aW9ucyB9IGZyb20gJ0BzaGVsbC90eXBlcy9yZXNvdXJjZXMvcG9kLXNlY3VyaXR5LWFkbWlzc2lvbic7CmltcG9ydCB7IFBTQURpbWVuc2lvbnMgfSBmcm9tICdAc2hlbGwvY29uZmlnL3BvZC1zZWN1cml0eS1hZG1pc3Npb24nOwppbXBvcnQgeyBNQU5BR0VNRU5UIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CgpleHBvcnQgZGVmYXVsdCBkZWZpbmVDb21wb25lbnQoewogIG1peGluczogICAgIFtDcmVhdGVFZGl0Vmlld10sCiAgY29tcG9uZW50czogewogICAgQ3J1UmVzb3VyY2UsCiAgICBMb2FkaW5nLAogICAgTmFtZU5zRGVzY3JpcHRpb24sCiAgICBQb2RTZWN1cml0eUFkbWlzc2lvbiwKICB9LAoKICBhc3luYyBmZXRjaCgpIHsKICAgIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2ZpbmRBbGwnLCB7IHR5cGU6IE1BTkFHRU1FTlQuUFNBIH0pOwogIH0sCgogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiAgICAgT2JqZWN0IGFzIFByb3BUeXBlPFBTQT4sCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICBkZWZhdWx0OiAgKCkgPT4gKHt9KSBhcyBQU0EKICAgIH0sCgogICAgbW9kZTogewogICAgICB0eXBlOiAgICAgU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAvKioKICAgICAqIEdldCBvciBpbml0aWFsaXplIGV4ZW1wdGlvbnMgaWYgbm9uZQogICAgICovCiAgICBleGVtcHRpb25zKCk6IFBTQUV4ZW1wdGlvbnMgewogICAgICByZXR1cm4gdGhpcy52YWx1ZT8uY29uZmlndXJhdGlvbj8uZXhlbXB0aW9ucyB8fCB7fTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBHZXQgb3IgaW5pdGlhbGl6ZSBkZWZhdWx0cyBsYWJlbHMgaWYgbm9uZQogICAgICovCiAgICBkZWZhdWx0cygpOiBQU0FEZWZhdWx0cyB7CiAgICAgIHJldHVybiB0aGlzLnZhbHVlPy5jb25maWd1cmF0aW9uPy5kZWZhdWx0cyB8fCB7fTsKICAgIH0sCiAgfSwKCiAgbWV0aG9kczogewogICAgLyoqCiAgICAgKiBSZXBsYWNlIGV4ZW1wdGlvbiB3aXRoIG5ldyB2YWx1ZXMKICAgICAqLwogICAgc2V0RXhlbXB0aW9ucyhleGVtcHRpb25zOiBQU0FFeGVtcHRpb25zKSB7CiAgICAgIHRoaXMudmFsdWUuY29uZmlndXJhdGlvbi5leGVtcHRpb25zID0gZXhlbXB0aW9uczsKICAgIH0sCgogICAgLyoqCiAgICAgKiBSZXBsYWNlIGRlZmF1bHRzIHdpdGggbmV3IHZhbHVlcwogICAgICovCiAgICBzZXREZWZhdWx0cyhsYWJlbHM6IFBTQURlZmF1bHRzKSB7CiAgICAgIHRoaXMudmFsdWUuY29uZmlndXJhdGlvbi5kZWZhdWx0cyA9IGxhYmVsczsKICAgIH0sCiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIC8vIEluaXRpYWxpemUgY29uZmlndXJhdGlvbiBpZiBub25lLCBhcyBkZWZhdWx0IHZhbHVlIHJlc291cmNlIGNhc2UKICAgIGlmICghdGhpcy52YWx1ZS5jb25maWd1cmF0aW9uKSB7CiAgICAgIHRoaXMudmFsdWUuY29uZmlndXJhdGlvbiA9IHsKICAgICAgICBkZWZhdWx0czogICB7fSwKICAgICAgICBleGVtcHRpb25zOiBPYmplY3QuYXNzaWduKHt9LCAuLi5QU0FEaW1lbnNpb25zLm1hcCgoZGltZW5zaW9uKSA9PiAoeyBbZGltZW5zaW9uXTogW10gfSkpKSwKICAgICAgfSBhcyBQU0FDb25maWc7CiAgICB9CiAgfQp9KTsK"},{"version":3,"sources":["management.cattle.io.podsecurityadmissionconfigurationtemplate.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"management.cattle.io.podsecurityadmissionconfigurationtemplate.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script lang=\"ts\">\nimport { PropType, defineComponent } from 'vue';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport CruResource from '@shell/components/CruResource.vue';\nimport PodSecurityAdmission from '@shell/components/PodSecurityAdmission.vue';\nimport Loading from '@shell/components/Loading.vue';\nimport NameNsDescription from '@shell/components/form/NameNsDescription.vue';\nimport { PSA, PSAConfig, PSADefaults, PSAExemptions } from '@shell/types/resources/pod-security-admission';\nimport { PSADimensions } from '@shell/config/pod-security-admission';\nimport { MANAGEMENT } from '@shell/config/types';\n\nexport default defineComponent({\n  mixins:     [CreateEditView],\n  components: {\n    CruResource,\n    Loading,\n    NameNsDescription,\n    PodSecurityAdmission,\n  },\n\n  async fetch() {\n    await this.$store.dispatch('management/findAll', { type: MANAGEMENT.PSA });\n  },\n\n  props: {\n    value: {\n      type:     Object as PropType<PSA>,\n      required: true,\n      default:  () => ({}) as PSA\n    },\n\n    mode: {\n      type:     String,\n      required: true,\n    }\n  },\n  computed: {\n    /**\n     * Get or initialize exemptions if none\n     */\n    exemptions(): PSAExemptions {\n      return this.value?.configuration?.exemptions || {};\n    },\n\n    /**\n     * Get or initialize defaults labels if none\n     */\n    defaults(): PSADefaults {\n      return this.value?.configuration?.defaults || {};\n    },\n  },\n\n  methods: {\n    /**\n     * Replace exemption with new values\n     */\n    setExemptions(exemptions: PSAExemptions) {\n      this.value.configuration.exemptions = exemptions;\n    },\n\n    /**\n     * Replace defaults with new values\n     */\n    setDefaults(labels: PSADefaults) {\n      this.value.configuration.defaults = labels;\n    },\n  },\n\n  created() {\n    // Initialize configuration if none, as default value resource case\n    if (!this.value.configuration) {\n      this.value.configuration = {\n        defaults:   {},\n        exemptions: Object.assign({}, ...PSADimensions.map((dimension) => ({ [dimension]: [] }))),\n      } as PSAConfig;\n    }\n  }\n});\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <CruResource\n    v-else\n    :mode=\"mode\"\n    :resource=\"value\"\n    :errors=\"errors\"\n    :cancel-event=\"true\"\n    :done-route=\"doneRoute\"\n    @error=\"setErrors\"\n    @finish=\"save\"\n    @cancel=\"done\"\n  >\n    <NameNsDescription\n      :value=\"value\"\n      :namespaced=\"false\"\n      :mode=\"mode\"\n      description-key=\"description\"\n    />\n\n    <PodSecurityAdmission\n      :labels=\"defaults\"\n      :labels-always-active=\"true\"\n      :exemptions=\"exemptions\"\n      :mode=\"mode\"\n      @updateLabels=\"setDefaults($event)\"\n      @updateExemptions=\"setExemptions($event)\"\n    />\n  </CruResource>\n</template>\n"]}]}