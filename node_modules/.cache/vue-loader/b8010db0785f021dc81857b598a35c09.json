{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/components/form/ArrayList.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/components/form/ArrayList.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBkZWJvdW5jZSBmcm9tICdsb2Rhc2gvZGVib3VuY2UnOwppbXBvcnQgeyBfRURJVCwgX1ZJRVcgfSBmcm9tICdAc2hlbGwvY29uZmlnL3F1ZXJ5LXBhcmFtcyc7CmltcG9ydCB7IHJlbW92ZUF0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2FycmF5JzsKaW1wb3J0IHsgVGV4dEFyZWFBdXRvR3JvdyB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vVGV4dEFyZWEnOwppbXBvcnQgeyBjbG9uZSB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwppbXBvcnQgeyBMYWJlbGVkSW5wdXQgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0xhYmVsZWRJbnB1dCc7CmNvbnN0IERFRkFVTFRfUFJPVElQID0gJ1RpcDogUGFzdGUgbGluZXMgaW50byBhbnkgbGlzdCBmaWVsZCBmb3IgZWFzeSBidWxrIGVudHJ5JzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IFRleHRBcmVhQXV0b0dyb3csIExhYmVsZWRJbnB1dCB9LAogIHByb3BzOiAgICAgIHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgIEFycmF5LAogICAgICBkZWZhdWx0OiBudWxsLAogICAgfSwKICAgIG1vZGU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiBfRURJVCwKICAgIH0sCiAgICBpbml0aWFsRW1wdHlSb3c6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICB9LAogICAgdGl0bGU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIHByb3RpcDogewogICAgICB0eXBlOiAgICBbU3RyaW5nLCBCb29sZWFuXSwKICAgICAgZGVmYXVsdDogREVGQVVMVF9QUk9USVAsCiAgICB9LAogICAgc2hvd0hlYWRlcjogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgIH0sCiAgICB2YWx1ZUxhYmVsOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJ1ZhbHVlJywKICAgIH0sCiAgICB2YWx1ZVBsYWNlaG9sZGVyOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJ2UuZy4gYmFyJwogICAgfSwKICAgIHZhbHVlTXVsdGlsaW5lOiB7CiAgICAgIHR5cGU6ICAgIEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgfSwKICAgIGFkZExhYmVsOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJycsCiAgICB9LAogICAgYWRkQWxsb3dlZDogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlLAogICAgfSwKICAgIGFkZERpc2FibGVkOiB7CiAgICAgIHR5cGU6ICAgIEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgfSwKICAgIHJlbW92ZUxhYmVsOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJycsCiAgICB9LAogICAgcmVtb3ZlQWxsb3dlZDogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlLAogICAgfSwKICAgIGRlZmF1bHRBZGRWYWx1ZTogewogICAgICB0eXBlOiAgICBbU3RyaW5nLCBOdW1iZXIsIE9iamVjdCwgQXJyYXldLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIGxvYWRpbmc6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBkaXNhYmxlZDogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgIH0sCiAgICBydWxlczogewogICAgICBkZWZhdWx0OiAgICgpID0+IFtdLAogICAgICB0eXBlOiAgICAgIEFycmF5LAogICAgICAvLyB3ZSBvbmx5IHdhbnQgZnVuY3Rpb25zIGluIHRoZSBydWxlcyBhcnJheQogICAgICB2YWxpZGF0b3I6IChydWxlcykgPT4gcnVsZXMuZXZlcnkoKHJ1bGUpID0+IFsnZnVuY3Rpb24nXS5pbmNsdWRlcyh0eXBlb2YgcnVsZSkpCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgY29uc3QgaW5wdXQgPSAodGhpcy52YWx1ZSB8fCBbXSkuc2xpY2UoKTsKICAgIGNvbnN0IHJvd3MgPSBbXTsKCiAgICBmb3IgKCBjb25zdCB2YWx1ZSBvZiBpbnB1dCApIHsKICAgICAgcm93cy5wdXNoKHsgdmFsdWUgfSk7CiAgICB9CiAgICBpZiAoICFyb3dzLmxlbmd0aCAmJiB0aGlzLmluaXRpYWxFbXB0eVJvdyApIHsKICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmRlZmF1bHRBZGRWYWx1ZSA/IGNsb25lKHRoaXMuZGVmYXVsdEFkZFZhbHVlKSA6ICcnOwoKICAgICAgcm93cy5wdXNoKHsgdmFsdWUgfSk7CiAgICB9CgogICAgcmV0dXJuIHsgcm93cywgbGFzdFVwZGF0ZVdhc0Zyb21WYWx1ZTogZmFsc2UgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBfYWRkTGFiZWwoKSB7CiAgICAgIHJldHVybiB0aGlzLmFkZExhYmVsIHx8IHRoaXMudCgnZ2VuZXJpYy5hZGQnKTsKICAgIH0sCiAgICBfcmVtb3ZlTGFiZWwoKSB7CiAgICAgIHJldHVybiB0aGlzLnJlbW92ZUxhYmVsIHx8IHRoaXMudCgnZ2VuZXJpYy5yZW1vdmUnKTsKICAgIH0sCgogICAgaXNWaWV3KCkgewogICAgICByZXR1cm4gdGhpcy5tb2RlID09PSBfVklFVzsKICAgIH0sCiAgICBzaG93QWRkKCkgewogICAgICByZXR1cm4gdGhpcy5hZGRBbGxvd2VkOwogICAgfSwKICAgIGRpc2FibGVBZGQoKSB7CiAgICAgIHJldHVybiB0aGlzLmFkZERpc2FibGVkOwogICAgfSwKICAgIHNob3dSZW1vdmUoKSB7CiAgICAgIHJldHVybiB0aGlzLnJlbW92ZUFsbG93ZWQ7CiAgICB9LAogICAgaXNEZWZhdWx0UHJvdGlwKCkgewogICAgICByZXR1cm4gdGhpcy5wcm90aXAgPT09IERFRkFVTFRfUFJPVElQOwogICAgfSwKICAgIHNob3dQcm90aXAoKSB7CiAgICAgIGlmICh0aGlzLnByb3RpcCAmJiAhdGhpcy5pc0RlZmF1bHRQcm90aXApIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQoKICAgICAgcmV0dXJuICF0aGlzLnZhbHVlTXVsdGlsaW5lICYmIHRoaXMucHJvdGlwOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHZhbHVlKCkgewogICAgICB0aGlzLmxhc3RVcGRhdGVXYXNGcm9tVmFsdWUgPSB0cnVlOwogICAgICB0aGlzLnJvd3MgPSAodGhpcy52YWx1ZSB8fCBbXSkubWFwKCh2KSA9PiAoeyB2YWx1ZTogdiB9KSk7CiAgICB9LAogICAgcm93czogewogICAgICBkZWVwOiB0cnVlLAogICAgICBoYW5kbGVyKG5ld1ZhbHVlLCBvbGRWYWx1ZSkgewogICAgICAgIC8vIGxhc3RVcGRhdGVXYXNGcm9tVmFsdWUgaXMgdXNlZCB0byBicmVhayBhIGN5Y2xlIHdoZXJlIHdoZW4gcm93cyBhcmUgdXBkYXRlZAogICAgICAgIC8vIHRoaXMgd2FzIGNhbGxlZCB3aGljaCB0aGVuIGZvcmNlZCByb3dzIHRvIHVwZGF0ZWQgYWdhaW4KICAgICAgICBpZiAoIXRoaXMubGFzdFVwZGF0ZVdhc0Zyb21WYWx1ZSkgewogICAgICAgICAgdGhpcy5xdWV1ZVVwZGF0ZSgpOwogICAgICAgIH0KICAgICAgICB0aGlzLmxhc3RVcGRhdGVXYXNGcm9tVmFsdWUgPSBmYWxzZTsKICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMucXVldWVVcGRhdGUgPSBkZWJvdW5jZSh0aGlzLnVwZGF0ZSwgNTApOwogIH0sCiAgbWV0aG9kczogewogICAgYWRkKCkgewogICAgICB0aGlzLnJvd3MucHVzaCh7IHZhbHVlOiBjbG9uZSh0aGlzLmRlZmF1bHRBZGRWYWx1ZSkgfSk7CiAgICAgIGlmICh0aGlzLmRlZmF1bHRBZGRWYWx1ZSkgewogICAgICAgIHRoaXMucXVldWVVcGRhdGUoKTsKICAgICAgfQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgY29uc3QgaW5wdXRzID0gdGhpcy4kcmVmcy52YWx1ZTsKCiAgICAgICAgaWYgKCBpbnB1dHMgJiYgaW5wdXRzLmxlbmd0aCA+IDAgKSB7CiAgICAgICAgICBpbnB1dHNbaW5wdXRzLmxlbmd0aCAtIDFdLmZvY3VzKCk7CiAgICAgICAgfQogICAgICAgIHRoaXMuJGVtaXQoJ2FkZCcpOwogICAgICB9KTsKICAgIH0sCiAgICAvKioKICAgICAqIFJlbW92ZSBpdGVtIGFuZCBlbWl0cyByZW1vdmVkIHJvdyBhbmQgaXRzIG93biBpbmRleCB2YWx1ZQogICAgICovCiAgICByZW1vdmUocm93LCBpbmRleCkgewogICAgICB0aGlzLiRlbWl0KCdyZW1vdmUnLCB7IHJvdywgaW5kZXggfSk7CiAgICAgIHJlbW92ZUF0KHRoaXMucm93cywgaW5kZXgpOwogICAgICB0aGlzLnF1ZXVlVXBkYXRlKCk7CiAgICB9LAoKICAgIC8qKgogICAgICogQ2xlYW51cCByb3dzIGFuZCBlbWl0IGlucHV0CiAgICAgKi8KICAgIHVwZGF0ZSgpIHsKICAgICAgaWYgKCB0aGlzLmlzVmlldyApIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgY29uc3Qgb3V0ID0gW107CgogICAgICBmb3IgKCBjb25zdCByb3cgb2YgdGhpcy5yb3dzICkgewogICAgICAgIGNvbnN0IHRyaW0gPSAhdGhpcy52YWx1ZU11bHRpbGluZSAmJiAodHlwZW9mIHJvdy52YWx1ZSA9PT0gJ3N0cmluZycpOwogICAgICAgIGNvbnN0IHZhbHVlID0gdHJpbSA/IHJvdy52YWx1ZS50cmltKCkgOiByb3cudmFsdWU7CgogICAgICAgIGlmICggdHlwZW9mIHZhbHVlICE9PSAndW5kZWZpbmVkJyApIHsKICAgICAgICAgIG91dC5wdXNoKHZhbHVlKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCBvdXQpOwogICAgfSwKCiAgICAvKioKICAgICAqIEhhbmRsZSBwYXN0ZSBldmVudCwgZS5nLiBzcGxpdCBtdWx0aXBsZSBsaW5lcyBpbiByb3dzCiAgICAgKi8KICAgIG9uUGFzdGUoaW5kZXgsIGV2ZW50KSB7CiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIGNvbnN0IHRleHQgPSBldmVudC5jbGlwYm9hcmREYXRhLmdldERhdGEoJ3RleHQvcGxhaW4nKTsKCiAgICAgIGlmICh0aGlzLnZhbHVlTXVsdGlsaW5lKSB7CiAgICAgICAgLy8gQWxsb3cgdG8gcGFzdGUgbXVsdGlwbGUgbGluZXMKICAgICAgICB0aGlzLnJvd3NbaW5kZXhdLnZhbHVlID0gdGV4dDsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyBQcmV2ZW50IHRvIHBhc3RlIHRoZSB2YWx1ZSBhbmQgZW1pdCB0ZXh0IGluIG11bHRpcGxlIHJvd3MKICAgICAgICBjb25zdCBzcGxpdCA9IHRleHQuc3BsaXQoJ1xuJykubWFwKCh2YWx1ZSkgPT4gKHsgdmFsdWUgfSkpOwoKICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIHRoaXMucm93cy5zcGxpY2UoaW5kZXgsIDEsIC4uLnNwbGl0KTsKICAgICAgfQoKICAgICAgdGhpcy51cGRhdGUoKTsKICAgIH0KICB9LAp9Owo="},{"version":3,"sources":["ArrayList.vue"],"names":[],"mappingsfile":"ArrayList.vue","sourceRoot":"node_modules/@rancher/shell/components/form","sourcesContent":["<script>\nimport debounce from 'lodash/debounce';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport { removeAt } from '@shell/utils/array';\nimport { TextAreaAutoGrow } from '@components/Form/TextArea';\nimport { clone } from '@shell/utils/object';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nconst DEFAULT_PROTIP = 'Tip: Paste lines into any list field for easy bulk entry';\n\nexport default {\n  components: { TextAreaAutoGrow, LabeledInput },\n  props:      {\n    value: {\n      type:    Array,\n      default: null,\n    },\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n    initialEmptyRow: {\n      type:    Boolean,\n      default: false,\n    },\n    title: {\n      type:    String,\n      default: ''\n    },\n    protip: {\n      type:    [String, Boolean],\n      default: DEFAULT_PROTIP,\n    },\n    showHeader: {\n      type:    Boolean,\n      default: false,\n    },\n    valueLabel: {\n      type:    String,\n      default: 'Value',\n    },\n    valuePlaceholder: {\n      type:    String,\n      default: 'e.g. bar'\n    },\n    valueMultiline: {\n      type:    Boolean,\n      default: false,\n    },\n    addLabel: {\n      type:    String,\n      default: '',\n    },\n    addAllowed: {\n      type:    Boolean,\n      default: true,\n    },\n    addDisabled: {\n      type:    Boolean,\n      default: false,\n    },\n    removeLabel: {\n      type:    String,\n      default: '',\n    },\n    removeAllowed: {\n      type:    Boolean,\n      default: true,\n    },\n    defaultAddValue: {\n      type:    [String, Number, Object, Array],\n      default: ''\n    },\n    loading: {\n      type:    Boolean,\n      default: false\n    },\n    disabled: {\n      type:    Boolean,\n      default: false,\n    },\n    rules: {\n      default:   () => [],\n      type:      Array,\n      // we only want functions in the rules array\n      validator: (rules) => rules.every((rule) => ['function'].includes(typeof rule))\n    }\n  },\n  data() {\n    const input = (this.value || []).slice();\n    const rows = [];\n\n    for ( const value of input ) {\n      rows.push({ value });\n    }\n    if ( !rows.length && this.initialEmptyRow ) {\n      const value = this.defaultAddValue ? clone(this.defaultAddValue) : '';\n\n      rows.push({ value });\n    }\n\n    return { rows, lastUpdateWasFromValue: false };\n  },\n  computed: {\n    _addLabel() {\n      return this.addLabel || this.t('generic.add');\n    },\n    _removeLabel() {\n      return this.removeLabel || this.t('generic.remove');\n    },\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n    showAdd() {\n      return this.addAllowed;\n    },\n    disableAdd() {\n      return this.addDisabled;\n    },\n    showRemove() {\n      return this.removeAllowed;\n    },\n    isDefaultProtip() {\n      return this.protip === DEFAULT_PROTIP;\n    },\n    showProtip() {\n      if (this.protip && !this.isDefaultProtip) {\n        return true;\n      }\n\n      return !this.valueMultiline && this.protip;\n    }\n  },\n  watch: {\n    value() {\n      this.lastUpdateWasFromValue = true;\n      this.rows = (this.value || []).map((v) => ({ value: v }));\n    },\n    rows: {\n      deep: true,\n      handler(newValue, oldValue) {\n        // lastUpdateWasFromValue is used to break a cycle where when rows are updated\n        // this was called which then forced rows to updated again\n        if (!this.lastUpdateWasFromValue) {\n          this.queueUpdate();\n        }\n        this.lastUpdateWasFromValue = false;\n      }\n    }\n  },\n  created() {\n    this.queueUpdate = debounce(this.update, 50);\n  },\n  methods: {\n    add() {\n      this.rows.push({ value: clone(this.defaultAddValue) });\n      if (this.defaultAddValue) {\n        this.queueUpdate();\n      }\n      this.$nextTick(() => {\n        const inputs = this.$refs.value;\n\n        if ( inputs && inputs.length > 0 ) {\n          inputs[inputs.length - 1].focus();\n        }\n        this.$emit('add');\n      });\n    },\n    /**\n     * Remove item and emits removed row and its own index value\n     */\n    remove(row, index) {\n      this.$emit('remove', { row, index });\n      removeAt(this.rows, index);\n      this.queueUpdate();\n    },\n\n    /**\n     * Cleanup rows and emit input\n     */\n    update() {\n      if ( this.isView ) {\n        return;\n      }\n      const out = [];\n\n      for ( const row of this.rows ) {\n        const trim = !this.valueMultiline && (typeof row.value === 'string');\n        const value = trim ? row.value.trim() : row.value;\n\n        if ( typeof value !== 'undefined' ) {\n          out.push(value);\n        }\n      }\n      this.$emit('input', out);\n    },\n\n    /**\n     * Handle paste event, e.g. split multiple lines in rows\n     */\n    onPaste(index, event) {\n      event.preventDefault();\n      const text = event.clipboardData.getData('text/plain');\n\n      if (this.valueMultiline) {\n        // Allow to paste multiple lines\n        this.rows[index].value = text;\n      } else {\n        // Prevent to paste the value and emit text in multiple rows\n        const split = text.split('\\n').map((value) => ({ value }));\n\n        event.preventDefault();\n        this.rows.splice(index, 1, ...split);\n      }\n\n      this.update();\n    }\n  },\n};\n</script>\n\n<template>\n  <div>\n    <div\n      v-if=\"title\"\n      class=\"clearfix\"\n    >\n      <slot name=\"title\">\n        <h3>\n          {{ title }}\n          <i\n            v-if=\"showProtip\"\n            v-clean-tooltip=\"protip\"\n            class=\"icon icon-info\"\n          />\n        </h3>\n      </slot>\n    </div>\n\n    <template v-if=\"rows.length\">\n      <div v-if=\"showHeader\">\n        <slot name=\"column-headers\">\n          <label class=\"value text-label mb-10\">\n            {{ valueLabel }}\n          </label>\n        </slot>\n      </div>\n      <div\n        v-for=\"(row, idx) in rows\"\n        :key=\"idx\"\n        :data-testid=\"`array-list-box${ idx }`\"\n        class=\"box\"\n      >\n        <slot\n          name=\"columns\"\n          :queueUpdate=\"queueUpdate\"\n          :i=\"idx\"\n          :rows=\"rows\"\n          :row=\"row\"\n          :mode=\"mode\"\n          :isView=\"isView\"\n        >\n          <div class=\"value\">\n            <slot\n              name=\"value\"\n              :row=\"row\"\n              :mode=\"mode\"\n              :isView=\"isView\"\n              :queue-update=\"queueUpdate\"\n            >\n              <TextAreaAutoGrow\n                v-if=\"valueMultiline\"\n                ref=\"value\"\n                v-model=\"row.value\"\n                :data-testid=\"`textarea-${idx}`\"\n                :placeholder=\"valuePlaceholder\"\n                :mode=\"mode\"\n                :disabled=\"disabled\"\n                @paste=\"onPaste(idx, $event)\"\n                @input=\"queueUpdate\"\n              />\n              <LabeledInput\n                v-else-if=\"rules.length > 0\"\n                ref=\"value\"\n                v-model=\"row.value\"\n                :data-testid=\"`labeled-input-${idx}`\"\n                :placeholder=\"valuePlaceholder\"\n                :disabled=\"isView || disabled\"\n                :rules=\"rules\"\n                :compact=\"false\"\n                @paste=\"onPaste(idx, $event)\"\n                @input=\"queueUpdate\"\n              />\n              <input\n                v-else\n                ref=\"value\"\n                v-model=\"row.value\"\n                :data-testid=\"`input-${idx}`\"\n                :placeholder=\"valuePlaceholder\"\n                :disabled=\"isView || disabled\"\n                @paste=\"onPaste(idx, $event)\"\n                @input=\"queueUpdate\"\n              >\n            </slot>\n          </div>\n        </slot>\n        <div\n          v-if=\"showRemove\"\n          class=\"remove\"\n        >\n          <slot\n            name=\"remove-button\"\n            :remove=\"() => remove(row, idx)\"\n            :i=\"idx\"\n            :row=\"row\"\n          >\n            <button\n              type=\"button\"\n              :disabled=\"isView\"\n              class=\"btn role-link\"\n              :data-testid=\"`remove-item-${idx}`\"\n              @click=\"remove(row, idx)\"\n            >\n              {{ _removeLabel }}\n            </button>\n          </slot>\n        </div>\n      </div>\n    </template>\n    <div v-else>\n      <slot name=\"empty\">\n        <div\n          v-if=\"mode==='view'\"\n          class=\"text-muted\"\n        >\n          &mdash;\n        </div>\n      </slot>\n    </div>\n    <div\n      v-if=\"showAdd && !isView\"\n      class=\"footer mt-20\"\n    >\n      <slot\n        v-if=\"showAdd\"\n        name=\"add\"\n        :add=\"add\"\n      >\n        <button\n          type=\"button\"\n          class=\"btn role-tertiary add\"\n          :disabled=\"loading || disableAdd\"\n          data-testid=\"array-list-button\"\n          @click=\"add()\"\n        >\n          <i\n            v-if=\"loading\"\n            class=\"mr-5 icon icon-spinner icon-spin icon-lg\"\n          />\n          {{ _addLabel }}\n        </button>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .title {\n    margin-bottom: 10px;\n  }\n  .box {\n    display: grid;\n    grid-template-columns: auto $array-list-remove-margin;\n    align-items: center;\n    margin-bottom: 10px;\n    .value {\n      flex: 1;\n      INPUT {\n        height: $input-height;\n      }\n    }\n  }\n  .remove {\n    text-align: right;\n  }\n  .footer {\n    .protip {\n      float: right;\n      padding: 5px 0;\n    }\n  }\n</style>\n"]}]}