{"remainingRequest":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/suseconf/node_modules/@rancher/shell/rancher-components/Form/ToggleSwitch/ToggleSwitch.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/ubuntu/suseconf/node_modules/@rancher/shell/rancher-components/Form/ToggleSwitch/ToggleSwitch.vue","mtime":1725338146566},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/babel-loader/lib/index.js","mtime":1725271298942},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/ts-loader/index.js","mtime":1725271299135},{"path":"/home/ubuntu/suseconf/node_modules/cache-loader/dist/cjs.js","mtime":1725271299021},{"path":"/home/ubuntu/suseconf/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1725271300920}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCB9IGZyb20gJ3Z1ZSc7Cgp0eXBlIFN0YXRlVHlwZSA9IGJvb2xlYW4gfCAndHJ1ZScgfCAnZmFsc2UnIHwgdW5kZWZpbmVkOwoKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogICAgW0Jvb2xlYW4sIFN0cmluZywgTnVtYmVyXSwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCgogICAgb2ZmVmFsdWU6IHsKICAgICAgdHlwZTogICAgW0Jvb2xlYW4sIFN0cmluZywgTnVtYmVyXSwKICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICB9LAoKICAgIG9uVmFsdWU6IHsKICAgICAgdHlwZTogICAgW0Jvb2xlYW4sIFN0cmluZywgTnVtYmVyXSwKICAgICAgZGVmYXVsdDogdHJ1ZSwKICAgIH0sCgogICAgb2ZmTGFiZWw6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJywKICAgIH0sCgogICAgb25MYWJlbDogewogICAgICB0eXBlOiAgICBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnLAogICAgfSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4geyBzdGF0ZTogZmFsc2UgYXMgU3RhdGVUeXBlIH07CiAgfSwKCiAgd2F0Y2g6IHsKICAgIHZhbHVlOiB7CiAgICAgIGhhbmRsZXIoKSB7CiAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMudmFsdWUgPT09IHRoaXMub25WYWx1ZTsKICAgICAgfSwKICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgdG9nZ2xlKG5ldTogU3RhdGVUeXBlIHwgbnVsbCkgewogICAgICB0aGlzLnN0YXRlID0gbmV1ID09PSBudWxsID8gIXRoaXMuc3RhdGUgOiBuZXU7CiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy5zdGF0ZSA/IHRoaXMub25WYWx1ZSA6IHRoaXMub2ZmVmFsdWUpOwogICAgfQogIH0KfSk7Cg=="},{"version":3,"sources":["ToggleSwitch.vue"],"names":[],"mappings":";AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToggleSwitch.vue","sourceRoot":"node_modules/@rancher/shell/rancher-components/Form/ToggleSwitch","sourcesContent":["<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\ntype StateType = boolean | 'true' | 'false' | undefined;\n\nexport default defineComponent({\n  props: {\n    value: {\n      type:    [Boolean, String, Number],\n      default: false\n    },\n\n    offValue: {\n      type:    [Boolean, String, Number],\n      default: false,\n    },\n\n    onValue: {\n      type:    [Boolean, String, Number],\n      default: true,\n    },\n\n    offLabel: {\n      type:    String,\n      default: '',\n    },\n\n    onLabel: {\n      type:    String,\n      default: '',\n    },\n  },\n  data() {\n    return { state: false as StateType };\n  },\n\n  watch: {\n    value: {\n      handler() {\n        this.state = this.value === this.onValue;\n      },\n      immediate: true\n    }\n  },\n\n  methods: {\n    toggle(neu: StateType | null) {\n      this.state = neu === null ? !this.state : neu;\n      this.$emit('input', this.state ? this.onValue : this.offValue);\n    }\n  }\n});\n</script>\n\n<template>\n  <span class=\"toggle-container\">\n    <span\n      class=\"label no-select hand\"\n      :class=\"{ active: !state}\"\n      @click=\"toggle(false)\"\n    >{{ offLabel }}</span>\n    <label class=\"switch hand\">\n      <input\n        type=\"checkbox\"\n        :checked=\"state\"\n        @input=\"toggle(null)\"\n      >\n      <span class=\"slider round\" />\n    </label>\n    <span\n      class=\"label no-select hand\"\n      :class=\"{ active: state}\"\n      @click=\"toggle(true)\"\n    >{{ onLabel }}</span>\n  </span>\n</template>\n\n<style lang=\"scss\" scoped>\n$toggle-height: 16px;\n\n.toggle-container {\n  align-items: center;\n  display: flex;\n\n  span:first-child {\n    padding-right: 6px;\n  }\n  span:last-child {\n    padding-left: 6px;\n  }\n}\n/* The switch - the box around the slider */\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 48px;\n  height: $toggle-height + 8px;\n}\n\n/* Hide default HTML checkbox */\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n/* The slider */\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: var(--checkbox-disabled-bg);\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: $toggle-height;\n  width: $toggle-height;\n  left: 4px;\n  bottom: 4px;\n  background-color: var(--checkbox-tick);\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\ninput:checked + .slider {\n  background-color: var(--checkbox-ticked-bg);\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px var(--checkbox-ticked-bg);\n}\n\ninput:checked + .slider:before {\n  transform: translateX(24px);\n}\n\n/* Rounded sliders */\n.slider.round {\n  border-radius: 34px;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n</style>\n"]}]}