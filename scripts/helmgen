#!/usr/bin/env node

// Generate Chart.yaml and values.yaml files

const fs = require('fs');
const path = require('path');
const yaml = require('js-yaml');

const UI_PLUGIN_ANNOTATION = 'uipluign.cattle.io';

console.log('Helm file generation');

console.log(process.argv);

if (process.argv.length !== 4) {
  console.log('Incorrect number of arguments');
  process.exit(1);
}

const pkgFolder = process.argv[2];
const destFolder = process.argv[3];

const pkgFile = JSON.parse(fs.readFileSync(path.join(pkgFolder, 'package.json'), 'utf8'));

console.log(pkgFile);

const chartFolder = path.join(destFolder, pkgFile.name);

if (fs.existsSync(chartFolder)) {
  fs.rmdirSync(chartFolder, { recursive: true });
}

fs.mkdirSync(chartFolder, 0777);

const chart = {
  apiVersion: 'v2',
  name: pkgFile.name,
  version: pkgFile.version,
  appVersion: pkgFile.version,
  description: pkgFile.description || `${pkgFile.name} ui plugin `,
  annotations: {
    [UI_PLUGIN_ANNOTATION]: 'true'
  }
};

if (pkgFile.icon) {
  chart.icon = pkgFile.icon;
}

if (pkgFile.keywords) {
  chart.keywords = pkgFile.keywords;
}

if (pkgFile.homepage) {
  chart.home = pkgFile.homepage;
}

const str = yaml.dump(chart);

fs.writeFileSync(path.join(chartFolder, 'Chart.yaml'), str, 'utf8');

const valuesYaml = '# No values required\n';

fs.writeFileSync(path.join(chartFolder, 'values.yanl'), valuesYaml, 'utf8');

// Create templates folder
fs.mkdirSync(path.join(chartFolder, 'templates'), 0777);
